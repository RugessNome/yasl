types:
  fundamentals:
    - {id: Void, name: void}
    - {id: Boolean, name: bool}
    - {id: Char, name: char}
    - {id: Int, name: int}
    - {id: Float, name: float}
    - {id: Double, name: double}
    - {id: String, name: QString, rename: String}
    - {id: , name: qreal}
    - {id: , name: uint}
  enums:
    - {id: QAbstractSliderSliderAction, name: QAbstractSlider::SliderAction, header: yasl/widgets/abstractslider.h}
    - {id: QAbstractSpinBoxButtonSymbols, name: QAbstractSpinBox::ButtonSymbols, header: yasl/widgets/abstractspinbox.h}
    - {id: QAbstractSpinBoxCorrectionMode, name: QAbstractSpinBox::CorrectionMode, header: yasl/widgets/abstractspinbox.h}
    - {id: QAbstractSpinBoxStepEnabledFlag, name: QAbstractSpinBox::StepEnabledFlag, header: yasl/widgets/abstractspinbox.h, links: flags@QAbstractSpinBox::StepEnabled}
    - {id: QActionActionEvent, name: QAction::ActionEvent, header: yasl/widgets/action.h}
    - {id: QActionMenuRole, name: QAction::MenuRole, header: yasl/widgets/action.h}
    - {id: QActionPriority, name: QAction::Priority, header: yasl/widgets/action.h}
    - {id: QBoxLayoutDirection, name: QBoxLayout::Direction, header: yasl/widgets/boxlayout.h}
    - {id: QByteArrayBase64Option, name: QByteArray::Base64Option, header: yasl/core/bytearray.h, links: flags@QByteArray::Base64Options}
    - {id: QCharCategory, name: QChar::Category, header: yasl/core/char.h}
    - {id: QCharCombiningClass, name: QChar::CombiningClass, header: yasl/core/char.h}
    - {id: QCharDecomposition, name: QChar::Decomposition, header: yasl/core/char.h}
    - {id: QCharDirection, name: QChar::Direction, header: yasl/core/char.h}
    - {id: QCharJoining, name: QChar::Joining, header: yasl/core/char.h}
    - {id: QCharJoiningType, name: QChar::JoiningType, header: yasl/core/char.h}
    - {id: QCharScript, name: QChar::Script, header: yasl/core/char.h}
    - {id: QCharSpecialCharacter, name: QChar::SpecialCharacter, header: yasl/core/char.h}
    - {id: QCharUnicodeVersion, name: QChar::UnicodeVersion, header: yasl/core/char.h}
    - {id: QClipboardMode, name: QClipboard::Mode, header: yasl/gui/clipboard.h}
    - {id: QColorNameFormat, name: QColor::NameFormat, header: yasl/gui/color.h}
    - {id: QColorSpec, name: QColor::Spec, header: yasl/gui/color.h}
    - {id: QColorDialogColorDialogOption, name: QColorDialog::ColorDialogOption, header: yasl/widgets/colordialog.h, links: flags@QColorDialog::ColorDialogOptions}
    - {id: QComboBoxInsertPolicy, name: QComboBox::InsertPolicy, header: yasl/widgets/combobox.h}
    - {id: QComboBoxSizeAdjustPolicy, name: QComboBox::SizeAdjustPolicy, header: yasl/widgets/combobox.h}
    - {id: QDataStreamByteOrder, name: QDataStream::ByteOrder, header: yasl/core/datastream.h}
    - {id: QDataStreamFloatingPointPrecision, name: QDataStream::FloatingPointPrecision, header: yasl/core/datastream.h}
    - {id: QDataStreamStatus, name: QDataStream::Status, header: yasl/core/datastream.h}
    - {id: QDataStreamVersion, name: QDataStream::Version, header: yasl/core/datastream.h}
    - {id: QDateMonthNameType, name: QDate::MonthNameType, header: yasl/core/datetime.h}
    - {id: QDateTimeEditSection, name: QDateTimeEdit::Section, header: yasl/widgets/datetimeedit.h, links: flags@QDateTimeEdit::Sections}
    - {id: QDialogDialogCode, name: QDialog::DialogCode, header: yasl/widgets/dialog.h}
    - {id: QDirFilter, name: QDir::Filter, header: yasl/core/dir.h, links: flags@QDir::Filters}
    - {id: QDirSortFlag, name: QDir::SortFlag, header: yasl/core/dir.h, links: flags@QDir::SortFlags}
    - {id: QDoubleValidatorNotation, name: QDoubleValidator::Notation, header: yasl/gui/validator.h}
    - {id: QElapsedTimerClockType, name: QElapsedTimer::ClockType, header: yasl/core/elapsedtimer.h}
    - {id: QEventType, name: QEvent::Type, header: yasl/core/event.h}
    - {id: QFileDeviceFileError, name: QFileDevice::FileError, header: yasl/core/filedevice.h}
    - {id: QFileDeviceFileHandleFlag, name: QFileDevice::FileHandleFlag, header: yasl/core/filedevice.h, links: flags@QFileDevice::FileHandleFlags}
    - {id: QFileDeviceMemoryMapFlags, name: QFileDevice::MemoryMapFlags, header: yasl/core/filedevice.h}
    - {id: QFileDevicePermission, name: QFileDevice::Permission, header: yasl/core/filedevice.h, links: flags@QFileDevice::Permissions}
    - {id: QFileDialogAcceptMode, name: QFileDialog::AcceptMode, header: yasl/widgets/filedialog.h}
    - {id: QFileDialogDialogLabel, name: QFileDialog::DialogLabel, header: yasl/widgets/filedialog.h}
    - {id: QFileDialogFileMode, name: QFileDialog::FileMode, header: yasl/widgets/filedialog.h}
    - {id: QFileDialogOption, name: QFileDialog::Option, header: yasl/widgets/filedialog.h, links: flags@QFileDialog::Options}
    - {id: QFileDialogViewMode, name: QFileDialog::ViewMode, header: yasl/widgets/filedialog.h}
    - {id: QFontCapitalization, name: QFont::Capitalization, header: yasl/gui/font.h}
    - {id: QFontHintingPreference, name: QFont::HintingPreference, header: yasl/gui/font.h}
    - {id: QFontResolveProperties, name: QFont::ResolveProperties, header: yasl/gui/font.h}
    - {id: QFontSpacingType, name: QFont::SpacingType, header: yasl/gui/font.h}
    - {id: QFontStretch, name: QFont::Stretch, header: yasl/gui/font.h}
    - {id: QFontStyle, name: QFont::Style, header: yasl/gui/font.h}
    - {id: QFontStyleHint, name: QFont::StyleHint, header: yasl/gui/font.h}
    - {id: QFontStyleStrategy, name: QFont::StyleStrategy, header: yasl/gui/font.h}
    - {id: QFontWeight, name: QFont::Weight, header: yasl/gui/font.h}
    - {id: QFontComboBoxFontFilter, name: QFontComboBox::FontFilter, header: yasl/widgets/fontcombobox.h, links: flags@QFontComboBox::FontFilters}
    - {id: QFontDatabaseSystemFont, name: QFontDatabase::SystemFont, header: yasl/gui/fontdatabase.h}
    - {id: QFontDatabaseWritingSystem, name: QFontDatabase::WritingSystem, header: yasl/gui/fontdatabase.h}
    - {id: QFontDialogFontDialogOption, name: QFontDialog::FontDialogOption, header: yasl/widgets/fontdialog.h, links: flags@QFontDialog::FontDialogOptions}
    - {id: QFormLayoutFieldGrowthPolicy, name: QFormLayout::FieldGrowthPolicy, header: yasl/widgets/formlayout.h}
    - {id: QFormLayoutItemRole, name: QFormLayout::ItemRole, header: yasl/widgets/formlayout.h}
    - {id: QFormLayoutRowWrapPolicy, name: QFormLayout::RowWrapPolicy, header: yasl/widgets/formlayout.h}
    - {id: QFrameShadow, name: QFrame::Shadow, header: yasl/widgets/frame.h}
    - {id: QFrameShape, name: QFrame::Shape, header: yasl/widgets/frame.h}
    - {id: QFrameStyleMask, name: QFrame::StyleMask, header: yasl/widgets/frame.h}
    - {id: QGlyphRunGlyphRunFlag, name: QGlyphRun::GlyphRunFlag, header: yasl/gui/glyphrun.h}
    - {id: QGradientCoordinateMode, name: QGradient::CoordinateMode, header: yasl/gui/brush.h}
    - {id: QGradientInterpolationMode, name: QGradient::InterpolationMode, header: yasl/gui/brush.h}
    - {id: QGradientSpread, name: QGradient::Spread, header: yasl/gui/brush.h}
    - {id: QGradientType, name: QGradient::Type, header: yasl/gui/brush.h}
    - {id: QIconMode, name: QIcon::Mode, header: yasl/gui/icon.h}
    - {id: QIconState, name: QIcon::State, header: yasl/gui/icon.h}
    - {id: QImageFormat, name: QImage::Format, header: yasl/gui/image.h}
    - {id: QImageInvertMode, name: QImage::InvertMode, header: yasl/gui/image.h}
    - {id: QInputDialogInputDialogOption, name: QInputDialog::InputDialogOption, header: yasl/widgets/inputdialog.h, links: flags@QInputDialog::InputDialogOptions}
    - {id: QInputDialogInputMode, name: QInputDialog::InputMode, header: yasl/widgets/inputdialog.h}
    - {id: QIODeviceOpenModeFlag, name: QIODevice::OpenModeFlag, header: yasl/core/iodevice.h, links: flags@QIODevice::OpenMode}
    - {id: QJsonDocumentDataValidation, name: QJsonDocument::DataValidation, header: yasl/core/jsondocument.h}
    - {id: QJsonDocumentJsonFormat, name: QJsonDocument::JsonFormat, header: yasl/core/jsondocument.h}
    - {id: QJsonValueType, name: QJsonValue::Type, header: yasl/core/jsonvalue.h}
    - {id: QKeySequenceSequenceFormat, name: QKeySequence::SequenceFormat, header: yasl/gui/keysequence.h}
    - {id: QKeySequenceSequenceMatch, name: QKeySequence::SequenceMatch, header: yasl/gui/keysequence.h}
    - {id: QKeySequenceStandardKey, name: QKeySequence::StandardKey, header: yasl/gui/keysequence.h}
    - {id: QLayoutSizeConstraint, name: QLayout::SizeConstraint, header: yasl/widgets/layout.h}
    - {id: QLineEditActionPosition, name: QLineEdit::ActionPosition, header: yasl/widgets/lineedit.h}
    - {id: QLineEditEchoMode, name: QLineEdit::EchoMode, header: yasl/widgets/lineedit.h}
    - {id: QLineFIntersectType, name: QLineF::IntersectType, header: yasl/core/line.h}
    - {id: QLocaleCountry, name: QLocale::Country, header: yasl/core/locale.h}
    - {id: QLocaleCurrencySymbolFormat, name: QLocale::CurrencySymbolFormat, header: yasl/core/locale.h}
    - {id: QLocaleDataSizeFormat, name: QLocale::DataSizeFormat}
    - {id: QLocaleFloatingPointPrecisionOption, name: QLocale::FloatingPointPrecisionOption, header: yasl/core/locale.h}
    - {id: QLocaleFormatType, name: QLocale::FormatType, header: yasl/core/locale.h}
    - {id: QLocaleLanguage, name: QLocale::Language, header: yasl/core/locale.h}
    - {id: QLocaleMeasurementSystem, name: QLocale::MeasurementSystem, header: yasl/core/locale.h}
    - {id: QLocaleNumberOption, name: QLocale::NumberOption, header: yasl/core/locale.h, links: flags@QLocale::NumberOptions}
    - {id: QLocaleQuotationStyle, name: QLocale::QuotationStyle, header: yasl/core/locale.h}
    - {id: QLocaleScript, name: QLocale::Script, header: yasl/core/locale.h}
    - {id: QMessageBoxButtonRole, name: QMessageBox::ButtonRole, header: yasl/widgets/messagebox.h}
    - {id: QMessageBoxIcon, name: QMessageBox::Icon, header: yasl/widgets/messagebox.h}
    - {id: QMessageBoxStandardButton, name: QMessageBox::StandardButton, header: yasl/widgets/messagebox.h, links: flags@QMessageBox::StandardButtons}
    - {id: QPainterCompositionMode, name: QPainter::CompositionMode, header: yasl/gui/painter.h}
    - {id: QPainterPixmapFragmentHint, name: QPainter::PixmapFragmentHint, header: yasl/gui/painter.h, links: flags@QPainter::PixmapFragmentHints}
    - {id: QPainterRenderHint, name: QPainter::RenderHint, header: yasl/gui/painter.h, links: flags@QPainter::RenderHints}
    - {id: QPainterPathElementType, name: QPainterPath::ElementType, header: yasl/gui/painterpath.h}
    - {id: QPaletteColorGroup, name: QPalette::ColorGroup, header: yasl/gui/palette.h}
    - {id: QPaletteColorRole, name: QPalette::ColorRole, header: yasl/gui/palette.h}
    - {id: QPixelFormatAlphaPosition, name: QPixelFormat::AlphaPosition, header: yasl/gui/pixelformat.h}
    - {id: QPixelFormatAlphaPremultiplied, name: QPixelFormat::AlphaPremultiplied, header: yasl/gui/pixelformat.h}
    - {id: QPixelFormatAlphaUsage, name: QPixelFormat::AlphaUsage, header: yasl/gui/pixelformat.h}
    - {id: QPixelFormatByteOrder, name: QPixelFormat::ByteOrder, header: yasl/gui/pixelformat.h}
    - {id: QPixelFormatColorModel, name: QPixelFormat::ColorModel, header: yasl/gui/pixelformat.h}
    - {id: QPixelFormatTypeInterpretation, name: QPixelFormat::TypeInterpretation, header: yasl/gui/pixelformat.h}
    - {id: QPixelFormatYUVLayout, name: QPixelFormat::YUVLayout, header: yasl/gui/pixelformat.h}
    - {id: QProcessExitStatus, name: QProcess::ExitStatus, header: yasl/core/process.h}
    - {id: QProcessInputChannelMode, name: QProcess::InputChannelMode, header: yasl/core/process.h}
    - {id: QProcessProcessChannel, name: QProcess::ProcessChannel, header: yasl/core/process.h}
    - {id: QProcessProcessChannelMode, name: QProcess::ProcessChannelMode, header: yasl/core/process.h}
    - {id: QProcessProcessError, name: QProcess::ProcessError, header: yasl/core/process.h}
    - {id: QProcessProcessState, name: QProcess::ProcessState, header: yasl/core/process.h}
    - {id: QProgressBarDirection, name: QProgressBar::Direction, header: yasl/widgets/progressbar.h}
    - {id: QRegionRegionType, name: QRegion::RegionType, header: yasl/gui/region.h}
    - {id: QRegularExpressionMatchOption, name: QRegularExpression::MatchOption, header: yasl/core/regularexpression.h, links: flags@QRegularExpression::MatchOptions}
    - {id: QRegularExpressionMatchType, name: QRegularExpression::MatchType, header: yasl/core/regularexpression.h}
    - {id: QRegularExpressionPatternOption, name: QRegularExpression::PatternOption, header: yasl/core/regularexpression.h, links: flags@QRegularExpression::PatternOptions}
    - {id: QSettingsFormat, name: QSettings::Format, header: yasl/core/settings.h}
    - {id: QSettingsScope, name: QSettings::Scope, header: yasl/core/settings.h}
    - {id: QSettingsStatus, name: QSettings::Status, header: yasl/core/settings.h}
    - {id: QSliderTickPosition, name: QSlider::TickPosition, header: yasl/widgets/slider.h}
    - {id: QStackedLayoutStackingMode, name: QStackedLayout::StackingMode, header: yasl/widgets/stackedlayout.h}
    - {id: QStaticTextPerformanceHint, name: QStaticText::PerformanceHint, header: yasl/gui/statictext.h}
    - {id: QtAlignmentFlag, name: Qt::AlignmentFlag, header: yasl/core/enums.h, links: flags@Qt::Alignment}
    - {id: QtAnchorPoint, name: Qt::AnchorPoint, header: yasl/core/enums.h}
    - {id: QtApplicationAttribute, name: Qt::ApplicationAttribute, header: yasl/core/enums.h}
    - {id: QtApplicationState, name: Qt::ApplicationState, header: yasl/core/enums.h}
    - {id: QtArrowType, name: Qt::ArrowType, header: yasl/core/enums.h}
    - {id: QtAspectRatioMode, name: Qt::AspectRatioMode, header: yasl/core/enums.h}
    - {id: QtAxis, name: Qt::Axis, header: yasl/core/enums.h}
    - {id: QtBGMode, name: Qt::BGMode, header: yasl/core/enums.h}
    - {id: QtBrushStyle, name: Qt::BrushStyle, header: yasl/core/enums.h}
    - {id: QtCaseSensitivity, name: Qt::CaseSensitivity, header: yasl/core/enums.h}
    - {id: QtCheckState, name: Qt::CheckState, header: yasl/core/enums.h}
    - {id: QtChecksumType, name: Qt::ChecksumType, header: yasl/core/enums.h}
    - {id: QtClipOperation, name: Qt::ClipOperation, header: yasl/core/enums.h}
    - {id: QtConnectionType, name: Qt::ConnectionType, header: yasl/core/enums.h}
    - {id: QtContextMenuPolicy, name: Qt::ContextMenuPolicy, header: yasl/core/enums.h}
    - {id: QtCoordinateSystem, name: Qt::CoordinateSystem, header: yasl/core/enums.h}
    - {id: QtCorner, name: Qt::Corner, header: yasl/core/enums.h}
    - {id: QtCursorMoveStyle, name: Qt::CursorMoveStyle, header: yasl/core/enums.h}
    - {id: QtCursorShape, name: Qt::CursorShape, header: yasl/core/enums.h}
    - {id: QtDateFormat, name: Qt::DateFormat, header: yasl/core/enums.h}
    - {id: QtDayOfWeek, name: Qt::DayOfWeek, header: yasl/core/enums.h}
    - {id: QtDockWidgetArea, name: Qt::DockWidgetArea, header: yasl/core/enums.h}
    - {id: QtDockWidgetAreaSizes, name: Qt::DockWidgetAreaSizes, header: yasl/core/enums.h}
    - {id: QtDropAction, name: Qt::DropAction, header: yasl/core/enums.h}
    - {id: QtEdge, name: Qt::Edge, header: yasl/core/enums.h}
    - {id: QtEnterKeyType, name: Qt::EnterKeyType, header: yasl/core/enums.h}
    - {id: QtEventPriority, name: Qt::EventPriority, header: yasl/core/enums.h}
    - {id: QtFillRule, name: Qt::FillRule, header: yasl/core/enums.h}
    - {id: QtFindChildOption, name: Qt::FindChildOption, header: yasl/core/enums.h}
    - {id: QtFocusPolicy, name: Qt::FocusPolicy, header: yasl/core/enums.h}
    - {id: QtFocusReason, name: Qt::FocusReason, header: yasl/core/enums.h}
    - {id: QtGestureFlag, name: Qt::GestureFlag, header: yasl/core/enums.h}
    - {id: QtGestureState, name: Qt::GestureState, header: yasl/core/enums.h}
    - {id: QtGestureType, name: Qt::GestureType, header: yasl/core/enums.h}
    - {id: QtGlobalColor, name: Qt::GlobalColor, header: yasl/core/enums.h}
    - {id: QtHitTestAccuracy, name: Qt::HitTestAccuracy, header: yasl/core/enums.h}
    - {id: QtImageConversionFlag, name: Qt::ImageConversionFlag, header: yasl/core/enums.h, links: flags@Qt::ImageConversionFlags}
    - {id: QtInitialization, name: Qt::Initialization, header: yasl/core/enums.h}
    - {id: QtInputMethodHint, name: Qt::InputMethodHint, header: yasl/core/enums.h}
    - {id: QtInputMethodQuery, name: Qt::InputMethodQuery, header: yasl/core/enums.h}
    - {id: QtItemDataRole, name: Qt::ItemDataRole, header: yasl/core/enums.h}
    - {id: QtItemFlag, name: Qt::ItemFlag, header: yasl/core/enums.h}
    - {id: QtItemSelectionMode, name: Qt::ItemSelectionMode, header: yasl/core/enums.h}
    - {id: QtItemSelectionOperation, name: Qt::ItemSelectionOperation, header: yasl/core/enums.h}
    - {id: QtKey, name: Qt::Key, header: yasl/core/enums.h}
    - {id: QtKeyboardModifier, name: Qt::KeyboardModifier, header: yasl/core/enums.h, links: flags@Qt::KeyboardModifiers}
    - {id: QtLayoutDirection, name: Qt::LayoutDirection, header: yasl/core/enums.h}
    - {id: QtMaskMode, name: Qt::MaskMode, header: yasl/core/enums.h}
    - {id: QtMatchFlag, name: Qt::MatchFlag, header: yasl/core/enums.h}
    - {id: QtModifier, name: Qt::Modifier, header: yasl/core/enums.h}
    - {id: QtMouseButton, name: Qt::MouseButton, header: yasl/core/enums.h}
    - {id: QtMouseEventFlag, name: Qt::MouseEventFlag, header: yasl/core/enums.h}
    - {id: QtMouseEventSource, name: Qt::MouseEventSource, header: yasl/core/enums.h}
    - {id: QtNativeGestureType, name: Qt::NativeGestureType, header: yasl/core/enums.h}
    - {id: QtNavigationMode, name: Qt::NavigationMode, header: yasl/core/enums.h}
    - {id: QtOrientation, name: Qt::Orientation, header: yasl/core/enums.h}
    - {id: QtPenCapStyle, name: Qt::PenCapStyle, header: yasl/core/enums.h}
    - {id: QtPenJoinStyle, name: Qt::PenJoinStyle, header: yasl/core/enums.h}
    - {id: QtPenStyle, name: Qt::PenStyle, header: yasl/core/enums.h}
    - {id: QtScreenOrientation, name: Qt::ScreenOrientation, header: yasl/core/enums.h}
    - {id: QtScrollBarPolicy, name: Qt::ScrollBarPolicy, header: yasl/core/enums.h}
    - {id: QtScrollPhase, name: Qt::ScrollPhase, header: yasl/core/enums.h}
    - {id: QtShortcutContext, name: Qt::ShortcutContext, header: yasl/core/enums.h}
    - {id: QtSizeHint, name: Qt::SizeHint, header: yasl/core/enums.h}
    - {id: QtSizeMode, name: Qt::SizeMode, header: yasl/core/enums.h}
    - {id: QtSortOrder, name: Qt::SortOrder, header: yasl/core/enums.h}
    - {id: QtTabFocusBehavior, name: Qt::TabFocusBehavior, header: yasl/core/enums.h}
    - {id: QtTextElideMode, name: Qt::TextElideMode, header: yasl/core/enums.h}
    - {id: QtTextFlag, name: Qt::TextFlag, header: yasl/core/enums.h}
    - {id: QtTextFormat, name: Qt::TextFormat, header: yasl/core/enums.h}
    - {id: QtTextInteractionFlag, name: Qt::TextInteractionFlag, header: yasl/core/enums.h}
    - {id: QtTileRule, name: Qt::TileRule, header: yasl/core/enums.h}
    - {id: QtTimerType, name: Qt::TimerType, header: yasl/core/enums.h}
    - {id: QtTimeSpec, name: Qt::TimeSpec, header: yasl/core/enums.h}
    - {id: QtToolBarArea, name: Qt::ToolBarArea, header: yasl/core/enums.h, links: flags@Qt::ToolBarAreas}
    - {id: QtToolBarAreaSizes, name: Qt::ToolBarAreaSizes, header: yasl/core/enums.h}
    - {id: QtToolButtonStyle, name: Qt::ToolButtonStyle, header: yasl/core/enums.h}
    - {id: QtTouchPointState, name: Qt::TouchPointState, header: yasl/core/enums.h}
    - {id: QtTransformationMode, name: Qt::TransformationMode, header: yasl/core/enums.h}
    - {id: QtUIEffect, name: Qt::UIEffect, header: yasl/core/enums.h}
    - {id: QtWhiteSpaceMode, name: Qt::WhiteSpaceMode, header: yasl/core/enums.h}
    - {id: QtWidgetAttribute, name: Qt::WidgetAttribute, header: yasl/core/enums.h}
    - {id: QtWindowFrameSection, name: Qt::WindowFrameSection, header: yasl/core/enums.h}
    - {id: QtWindowModality, name: Qt::WindowModality, header: yasl/core/enums.h}
    - {id: QtWindowState, name: Qt::WindowState, header: yasl/core/enums.h}
    - {id: QtWindowType, name: Qt::WindowType, header: yasl/core/enums.h}
    - {id: QTabWidgetTabPosition, name: QTabWidget::TabPosition, header: yasl/widgets/tabwidget.h}
    - {id: QTabWidgetTabShape, name: QTabWidget::TabShape, header: yasl/widgets/tabwidget.h}
    - {id: QTextOptionFlag, name: QTextOption::Flag, header: yasl/gui/textoption.h, links: flags@QTextOption::Flags}
    - {id: QTextOptionTabType, name: QTextOption::TabType, header: yasl/gui/textoption.h}
    - {id: QTextOptionWrapMode, name: QTextOption::WrapMode, header: yasl/gui/textoption.h}
    - {id: QTimeZoneNameType, name: QTimeZone::NameType, header: yasl/core/timezone.h}
    - {id: QTimeZoneTimeType, name: QTimeZone::TimeType, header: yasl/core/timezone.h}
    - {id: QToolButtonToolButtonPopupMode, name: QToolButton::ToolButtonPopupMode, header: yasl/widgets/toolbutton.h}
    - {id: QTransformTransformationType, name: QTransform::TransformationType, header: yasl/gui/transform.h}
    - {id: QUrlComponentFormattingOption, name: QUrl::ComponentFormattingOption, header: yasl/core/url.h, links: flags@QUrl::ComponentFormattingOptions}
    - {id: QUrlParsingMode, name: QUrl::ParsingMode, header: yasl/core/url.h}
    - {id: QUrlUrlFormattingOption, name: QUrl::UrlFormattingOption, header: yasl/core/url.h}
    - {id: QUrlUserInputResolutionOption, name: QUrl::UserInputResolutionOption, header: yasl/core/url.h, links: flags@QUrl::UserInputResolutionOptions}
    - {id: QUuidVariant, name: QUuid::Variant, header: yasl/core/uuid.h}
    - {id: QUuidVersion, name: QUuid::Version, header: yasl/core/uuid.h}
    - {id: QValidatorState, name: QValidator::State, header: yasl/gui/validator.h}
    - {id: QWidgetRenderFlag, name: QWidget::RenderFlag, header: yasl/widgets/widget.h}
    - {id: QWindowAncestorMode, name: QWindow::AncestorMode, header: yasl/gui/window.h}
    - {id: QWindowVisibility, name: QWindow::Visibility, header: yasl/gui/window.h}
    - {id: QWizardWizardButton, name: QWizard::WizardButton, header: yasl/widgets/wizard.h}
    - {id: QWizardWizardOption, name: QWizard::WizardOption, header: yasl/widgets/wizard.h, links: flags@QWizard::WizardOptions}
    - {id: QWizardWizardPixmap, name: QWizard::WizardPixmap, header: yasl/widgets/wizard.h}
    - {id: QWizardWizardStyle, name: QWizard::WizardStyle, header: yasl/widgets/wizard.h}
  classes:
    - {id: ProxyQAction, name: Proxy<QAction*>, header: yasl/widgets/action.h}
    - {id: ProxyQByteArray, name: Proxy<QByteArray>, header: yasl/core/bytearray.h}
    - {id: ProxyQLocale, name: Proxy<QLocale>, header: yasl/core/locale.h}
    - {id: ProxyQObject, name: Proxy<QObject*>, header: yasl/core/object.h}
    - {id: ProxyQWidget, name: Proxy<QWidget*>, header: yasl/widgets/widget.h}
    - {id: QAbstractButton, name: QAbstractButton, rename: AbstractButton, header: yasl/widgets/abstractbutton.h, tag: qobject_tag}
    - {id: QAbstractSlider, name: QAbstractSlider, rename: AbstractSlider, header: yasl/widgets/abstractslider.h, tag: qobject_tag}
    - {id: QAbstractSpinBox, name: QAbstractSpinBox, rename: AbstractSpinBox, header: yasl/widgets/abstractspinbox.h, tag: qobject_tag}
    - {id: QAbstractSpinBoxStepEnabled, name: QAbstractSpinBox::StepEnabled, rename: StepEnabled, header: yasl/widgets/abstractspinbox.h}
    - {id: QAction, name: QAction, rename: Action, header: yasl/widgets/action.h, tag: qobject_tag, links: ref@QAction*;proxy@Proxy<QAction*>;list@QList<QAction*>}
    - {id: QActionStar, name: QAction*, header: yasl/widgets/action.h}
    - {id: QBitmap, name: QBitmap, rename: Bitmap, header: yasl/gui/bitmap.h, metatype: QMetaType::QBitmap}
    - {id: QBoxLayout, name: QBoxLayout, rename: BoxLayout, header: yasl/widgets/boxlayout.h, tag: qobject_tag}
    - {id: QBrush, name: QBrush, rename: Brush, header: yasl/gui/brush.h, metatype: QMetaType::QBrush}
    - {id: QByteArray, name: QByteArray, rename: ByteArray, header: yasl/core/bytearray.h, links: proxy@Proxy<QByteArray>;list@QList<QByteArray>, metatype: QMetaType::QByteArray}
    - {id: QByteArrayBase64Options, name: QByteArray::Base64Options, rename: Base64Options, header: yasl/core/bytearray.h}
    - {id: QByteRef, name: QByteRef, rename: ByteRef, header: yasl/core/bytearray.h}
    - {id: QChar, name: QChar, rename: Char, header: yasl/core/char.h, metatype: QMetaType::QChar}
    - {id: QCheckBox, name: QCheckBox, rename: CheckBox, header: yasl/widgets/checkbox.h, tag: qobject_tag}
    - {id: QChildEvent, name: QChildEvent, rename: ChildEvent, header: yasl/core/event.h, tag: qevent_tag}
    - {id: QClipboard, name: QClipboard, rename: Clipboard, header: yasl/gui/clipboard.h, tag: qobject_tag}
    - {id: QCloseEvent, name: QCloseEvent, rename: CloseEvent, header: yasl/gui/guievent.h, tag: qevent_tag}
    - {id: QColor, name: QColor, rename: Color, header: yasl/gui/color.h, metatype: QMetaType::QColor}
    - {id: QColorDialog, name: QColorDialog, rename: ColorDialog, header: yasl/widgets/colordialog.h, tag: qobject_tag}
    - {id: QColorDialogColorDialogOptions, name: QColorDialog::ColorDialogOptions, rename: ColorDialogOptions, header: yasl/widgets/colordialog.h}
    - {id: QComboBox, name: QComboBox, rename: ComboBox, header: yasl/widgets/combobox.h, tag: qobject_tag}
    - {id: QConicalGradient, name: QConicalGradient, rename: ConicalGradient, header: yasl/gui/brush.h}
    - {id: QCursor, name: QCursor, rename: Cursor, header: yasl/gui/cursor.h, metatype: QMetaType::QCursor}
    - {id: QDataStream, name: QDataStream, rename: DataStream, header: yasl/core/datastream.h}
    - {id: QDate, name: QDate, rename: Date, header: yasl/core/datetime.h, metatype: QMetaType::QDate}
    - {id: QDateEdit, name: QDateEdit, rename: DateEdit, header: yasl/widgets/datetimeedit.h, tag: qobject_tag}
    - {id: QDateTime, name: QDateTime, rename: DateTime, header: yasl/core/datetime.h, metatype: QMetaType::QDateTime}
    - {id: QDateTimeEdit, name: QDateTimeEdit, rename: DateTimeEdit, header: yasl/widgets/datetimeedit.h, tag: qobject_tag}
    - {id: QDateTimeEditSections, name: QDateTimeEdit::Sections, rename: Sections, header: yasl/widgets/datetimeedit.h}
    - {id: QDeferredDeleteEvent, name: QDeferredDeleteEvent, rename: DeferredDeleteEvent, header: yasl/core/event.h, tag: qevent_tag}
    - {id: QDial, name: QDial, rename: Dial, header: yasl/widgets/dial.h, tag: qobject_tag}
    - {id: QDialog, name: QDialog, rename: Dialog, header: yasl/widgets/dialog.h, tag: qobject_tag}
    - {id: QDir, name: QDir, rename: Dir, header: yasl/core/dir.h}
    - {id: QDirFilters, name: QDir::Filters, rename: Filters, header: yasl/core/dir.h}
    - {id: QDirSortFlags, name: QDir::SortFlags, rename: SortFlags, header: yasl/core/dir.h}
    - {id: QDoubleSpinBox, name: QDoubleSpinBox, rename: DoubleSpinBox, header: yasl/widgets/spinbox.h, tag: qobject_tag}
    - {id: QDoubleValidator, name: QDoubleValidator, rename: DoubleValidator, header: yasl/gui/validator.h, tag: qobject_tag}
    - {id: QDynamicPropertyChangeEvent, name: QDynamicPropertyChangeEvent, rename: DynamicPropertyChangeEvent, header: yasl/core/event.h, tag: qevent_tag}
    - {id: QElapsedTimer, name: QElapsedTimer, rename: ElapsedTimer, header: yasl/core/elapsedtimer.h}
    - {id: QErrorMessage, name: QErrorMessage, rename: ErrorMessage, header: yasl/widgets/errormessage.h, tag: qobject_tag}
    - {id: QEvent, name: QEvent, rename: Event, header: yasl/core/event.h, tag: qevent_tag}
    - {id: QFile, name: QFile, rename: File, header: yasl/core/file.h, tag: qobject_tag}
    - {id: QFileDevice, name: QFileDevice, rename: FileDevice, header: yasl/core/filedevice.h, tag: qobject_tag}
    - {id: QFileDeviceFileHandleFlags, name: QFileDevice::FileHandleFlags, rename: FileHandleFlags, header: yasl/core/filedevice.h}
    - {id: QFileDevicePermissions, name: QFileDevice::Permissions, rename: Permissions, header: yasl/core/filedevice.h}
    - {id: QFileDialog, name: QFileDialog, rename: FileDialog, header: yasl/widgets/filedialog.h, tag: qobject_tag}
    - {id: QFileDialogOptions, name: QFileDialog::Options, rename: Options, header: yasl/widgets/filedialog.h}
    - {id: QFileInfo, name: QFileInfo, rename: FileInfo, header: yasl/core/fileinfo.h}
    - {id: QFont, name: QFont, rename: Font, header: yasl/gui/font.h, metatype: QMetaType::QFont}
    - {id: QFontComboBox, name: QFontComboBox, rename: FontComboBox, header: yasl/widgets/fontcombobox.h, tag: qobject_tag}
    - {id: QFontComboBoxFontFilters, name: QFontComboBox::FontFilters, rename: FontFilters, header: yasl/widgets/fontcombobox.h}
    - {id: QFontDatabase, name: QFontDatabase, rename: FontDatabase, header: yasl/gui/fontdatabase.h}
    - {id: QFontDialog, name: QFontDialog, rename: FontDialog, header: yasl/widgets/fontdialog.h, tag: qobject_tag}
    - {id: QFontDialogFontDialogOptions, name: QFontDialog::FontDialogOptions, rename: FontDialogOptions, header: yasl/widgets/fontdialog.h}
    - {id: QFontInfo, name: QFontInfo, rename: FontInfo, header: yasl/gui/fontinfo.h}
    - {id: QFontMetrics, name: QFontMetrics, rename: FontMetrics, header: yasl/gui/fontmetrics.h}
    - {id: QFontMetricsF, name: QFontMetricsF, rename: FontMetricsF, header: yasl/gui/fontmetrics.h}
    - {id: QFormLayout, name: QFormLayout, rename: FormLayout, header: yasl/widgets/formlayout.h, tag: qobject_tag}
    - {id: QFrame, name: QFrame, rename: Frame, header: yasl/widgets/frame.h, tag: qobject_tag}
    - {id: QGlyphRun, name: QGlyphRun, rename: GlyphRun, header: yasl/gui/glyphrun.h}
    - {id: QGradient, name: QGradient, rename: Gradient, header: yasl/gui/brush.h}
    - {id: QGridLayout, name: QGridLayout, rename: GridLayout, header: yasl/widgets/gridlayout.h, tag: qobject_tag}
    - {id: QGroupBox, name: QGroupBox, rename: GroupBox, header: yasl/widgets/groupbox.h, tag: qobject_tag}
    - {id: QHBoxLayout, name: QHBoxLayout, rename: QHBoxLayout, header: yasl/widgets/boxlayout.h, tag: qobject_tag}
    - {id: QHideEvent, name: QHideEvent, rename: HideEvent, header: yasl/gui/guievent.h, tag: qevent_tag}
    - {id: QIcon, name: QIcon, rename: Icon, header: yasl/gui/icon.h, metatype: QMetaType::QIcon}
    - {id: QImage, name: QImage, rename: Image, header: yasl/gui/image.h, metatype: QMetaType::QImage}
    - {id: QInputDialog, name: QInputDialog, rename: InputDialog, header: yasl/widgets/inputdialog.h, tag: qobject_tag}
    - {id: QInputDialogInputDialogOptions, name: QInputDialog::InputDialogOptions, rename: InputDialogOptions, header: yasl/widgets/inputdialog.h}
    - {id: QIntValidator, name: QIntValidator, rename: IntValidator, header: yasl/gui/validator.h, tag: qobject_tag}
    - {id: QIODevice, name: QIODevice, rename: IODevice, header: yasl/core/iodevice.h, tag: qobject_tag}
    - {id: QIODeviceOpenMode, name: QIODevice::OpenMode, rename: OpenMode, header: yasl/core/iodevice.h}
    - {id: QJsonArray, name: QJsonArray, rename: JsonArray, header: yasl/core/jsonarray.h, metatype: QMetaType::QJsonArray}
    - {id: QJsonDocument, name: QJsonDocument, rename: JsonDocument, header: yasl/core/jsondocument.h, metatype: QMetaType::QJsonDocument}
    - {id: QJsonObject, name: QJsonObject, rename: JsonObject, header: yasl/core/jsonobject.h, metatype: QMetaType::QJsonObject}
    - {id: QJsonValue, name: QJsonValue, rename: JsonValue, header: yasl/core/jsonvalue.h, metatype: QMetaType::QJsonValue}
    - {id: QJsonValueRef, name: QJsonValueRef, rename: JsonValueRef, header: yasl/core/jsonvalue.h}
    - {id: QKeyEvent, name: QKeyEvent, rename: KeyEvent, header: yasl/gui/guievent.h, tag: qevent_tag}
    - {id: QKeySequence, name: QKeySequence, rename: KeySequence, header: yasl/gui/keysequence.h, metatype: QMetaType::QKeySequence}
    - {id: QLabel, name: QLabel, rename: Label, header: yasl/widgets/label.h, tag: qobject_tag}
    - {id: QLayout, name: QLayout, rename: Layout, header: yasl/widgets/layout.h, tag: qobject_tag, links: ref@QLayout*}
    - {id: QLayoutStar, name: QLayout*, header: yasl/widgets/layout.h}
    - {id: QLine, name: QLine, rename: Line, header: yasl/core/line.h, metatype: QMetaType::QLine}
    - {id: QLinearGradient, name: QLinearGradient, rename: LinearGradient, header: yasl/gui/brush.h}
    - {id: QLineEdit, name: QLineEdit, rename: LineEdit, header: yasl/widgets/lineedit.h, tag: qobject_tag}
    - {id: QLineF, name: QLineF, rename: LineF, header: yasl/core/line.h, metatype: QMetaType::QLineF}
    - {id: QListQAction, name: QList<QAction*>, header: yasl/widgets/action.h}
    - {id: QListQByteArray, name: QList<QByteArray>, header: yasl/core/bytearray.h}
    - {id: QListQLocale, name: QList<QLocale>, header: yasl/core/locale.h}
    - {id: QListQObject, name: QList<QObject*>, header: yasl/core/object.h}
    - {id: QListQWidget, name: QList<QWidget*>, header: yasl/widgets/widget.h}
    - {id: QLocale, name: QLocale, rename: Locale, header: yasl/core/locale.h, links: proxy@Proxy<QLocale>;list@QList<QLocale>, metatype: QMetaType::QLocale}
    - {id: QLocaleNumberOptions, name: QLocale::NumberOptions, rename: NumberOptions, header: yasl/core/locale.h}
    - {id: QMargins, name: QMargins, rename: Margins, header: yasl/core/margins.h}
    - {id: QMarginsF, name: QMarginsF, rename: MarginsF, header: yasl/core/margins.h}
    - {id: QMenu, name: QMenu, rename: Menu, header: yasl/widgets/menu.h, tag: qobject_tag, links: ref@QMenu*}
    - {id: QMenuStar, name: QMenu*, header: yasl/widgets/menu.h}
    - {id: QMessageBox, name: QMessageBox, rename: MessageBox, header: yasl/widgets/messagebox.h, tag: qobject_tag}
    - {id: QMessageBoxStandardButtons, name: QMessageBox::StandardButtons, rename: StandardButtons, header: yasl/widgets/messagebox.h}
    - {id: QMimeType, name: QMimeType, rename: MimeType, header: yasl/core/mimetype.h}
    - {id: QMouseEvent, name: QMouseEvent, rename: MouseEvent, header: yasl/gui/guievent.h, tag: qevent_tag}
    - {id: QMoveEvent, name: QMoveEvent, rename: MoveEvent, header: yasl/gui/guievent.h, tag: qevent_tag}
    - {id: QObject, name: QObject, rename: Object, header: yasl/core/object.h, tag: qobject_tag, links: ref@QObject*;proxy@Proxy<QObject*>;list@QList<QObject*>}
    - {id: QObjectStar, name: QObject*, header: yasl/core/object.h}
    - {id: QListQObject, name: QObjectList, header: yasl/core/object.h}
    - {id: QPainter, name: QPainter, rename: Painter, header: yasl/gui/painter.h}
    - {id: QPainterPixmapFragmentHints, name: QPainter::PixmapFragmentHints, rename: PixmapFragmentHints, header: yasl/gui/painter.h}
    - {id: QPainterRenderHints, name: QPainter::RenderHints, rename: RenderHints, header: yasl/gui/painter.h}
    - {id: QPainterPath, name: QPainterPath, rename: PainterPath, header: yasl/gui/painterpath.h}
    - {id: QPainterPathStroker, name: QPainterPathStroker, rename: PainterPathStroker, header: yasl/gui/painterpath.h}
    - {id: QPaintEvent, name: QPaintEvent, rename: PaintEvent, header: yasl/gui/guievent.h, tag: qevent_tag}
    - {id: QPalette, name: QPalette, rename: Palette, header: yasl/gui/palette.h, metatype: QMetaType::QPalette}
    - {id: QPen, name: QPen, rename: Pen, header: yasl/gui/pen.h, metatype: QMetaType::QPen}
    - {id: QPicture, name: QPicture, rename: Picture, header: yasl/gui/picture.h}
    - {id: QPictureIO, name: QPictureIO, rename: PictureIO, header: yasl/gui/picture.h}
    - {id: QPixelFormat, name: QPixelFormat, rename: PixelFormat, header: yasl/gui/pixelformat.h}
    - {id: QPixmap, name: QPixmap, rename: Pixmap, header: yasl/gui/pixmap.h, metatype: QMetaType::QPixmap}
    - {id: QPoint, name: QPoint, rename: Point, header: yasl/core/point.h, metatype: QMetaType::QPoint}
    - {id: QPointF, name: QPointF, rename: PointF, header: yasl/core/point.h, metatype: QMetaType::QPointF}
    - {id: QProcess, name: QProcess, rename: Process, header: yasl/core/process.h, tag: qobject_tag}
    - {id: QProcessEnvironment, name: QProcessEnvironment, rename: ProcessEnvironment, header: yasl/core/process.h}
    - {id: QProgressBar, name: QProgressBar, rename: ProgressBar, header: yasl/widgets/progressbar.h, tag: qobject_tag}
    - {id: QProgressDialog, name: QProgressDialog, rename: ProgressDialog, header: yasl/widgets/progressdialog.h, tag: qobject_tag}
    - {id: QPushButton, name: QPushButton, rename: PushButton, header: yasl/widgets/pushbutton.h, tag: qobject_tag}
    - {id: QQuaternion, name: QQuaternion, rename: Quaternion, header: yasl/gui/quaternion.h}
    - {id: QRadialGradient, name: QRadialGradient, rename: RadialGradient, header: yasl/gui/brush.h}
    - {id: QRadioButton, name: QRadioButton, rename: RadioButton, header: yasl/widgets/radiobutton.h, tag: qobject_tag}
    - {id: QRect, name: QRect, rename: Rect, header: yasl/core/rect.h, metatype: QMetaType::QRect}
    - {id: QRectF, name: QRectF, rename: RectF, header: yasl/core/rect.h, metatype: QMetaType::QRectF}
    - {id: QRegion, name: QRegion, rename: Region, header: yasl/gui/region.h, metatype: QMetaType::QRegion}
    - {id: QRegularExpression, name: QRegularExpression, rename: RegularExpression, header: yasl/core/regularexpression.h, metatype: QMetaType::QRegularExpression}
    - {id: QRegularExpressionMatchOptions, name: QRegularExpression::MatchOptions, rename: MatchOptions, header: yasl/core/regularexpression.h}
    - {id: QRegularExpressionPatternOptions, name: QRegularExpression::PatternOptions, rename: PatternOptions, header: yasl/core/regularexpression.h}
    - {id: QRegularExpressionMatch, name: QRegularExpressionMatch, rename: RegularExpressionMatch, header: yasl/core/regularexpression.h}
    - {id: QRegularExpressionMatchIterator, name: QRegularExpressionMatchIterator, rename: RegularExpressionMatchIterator, header: yasl/core/regularexpression.h}
    - {id: QRegularExpressionValidator, name: QRegularExpressionValidator, rename: RegularExpressionValidator, header: yasl/gui/validator.h, tag: qobject_tag}
    - {id: QResizeEvent, name: QResizeEvent, rename: ResizeEvent, header: yasl/gui/guievent.h, tag: qevent_tag}
    - {id: QScreen, name: QScreen, rename: Screen, header: yasl/gui/screen.h, tag: qobject_tag}
    - {id: QScrollBar, name: QScrollBar, rename: ScrollBar, header: yasl/widgets/scrollbar.h, tag: qobject_tag}
    - {id: QSettings, name: QSettings, rename: Settings, header: yasl/core/settings.h, tag: qobject_tag}
    - {id: QShowEvent, name: QShowEvent, rename: ShowEvent, header: yasl/gui/guievent.h, tag: qevent_tag}
    - {id: QSignalBlocker, name: QSignalBlocker, rename: SignalBlocker, header: yasl/core/object.h}
    - {id: QSize, name: QSize, rename: Size, header: yasl/core/size.h, metatype: QMetaType::QSize}
    - {id: QSizeF, name: QSizeF, rename: SizeF, header: yasl/core/size.h, metatype: QMetaType::QSizeF}
    - {id: QSlider, name: QSlider, rename: Slider, header: yasl/widgets/slider.h, tag: qobject_tag}
    - {id: QSpinBox, name: QSpinBox, rename: SpinBox, header: yasl/widgets/spinbox.h, tag: qobject_tag}
    - {id: QStackedLayout, name: QStackedLayout, rename: StackedLayout, header: yasl/widgets/stackedlayout.h, tag: qobject_tag}
    - {id: QStaticText, name: QStaticText, rename: StaticText, header: yasl/gui/statictext.h}
    - {id: QtAlignment, name: Qt::Alignment, rename: Alignment, header: yasl/core/enums.h}
    - {id: QtImageConversionFlags, name: Qt::ImageConversionFlags, rename: ImageConversionFlags, header: yasl/core/enums.h}
    - {id: QtKeyboardModifiers, name: Qt::KeyboardModifiers, rename: KeyboardModifiers, header: yasl/core/enums.h}
    - {id: QtToolBarAreas, name: Qt::ToolBarAreas, rename: ToolBarAreas, header: yasl/core/enums.h}
    - {id: QTabWidget, name: QTabWidget, rename: TabWidget, header: yasl/widgets/tabwidget.h, tag: qobject_tag}
    - {id: QTextOption, name: QTextOption, rename: TextOption, header: yasl/gui/textoption.h}
    - {id: QTextOptionFlags, name: QTextOption::Flags, rename: Flags, header: yasl/gui/textoption.h}
    - {id: QTime, name: QTime, rename: Time, header: yasl/core/datetime.h, metatype: QMetaType::QTime}
    - {id: QTimeEdit, name: QTimeEdit, rename: TimeEdit, header: yasl/widgets/datetimeedit.h, tag: qobject_tag}
    - {id: QTimer, name: QTimer, rename: Timer, header: yasl/core/timer.h, tag: qobject_tag}
    - {id: QTimerEvent, name: QTimerEvent, rename: TimerEvent, header: yasl/core/event.h, tag: qevent_tag}
    - {id: QTimeZone, name: QTimeZone, rename: TimeZone, header: yasl/core/timezone.h}
    - {id: QToolBar, name: QToolBar, rename: ToolBar, header: yasl/widgets/toolbar.h, tag: qobject_tag}
    - {id: QToolButton, name: QToolButton, rename: ToolButton, header: yasl/widgets/toolbutton.h, tag: qobject_tag}
    - {id: QTransform, name: QTransform, rename: Transform, header: yasl/gui/transform.h, metatype: QMetaType::QTransform}
    - {id: QUrl, name: QUrl, rename: Url, header: yasl/core/url.h, metatype: QMetaType::QUrl}
    - {id: QUrlComponentFormattingOptions, name: QUrl::ComponentFormattingOptions, rename: ComponentFormattingOptions, header: yasl/core/url.h}
    - {id: QUrlUserInputResolutionOptions, name: QUrl::UserInputResolutionOptions, rename: UserInputResolutionOptions, header: yasl/core/url.h}
    - {id: QUrlQuery, name: QUrlQuery, rename: UrlQuery, header: yasl/core/urlquery.h}
    - {id: QUuid, name: QUuid, rename: Uuid, header: yasl/core/uuid.h, metatype: QMetaType::QUuid}
    - {id: QValidator, name: QValidator, rename: Validator, header: yasl/gui/validator.h, tag: qobject_tag}
    - {id: QVariant, name: QVariant, rename: Variant, header: yasl/core/variant.h, tag: qvariant_tag}
    - {id: QVBoxLayout, name: QVBoxLayout, rename: QVBoxLayout, header: yasl/widgets/boxlayout.h, tag: qobject_tag}
    - {id: QVector2D, name: QVector2D, rename: Vector2D, header: yasl/gui/vector2d.h, metatype: QMetaType::QVector2D}
    - {id: QVector3D, name: QVector3D, rename: Vector3D, header: yasl/gui/vector3d.h, metatype: QMetaType::QVector3D}
    - {id: QVector4D, name: QVector4D, rename: Vector4D, header: yasl/gui/vector4d.h, metatype: QMetaType::QVector4D}
    - {id: QWheelEvent, name: QWheelEvent, rename: WheelEvent, header: yasl/gui/guievent.h, tag: qevent_tag}
    - {id: QWidget, name: QWidget, rename: Widget, header: yasl/widgets/widget.h, tag: qobject_tag, links: ref@QWidget*;proxy@Proxy<QWidget*>;list@QList<QWidget*>}
    - {id: QWidgetStar, name: QWidget*, header: yasl/widgets/widget.h}
    - {id: QWindow, name: QWindow, rename: Window, header: yasl/gui/window.h, tag: qobject_tag, links: ref@QWindow*}
    - {id: QWindowStar, name: QWindow*, header: yasl/gui/window.h}
    - {id: QWizard, name: QWizard, rename: Wizard, header: yasl/widgets/wizard.h, tag: qobject_tag}
    - {id: QWizardWizardOptions, name: QWizard::WizardOptions, rename: WizardOptions, header: yasl/widgets/wizard.h}
    - {id: QWizardPage, name: QWizardPage, rename: WizardPage, header: yasl/widgets/wizard.h, tag: qobject_tag}
modules:
  - core:
      - file:
          name: bytearray
          checkstate: partially-checked
          cppincludes: yasl/core/bytearray-functions.h
          elements:
            - function: qstrcmp[r:int][p:const QByteArray &;const QByteArray &][rename:strcmp]
            - class:
                name: QByteArray
                checkstate: partially-checked
                elements:
                  - enum:
                      name: Base64Option
                      enumerators:
                        - Base64Encoding
                        - Base64UrlEncoding
                        - KeepTrailingEquals
                        - OmitTrailingEquals
                  - constructor: QByteArray
                  - constructor: QByteArray[p:int;char]
                  - constructor: QByteArray[p:int;Qt::Initialization]
                  - constructor: QByteArray[p:const QByteArray &]
                  - destructor: ~QByteArray
                  - function: operator=[r:QByteArray &][p:const QByteArray &]
                  - constructor: QByteArray[p:QByteArray &&]
                  - function: operator=[r:QByteArray &][p:QByteArray &&]
                  - function: swap[r:void][p:QByteArray &]
                  - function: size[r:int][specs:const]
                  - function: isEmpty[r:bool][specs:const]
                  - function: resize[r:void][p:int]
                  - function: fill[r:QByteArray &][p:char;int=-1]
                  - function: capacity[r:int][specs:const]
                  - function: reserve[r:void][p:int]
                  - function: squeeze[r:void]
                  - function: detach[r:void]
                  - function: isDetached[r:bool][specs:const]
                  - function: isSharedWith[r:bool][p:const QByteArray &][specs:const]
                  - function: clear[r:void]
                  - function: at[r:char][p:int][specs:const]
                  - function: operator[][r:char][p:int][specs:const]
                  - function: operator[][r:char][p:uint][specs:const][unchecked]
                  - function: operator[][r:QByteRef][p:int]
                  - function: operator[][r:QByteRef][p:uint][unchecked]
                  - function: front[r:char][specs:const][v:5.10.0]
                  - function: front[r:QByteRef][unchecked]
                  - function: back[r:char][specs:const][v:5.10.0]
                  - function: back[r:QByteRef][unchecked]
                  - function: indexOf[r:int][p:char;int=0][specs:const]
                  - function: indexOf[r:int][p:const QByteArray &;int=0][specs:const]
                  - function: lastIndexOf[r:int][p:char;int=-1][specs:const]
                  - function: lastIndexOf[r:int][p:const QByteArray &;int=-1][specs:const]
                  - function: contains[r:bool][p:char][specs:const]
                  - function: contains[r:bool][p:const QByteArray &][specs:const]
                  - function: count[r:int][p:char][specs:const]
                  - function: count[r:int][p:const QByteArray &][specs:const]
                  - function: left[r:QByteArray][p:int][specs:const]
                  - function: right[r:QByteArray][p:int][specs:const]
                  - function: mid[r:QByteArray][p:int;int=-1][specs:const]
                  - function: chopped[r:QByteArray][p:int][specs:const][v:5.10.0]
                  - function: startsWith[r:bool][p:const QByteArray &][specs:const]
                  - function: startsWith[r:bool][p:char][specs:const]
                  - function: endsWith[r:bool][p:const QByteArray &][specs:const]
                  - function: endsWith[r:bool][p:char][specs:const]
                  - function: truncate[r:void][p:int]
                  - function: chop[r:void][p:int]
                  - function: toLower[r:QByteArray][specs:const][unchecked]
                  - function: toLower[r:QByteArray][unchecked]
                  - function: ba_toLower[r:QByteArray][binding:free][rename:toLower]
                  - function: toUpper[r:QByteArray][specs:const][unchecked]
                  - function: toUpper[r:QByteArray][unchecked]
                  - function: ba_toUpper[r:QByteArray][binding:free][rename:toUpper]
                  - function: trimmed[r:QByteArray][specs:const][unchecked]
                  - function: trimmed[r:QByteArray][unchecked]
                  - function: ba_trimmed[r:QByteArray][binding:free][rename:trimmed]
                  - function: simplified[r:QByteArray][specs:const][unchecked]
                  - function: ba_simplified[r:QByteArray][binding:free][rename:simplified]
                  - function: leftJustified[r:QByteArray][p:int;char=' ';bool=false][specs:const]
                  - function: rightJustified[r:QByteArray][p:int;char=' ';bool=false][specs:const]
                  - function: prepend[r:QByteArray &][p:char]
                  - function: prepend[r:QByteArray &][p:int;char][v:5.7.0]
                  - function: prepend[r:QByteArray &][p:const QByteArray &]
                  - function: append[r:QByteArray &][p:char]
                  - function: append[r:QByteArray &][p:int;char][v:5.7.0]
                  - function: append[r:QByteArray &][p:const QByteArray &]
                  - function: insert[r:QByteArray &][p:int;char]
                  - function: insert[r:QByteArray &][p:int;int;char][v:5.7.0]
                  - function: insert[r:QByteArray &][p:int;const QByteArray &]
                  - function: remove[r:QByteArray &][p:int;int]
                  - function: replace[r:QByteArray &][p:int;int;const QByteArray &]
                  - function: replace[r:QByteArray &][p:char;const QByteArray &]
                  - function: replace[r:QByteArray &][p:const QByteArray &;const QByteArray &]
                  - function: replace[r:QByteArray &][p:char;char]
                  - function: operator+=[r:QByteArray &][p:char]
                  - function: operator+=[r:QByteArray &][p:const QByteArray &]
                  - function: split[r:QList<QByteArray>][p:char][specs:const]
                  - function: repeated[r:QByteArray][p:int][specs:const]
                  - function: append[r:QByteArray &][p:const QString &]
                  - function: insert[r:QByteArray &][p:int;const QString &]
                  - function: replace[r:QByteArray &][p:char;const QString &]
                  - function: replace[r:QByteArray &][p:const QString &;const QByteArray &]
                  - function: operator+=[r:QByteArray &][p:const QString &]
                  - function: indexOf[r:int][p:const QString &;int][specs:const]
                  - function: lastIndexOf[r:int][p:const QString &;int][specs:const]
                  - function: operator==[r:bool][p:const QString &][specs:const]
                  - function: operator!=[r:bool][p:const QString &][specs:const]
                  - function: operator<[r:bool][p:const QString &][specs:const]
                  - function: operator>[r:bool][p:const QString &][specs:const]
                  - function: operator<=[r:bool][p:const QString &][specs:const]
                  - function: operator>=[r:bool][p:const QString &][specs:const]
                  - function: toShort[r:short][p:bool *;int][specs:const]
                  - function: toUShort[r:ushort][p:bool *;int][specs:const]
                  - function: toInt[r:int][p:bool *;int][specs:const]
                  - function: toUInt[r:uint][p:bool *;int][specs:const]
                  - function: toLong[r:long][p:bool *;int][specs:const]
                  - function: toULong[r:ulong][p:bool *;int][specs:const]
                  - function: toLongLong[r:qlonglong][p:bool *;int][specs:const]
                  - function: toULongLong[r:qulonglong][p:bool *;int][specs:const]
                  - function: toFloat[r:float][p:bool *][specs:const]
                  - function: toDouble[r:double][p:bool *][specs:const]
                  - function: toBase64[r:QByteArray][p:QByteArray::Base64Options][specs:const][v:5.2.0]
                  - function: toBase64[r:QByteArray][specs:const]
                  - function: toHex[r:QByteArray][specs:const]
                  - function: toHex[r:QByteArray][p:char][specs:const][v:5.9.0]
                  - function: toPercentEncoding[r:QByteArray][p:const QByteArray &;const QByteArray &;char][specs:const]
                  - function: setNum[r:QByteArray &][p:short;int]
                  - function: setNum[r:QByteArray &][p:ushort;int]
                  - function: setNum[r:QByteArray &][p:int;int=10]
                  - function: setNum[r:QByteArray &][p:uint;int][unchecked]
                  - function: setNum[r:QByteArray &][p:qlonglong;int]
                  - function: setNum[r:QByteArray &][p:qulonglong;int]
                  - function: setNum[r:QByteArray &][p:float;char='g';int=6]
                  - function: setNum[r:QByteArray &][p:double;char='g';int=6]
                  - function: setRawData[r:QByteArray &][p:const char *;uint][unchecked]
                  - function: number[r:QByteArray][p:int;int][specs:static]
                  - function: number[r:QByteArray][p:uint;int][specs:static][unchecked]
                  - function: number[r:QByteArray][p:qlonglong;int][specs:static]
                  - function: number[r:QByteArray][p:qulonglong;int][specs:static]
                  - function: number[r:QByteArray][p:double;char;int][specs:static]
                  - function: fromBase64[r:QByteArray][p:const QByteArray &;QByteArray::Base64Options][specs:static][v:5.2.0]
                  - function: fromBase64[r:QByteArray][p:const QByteArray &][specs:static]
                  - function: fromHex[r:QByteArray][p:const QByteArray &][specs:static]
                  - function: fromPercentEncoding[r:QByteArray][p:const QByteArray &;char][specs:static]
                  - function: begin[r:QByteArray::iterator]
                  - function: begin[r:QByteArray::const_iterator][specs:const]
                  - function: cbegin[r:QByteArray::const_iterator][specs:const]
                  - function: constBegin[r:QByteArray::const_iterator][specs:const]
                  - function: end[r:QByteArray::iterator]
                  - function: end[r:QByteArray::const_iterator][specs:const]
                  - function: cend[r:QByteArray::const_iterator][specs:const]
                  - function: constEnd[r:QByteArray::const_iterator][specs:const]
                  - function: rbegin[r:QByteArray::reverse_iterator]
                  - function: rend[r:QByteArray::reverse_iterator]
                  - function: rbegin[r:QByteArray::const_reverse_iterator][specs:const]
                  - function: rend[r:QByteArray::const_reverse_iterator][specs:const]
                  - function: crbegin[r:QByteArray::const_reverse_iterator][specs:const]
                  - function: crend[r:QByteArray::const_reverse_iterator][specs:const]
                  - function: push_back[r:void][p:char]
                  - function: push_back[r:void][p:const QByteArray &]
                  - function: push_front[r:void][p:char]
                  - function: push_front[r:void][p:const QByteArray &]
                  - function: shrink_to_fit[r:void][v:5.10.0]
                  - function: count[r:int][specs:const]
                  - function: length[r:int][specs:const]
                  - function: isNull[r:bool][specs:const]
            - function: operator|[r:QByteArray::Base64Options][p:QByteArray::Base64Option;QByteArray::Base64Option]
            - function: operator|[r:QByteArray::Base64Options][p:QByteArray::Base64Option;QByteArray::Base64Options]
            - function: operator|[r:QIncompatibleFlag][p:QByteArray::Base64Options::enum_type;int]
            - function: operator==[r:bool][p:const QByteArray &;const QByteArray &]
            - function: operator!=[r:bool][p:const QByteArray &;const QByteArray &]
            - function: operator<[r:bool][p:const QByteArray &;const QByteArray &]
            - function: operator<=[r:bool][p:const QByteArray &;const QByteArray &]
            - function: operator>[r:bool][p:const QByteArray &;const QByteArray &]
            - function: operator>=[r:bool][p:const QByteArray &;const QByteArray &]
            - function: operator+[r:const QByteArray][p:const QByteArray &;const QByteArray &]
            - function: operator+[r:const QByteArray][p:const QByteArray &;char]
            - function: operator+[r:const QByteArray][p:char;const QByteArray &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QByteArray &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QByteArray &]
            - function: qCompress[r:QByteArray][p:const QByteArray &;int]
            - function: qUncompress[r:QByteArray][p:const QByteArray &]
            - function: swap[r:void][p:QByteArray &;QByteArray &]
            - class:
                name: QByteRef
                elements:
                  - function: operator=[r:QByteRef &][p:char]
                  - function: operator=[r:QByteRef &][p:const QByteRef &]
                  - function: operator==[r:bool][p:char][specs:const]
                  - function: operator!=[r:bool][p:char][specs:const]
                  - function: operator>[r:bool][p:char][specs:const]
                  - function: operator>=[r:bool][p:char][specs:const]
                  - function: operator<[r:bool][p:char][specs:const]
                  - function: operator<=[r:bool][p:char][specs:const]
          hincludes: <QByteArray>
      - file:
          name: char
          cppincludes: yasl/core/char-functions.h
          elements:
            - class:
                name: QChar
                elements:
                  - destructor: ~QChar
                  - enum:
                      name: SpecialCharacter
                      enumerators:
                        - Null
                        - Tabulation
                        - LineFeed
                        - CarriageReturn
                        - Space
                        - Nbsp
                        - SoftHyphen
                        - ReplacementCharacter
                        - ObjectReplacementCharacter
                        - ByteOrderMark
                        - ByteOrderSwapped
                        - ParagraphSeparator
                        - LineSeparator
                        - LastValidCodePoint
                  - constructor: QChar
                  - constructor: QChar[p:ushort]
                  - constructor: QChar[p:uchar;uchar]
                  - constructor: QChar[p:short]
                  - constructor: QChar[p:uint]
                  - constructor: QChar[p:int]
                  - constructor: QChar[p:QChar::SpecialCharacter]
                  - constructor: QChar[p:QLatin1Char]
                  - constructor: QChar[p:char16_t]
                  - constructor: QChar[p:wchar_t]
                  - constructor: QChar[p:char]
                  - constructor: QChar[p:uchar]
                  - enum:
                      name: Category
                      enumerators:
                        - Mark_NonSpacing
                        - Mark_SpacingCombining
                        - Mark_Enclosing
                        - Number_DecimalDigit
                        - Number_Letter
                        - Number_Other
                        - Separator_Space
                        - Separator_Line
                        - Separator_Paragraph
                        - Other_Control
                        - Other_Format
                        - Other_Surrogate
                        - Other_PrivateUse
                        - Other_NotAssigned
                        - Letter_Uppercase
                        - Letter_Lowercase
                        - Letter_Titlecase
                        - Letter_Modifier
                        - Letter_Other
                        - Punctuation_Connector
                        - Punctuation_Dash
                        - Punctuation_Open
                        - Punctuation_Close
                        - Punctuation_InitialQuote
                        - Punctuation_FinalQuote
                        - Punctuation_Other
                        - Symbol_Math
                        - Symbol_Currency
                        - Symbol_Modifier
                        - Symbol_Other
                  - enum:
                      name: Script
                      enumerators:
                        - Script_Unknown
                        - Script_Inherited
                        - Script_Common
                        - Script_Latin
                        - Script_Greek
                        - Script_Cyrillic
                        - Script_Armenian
                        - Script_Hebrew
                        - Script_Arabic
                        - Script_Syriac
                        - Script_Thaana
                        - Script_Devanagari
                        - Script_Bengali
                        - Script_Gurmukhi
                        - Script_Gujarati
                        - Script_Oriya
                        - Script_Tamil
                        - Script_Telugu
                        - Script_Kannada
                        - Script_Malayalam
                        - Script_Sinhala
                        - Script_Thai
                        - Script_Lao
                        - Script_Tibetan
                        - Script_Myanmar
                        - Script_Georgian
                        - Script_Hangul
                        - Script_Ethiopic
                        - Script_Cherokee
                        - Script_CanadianAboriginal
                        - Script_Ogham
                        - Script_Runic
                        - Script_Khmer
                        - Script_Mongolian
                        - Script_Hiragana
                        - Script_Katakana
                        - Script_Bopomofo
                        - Script_Han
                        - Script_Yi
                        - Script_OldItalic
                        - Script_Gothic
                        - Script_Deseret
                        - Script_Tagalog
                        - Script_Hanunoo
                        - Script_Buhid
                        - Script_Tagbanwa
                        - Script_Coptic
                        - Script_Limbu
                        - Script_TaiLe
                        - Script_LinearB
                        - Script_Ugaritic
                        - Script_Shavian
                        - Script_Osmanya
                        - Script_Cypriot
                        - Script_Braille
                        - Script_Buginese
                        - Script_NewTaiLue
                        - Script_Glagolitic
                        - Script_Tifinagh
                        - Script_SylotiNagri
                        - Script_OldPersian
                        - Script_Kharoshthi
                        - Script_Balinese
                        - Script_Cuneiform
                        - Script_Phoenician
                        - Script_PhagsPa
                        - Script_Nko
                        - Script_Sundanese
                        - Script_Lepcha
                        - Script_OlChiki
                        - Script_Vai
                        - Script_Saurashtra
                        - Script_KayahLi
                        - Script_Rejang
                        - Script_Lycian
                        - Script_Carian
                        - Script_Lydian
                        - Script_Cham
                        - Script_TaiTham
                        - Script_TaiViet
                        - Script_Avestan
                        - Script_EgyptianHieroglyphs
                        - Script_Samaritan
                        - Script_Lisu
                        - Script_Bamum
                        - Script_Javanese
                        - Script_MeeteiMayek
                        - Script_ImperialAramaic
                        - Script_OldSouthArabian
                        - Script_InscriptionalParthian
                        - Script_InscriptionalPahlavi
                        - Script_OldTurkic
                        - Script_Kaithi
                        - Script_Batak
                        - Script_Brahmi
                        - Script_Mandaic
                        - Script_Chakma
                        - Script_MeroiticCursive
                        - Script_MeroiticHieroglyphs
                        - Script_Miao
                        - Script_Sharada
                        - Script_SoraSompeng
                        - Script_Takri
                        - Script_CaucasianAlbanian
                        - Script_BassaVah
                        - Script_Duployan
                        - Script_Elbasan
                        - Script_Grantha
                        - Script_PahawhHmong
                        - Script_Khojki
                        - Script_LinearA
                        - Script_Mahajani
                        - Script_Manichaean
                        - Script_MendeKikakui
                        - Script_Modi
                        - Script_Mro
                        - Script_OldNorthArabian
                        - Script_Nabataean
                        - Script_Palmyrene
                        - Script_PauCinHau
                        - Script_OldPermic
                        - Script_PsalterPahlavi
                        - Script_Siddham
                        - Script_Khudawadi
                        - Script_Tirhuta
                        - Script_WarangCiti
                        - Script_Ahom
                        - Script_AnatolianHieroglyphs
                        - Script_Hatran
                        - Script_Multani
                        - Script_OldHungarian
                        - Script_SignWriting
                        - ScriptCount
                  - enum:
                      name: Direction
                      enumerators:
                        - DirL
                        - DirR
                        - DirEN
                        - DirES
                        - DirET
                        - DirAN
                        - DirCS
                        - DirB
                        - DirS
                        - DirWS
                        - DirON
                        - DirLRE
                        - DirLRO
                        - DirAL
                        - DirRLE
                        - DirRLO
                        - DirPDF
                        - DirNSM
                        - DirBN
                        - DirLRI
                        - DirRLI
                        - DirFSI
                        - DirPDI
                  - enum:
                      name: Decomposition
                      enumerators:
                        - NoDecomposition
                        - Canonical
                        - Font
                        - NoBreak
                        - Initial
                        - Medial
                        - Final
                        - Isolated
                        - Circle
                        - Super
                        - Sub
                        - Vertical
                        - Wide
                        - Narrow
                        - Small
                        - Square
                        - Compat
                        - Fraction
                  - enum:
                      name: JoiningType
                      enumerators:
                        - Joining_None
                        - Joining_Causing
                        - Joining_Dual
                        - Joining_Right
                        - Joining_Left
                        - Joining_Transparent
                  - enum:
                      name: Joining
                      enumerators:
                        - OtherJoining
                        - Dual
                        - Right
                        - Center
                  - enum:
                      name: CombiningClass
                      enumerators:
                        - Combining_BelowLeftAttached
                        - Combining_BelowAttached
                        - Combining_BelowRightAttached
                        - Combining_LeftAttached
                        - Combining_RightAttached
                        - Combining_AboveLeftAttached
                        - Combining_AboveAttached
                        - Combining_AboveRightAttached
                        - Combining_BelowLeft
                        - Combining_Below
                        - Combining_BelowRight
                        - Combining_Left
                        - Combining_Right
                        - Combining_AboveLeft
                        - Combining_Above
                        - Combining_AboveRight
                        - Combining_DoubleBelow
                        - Combining_DoubleAbove
                        - Combining_IotaSubscript
                  - enum:
                      name: UnicodeVersion
                      enumerators:
                        - Unicode_Unassigned
                        - Unicode_1_1
                        - Unicode_2_0
                        - Unicode_2_1_2
                        - Unicode_3_0
                        - Unicode_3_1
                        - Unicode_3_2
                        - Unicode_4_0
                        - Unicode_4_1
                        - Unicode_5_0
                        - Unicode_5_1
                        - Unicode_5_2
                        - Unicode_6_0
                        - Unicode_6_1
                        - Unicode_6_2
                        - Unicode_6_3
                        - Unicode_7_0
                        - Unicode_8_0
                  - function: category[r:QChar::Category][specs:const]
                  - function: direction[r:QChar::Direction][specs:const]
                  - function: joiningType[r:QChar::JoiningType][specs:const]
                  - function: joining[r:QChar::Joining][specs:const]
                  - function: combiningClass[r:unsigned char][specs:const]
                  - function: mirroredChar[r:QChar][specs:const]
                  - function: hasMirrored[r:bool][specs:const]
                  - function: decomposition[r:QString][specs:const]
                  - function: decompositionTag[r:QChar::Decomposition][specs:const]
                  - function: digitValue[r:int][specs:const]
                  - function: toLower[r:QChar][specs:const]
                  - function: toUpper[r:QChar][specs:const]
                  - function: toTitleCase[r:QChar][specs:const]
                  - function: toCaseFolded[r:QChar][specs:const]
                  - function: script[r:QChar::Script][specs:const]
                  - function: unicodeVersion[r:QChar::UnicodeVersion][specs:const]
                  - function: toLatin1[r:char][specs:const]
                  - function: unicode[r:ushort][specs:const]
                  - function: unicode[r:ushort &]
                  - function: fromLatin1[r:QChar][p:char][specs:static]
                  - function: isNull[r:bool][specs:const]
                  - function: isPrint[r:bool][specs:const]
                  - function: isSpace[r:bool][specs:const]
                  - function: isMark[r:bool][specs:const]
                  - function: isPunct[r:bool][specs:const]
                  - function: isSymbol[r:bool][specs:const]
                  - function: isLetter[r:bool][specs:const]
                  - function: isNumber[r:bool][specs:const]
                  - function: isLetterOrNumber[r:bool][specs:const]
                  - function: isDigit[r:bool][specs:const]
                  - function: isLower[r:bool][specs:const]
                  - function: isUpper[r:bool][specs:const]
                  - function: isTitleCase[r:bool][specs:const]
                  - function: isNonCharacter[r:bool][specs:const]
                  - function: isHighSurrogate[r:bool][specs:const]
                  - function: isLowSurrogate[r:bool][specs:const]
                  - function: isSurrogate[r:bool][specs:const]
                  - function: cell[r:uchar][specs:const]
                  - function: row[r:uchar][specs:const]
                  - function: setCell[r:void][p:uchar]
                  - function: setRow[r:void][p:uchar]
                  - function: isNonCharacter[r:bool][p:uint][specs:static]
                  - function: isHighSurrogate[r:bool][p:uint][specs:static]
                  - function: isLowSurrogate[r:bool][p:uint][specs:static]
                  - function: isSurrogate[r:bool][p:uint][specs:static]
                  - function: requiresSurrogates[r:bool][p:uint][specs:static]
                  - function: surrogateToUcs4[r:uint][p:ushort;ushort][specs:static]
                  - function: surrogateToUcs4[r:uint][p:QChar;QChar][specs:static]
                  - function: highSurrogate[r:ushort][p:uint][specs:static]
                  - function: lowSurrogate[r:ushort][p:uint][specs:static]
                  - function: qchar_category[r:QChar::Category][p:uint][binding:freestatic][rename:category]
                  - function: qchar_direction[r:QChar::Direction][p:uint][binding:freestatic][rename:direction]
                  - function: qchar_joiningType[r:QChar::JoiningType][p:uint][binding:freestatic][rename:joiningType]
                  - function: qchar_joining[r:QChar::Joining][p:uint][binding:freestatic][rename:joining]
                  - function: qchar_combiningClass[r:unsigned char][p:uint][binding:freestatic][rename:combiningClass]
                  - function: qchar_mirroredChar[r:uint][p:uint][binding:freestatic][rename:mirroredChar]
                  - function: qchar_hasMirrored[r:bool][p:uint][binding:freestatic][rename:hasMirrored]
                  - function: qchar_decomposition[r:QString][p:uint][specs:static][binding:freestatic][rename:decomposition]
                  - function: qchar_decompositionTag[r:QChar::Decomposition][p:uint][binding:freestatic][rename:decompositionTag]
                  - function: qchar_digitValue[r:int][p:uint][binding:freestatic][rename:digitValue]
                  - function: qchar_toLower[r:uint][p:uint][binding:freestatic][rename:toLower]
                  - function: qchar_toUpper[r:uint][p:uint][binding:freestatic][rename:toUpper]
                  - function: qchar_toTitleCase[r:uint][p:uint][binding:freestatic][rename:toTitleCase]
                  - function: qchar_toCaseFolded[r:uint][p:uint][binding:freestatic][rename:toCaseFolded]
                  - function: qchar_script[r:QChar::Script][p:uint][binding:freestatic][rename:script]
                  - function: qchar_unicodeVersion[r:QChar::UnicodeVersion][p:uint][binding:freestatic][rename:unicodeVersion]
                  - function: qchar_currentUnicodeVersion[r:QChar::UnicodeVersion][binding:freestatic][rename:currentUnicodeVersion]
                  - function: qchar_isPrint[r:bool][p:uint][binding:freestatic][rename:isPrint]
                  - function: isSpace[r:bool][p:uint][specs:static]
                  - function: qchar_isMark[r:bool][p:uint][binding:freestatic][rename:isMark]
                  - function: qchar_isPunct[r:bool][p:uint][binding:freestatic][rename:isPunct]
                  - function: qchar_isSymbol[r:bool][p:uint][binding:freestatic][rename:isSymbol]
                  - function: isLetter[r:bool][p:uint][specs:static]
                  - function: isNumber[r:bool][p:uint][specs:static]
                  - function: isLetterOrNumber[r:bool][p:uint][specs:static]
                  - function: isDigit[r:bool][p:uint][specs:static]
                  - function: isLower[r:bool][p:uint][specs:static]
                  - function: isUpper[r:bool][p:uint][specs:static]
                  - function: isTitleCase[r:bool][p:uint][specs:static]
            - function: operator==[r:bool][p:QChar;QChar]
            - function: operator<[r:bool][p:QChar;QChar]
            - function: operator!=[r:bool][p:QChar;QChar]
            - function: operator>=[r:bool][p:QChar;QChar]
            - function: operator>[r:bool][p:QChar;QChar]
            - function: operator<=[r:bool][p:QChar;QChar]
            - function: operator==[r:bool][p:QChar;std::nullptr_t]
            - function: operator<[r:bool][p:QChar;std::nullptr_t]
            - function: operator==[r:bool][p:std::nullptr_t;QChar]
            - function: operator<[r:bool][p:std::nullptr_t;QChar]
            - function: operator!=[r:bool][p:QChar;std::nullptr_t]
            - function: operator>=[r:bool][p:QChar;std::nullptr_t]
            - function: operator>[r:bool][p:QChar;std::nullptr_t]
            - function: operator<=[r:bool][p:QChar;std::nullptr_t]
            - function: operator!=[r:bool][p:std::nullptr_t;QChar]
            - function: operator>=[r:bool][p:std::nullptr_t;QChar]
            - function: operator>[r:bool][p:std::nullptr_t;QChar]
            - function: operator<=[r:bool][p:std::nullptr_t;QChar]
            - function: operator<<[r:QDataStream &][p:QDataStream &;QChar]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QChar &]
          hincludes: <QChar>
      - file:
          name: enums
          checkstate: partially-checked
          elements:
            - function: qt_getQtMetaObject[r:const QMetaObject *]
            - namespace:
                name: Qt
                checkstate: partially-checked
                elements:
                  - enum:
                      name: GlobalColor
                      enumerators:
                        - color0
                        - color1
                        - black
                        - white
                        - darkGray
                        - gray
                        - lightGray
                        - red
                        - green
                        - blue
                        - cyan
                        - magenta
                        - yellow
                        - darkRed
                        - darkGreen
                        - darkBlue
                        - darkCyan
                        - darkMagenta
                        - darkYellow
                        - transparent
                      toEnumClass: true
                  - enum:
                      name: KeyboardModifier
                      enumerators:
                        - NoModifier
                        - ShiftModifier
                        - ControlModifier
                        - AltModifier
                        - MetaModifier
                        - KeypadModifier
                        - GroupSwitchModifier
                        - KeyboardModifierMask
                      toEnumClass: true
                  - enum:
                      name: Modifier
                      enumerators:
                        - META
                        - SHIFT
                        - CTRL
                        - ALT
                        - MODIFIER_MASK
                        - UNICODE_ACCEL
                      toEnumClass: true
                  - enum:
                      name: MouseButton
                      enumerators:
                        - NoButton
                        - LeftButton
                        - RightButton
                        - MidButton
                        - MiddleButton
                        - BackButton
                        - XButton1
                        - ExtraButton1
                        - ForwardButton
                        - XButton2
                        - ExtraButton2
                        - TaskButton
                        - ExtraButton3
                        - ExtraButton4
                        - ExtraButton5
                        - ExtraButton6
                        - ExtraButton7
                        - ExtraButton8
                        - ExtraButton9
                        - ExtraButton10
                        - ExtraButton11
                        - ExtraButton12
                        - ExtraButton13
                        - ExtraButton14
                        - ExtraButton15
                        - ExtraButton16
                        - ExtraButton17
                        - ExtraButton18
                        - ExtraButton19
                        - ExtraButton20
                        - ExtraButton21
                        - ExtraButton22
                        - ExtraButton23
                        - ExtraButton24
                        - AllButtons
                        - MaxMouseButton
                        - MouseButtonMask
                      toEnumClass: true
                  - enum:
                      name: Orientation
                      enumerators:
                        - Horizontal
                        - Vertical
                      toEnumClass: true
                  - enum:
                      name: FocusPolicy
                      enumerators:
                        - NoFocus
                        - TabFocus
                        - ClickFocus
                        - StrongFocus
                        - WheelFocus
                      toEnumClass: true
                  - enum:
                      name: TabFocusBehavior
                      enumerators:
                        - NoTabFocus
                        - TabFocusTextControls
                        - TabFocusListControls
                        - TabFocusAllControls
                      toEnumClass: true
                  - enum:
                      name: SortOrder
                      enumerators:
                        - AscendingOrder
                        - DescendingOrder
                      toEnumClass: true
                  - enum:
                      name: TileRule
                      enumerators:
                        - StretchTile
                        - RepeatTile
                        - RoundTile
                      toEnumClass: true
                  - enum:
                      name: AlignmentFlag
                      enumerators:
                        - AlignLeft
                        - AlignLeading
                        - AlignRight
                        - AlignTrailing
                        - AlignHCenter
                        - AlignJustify
                        - AlignAbsolute
                        - AlignHorizontal_Mask
                        - AlignTop
                        - AlignBottom
                        - AlignVCenter
                        - AlignBaseline
                        - AlignVertical_Mask
                        - AlignCenter
                      toEnumClass: true
                  - enum:
                      name: TextFlag
                      enumerators:
                        - TextSingleLine
                        - TextDontClip
                        - TextExpandTabs
                        - TextShowMnemonic
                        - TextWordWrap
                        - TextWrapAnywhere
                        - TextDontPrint
                        - TextIncludeTrailingSpaces
                        - TextHideMnemonic
                        - TextJustificationForced
                        - TextForceLeftToRight
                        - TextForceRightToLeft
                        - TextLongestVariant
                        - TextBypassShaping
                      toEnumClass: true
                  - enum:
                      name: TextElideMode
                      enumerators:
                        - ElideLeft
                        - ElideRight
                        - ElideMiddle
                        - ElideNone
                      toEnumClass: true
                  - enum:
                      name: WhiteSpaceMode
                      enumerators:
                        - WhiteSpaceNormal
                        - WhiteSpacePre
                        - WhiteSpaceNoWrap
                        - WhiteSpaceModeUndefined
                      toEnumClass: true
                  - enum:
                      name: HitTestAccuracy
                      enumerators:
                        - ExactHit
                        - FuzzyHit
                      toEnumClass: true
                  - enum:
                      name: WindowType
                      enumerators:
                        - Widget
                        - Window
                        - Dialog
                        - Sheet
                        - Drawer
                        - Popup
                        - Tool
                        - ToolTip
                        - SplashScreen
                        - Desktop
                        - SubWindow
                        - ForeignWindow
                        - CoverWindow
                        - WindowType_Mask
                        - MSWindowsFixedSizeDialogHint
                        - MSWindowsOwnDC
                        - BypassWindowManagerHint
                        - X11BypassWindowManagerHint
                        - FramelessWindowHint
                        - WindowTitleHint
                        - WindowSystemMenuHint
                        - WindowMinimizeButtonHint
                        - WindowMaximizeButtonHint
                        - WindowMinMaxButtonsHint
                        - WindowContextHelpButtonHint
                        - WindowShadeButtonHint
                        - WindowStaysOnTopHint
                        - WindowTransparentForInput
                        - WindowOverridesSystemGestures
                        - WindowDoesNotAcceptFocus
                        - MaximizeUsingFullscreenGeometryHint
                        - CustomizeWindowHint
                        - WindowStaysOnBottomHint
                        - WindowCloseButtonHint
                        - MacWindowToolBarButtonHint
                        - BypassGraphicsProxyWidget
                        - NoDropShadowWindowHint
                        - WindowFullscreenButtonHint
                      toEnumClass: true
                  - enum:
                      name: WindowState
                      enumerators:
                        - WindowNoState
                        - WindowMinimized
                        - WindowMaximized
                        - WindowFullScreen
                        - WindowActive
                      toEnumClass: true
                  - enum:
                      name: ApplicationState
                      enumerators:
                        - ApplicationSuspended
                        - ApplicationHidden
                        - ApplicationInactive
                        - ApplicationActive
                      toEnumClass: true
                  - enum:
                      name: ScreenOrientation
                      enumerators:
                        - PrimaryOrientation
                        - PortraitOrientation
                        - LandscapeOrientation
                        - InvertedPortraitOrientation
                        - InvertedLandscapeOrientation
                      toEnumClass: true
                  - enum:
                      name: WidgetAttribute
                      enumerators:
                        - WA_Disabled
                        - WA_UnderMouse
                        - WA_MouseTracking
                        - WA_ContentsPropagated
                        - WA_OpaquePaintEvent
                        - WA_NoBackground
                        - WA_StaticContents
                        - WA_LaidOut
                        - WA_PaintOnScreen
                        - WA_NoSystemBackground
                        - WA_UpdatesDisabled
                        - WA_Mapped
                        - WA_MacNoClickThrough
                        - WA_InputMethodEnabled
                        - WA_WState_Visible
                        - WA_WState_Hidden
                        - WA_ForceDisabled
                        - WA_KeyCompression
                        - WA_PendingMoveEvent
                        - WA_PendingResizeEvent
                        - WA_SetPalette
                        - WA_SetFont
                        - WA_SetCursor
                        - WA_NoChildEventsFromChildren
                        - WA_WindowModified
                        - WA_Resized
                        - WA_Moved
                        - WA_PendingUpdate
                        - WA_InvalidSize
                        - WA_MacBrushedMetal
                        - WA_MacMetalStyle
                        - WA_CustomWhatsThis
                        - WA_LayoutOnEntireRect
                        - WA_OutsideWSRange
                        - WA_GrabbedShortcut
                        - WA_TransparentForMouseEvents
                        - WA_PaintUnclipped
                        - WA_SetWindowIcon
                        - WA_NoMouseReplay
                        - WA_DeleteOnClose
                        - WA_RightToLeft
                        - WA_SetLayoutDirection
                        - WA_NoChildEventsForParent
                        - WA_ForceUpdatesDisabled
                        - WA_WState_Created
                        - WA_WState_CompressKeys
                        - WA_WState_InPaintEvent
                        - WA_WState_Reparented
                        - WA_WState_ConfigPending
                        - WA_WState_Polished
                        - WA_WState_DND
                        - WA_WState_OwnSizePolicy
                        - WA_WState_ExplicitShowHide
                        - WA_ShowModal
                        - WA_MouseNoMask
                        - WA_GroupLeader
                        - WA_NoMousePropagation
                        - WA_Hover
                        - WA_InputMethodTransparent
                        - WA_QuitOnClose
                        - WA_KeyboardFocusChange
                        - WA_AcceptDrops
                        - WA_DropSiteRegistered
                        - WA_ForceAcceptDrops
                        - WA_WindowPropagation
                        - WA_NoX11EventCompression
                        - WA_TintedBackground
                        - WA_X11OpenGLOverlay
                        - WA_AlwaysShowToolTips
                        - WA_MacOpaqueSizeGrip
                        - WA_SetStyle
                        - WA_SetLocale
                        - WA_MacShowFocusRect
                        - WA_MacNormalSize
                        - WA_MacSmallSize
                        - WA_MacMiniSize
                        - WA_LayoutUsesWidgetRect
                        - WA_StyledBackground
                        - WA_MSWindowsUseDirect3D
                        - WA_CanHostQMdiSubWindowTitleBar
                        - WA_MacAlwaysShowToolWindow
                        - WA_StyleSheet
                        - WA_ShowWithoutActivating
                        - WA_X11BypassTransientForHint
                        - WA_NativeWindow
                        - WA_DontCreateNativeAncestors
                        - WA_MacVariableSize
                        - WA_DontShowOnScreen
                        - WA_X11NetWmWindowTypeDesktop
                        - WA_X11NetWmWindowTypeDock
                        - WA_X11NetWmWindowTypeToolBar
                        - WA_X11NetWmWindowTypeMenu
                        - WA_X11NetWmWindowTypeUtility
                        - WA_X11NetWmWindowTypeSplash
                        - WA_X11NetWmWindowTypeDialog
                        - WA_X11NetWmWindowTypeDropDownMenu
                        - WA_X11NetWmWindowTypePopupMenu
                        - WA_X11NetWmWindowTypeToolTip
                        - WA_X11NetWmWindowTypeNotification
                        - WA_X11NetWmWindowTypeCombo
                        - WA_X11NetWmWindowTypeDND
                        - WA_MacFrameworkScaled
                        - WA_SetWindowModality
                        - WA_WState_WindowOpacitySet
                        - WA_TranslucentBackground
                        - WA_AcceptTouchEvents
                        - WA_WState_AcceptedTouchBeginEvent
                        - WA_TouchPadAcceptSingleTouchEvents
                        - WA_X11DoNotAcceptFocus
                        - WA_MacNoShadow
                        - WA_AlwaysStackOnTop
                        - WA_TabletTracking
                        - WA_AttributeCount
                      toEnumClass: true
                  - enum:
                      name: ApplicationAttribute
                      checkstate: partially-checked
                      enumerators:
                        - AA_ImmediateWidgetCreation
                        - AA_MSWindowsUseDirect3DByDefault
                        - AA_DontShowIconsInMenus
                        - AA_NativeWindows
                        - AA_DontCreateNativeWidgetSiblings
                        - AA_PluginApplication
                        - AA_MacPluginApplication
                        - AA_DontUseNativeMenuBar
                        - AA_MacDontSwapCtrlAndMeta
                        - AA_Use96Dpi
                        - AA_X11InitThreads
                        - AA_SynthesizeTouchForUnhandledMouseEvents
                        - AA_SynthesizeMouseForUnhandledTouchEvents
                        - AA_UseHighDpiPixmaps
                        - AA_ForceRasterWidgets
                        - AA_UseDesktopOpenGL
                        - AA_UseOpenGLES
                        - AA_UseSoftwareOpenGL
                        - AA_ShareOpenGLContexts
                        - AA_SetPalette
                        - AA_EnableHighDpiScaling
                        - AA_DisableHighDpiScaling
                        - AA_UseStyleSheetPropagationInWidgetStyles
                        - AA_DontUseNativeDialogs
                        - AA_SynthesizeMouseForUnhandledTabletEvents
                        - AA_CompressHighFrequencyEvents
                        - AA_DontCheckOpenGLContextThreadAffinity
                        - AA_DisableShaderDiskCache
                        - AA_DontShowShortcutsInContextMenus[unchecked]
                        - AA_CompressTabletEvents[unchecked]
                        - AA_DisableWindowContextHelpButton[unchecked]
                        - AA_AttributeCount
                      toEnumClass: true
                  - enum:
                      name: ImageConversionFlag
                      enumerators:
                        - ColorMode_Mask
                        - AutoColor
                        - ColorOnly
                        - MonoOnly
                        - AlphaDither_Mask
                        - ThresholdAlphaDither
                        - OrderedAlphaDither
                        - DiffuseAlphaDither
                        - NoAlpha
                        - Dither_Mask
                        - DiffuseDither
                        - OrderedDither
                        - ThresholdDither
                        - DitherMode_Mask
                        - AutoDither
                        - PreferDither
                        - AvoidDither
                        - NoOpaqueDetection
                        - NoFormatConversion
                      toEnumClass: true
                  - enum:
                      name: BGMode
                      enumerators:
                        - TransparentMode
                        - OpaqueMode
                      toEnumClass: true
                  - enum:
                      name: Key
                      enumerators:
                        - Key_Escape
                        - Key_Tab
                        - Key_Backtab
                        - Key_Backspace
                        - Key_Return
                        - Key_Enter
                        - Key_Insert
                        - Key_Delete
                        - Key_Pause
                        - Key_Print
                        - Key_SysReq
                        - Key_Clear
                        - Key_Home
                        - Key_End
                        - Key_Left
                        - Key_Up
                        - Key_Right
                        - Key_Down
                        - Key_PageUp
                        - Key_PageDown
                        - Key_Shift
                        - Key_Control
                        - Key_Meta
                        - Key_Alt
                        - Key_CapsLock
                        - Key_NumLock
                        - Key_ScrollLock
                        - Key_F1
                        - Key_F2
                        - Key_F3
                        - Key_F4
                        - Key_F5
                        - Key_F6
                        - Key_F7
                        - Key_F8
                        - Key_F9
                        - Key_F10
                        - Key_F11
                        - Key_F12
                        - Key_F13
                        - Key_F14
                        - Key_F15
                        - Key_F16
                        - Key_F17
                        - Key_F18
                        - Key_F19
                        - Key_F20
                        - Key_F21
                        - Key_F22
                        - Key_F23
                        - Key_F24
                        - Key_F25
                        - Key_F26
                        - Key_F27
                        - Key_F28
                        - Key_F29
                        - Key_F30
                        - Key_F31
                        - Key_F32
                        - Key_F33
                        - Key_F34
                        - Key_F35
                        - Key_Super_L
                        - Key_Super_R
                        - Key_Menu
                        - Key_Hyper_L
                        - Key_Hyper_R
                        - Key_Help
                        - Key_Direction_L
                        - Key_Direction_R
                        - Key_Space
                        - Key_Any
                        - Key_Exclam
                        - Key_QuoteDbl
                        - Key_NumberSign
                        - Key_Dollar
                        - Key_Percent
                        - Key_Ampersand
                        - Key_Apostrophe
                        - Key_ParenLeft
                        - Key_ParenRight
                        - Key_Asterisk
                        - Key_Plus
                        - Key_Comma
                        - Key_Minus
                        - Key_Period
                        - Key_Slash
                        - Key_0
                        - Key_1
                        - Key_2
                        - Key_3
                        - Key_4
                        - Key_5
                        - Key_6
                        - Key_7
                        - Key_8
                        - Key_9
                        - Key_Colon
                        - Key_Semicolon
                        - Key_Less
                        - Key_Equal
                        - Key_Greater
                        - Key_Question
                        - Key_At
                        - Key_A
                        - Key_B
                        - Key_C
                        - Key_D
                        - Key_E
                        - Key_F
                        - Key_G
                        - Key_H
                        - Key_I
                        - Key_J
                        - Key_K
                        - Key_L
                        - Key_M
                        - Key_N
                        - Key_O
                        - Key_P
                        - Key_Q
                        - Key_R
                        - Key_S
                        - Key_T
                        - Key_U
                        - Key_V
                        - Key_W
                        - Key_X
                        - Key_Y
                        - Key_Z
                        - Key_BracketLeft
                        - Key_Backslash
                        - Key_BracketRight
                        - Key_AsciiCircum
                        - Key_Underscore
                        - Key_QuoteLeft
                        - Key_BraceLeft
                        - Key_Bar
                        - Key_BraceRight
                        - Key_AsciiTilde
                        - Key_nobreakspace
                        - Key_exclamdown
                        - Key_cent
                        - Key_sterling
                        - Key_currency
                        - Key_yen
                        - Key_brokenbar
                        - Key_section
                        - Key_diaeresis
                        - Key_copyright
                        - Key_ordfeminine
                        - Key_guillemotleft
                        - Key_notsign
                        - Key_hyphen
                        - Key_registered
                        - Key_macron
                        - Key_degree
                        - Key_plusminus
                        - Key_twosuperior
                        - Key_threesuperior
                        - Key_acute
                        - Key_mu
                        - Key_paragraph
                        - Key_periodcentered
                        - Key_cedilla
                        - Key_onesuperior
                        - Key_masculine
                        - Key_guillemotright
                        - Key_onequarter
                        - Key_onehalf
                        - Key_threequarters
                        - Key_questiondown
                        - Key_Agrave
                        - Key_Aacute
                        - Key_Acircumflex
                        - Key_Atilde
                        - Key_Adiaeresis
                        - Key_Aring
                        - Key_AE
                        - Key_Ccedilla
                        - Key_Egrave
                        - Key_Eacute
                        - Key_Ecircumflex
                        - Key_Ediaeresis
                        - Key_Igrave
                        - Key_Iacute
                        - Key_Icircumflex
                        - Key_Idiaeresis
                        - Key_ETH
                        - Key_Ntilde
                        - Key_Ograve
                        - Key_Oacute
                        - Key_Ocircumflex
                        - Key_Otilde
                        - Key_Odiaeresis
                        - Key_multiply
                        - Key_Ooblique
                        - Key_Ugrave
                        - Key_Uacute
                        - Key_Ucircumflex
                        - Key_Udiaeresis
                        - Key_Yacute
                        - Key_THORN
                        - Key_ssharp
                        - Key_division
                        - Key_ydiaeresis
                        - Key_AltGr
                        - Key_Multi_key
                        - Key_Codeinput
                        - Key_SingleCandidate
                        - Key_MultipleCandidate
                        - Key_PreviousCandidate
                        - Key_Mode_switch
                        - Key_Kanji
                        - Key_Muhenkan
                        - Key_Henkan
                        - Key_Romaji
                        - Key_Hiragana
                        - Key_Katakana
                        - Key_Hiragana_Katakana
                        - Key_Zenkaku
                        - Key_Hankaku
                        - Key_Zenkaku_Hankaku
                        - Key_Touroku
                        - Key_Massyo
                        - Key_Kana_Lock
                        - Key_Kana_Shift
                        - Key_Eisu_Shift
                        - Key_Eisu_toggle
                        - Key_Hangul
                        - Key_Hangul_Start
                        - Key_Hangul_End
                        - Key_Hangul_Hanja
                        - Key_Hangul_Jamo
                        - Key_Hangul_Romaja
                        - Key_Hangul_Jeonja
                        - Key_Hangul_Banja
                        - Key_Hangul_PreHanja
                        - Key_Hangul_PostHanja
                        - Key_Hangul_Special
                        - Key_Dead_Grave
                        - Key_Dead_Acute
                        - Key_Dead_Circumflex
                        - Key_Dead_Tilde
                        - Key_Dead_Macron
                        - Key_Dead_Breve
                        - Key_Dead_Abovedot
                        - Key_Dead_Diaeresis
                        - Key_Dead_Abovering
                        - Key_Dead_Doubleacute
                        - Key_Dead_Caron
                        - Key_Dead_Cedilla
                        - Key_Dead_Ogonek
                        - Key_Dead_Iota
                        - Key_Dead_Voiced_Sound
                        - Key_Dead_Semivoiced_Sound
                        - Key_Dead_Belowdot
                        - Key_Dead_Hook
                        - Key_Dead_Horn
                        - Key_Back
                        - Key_Forward
                        - Key_Stop
                        - Key_Refresh
                        - Key_VolumeDown
                        - Key_VolumeMute
                        - Key_VolumeUp
                        - Key_BassBoost
                        - Key_BassUp
                        - Key_BassDown
                        - Key_TrebleUp
                        - Key_TrebleDown
                        - Key_MediaPlay
                        - Key_MediaStop
                        - Key_MediaPrevious
                        - Key_MediaNext
                        - Key_MediaRecord
                        - Key_MediaPause
                        - Key_MediaTogglePlayPause
                        - Key_HomePage
                        - Key_Favorites
                        - Key_Search
                        - Key_Standby
                        - Key_OpenUrl
                        - Key_LaunchMail
                        - Key_LaunchMedia
                        - Key_Launch0
                        - Key_Launch1
                        - Key_Launch2
                        - Key_Launch3
                        - Key_Launch4
                        - Key_Launch5
                        - Key_Launch6
                        - Key_Launch7
                        - Key_Launch8
                        - Key_Launch9
                        - Key_LaunchA
                        - Key_LaunchB
                        - Key_LaunchC
                        - Key_LaunchD
                        - Key_LaunchE
                        - Key_LaunchF
                        - Key_MonBrightnessUp
                        - Key_MonBrightnessDown
                        - Key_KeyboardLightOnOff
                        - Key_KeyboardBrightnessUp
                        - Key_KeyboardBrightnessDown
                        - Key_PowerOff
                        - Key_WakeUp
                        - Key_Eject
                        - Key_ScreenSaver
                        - Key_WWW
                        - Key_Memo
                        - Key_LightBulb
                        - Key_Shop
                        - Key_History
                        - Key_AddFavorite
                        - Key_HotLinks
                        - Key_BrightnessAdjust
                        - Key_Finance
                        - Key_Community
                        - Key_AudioRewind
                        - Key_BackForward
                        - Key_ApplicationLeft
                        - Key_ApplicationRight
                        - Key_Book
                        - Key_CD
                        - Key_Calculator
                        - Key_ToDoList
                        - Key_ClearGrab
                        - Key_Close
                        - Key_Copy
                        - Key_Cut
                        - Key_Display
                        - Key_DOS
                        - Key_Documents
                        - Key_Excel
                        - Key_Explorer
                        - Key_Game
                        - Key_Go
                        - Key_iTouch
                        - Key_LogOff
                        - Key_Market
                        - Key_Meeting
                        - Key_MenuKB
                        - Key_MenuPB
                        - Key_MySites
                        - Key_News
                        - Key_OfficeHome
                        - Key_Option
                        - Key_Paste
                        - Key_Phone
                        - Key_Calendar
                        - Key_Reply
                        - Key_Reload
                        - Key_RotateWindows
                        - Key_RotationPB
                        - Key_RotationKB
                        - Key_Save
                        - Key_Send
                        - Key_Spell
                        - Key_SplitScreen
                        - Key_Support
                        - Key_TaskPane
                        - Key_Terminal
                        - Key_Tools
                        - Key_Travel
                        - Key_Video
                        - Key_Word
                        - Key_Xfer
                        - Key_ZoomIn
                        - Key_ZoomOut
                        - Key_Away
                        - Key_Messenger
                        - Key_WebCam
                        - Key_MailForward
                        - Key_Pictures
                        - Key_Music
                        - Key_Battery
                        - Key_Bluetooth
                        - Key_WLAN
                        - Key_UWB
                        - Key_AudioForward
                        - Key_AudioRepeat
                        - Key_AudioRandomPlay
                        - Key_Subtitle
                        - Key_AudioCycleTrack
                        - Key_Time
                        - Key_Hibernate
                        - Key_View
                        - Key_TopMenu
                        - Key_PowerDown
                        - Key_Suspend
                        - Key_ContrastAdjust
                        - Key_LaunchG
                        - Key_LaunchH
                        - Key_TouchpadToggle
                        - Key_TouchpadOn
                        - Key_TouchpadOff
                        - Key_MicMute
                        - Key_Red
                        - Key_Green
                        - Key_Yellow
                        - Key_Blue
                        - Key_ChannelUp
                        - Key_ChannelDown
                        - Key_Guide
                        - Key_Info
                        - Key_Settings
                        - Key_MicVolumeUp
                        - Key_MicVolumeDown
                        - Key_New
                        - Key_Open
                        - Key_Find
                        - Key_Undo
                        - Key_Redo
                        - Key_MediaLast
                        - Key_Select
                        - Key_Yes
                        - Key_No
                        - Key_Cancel
                        - Key_Printer
                        - Key_Execute
                        - Key_Sleep
                        - Key_Play
                        - Key_Zoom
                        - Key_Exit
                        - Key_Context1
                        - Key_Context2
                        - Key_Context3
                        - Key_Context4
                        - Key_Call
                        - Key_Hangup
                        - Key_Flip
                        - Key_ToggleCallHangup
                        - Key_VoiceDial
                        - Key_LastNumberRedial
                        - Key_Camera
                        - Key_CameraFocus
                        - Key_unknown
                      toEnumClass: true
                  - enum:
                      name: ArrowType
                      enumerators:
                        - NoArrow
                        - UpArrow
                        - DownArrow
                        - LeftArrow
                        - RightArrow
                      toEnumClass: true
                  - enum:
                      name: PenStyle
                      enumerators:
                        - NoPen
                        - SolidLine
                        - DashLine
                        - DotLine
                        - DashDotLine
                        - DashDotDotLine
                        - CustomDashLine
                        - MPenStyle
                      toEnumClass: true
                  - enum:
                      name: PenCapStyle
                      enumerators:
                        - FlatCap
                        - SquareCap
                        - RoundCap
                        - MPenCapStyle
                      toEnumClass: true
                  - enum:
                      name: PenJoinStyle
                      enumerators:
                        - MiterJoin
                        - BevelJoin
                        - RoundJoin
                        - SvgMiterJoin
                        - MPenJoinStyle
                      toEnumClass: true
                  - enum:
                      name: BrushStyle
                      enumerators:
                        - NoBrush
                        - SolidPattern
                        - Dense1Pattern
                        - Dense2Pattern
                        - Dense3Pattern
                        - Dense4Pattern
                        - Dense5Pattern
                        - Dense6Pattern
                        - Dense7Pattern
                        - HorPattern
                        - VerPattern
                        - CrossPattern
                        - BDiagPattern
                        - FDiagPattern
                        - DiagCrossPattern
                        - LinearGradientPattern
                        - RadialGradientPattern
                        - ConicalGradientPattern
                        - TexturePattern
                      toEnumClass: true
                  - enum:
                      name: SizeMode
                      enumerators:
                        - AbsoluteSize
                        - RelativeSize
                      toEnumClass: true
                  - enum:
                      name: UIEffect
                      enumerators:
                        - UI_General
                        - UI_AnimateMenu
                        - UI_FadeMenu
                        - UI_AnimateCombo
                        - UI_AnimateTooltip
                        - UI_FadeTooltip
                        - UI_AnimateToolBox
                      toEnumClass: true
                  - enum:
                      name: CursorShape
                      enumerators:
                        - ArrowCursor
                        - UpArrowCursor
                        - CrossCursor
                        - WaitCursor
                        - IBeamCursor
                        - SizeVerCursor
                        - SizeHorCursor
                        - SizeBDiagCursor
                        - SizeFDiagCursor
                        - SizeAllCursor
                        - BlankCursor
                        - SplitVCursor
                        - SplitHCursor
                        - PointingHandCursor
                        - ForbiddenCursor
                        - WhatsThisCursor
                        - BusyCursor
                        - OpenHandCursor
                        - ClosedHandCursor
                        - DragCopyCursor
                        - DragMoveCursor
                        - DragLinkCursor
                        - LastCursor
                        - BitmapCursor
                        - CustomCursor
                      toEnumClass: true
                  - enum:
                      name: TextFormat
                      enumerators:
                        - PlainText
                        - RichText
                        - AutoText
                      toEnumClass: true
                  - enum:
                      name: AspectRatioMode
                      enumerators:
                        - IgnoreAspectRatio
                        - KeepAspectRatio
                        - KeepAspectRatioByExpanding
                      toEnumClass: true
                  - enum:
                      name: DockWidgetArea
                      enumerators:
                        - LeftDockWidgetArea
                        - RightDockWidgetArea
                        - TopDockWidgetArea
                        - BottomDockWidgetArea
                        - DockWidgetArea_Mask
                        - AllDockWidgetAreas
                        - NoDockWidgetArea
                      toEnumClass: true
                  - enum:
                      name: DockWidgetAreaSizes
                      enumerators:
                        - NDockWidgetAreas
                      toEnumClass: true
                  - enum:
                      name: ToolBarArea
                      enumerators:
                        - LeftToolBarArea
                        - RightToolBarArea
                        - TopToolBarArea
                        - BottomToolBarArea
                        - ToolBarArea_Mask
                        - AllToolBarAreas
                        - NoToolBarArea
                      toEnumClass: true
                  - enum:
                      name: ToolBarAreaSizes
                      enumerators:
                        - NToolBarAreas
                      toEnumClass: true
                  - enum:
                      name: DateFormat
                      enumerators:
                        - TextDate
                        - ISODate
                        - SystemLocaleDate
                        - LocalDate
                        - LocaleDate
                        - SystemLocaleShortDate
                        - SystemLocaleLongDate
                        - DefaultLocaleShortDate
                        - DefaultLocaleLongDate
                        - RFC2822Date
                        - ISODateWithMs
                      toEnumClass: true
                  - enum:
                      name: TimeSpec
                      enumerators:
                        - LocalTime
                        - UTC
                        - OffsetFromUTC
                        - TimeZone
                      toEnumClass: true
                  - enum:
                      name: DayOfWeek
                      enumerators:
                        - Monday
                        - Tuesday
                        - Wednesday
                        - Thursday
                        - Friday
                        - Saturday
                        - Sunday
                      toEnumClass: true
                  - enum:
                      name: ScrollBarPolicy
                      enumerators:
                        - ScrollBarAsNeeded
                        - ScrollBarAlwaysOff
                        - ScrollBarAlwaysOn
                      toEnumClass: true
                  - enum:
                      name: CaseSensitivity
                      enumerators:
                        - CaseInsensitive
                        - CaseSensitive
                      toEnumClass: true
                  - enum:
                      name: Corner
                      enumerators:
                        - TopLeftCorner
                        - TopRightCorner
                        - BottomLeftCorner
                        - BottomRightCorner
                      toEnumClass: true
                  - enum:
                      name: Edge
                      enumerators:
                        - TopEdge
                        - LeftEdge
                        - RightEdge
                        - BottomEdge
                      toEnumClass: true
                  - enum:
                      name: ConnectionType
                      enumerators:
                        - AutoConnection
                        - DirectConnection
                        - QueuedConnection
                        - BlockingQueuedConnection
                        - UniqueConnection
                      toEnumClass: true
                  - enum:
                      name: ShortcutContext
                      enumerators:
                        - WidgetShortcut
                        - WindowShortcut
                        - ApplicationShortcut
                        - WidgetWithChildrenShortcut
                      toEnumClass: true
                  - enum:
                      name: FillRule
                      enumerators:
                        - OddEvenFill
                        - WindingFill
                      toEnumClass: true
                  - enum:
                      name: MaskMode
                      enumerators:
                        - MaskInColor
                        - MaskOutColor
                      toEnumClass: true
                  - enum:
                      name: ClipOperation
                      enumerators:
                        - NoClip
                        - ReplaceClip
                        - IntersectClip
                      toEnumClass: true
                  - enum:
                      name: ItemSelectionMode
                      enumerators:
                        - ContainsItemShape
                        - IntersectsItemShape
                        - ContainsItemBoundingRect
                        - IntersectsItemBoundingRect
                      toEnumClass: true
                  - enum:
                      name: ItemSelectionOperation
                      enumerators:
                        - ReplaceSelection
                        - AddToSelection
                      toEnumClass: true
                  - enum:
                      name: TransformationMode
                      enumerators:
                        - FastTransformation
                        - SmoothTransformation
                      toEnumClass: true
                  - enum:
                      name: Axis
                      enumerators:
                        - XAxis
                        - YAxis
                        - ZAxis
                      toEnumClass: true
                  - enum:
                      name: FocusReason
                      enumerators:
                        - MouseFocusReason
                        - TabFocusReason
                        - BacktabFocusReason
                        - ActiveWindowFocusReason
                        - PopupFocusReason
                        - ShortcutFocusReason
                        - MenuBarFocusReason
                        - OtherFocusReason
                        - NoFocusReason
                      toEnumClass: true
                  - enum:
                      name: ContextMenuPolicy
                      enumerators:
                        - NoContextMenu
                        - DefaultContextMenu
                        - ActionsContextMenu
                        - CustomContextMenu
                        - PreventContextMenu
                      toEnumClass: true
                  - enum:
                      name: InputMethodQuery
                      enumerators:
                        - ImEnabled
                        - ImCursorRectangle
                        - ImMicroFocus
                        - ImFont
                        - ImCursorPosition
                        - ImSurroundingText
                        - ImCurrentSelection
                        - ImMaximumTextLength
                        - ImAnchorPosition
                        - ImHints
                        - ImPreferredLanguage
                        - ImAbsolutePosition
                        - ImTextBeforeCursor
                        - ImTextAfterCursor
                        - ImEnterKeyType
                        - ImAnchorRectangle
                        - ImInputItemClipRectangle
                        - ImPlatformData
                        - ImQueryInput
                        - ImQueryAll
                      toEnumClass: true
                  - enum:
                      name: InputMethodHint
                      enumerators:
                        - ImhNone
                        - ImhHiddenText
                        - ImhSensitiveData
                        - ImhNoAutoUppercase
                        - ImhPreferNumbers
                        - ImhPreferUppercase
                        - ImhPreferLowercase
                        - ImhNoPredictiveText
                        - ImhDate
                        - ImhTime
                        - ImhPreferLatin
                        - ImhMultiLine
                        - ImhDigitsOnly
                        - ImhFormattedNumbersOnly
                        - ImhUppercaseOnly
                        - ImhLowercaseOnly
                        - ImhDialableCharactersOnly
                        - ImhEmailCharactersOnly
                        - ImhUrlCharactersOnly
                        - ImhLatinOnly
                        - ImhExclusiveInputMask
                      toEnumClass: true
                  - enum:
                      name: EnterKeyType
                      enumerators:
                        - EnterKeyDefault
                        - EnterKeyReturn
                        - EnterKeyDone
                        - EnterKeyGo
                        - EnterKeySend
                        - EnterKeySearch
                        - EnterKeyNext
                        - EnterKeyPrevious
                      toEnumClass: true
                  - enum:
                      name: ToolButtonStyle
                      enumerators:
                        - ToolButtonIconOnly
                        - ToolButtonTextOnly
                        - ToolButtonTextBesideIcon
                        - ToolButtonTextUnderIcon
                        - ToolButtonFollowStyle
                      toEnumClass: true
                  - enum:
                      name: LayoutDirection
                      enumerators:
                        - LeftToRight
                        - RightToLeft
                        - LayoutDirectionAuto
                      toEnumClass: true
                  - enum:
                      name: AnchorPoint
                      enumerators:
                        - AnchorLeft
                        - AnchorHorizontalCenter
                        - AnchorRight
                        - AnchorTop
                        - AnchorVerticalCenter
                        - AnchorBottom
                      toEnumClass: true
                  - enum:
                      name: FindChildOption
                      enumerators:
                        - FindDirectChildrenOnly
                        - FindChildrenRecursively
                      toEnumClass: true
                  - enum:
                      name: DropAction
                      enumerators:
                        - CopyAction
                        - MoveAction
                        - LinkAction
                        - ActionMask
                        - TargetMoveAction
                        - IgnoreAction
                      toEnumClass: true
                  - enum:
                      name: CheckState
                      enumerators:
                        - Unchecked
                        - PartiallyChecked
                        - Checked
                      toEnumClass: true
                  - enum:
                      name: ItemDataRole
                      enumerators:
                        - DisplayRole
                        - DecorationRole
                        - EditRole
                        - ToolTipRole
                        - StatusTipRole
                        - WhatsThisRole
                        - FontRole
                        - TextAlignmentRole
                        - BackgroundColorRole
                        - BackgroundRole
                        - TextColorRole
                        - ForegroundRole
                        - CheckStateRole
                        - AccessibleTextRole
                        - AccessibleDescriptionRole
                        - SizeHintRole
                        - InitialSortOrderRole
                        - DisplayPropertyRole
                        - DecorationPropertyRole
                        - ToolTipPropertyRole
                        - StatusTipPropertyRole
                        - WhatsThisPropertyRole
                        - UserRole
                      toEnumClass: true
                  - enum:
                      name: ItemFlag
                      enumerators:
                        - NoItemFlags
                        - ItemIsSelectable
                        - ItemIsEditable
                        - ItemIsDragEnabled
                        - ItemIsDropEnabled
                        - ItemIsUserCheckable
                        - ItemIsEnabled
                        - ItemIsAutoTristate
                        - ItemIsTristate
                        - ItemNeverHasChildren
                        - ItemIsUserTristate
                      toEnumClass: true
                  - enum:
                      name: MatchFlag
                      enumerators:
                        - MatchExactly
                        - MatchContains
                        - MatchStartsWith
                        - MatchEndsWith
                        - MatchRegExp
                        - MatchWildcard
                        - MatchFixedString
                        - MatchCaseSensitive
                        - MatchWrap
                        - MatchRecursive
                      toEnumClass: true
                  - enum:
                      name: WindowModality
                      enumerators:
                        - NonModal
                        - WindowModal
                        - ApplicationModal
                      toEnumClass: true
                  - enum:
                      name: TextInteractionFlag
                      enumerators:
                        - NoTextInteraction
                        - TextSelectableByMouse
                        - TextSelectableByKeyboard
                        - LinksAccessibleByMouse
                        - LinksAccessibleByKeyboard
                        - TextEditable
                        - TextEditorInteraction
                        - TextBrowserInteraction
                      toEnumClass: true
                  - enum:
                      name: EventPriority
                      enumerators:
                        - HighEventPriority
                        - NormalEventPriority
                        - LowEventPriority
                      toEnumClass: true
                  - enum:
                      name: SizeHint
                      enumerators:
                        - MinimumSize
                        - PreferredSize
                        - MaximumSize
                        - MinimumDescent
                        - NSizeHints
                      toEnumClass: true
                  - enum:
                      name: WindowFrameSection
                      enumerators:
                        - NoSection
                        - LeftSection
                        - TopLeftSection
                        - TopSection
                        - TopRightSection
                        - RightSection
                        - BottomRightSection
                        - BottomSection
                        - BottomLeftSection
                        - TitleBarArea
                      toEnumClass: true
                  - enum:
                      name: Initialization
                      enumerators:
                        - Uninitialized
                      fromEnumClass: true
                      toEnumClass: true
                  - enum:
                      name: CoordinateSystem
                      enumerators:
                        - DeviceCoordinates
                        - LogicalCoordinates
                      toEnumClass: true
                  - enum:
                      name: TouchPointState
                      enumerators:
                        - TouchPointPressed
                        - TouchPointMoved
                        - TouchPointStationary
                        - TouchPointReleased
                      toEnumClass: true
                  - enum:
                      name: GestureState
                      enumerators:
                        - NoGesture
                        - GestureStarted
                        - GestureUpdated
                        - GestureFinished
                        - GestureCanceled
                      toEnumClass: true
                  - enum:
                      name: GestureType
                      enumerators:
                        - TapGesture
                        - TapAndHoldGesture
                        - PanGesture
                        - PinchGesture
                        - SwipeGesture
                        - CustomGesture
                        - LastGestureType
                      toEnumClass: true
                  - enum:
                      name: GestureFlag
                      enumerators:
                        - DontStartGestureOnChildren
                        - ReceivePartialGestures
                        - IgnoredGesturesPropagateToParent
                      toEnumClass: true
                  - enum:
                      name: NativeGestureType
                      enumerators:
                        - BeginNativeGesture
                        - EndNativeGesture
                        - PanNativeGesture
                        - ZoomNativeGesture
                        - SmartZoomNativeGesture
                        - RotateNativeGesture
                        - SwipeNativeGesture
                      toEnumClass: true
                  - enum:
                      name: NavigationMode
                      enumerators:
                        - NavigationModeNone
                        - NavigationModeKeypadTabOrder
                        - NavigationModeKeypadDirectional
                        - NavigationModeCursorAuto
                        - NavigationModeCursorForceVisible
                      toEnumClass: true
                  - enum:
                      name: CursorMoveStyle
                      enumerators:
                        - LogicalMoveStyle
                        - VisualMoveStyle
                      toEnumClass: true
                  - enum:
                      name: TimerType
                      enumerators:
                        - PreciseTimer
                        - CoarseTimer
                        - VeryCoarseTimer
                      toEnumClass: true
                  - enum:
                      name: ScrollPhase
                      enumerators:
                        - NoScrollPhase
                        - ScrollBegin
                        - ScrollUpdate
                        - ScrollEnd
                      toEnumClass: true
                  - enum:
                      name: MouseEventSource
                      enumerators:
                        - MouseEventNotSynthesized
                        - MouseEventSynthesizedBySystem
                        - MouseEventSynthesizedByQt
                        - MouseEventSynthesizedByApplication
                      toEnumClass: true
                  - enum:
                      name: MouseEventFlag
                      enumerators:
                        - MouseEventCreatedDoubleClick
                        - MouseEventFlagMask
                      toEnumClass: true
                  - enum:
                      name: ChecksumType
                      enumerators:
                        - ChecksumIso3309
                        - ChecksumItuV41
                      toEnumClass: true
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::ScrollBarPolicy]
                  - function: qt_getEnumName[r:const char *][p:Qt::ScrollBarPolicy]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::FocusPolicy]
                  - function: qt_getEnumName[r:const char *][p:Qt::FocusPolicy]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::ContextMenuPolicy]
                  - function: qt_getEnumName[r:const char *][p:Qt::ContextMenuPolicy]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::ArrowType]
                  - function: qt_getEnumName[r:const char *][p:Qt::ArrowType]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::ToolButtonStyle]
                  - function: qt_getEnumName[r:const char *][p:Qt::ToolButtonStyle]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::PenStyle]
                  - function: qt_getEnumName[r:const char *][p:Qt::PenStyle]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::PenCapStyle]
                  - function: qt_getEnumName[r:const char *][p:Qt::PenCapStyle]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::PenJoinStyle]
                  - function: qt_getEnumName[r:const char *][p:Qt::PenJoinStyle]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::BrushStyle]
                  - function: qt_getEnumName[r:const char *][p:Qt::BrushStyle]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::FillRule]
                  - function: qt_getEnumName[r:const char *][p:Qt::FillRule]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::MaskMode]
                  - function: qt_getEnumName[r:const char *][p:Qt::MaskMode]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::BGMode]
                  - function: qt_getEnumName[r:const char *][p:Qt::BGMode]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::ClipOperation]
                  - function: qt_getEnumName[r:const char *][p:Qt::ClipOperation]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::SizeMode]
                  - function: qt_getEnumName[r:const char *][p:Qt::SizeMode]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::Axis]
                  - function: qt_getEnumName[r:const char *][p:Qt::Axis]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::Corner]
                  - function: qt_getEnumName[r:const char *][p:Qt::Corner]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::Edge]
                  - function: qt_getEnumName[r:const char *][p:Qt::Edge]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::LayoutDirection]
                  - function: qt_getEnumName[r:const char *][p:Qt::LayoutDirection]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::SizeHint]
                  - function: qt_getEnumName[r:const char *][p:Qt::SizeHint]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::Orientation]
                  - function: qt_getEnumName[r:const char *][p:Qt::Orientation]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::DropAction]
                  - function: qt_getEnumName[r:const char *][p:Qt::DropAction]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::Alignment]
                  - function: qt_getEnumName[r:const char *][p:Qt::Alignment]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::TextFlag]
                  - function: qt_getEnumName[r:const char *][p:Qt::TextFlag]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::Orientations]
                  - function: qt_getEnumName[r:const char *][p:Qt::Orientations]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::DropActions]
                  - function: qt_getEnumName[r:const char *][p:Qt::DropActions]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::Edges]
                  - function: qt_getEnumName[r:const char *][p:Qt::Edges]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::DockWidgetAreas]
                  - function: qt_getEnumName[r:const char *][p:Qt::DockWidgetAreas]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::ToolBarAreas]
                  - function: qt_getEnumName[r:const char *][p:Qt::ToolBarAreas]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::DockWidgetArea]
                  - function: qt_getEnumName[r:const char *][p:Qt::DockWidgetArea]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::ToolBarArea]
                  - function: qt_getEnumName[r:const char *][p:Qt::ToolBarArea]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::TextFormat]
                  - function: qt_getEnumName[r:const char *][p:Qt::TextFormat]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::TextElideMode]
                  - function: qt_getEnumName[r:const char *][p:Qt::TextElideMode]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::DateFormat]
                  - function: qt_getEnumName[r:const char *][p:Qt::DateFormat]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::TimeSpec]
                  - function: qt_getEnumName[r:const char *][p:Qt::TimeSpec]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::DayOfWeek]
                  - function: qt_getEnumName[r:const char *][p:Qt::DayOfWeek]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::CursorShape]
                  - function: qt_getEnumName[r:const char *][p:Qt::CursorShape]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::GlobalColor]
                  - function: qt_getEnumName[r:const char *][p:Qt::GlobalColor]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::AspectRatioMode]
                  - function: qt_getEnumName[r:const char *][p:Qt::AspectRatioMode]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::TransformationMode]
                  - function: qt_getEnumName[r:const char *][p:Qt::TransformationMode]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::ImageConversionFlags]
                  - function: qt_getEnumName[r:const char *][p:Qt::ImageConversionFlags]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::Key]
                  - function: qt_getEnumName[r:const char *][p:Qt::Key]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::ShortcutContext]
                  - function: qt_getEnumName[r:const char *][p:Qt::ShortcutContext]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::TextInteractionFlag]
                  - function: qt_getEnumName[r:const char *][p:Qt::TextInteractionFlag]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::TextInteractionFlags]
                  - function: qt_getEnumName[r:const char *][p:Qt::TextInteractionFlags]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::ItemSelectionMode]
                  - function: qt_getEnumName[r:const char *][p:Qt::ItemSelectionMode]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::ItemSelectionOperation]
                  - function: qt_getEnumName[r:const char *][p:Qt::ItemSelectionOperation]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::ItemFlags]
                  - function: qt_getEnumName[r:const char *][p:Qt::ItemFlags]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::CheckState]
                  - function: qt_getEnumName[r:const char *][p:Qt::CheckState]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::ItemDataRole]
                  - function: qt_getEnumName[r:const char *][p:Qt::ItemDataRole]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::SortOrder]
                  - function: qt_getEnumName[r:const char *][p:Qt::SortOrder]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::CaseSensitivity]
                  - function: qt_getEnumName[r:const char *][p:Qt::CaseSensitivity]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::MatchFlags]
                  - function: qt_getEnumName[r:const char *][p:Qt::MatchFlags]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::KeyboardModifiers]
                  - function: qt_getEnumName[r:const char *][p:Qt::KeyboardModifiers]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::MouseButtons]
                  - function: qt_getEnumName[r:const char *][p:Qt::MouseButtons]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::WindowType]
                  - function: qt_getEnumName[r:const char *][p:Qt::WindowType]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::WindowState]
                  - function: qt_getEnumName[r:const char *][p:Qt::WindowState]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::WindowModality]
                  - function: qt_getEnumName[r:const char *][p:Qt::WindowModality]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::WidgetAttribute]
                  - function: qt_getEnumName[r:const char *][p:Qt::WidgetAttribute]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::ApplicationAttribute]
                  - function: qt_getEnumName[r:const char *][p:Qt::ApplicationAttribute]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::WindowFlags]
                  - function: qt_getEnumName[r:const char *][p:Qt::WindowFlags]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::WindowStates]
                  - function: qt_getEnumName[r:const char *][p:Qt::WindowStates]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::FocusReason]
                  - function: qt_getEnumName[r:const char *][p:Qt::FocusReason]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::InputMethodHint]
                  - function: qt_getEnumName[r:const char *][p:Qt::InputMethodHint]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::InputMethodQuery]
                  - function: qt_getEnumName[r:const char *][p:Qt::InputMethodQuery]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::InputMethodHints]
                  - function: qt_getEnumName[r:const char *][p:Qt::InputMethodHints]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::EnterKeyType]
                  - function: qt_getEnumName[r:const char *][p:Qt::EnterKeyType]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::InputMethodQueries]
                  - function: qt_getEnumName[r:const char *][p:Qt::InputMethodQueries]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::TouchPointStates]
                  - function: qt_getEnumName[r:const char *][p:Qt::TouchPointStates]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::ScreenOrientation]
                  - function: qt_getEnumName[r:const char *][p:Qt::ScreenOrientation]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::ScreenOrientations]
                  - function: qt_getEnumName[r:const char *][p:Qt::ScreenOrientations]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::ConnectionType]
                  - function: qt_getEnumName[r:const char *][p:Qt::ConnectionType]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::ApplicationState]
                  - function: qt_getEnumName[r:const char *][p:Qt::ApplicationState]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::GestureState]
                  - function: qt_getEnumName[r:const char *][p:Qt::GestureState]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::GestureType]
                  - function: qt_getEnumName[r:const char *][p:Qt::GestureType]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::NativeGestureType]
                  - function: qt_getEnumName[r:const char *][p:Qt::NativeGestureType]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::CursorMoveStyle]
                  - function: qt_getEnumName[r:const char *][p:Qt::CursorMoveStyle]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::TimerType]
                  - function: qt_getEnumName[r:const char *][p:Qt::TimerType]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::ScrollPhase]
                  - function: qt_getEnumName[r:const char *][p:Qt::ScrollPhase]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::MouseEventSource]
                  - function: qt_getEnumName[r:const char *][p:Qt::MouseEventSource]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::MouseEventFlag]
                  - function: qt_getEnumName[r:const char *][p:Qt::MouseEventFlag]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::ChecksumType]
                  - function: qt_getEnumName[r:const char *][p:Qt::ChecksumType]
                  - function: qt_getEnumMetaObject[r:const QMetaObject *][p:Qt::TabFocusBehavior]
                  - function: qt_getEnumName[r:const char *][p:Qt::TabFocusBehavior]
                rename: @
            - function: operator|[r:QFlags<Qt::MouseButtons::enum_type>][p:Qt::MouseButtons::enum_type;Qt::MouseButtons::enum_type]
            - function: operator|[r:QFlags<Qt::MouseButtons::enum_type>][p:Qt::MouseButtons::enum_type;QFlags<Qt::MouseButtons::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:Qt::MouseButtons::enum_type;int]
            - function: operator|[r:QFlags<Qt::Orientations::enum_type>][p:Qt::Orientations::enum_type;Qt::Orientations::enum_type]
            - function: operator|[r:QFlags<Qt::Orientations::enum_type>][p:Qt::Orientations::enum_type;QFlags<Qt::Orientations::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:Qt::Orientations::enum_type;int]
            - function: operator|[r:QFlags<Qt::KeyboardModifiers::enum_type>][p:Qt::KeyboardModifiers::enum_type;Qt::KeyboardModifiers::enum_type]
            - function: operator|[r:QFlags<Qt::KeyboardModifiers::enum_type>][p:Qt::KeyboardModifiers::enum_type;QFlags<Qt::KeyboardModifiers::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:Qt::KeyboardModifiers::enum_type;int]
            - function: operator|[r:QFlags<Qt::WindowFlags::enum_type>][p:Qt::WindowFlags::enum_type;Qt::WindowFlags::enum_type]
            - function: operator|[r:QFlags<Qt::WindowFlags::enum_type>][p:Qt::WindowFlags::enum_type;QFlags<Qt::WindowFlags::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:Qt::WindowFlags::enum_type;int]
            - function: operator|[r:QFlags<Qt::Alignment::enum_type>][p:Qt::Alignment::enum_type;Qt::Alignment::enum_type]
            - function: operator|[r:QFlags<Qt::Alignment::enum_type>][p:Qt::Alignment::enum_type;QFlags<Qt::Alignment::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:Qt::Alignment::enum_type;int]
            - function: operator|[r:QFlags<Qt::Edges::enum_type>][p:Qt::Edges::enum_type;Qt::Edges::enum_type]
            - function: operator|[r:QFlags<Qt::Edges::enum_type>][p:Qt::Edges::enum_type;QFlags<Qt::Edges::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:Qt::Edges::enum_type;int]
            - function: operator|[r:QFlags<Qt::ImageConversionFlags::enum_type>][p:Qt::ImageConversionFlags::enum_type;Qt::ImageConversionFlags::enum_type]
            - function: operator|[r:QFlags<Qt::ImageConversionFlags::enum_type>][p:Qt::ImageConversionFlags::enum_type;QFlags<Qt::ImageConversionFlags::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:Qt::ImageConversionFlags::enum_type;int]
            - function: operator|[r:QFlags<Qt::DockWidgetAreas::enum_type>][p:Qt::DockWidgetAreas::enum_type;Qt::DockWidgetAreas::enum_type]
            - function: operator|[r:QFlags<Qt::DockWidgetAreas::enum_type>][p:Qt::DockWidgetAreas::enum_type;QFlags<Qt::DockWidgetAreas::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:Qt::DockWidgetAreas::enum_type;int]
            - function: operator|[r:QFlags<Qt::ToolBarAreas::enum_type>][p:Qt::ToolBarAreas::enum_type;Qt::ToolBarAreas::enum_type]
            - function: operator|[r:QFlags<Qt::ToolBarAreas::enum_type>][p:Qt::ToolBarAreas::enum_type;QFlags<Qt::ToolBarAreas::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:Qt::ToolBarAreas::enum_type;int]
            - function: operator|[r:QFlags<Qt::WindowStates::enum_type>][p:Qt::WindowStates::enum_type;Qt::WindowStates::enum_type]
            - function: operator|[r:QFlags<Qt::WindowStates::enum_type>][p:Qt::WindowStates::enum_type;QFlags<Qt::WindowStates::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:Qt::WindowStates::enum_type;int]
            - function: operator|[r:QFlags<Qt::ScreenOrientations::enum_type>][p:Qt::ScreenOrientations::enum_type;Qt::ScreenOrientations::enum_type]
            - function: operator|[r:QFlags<Qt::ScreenOrientations::enum_type>][p:Qt::ScreenOrientations::enum_type;QFlags<Qt::ScreenOrientations::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:Qt::ScreenOrientations::enum_type;int]
            - function: operator|[r:QFlags<Qt::DropActions::enum_type>][p:Qt::DropActions::enum_type;Qt::DropActions::enum_type]
            - function: operator|[r:QFlags<Qt::DropActions::enum_type>][p:Qt::DropActions::enum_type;QFlags<Qt::DropActions::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:Qt::DropActions::enum_type;int]
            - function: operator|[r:QFlags<Qt::ItemFlags::enum_type>][p:Qt::ItemFlags::enum_type;Qt::ItemFlags::enum_type]
            - function: operator|[r:QFlags<Qt::ItemFlags::enum_type>][p:Qt::ItemFlags::enum_type;QFlags<Qt::ItemFlags::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:Qt::ItemFlags::enum_type;int]
            - function: operator|[r:QFlags<Qt::MatchFlags::enum_type>][p:Qt::MatchFlags::enum_type;Qt::MatchFlags::enum_type]
            - function: operator|[r:QFlags<Qt::MatchFlags::enum_type>][p:Qt::MatchFlags::enum_type;QFlags<Qt::MatchFlags::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:Qt::MatchFlags::enum_type;int]
            - function: operator|[r:QFlags<Qt::TextInteractionFlags::enum_type>][p:Qt::TextInteractionFlags::enum_type;Qt::TextInteractionFlags::enum_type]
            - function: operator|[r:QFlags<Qt::TextInteractionFlags::enum_type>][p:Qt::TextInteractionFlags::enum_type;QFlags<Qt::TextInteractionFlags::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:Qt::TextInteractionFlags::enum_type;int]
            - function: operator|[r:QFlags<Qt::InputMethodQueries::enum_type>][p:Qt::InputMethodQueries::enum_type;Qt::InputMethodQueries::enum_type]
            - function: operator|[r:QFlags<Qt::InputMethodQueries::enum_type>][p:Qt::InputMethodQueries::enum_type;QFlags<Qt::InputMethodQueries::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:Qt::InputMethodQueries::enum_type;int]
            - function: operator|[r:QFlags<Qt::InputMethodHints::enum_type>][p:Qt::InputMethodHints::enum_type;Qt::InputMethodHints::enum_type]
            - function: operator|[r:QFlags<Qt::InputMethodHints::enum_type>][p:Qt::InputMethodHints::enum_type;QFlags<Qt::InputMethodHints::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:Qt::InputMethodHints::enum_type;int]
            - function: operator|[r:QFlags<Qt::TouchPointStates::enum_type>][p:Qt::TouchPointStates::enum_type;Qt::TouchPointStates::enum_type]
            - function: operator|[r:QFlags<Qt::TouchPointStates::enum_type>][p:Qt::TouchPointStates::enum_type;QFlags<Qt::TouchPointStates::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:Qt::TouchPointStates::enum_type;int]
            - function: operator|[r:QFlags<Qt::MouseEventFlags::enum_type>][p:Qt::MouseEventFlags::enum_type;Qt::MouseEventFlags::enum_type]
            - function: operator|[r:QFlags<Qt::MouseEventFlags::enum_type>][p:Qt::MouseEventFlags::enum_type;QFlags<Qt::MouseEventFlags::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:Qt::MouseEventFlags::enum_type;int]
            - function: operator|[r:QFlags<Qt::GestureFlags::enum_type>][p:Qt::GestureFlags::enum_type;Qt::GestureFlags::enum_type]
            - function: operator|[r:QFlags<Qt::GestureFlags::enum_type>][p:Qt::GestureFlags::enum_type;QFlags<Qt::GestureFlags::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:Qt::GestureFlags::enum_type;int]
          hincludes: <Qt>
      - file:
          name: point
          elements:
            - class:
                name: QPoint
                elements:
                  - constructor: QPoint
                  - constructor: QPoint[p:int;int]
                  - destructor: ~QPoint
                  - function: isNull[r:bool][specs:const]
                  - function: x[r:int][specs:const]
                  - function: y[r:int][specs:const]
                  - function: setX[r:void][p:int]
                  - function: setY[r:void][p:int]
                  - function: manhattanLength[r:int][specs:const]
                  - function: rx[r:int &][binding:reference]
                  - function: ry[r:int &][binding:reference]
                  - function: operator+=[r:QPoint &][p:const QPoint &]
                  - function: operator-=[r:QPoint &][p:const QPoint &]
                  - function: operator*=[r:QPoint &][p:float]
                  - function: operator*=[r:QPoint &][p:double]
                  - function: operator*=[r:QPoint &][p:int]
                  - function: operator/=[r:QPoint &][p:qreal]
                  - function: dotProduct[r:int][p:const QPoint &;const QPoint &][specs:static]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QPoint &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QPoint &]
            - function: operator==[r:bool][p:const QPoint &;const QPoint &]
            - function: operator!=[r:bool][p:const QPoint &;const QPoint &]
            - function: operator+[r:const QPoint][p:const QPoint &;const QPoint &]
            - function: operator-[r:const QPoint][p:const QPoint &;const QPoint &]
            - function: operator*[r:const QPoint][p:const QPoint &;float]
            - function: operator*[r:const QPoint][p:const QPoint &;double]
            - function: operator*[r:const QPoint][p:const QPoint &;int]
            - function: operator*[r:const QPoint][p:float;const QPoint &]
            - function: operator*[r:const QPoint][p:double;const QPoint &]
            - function: operator*[r:const QPoint][p:int;const QPoint &]
            - function: operator+[r:const QPoint][p:const QPoint &]
            - function: operator-[r:const QPoint][p:const QPoint &]
            - function: operator/[r:const QPoint][p:const QPoint &;qreal]
            - function: operator<<[r:QDebug][p:QDebug;const QPoint &]
            - class:
                name: QPointF
                elements:
                  - constructor: QPointF
                  - constructor: QPointF[p:const QPoint &]
                  - constructor: QPointF[p:qreal;qreal]
                  - destructor: ~QPointF
                  - function: manhattanLength[r:qreal][specs:const]
                  - function: isNull[r:bool][specs:const]
                  - function: x[r:qreal][specs:const]
                  - function: y[r:qreal][specs:const]
                  - function: setX[r:void][p:qreal]
                  - function: setY[r:void][p:qreal]
                  - function: rx[r:qreal &][binding:reference]
                  - function: ry[r:qreal &][binding:reference]
                  - function: operator+=[r:QPointF &][p:const QPointF &]
                  - function: operator-=[r:QPointF &][p:const QPointF &]
                  - function: operator*=[r:QPointF &][p:qreal]
                  - function: operator/=[r:QPointF &][p:qreal]
                  - function: dotProduct[r:qreal][p:const QPointF &;const QPointF &][specs:static]
                  - function: toPoint[r:QPoint][specs:const]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QPointF &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QPointF &]
            - function: operator==[r:bool][p:const QPointF &;const QPointF &]
            - function: operator!=[r:bool][p:const QPointF &;const QPointF &]
            - function: operator+[r:const QPointF][p:const QPointF &;const QPointF &]
            - function: operator-[r:const QPointF][p:const QPointF &;const QPointF &]
            - function: operator*[r:const QPointF][p:const QPointF &;qreal]
            - function: operator*[r:const QPointF][p:qreal;const QPointF &]
            - function: operator+[r:const QPointF][p:const QPointF &]
            - function: operator-[r:const QPointF][p:const QPointF &]
            - function: operator/[r:const QPointF][p:const QPointF &;qreal]
            - function: operator<<[r:QDebug][p:QDebug;const QPointF &]
          hincludes: <QPoint>
      - file:
          name: size
          elements:
            - class:
                name: QSize
                elements:
                  - constructor: QSize
                  - constructor: QSize[p:const QSize &]
                  - destructor: ~QSize
                  - constructor: QSize[p:int;int]
                  - function: isNull[r:bool][specs:const]
                  - function: isEmpty[r:bool][specs:const]
                  - function: isValid[r:bool][specs:const]
                  - function: width[r:int][specs:const]
                  - function: height[r:int][specs:const]
                  - function: setWidth[r:void][p:int]
                  - function: setHeight[r:void][p:int]
                  - function: transpose[r:void]
                  - function: transposed[r:QSize][specs:const]
                  - function: scale[r:void][p:int;int;Qt::AspectRatioMode]
                  - function: scale[r:void][p:const QSize &;Qt::AspectRatioMode]
                  - function: scaled[r:QSize][p:int;int;Qt::AspectRatioMode][specs:const]
                  - function: scaled[r:QSize][p:const QSize &;Qt::AspectRatioMode][specs:const]
                  - function: expandedTo[r:QSize][p:const QSize &][specs:const]
                  - function: boundedTo[r:QSize][p:const QSize &][specs:const]
                  - function: rwidth[r:int &][binding:reference]
                  - function: rheight[r:int &][binding:reference]
                  - function: operator+=[r:QSize &][p:const QSize &]
                  - function: operator-=[r:QSize &][p:const QSize &]
                  - function: operator*=[r:QSize &][p:qreal]
                  - function: operator/=[r:QSize &][p:qreal]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QSize &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QSize &]
            - function: operator==[r:bool][p:const QSize &;const QSize &]
            - function: operator!=[r:bool][p:const QSize &;const QSize &]
            - function: operator+[r:const QSize][p:const QSize &;const QSize &]
            - function: operator-[r:const QSize][p:const QSize &;const QSize &]
            - function: operator*[r:const QSize][p:const QSize &;qreal]
            - function: operator*[r:const QSize][p:qreal;const QSize &]
            - function: operator/[r:const QSize][p:const QSize &;qreal]
            - function: operator<<[r:QDebug][p:QDebug;const QSize &]
            - class:
                name: QSizeF
                elements:
                  - constructor: QSizeF
                  - constructor: QSizeF[p:const QSizeF &]
                  - constructor: QSizeF[p:const QSize &]
                  - constructor: QSizeF[p:qreal;qreal]
                  - destructor: ~QSizeF
                  - function: isNull[r:bool][specs:const]
                  - function: isEmpty[r:bool][specs:const]
                  - function: isValid[r:bool][specs:const]
                  - function: width[r:qreal][specs:const]
                  - function: height[r:qreal][specs:const]
                  - function: setWidth[r:void][p:qreal]
                  - function: setHeight[r:void][p:qreal]
                  - function: transpose[r:void]
                  - function: transposed[r:QSizeF][specs:const]
                  - function: scale[r:void][p:qreal;qreal;Qt::AspectRatioMode]
                  - function: scale[r:void][p:const QSizeF &;Qt::AspectRatioMode]
                  - function: scaled[r:QSizeF][p:qreal;qreal;Qt::AspectRatioMode][specs:const]
                  - function: scaled[r:QSizeF][p:const QSizeF &;Qt::AspectRatioMode][specs:const]
                  - function: expandedTo[r:QSizeF][p:const QSizeF &][specs:const]
                  - function: boundedTo[r:QSizeF][p:const QSizeF &][specs:const]
                  - function: rwidth[r:qreal &][binding:reference]
                  - function: rheight[r:qreal &][binding:reference]
                  - function: operator+=[r:QSizeF &][p:const QSizeF &]
                  - function: operator-=[r:QSizeF &][p:const QSizeF &]
                  - function: operator*=[r:QSizeF &][p:qreal]
                  - function: operator/=[r:QSizeF &][p:qreal]
                  - function: toSize[r:QSize][specs:const]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QSizeF &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QSizeF &]
            - function: operator==[r:bool][p:const QSizeF &;const QSizeF &]
            - function: operator!=[r:bool][p:const QSizeF &;const QSizeF &]
            - function: operator+[r:const QSizeF][p:const QSizeF &;const QSizeF &]
            - function: operator-[r:const QSizeF][p:const QSizeF &;const QSizeF &]
            - function: operator*[r:const QSizeF][p:const QSizeF &;qreal]
            - function: operator*[r:const QSizeF][p:qreal;const QSizeF &]
            - function: operator/[r:const QSizeF][p:const QSizeF &;qreal]
            - function: operator<<[r:QDebug][p:QDebug;const QSizeF &]
          hincludes: <QSize>
      - file:
          name: rect
          elements:
            - class:
                name: QRect
                elements:
                  - constructor: QRect
                  - constructor: QRect[p:const QRect &]
                  - destructor: ~QRect
                  - constructor: QRect[p:const QPoint &;const QPoint &]
                  - constructor: QRect[p:const QPoint &;const QSize &]
                  - constructor: QRect[p:int;int;int;int]
                  - function: isNull[r:bool][specs:const]
                  - function: isEmpty[r:bool][specs:const]
                  - function: isValid[r:bool][specs:const]
                  - function: left[r:int][specs:const]
                  - function: top[r:int][specs:const]
                  - function: right[r:int][specs:const]
                  - function: bottom[r:int][specs:const]
                  - function: normalized[r:QRect][specs:const]
                  - function: x[r:int][specs:const]
                  - function: y[r:int][specs:const]
                  - function: setLeft[r:void][p:int]
                  - function: setTop[r:void][p:int]
                  - function: setRight[r:void][p:int]
                  - function: setBottom[r:void][p:int]
                  - function: setX[r:void][p:int]
                  - function: setY[r:void][p:int]
                  - function: setTopLeft[r:void][p:const QPoint &]
                  - function: setBottomRight[r:void][p:const QPoint &]
                  - function: setTopRight[r:void][p:const QPoint &]
                  - function: setBottomLeft[r:void][p:const QPoint &]
                  - function: topLeft[r:QPoint][specs:const]
                  - function: bottomRight[r:QPoint][specs:const]
                  - function: topRight[r:QPoint][specs:const]
                  - function: bottomLeft[r:QPoint][specs:const]
                  - function: center[r:QPoint][specs:const]
                  - function: moveLeft[r:void][p:int]
                  - function: moveTop[r:void][p:int]
                  - function: moveRight[r:void][p:int]
                  - function: moveBottom[r:void][p:int]
                  - function: moveTopLeft[r:void][p:const QPoint &]
                  - function: moveBottomRight[r:void][p:const QPoint &]
                  - function: moveTopRight[r:void][p:const QPoint &]
                  - function: moveBottomLeft[r:void][p:const QPoint &]
                  - function: moveCenter[r:void][p:const QPoint &]
                  - function: translate[r:void][p:int;int]
                  - function: translate[r:void][p:const QPoint &]
                  - function: translated[r:QRect][p:int;int][specs:const]
                  - function: translated[r:QRect][p:const QPoint &][specs:const]
                  - function: transposed[r:QRect][specs:const]
                  - function: moveTo[r:void][p:int;int]
                  - function: moveTo[r:void][p:const QPoint &]
                  - function: setRect[r:void][p:int;int;int;int]
                  - function: getRect[r:void][p:int *;int *;int *;int *][specs:const]
                  - function: setCoords[r:void][p:int;int;int;int]
                  - function: getCoords[r:void][p:int *;int *;int *;int *][specs:const]
                  - function: adjust[r:void][p:int;int;int;int]
                  - function: adjusted[r:QRect][p:int;int;int;int][specs:const]
                  - function: size[r:QSize][specs:const]
                  - function: width[r:int][specs:const]
                  - function: height[r:int][specs:const]
                  - function: setWidth[r:void][p:int]
                  - function: setHeight[r:void][p:int]
                  - function: setSize[r:void][p:const QSize &]
                  - function: operator|[r:QRect][p:const QRect &][specs:const]
                  - function: operator&[r:QRect][p:const QRect &][specs:const]
                  - function: operator|=[r:QRect &][p:const QRect &]
                  - function: operator&=[r:QRect &][p:const QRect &]
                  - function: contains[r:bool][p:const QRect &;bool][specs:const]
                  - function: contains[r:bool][p:const QPoint &;bool][specs:const]
                  - function: contains[r:bool][p:int;int][specs:const]
                  - function: contains[r:bool][p:int;int;bool][specs:const]
                  - function: united[r:QRect][p:const QRect &][specs:const]
                  - function: intersected[r:QRect][p:const QRect &][specs:const]
                  - function: intersects[r:bool][p:const QRect &][specs:const]
                  - function: marginsAdded[r:QRect][p:const QMargins &][specs:const]
                  - function: marginsRemoved[r:QRect][p:const QMargins &][specs:const]
                  - function: operator+=[r:QRect &][p:const QMargins &]
                  - function: operator-=[r:QRect &][p:const QMargins &]
            - function: operator==[r:bool][p:const QRect &;const QRect &]
            - function: operator!=[r:bool][p:const QRect &;const QRect &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QRect &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QRect &]
            - function: operator==[r:bool][p:const QRect &;const QRect &]
            - function: operator!=[r:bool][p:const QRect &;const QRect &]
            - function: operator+[r:QRect][p:const QRect &;const QMargins &]
            - function: operator+[r:QRect][p:const QMargins &;const QRect &]
            - function: operator-[r:QRect][p:const QRect &;const QMargins &]
            - function: operator<<[r:QDebug][p:QDebug;const QRect &]
            - class:
                name: QRectF
                elements:
                  - constructor: QRectF
                  - constructor: QRectF[p:const QRectF &]
                  - destructor: ~QRectF
                  - constructor: QRectF[p:const QPointF &;const QSizeF &]
                  - constructor: QRectF[p:const QPointF &;const QPointF &]
                  - constructor: QRectF[p:qreal;qreal;qreal;qreal]
                  - constructor: QRectF[p:const QRect &]
                  - function: isNull[r:bool][specs:const]
                  - function: isEmpty[r:bool][specs:const]
                  - function: isValid[r:bool][specs:const]
                  - function: normalized[r:QRectF][specs:const]
                  - function: left[r:qreal][specs:const]
                  - function: top[r:qreal][specs:const]
                  - function: right[r:qreal][specs:const]
                  - function: bottom[r:qreal][specs:const]
                  - function: x[r:qreal][specs:const]
                  - function: y[r:qreal][specs:const]
                  - function: setLeft[r:void][p:qreal]
                  - function: setTop[r:void][p:qreal]
                  - function: setRight[r:void][p:qreal]
                  - function: setBottom[r:void][p:qreal]
                  - function: setX[r:void][p:qreal]
                  - function: setY[r:void][p:qreal]
                  - function: topLeft[r:QPointF][specs:const]
                  - function: bottomRight[r:QPointF][specs:const]
                  - function: topRight[r:QPointF][specs:const]
                  - function: bottomLeft[r:QPointF][specs:const]
                  - function: center[r:QPointF][specs:const]
                  - function: setTopLeft[r:void][p:const QPointF &]
                  - function: setBottomRight[r:void][p:const QPointF &]
                  - function: setTopRight[r:void][p:const QPointF &]
                  - function: setBottomLeft[r:void][p:const QPointF &]
                  - function: moveLeft[r:void][p:qreal]
                  - function: moveTop[r:void][p:qreal]
                  - function: moveRight[r:void][p:qreal]
                  - function: moveBottom[r:void][p:qreal]
                  - function: moveTopLeft[r:void][p:const QPointF &]
                  - function: moveBottomRight[r:void][p:const QPointF &]
                  - function: moveTopRight[r:void][p:const QPointF &]
                  - function: moveBottomLeft[r:void][p:const QPointF &]
                  - function: moveCenter[r:void][p:const QPointF &]
                  - function: translate[r:void][p:qreal;qreal]
                  - function: translate[r:void][p:const QPointF &]
                  - function: translated[r:QRectF][p:qreal;qreal][specs:const]
                  - function: translated[r:QRectF][p:const QPointF &][specs:const]
                  - function: transposed[r:QRectF][specs:const]
                  - function: moveTo[r:void][p:qreal;qreal]
                  - function: moveTo[r:void][p:const QPointF &]
                  - function: setRect[r:void][p:qreal;qreal;qreal;qreal]
                  - function: getRect[r:void][p:qreal *;qreal *;qreal *;qreal *][specs:const]
                  - function: setCoords[r:void][p:qreal;qreal;qreal;qreal]
                  - function: getCoords[r:void][p:qreal *;qreal *;qreal *;qreal *][specs:const]
                  - function: adjust[r:void][p:qreal;qreal;qreal;qreal]
                  - function: adjusted[r:QRectF][p:qreal;qreal;qreal;qreal][specs:const]
                  - function: size[r:QSizeF][specs:const]
                  - function: width[r:qreal][specs:const]
                  - function: height[r:qreal][specs:const]
                  - function: setWidth[r:void][p:qreal]
                  - function: setHeight[r:void][p:qreal]
                  - function: setSize[r:void][p:const QSizeF &]
                  - function: operator|[r:QRectF][p:const QRectF &][specs:const]
                  - function: operator&[r:QRectF][p:const QRectF &][specs:const]
                  - function: operator|=[r:QRectF &][p:const QRectF &]
                  - function: operator&=[r:QRectF &][p:const QRectF &]
                  - function: contains[r:bool][p:const QRectF &][specs:const]
                  - function: contains[r:bool][p:const QPointF &][specs:const]
                  - function: contains[r:bool][p:qreal;qreal][specs:const]
                  - function: united[r:QRectF][p:const QRectF &][specs:const]
                  - function: intersected[r:QRectF][p:const QRectF &][specs:const]
                  - function: intersects[r:bool][p:const QRectF &][specs:const]
                  - function: marginsAdded[r:QRectF][p:const QMarginsF &][specs:const]
                  - function: marginsRemoved[r:QRectF][p:const QMarginsF &][specs:const]
                  - function: operator+=[r:QRectF &][p:const QMarginsF &]
                  - function: operator-=[r:QRectF &][p:const QMarginsF &]
                  - function: toRect[r:QRect][specs:const]
                  - function: toAlignedRect[r:QRect][specs:const]
            - function: operator==[r:bool][p:const QRectF &;const QRectF &]
            - function: operator!=[r:bool][p:const QRectF &;const QRectF &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QRectF &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QRectF &]
            - function: operator==[r:bool][p:const QRectF &;const QRectF &]
            - function: operator!=[r:bool][p:const QRectF &;const QRectF &]
            - function: operator+[r:QRectF][p:const QRectF &;const QMarginsF &]
            - function: operator+[r:QRectF][p:const QMarginsF &;const QRectF &]
            - function: operator-[r:QRectF][p:const QRectF &;const QMarginsF &]
            - function: operator<<[r:QDebug][p:QDebug;const QRectF &]
          hincludes: <QRect>
      - file:
          name: margins
          elements:
            - class:
                name: QMargins
                elements:
                  - constructor: QMargins
                  - constructor: QMargins[p:const QMargins &]
                  - destructor: ~QMargins
                  - constructor: QMargins[p:int;int;int;int]
                  - function: isNull[r:bool][specs:const]
                  - function: left[r:int][specs:const]
                  - function: top[r:int][specs:const]
                  - function: right[r:int][specs:const]
                  - function: bottom[r:int][specs:const]
                  - function: setLeft[r:void][p:int]
                  - function: setTop[r:void][p:int]
                  - function: setRight[r:void][p:int]
                  - function: setBottom[r:void][p:int]
                  - function: operator+=[r:QMargins &][p:const QMargins &]
                  - function: operator-=[r:QMargins &][p:const QMargins &]
                  - function: operator+=[r:QMargins &][p:int]
                  - function: operator-=[r:QMargins &][p:int]
                  - function: operator*=[r:QMargins &][p:int]
                  - function: operator/=[r:QMargins &][p:int]
                  - function: operator*=[r:QMargins &][p:qreal]
                  - function: operator/=[r:QMargins &][p:qreal]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QMargins &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QMargins &]
            - function: operator==[r:bool][p:const QMargins &;const QMargins &]
            - function: operator!=[r:bool][p:const QMargins &;const QMargins &]
            - function: operator+[r:QMargins][p:const QMargins &;const QMargins &]
            - function: operator-[r:QMargins][p:const QMargins &;const QMargins &]
            - function: operator+[r:QMargins][p:const QMargins &;int]
            - function: operator+[r:QMargins][p:int;const QMargins &]
            - function: operator-[r:QMargins][p:const QMargins &;int]
            - function: operator*[r:QMargins][p:const QMargins &;int]
            - function: operator*[r:QMargins][p:int;const QMargins &]
            - function: operator*[r:QMargins][p:const QMargins &;qreal]
            - function: operator*[r:QMargins][p:qreal;const QMargins &]
            - function: operator/[r:QMargins][p:const QMargins &;int]
            - function: operator/[r:QMargins][p:const QMargins &;qreal]
            - function: operator+[r:QMargins][p:const QMargins &]
            - function: operator-[r:QMargins][p:const QMargins &]
            - function: operator<<[r:QDebug][p:QDebug;const QMargins &]
            - class:
                name: QMarginsF
                elements:
                  - constructor: QMarginsF
                  - constructor: QMargins[p:const QMargins &]
                  - destructor: ~QMarginsF
                  - constructor: QMarginsF[p:qreal;qreal;qreal;qreal]
                  - constructor: QMarginsF[p:const QMargins &]
                  - function: isNull[r:bool][specs:const]
                  - function: left[r:qreal][specs:const]
                  - function: top[r:qreal][specs:const]
                  - function: right[r:qreal][specs:const]
                  - function: bottom[r:qreal][specs:const]
                  - function: setLeft[r:void][p:qreal]
                  - function: setTop[r:void][p:qreal]
                  - function: setRight[r:void][p:qreal]
                  - function: setBottom[r:void][p:qreal]
                  - function: operator+=[r:QMarginsF &][p:const QMarginsF &]
                  - function: operator-=[r:QMarginsF &][p:const QMarginsF &]
                  - function: operator+=[r:QMarginsF &][p:qreal]
                  - function: operator-=[r:QMarginsF &][p:qreal]
                  - function: operator*=[r:QMarginsF &][p:qreal]
                  - function: operator/=[r:QMarginsF &][p:qreal]
                  - function: toMargins[r:QMargins][specs:const]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QMarginsF &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QMarginsF &]
            - function: operator==[r:bool][p:const QMarginsF &;const QMarginsF &]
            - function: operator!=[r:bool][p:const QMarginsF &;const QMarginsF &]
            - function: operator+[r:QMarginsF][p:const QMarginsF &;const QMarginsF &]
            - function: operator-[r:QMarginsF][p:const QMarginsF &;const QMarginsF &]
            - function: operator+[r:QMarginsF][p:const QMarginsF &;qreal]
            - function: operator+[r:QMarginsF][p:qreal;const QMarginsF &]
            - function: operator-[r:QMarginsF][p:const QMarginsF &;qreal]
            - function: operator*[r:QMarginsF][p:const QMarginsF &;qreal]
            - function: operator*[r:QMarginsF][p:qreal;const QMarginsF &]
            - function: operator/[r:QMarginsF][p:const QMarginsF &;qreal]
            - function: operator+[r:QMarginsF][p:const QMarginsF &]
            - function: operator-[r:QMarginsF][p:const QMarginsF &]
            - function: operator<<[r:QDebug][p:QDebug;const QMarginsF &]
          hincludes: <QMargins>
      - file:
          name: datetime
          elements:
            - class:
                name: QDate
                elements:
                  - enum:
                      name: MonthNameType
                      enumerators:
                        - DateFormat
                        - StandaloneFormat
                  - constructor: QDate
                  - constructor: QDate[p:const QDate &]
                  - destructor: ~QDate
                  - constructor: QDate[p:int;int;int]
                  - function: isNull[r:bool][specs:const]
                  - function: isValid[r:bool][specs:const]
                  - function: year[r:int][specs:const]
                  - function: month[r:int][specs:const]
                  - function: day[r:int][specs:const]
                  - function: dayOfWeek[r:int][specs:const]
                  - function: dayOfYear[r:int][specs:const]
                  - function: daysInMonth[r:int][specs:const]
                  - function: daysInYear[r:int][specs:const]
                  - function: weekNumber[r:int][p:int *][specs:const]
                  - function: shortMonthName[r:QString][p:int;QDate::MonthNameType][specs:static]
                  - function: shortDayName[r:QString][p:int;QDate::MonthNameType][specs:static]
                  - function: longMonthName[r:QString][p:int;QDate::MonthNameType][specs:static]
                  - function: longDayName[r:QString][p:int;QDate::MonthNameType][specs:static]
                  - function: toString[r:QString][p:Qt::DateFormat=Qt::TextDate][specs:const]
                  - function: toString[r:QString][p:const QString &][specs:const]
                  - function: toString[r:QString][p:QStringView][specs:const]
                  - function: setDate[r:bool][p:int;int;int]
                  - function: getDate[r:void][p:int *;int *;int *]
                  - function: getDate[r:void][p:int *;int *;int *][specs:const]
                  - function: addDays[r:QDate][p:qint64][specs:const]
                  - function: addMonths[r:QDate][p:int][specs:const]
                  - function: addYears[r:QDate][p:int][specs:const]
                  - function: daysTo[r:qint64][p:const QDate &][specs:const]
                  - function: operator=[r:QDate &][p:const QDate &]
                  - function: operator==[r:bool][p:const QDate &][specs:const]
                  - function: operator!=[r:bool][p:const QDate &][specs:const]
                  - function: operator<[r:bool][p:const QDate &][specs:const]
                  - function: operator<=[r:bool][p:const QDate &][specs:const]
                  - function: operator>[r:bool][p:const QDate &][specs:const]
                  - function: operator>=[r:bool][p:const QDate &][specs:const]
                  - function: currentDate[r:QDate][specs:static]
                  - function: fromString[r:QDate][p:const QString &;Qt::DateFormat=Qt::TextDate][specs:static]
                  - function: fromString[r:QDate][p:const QString &;const QString &][specs:static]
                  - function: isValid[r:bool][p:int;int;int][specs:static]
                  - function: isLeapYear[r:bool][p:int][specs:static]
                  - function: fromJulianDay[r:QDate][p:qint64][specs:static]
                  - function: toJulianDay[r:qint64][specs:const]
            - class:
                name: QTime
                elements:
                  - constructor: QTime
                  - constructor: QTime[p:const QTime &]
                  - destructor: ~QTime
                  - constructor: QTime[p:int;int;int=0;int=0]
                  - function: isNull[r:bool][specs:const]
                  - function: isValid[r:bool][specs:const]
                  - function: hour[r:int][specs:const]
                  - function: minute[r:int][specs:const]
                  - function: second[r:int][specs:const]
                  - function: msec[r:int][specs:const]
                  - function: toString[r:QString][p:Qt::DateFormat=Qt::TextDate][specs:const]
                  - function: toString[r:QString][p:const QString &][specs:const]
                  - function: toString[r:QString][p:QStringView][specs:const]
                  - function: setHMS[r:bool][p:int;int;int;int=0]
                  - function: addSecs[r:QTime][p:int][specs:const]
                  - function: secsTo[r:int][p:const QTime &][specs:const]
                  - function: addMSecs[r:QTime][p:int][specs:const]
                  - function: msecsTo[r:int][p:const QTime &][specs:const]
                  - function: operator=[r:QTime &][p:const QTime &]
                  - function: operator==[r:bool][p:const QTime &][specs:const]
                  - function: operator!=[r:bool][p:const QTime &][specs:const]
                  - function: operator<[r:bool][p:const QTime &][specs:const]
                  - function: operator<=[r:bool][p:const QTime &][specs:const]
                  - function: operator>[r:bool][p:const QTime &][specs:const]
                  - function: operator>=[r:bool][p:const QTime &][specs:const]
                  - function: fromMSecsSinceStartOfDay[r:QTime][p:int][specs:static]
                  - function: msecsSinceStartOfDay[r:int][specs:const]
                  - function: currentTime[r:QTime][specs:static]
                  - function: fromString[r:QTime][p:const QString &;Qt::DateFormat=Qt::TextDate][specs:static]
                  - function: fromString[r:QTime][p:const QString &;const QString &][specs:static]
                  - function: isValid[r:bool][p:int;int;int;int=0][specs:static]
                  - function: start[r:void]
                  - function: restart[r:int]
                  - function: elapsed[r:int][specs:const]
            - class:
                name: QDateTime
                elements:
                  - constructor: QDateTime
                  - constructor: QDateTime[p:const QDate &]
                  - constructor: QDateTime[p:const QDate &;const QTime &;Qt::TimeSpec=Qt::LocalTime]
                  - constructor: QDateTime[p:const QDate &;const QTime &;Qt::TimeSpec;int][v:5.2.0]
                  - constructor: QDateTime[p:const QDate &;const QTime &;const QTimeZone &][v:5.2.0]
                  - constructor: QDateTime[p:const QDateTime &]
                  - constructor: QDateTime[p:QDateTime &&]
                  - destructor: ~QDateTime
                  - function: operator=[r:QDateTime &][p:QDateTime &&]
                  - function: operator=[r:QDateTime &][p:const QDateTime &]
                  - function: swap[r:void][p:QDateTime &]
                  - function: isNull[r:bool][specs:const]
                  - function: isValid[r:bool][specs:const]
                  - function: date[r:QDate][specs:const]
                  - function: time[r:QTime][specs:const]
                  - function: timeSpec[r:Qt::TimeSpec][specs:const]
                  - function: offsetFromUtc[r:int][specs:const][v:5.2.0]
                  - function: timeZone[r:QTimeZone][specs:const][v:5.2.0]
                  - function: timeZoneAbbreviation[r:QString][specs:const][v:5.2.0]
                  - function: isDaylightTime[r:bool][specs:const][v:5.2.0]
                  - function: toMSecsSinceEpoch[r:qint64][specs:const]
                  - function: toSecsSinceEpoch[r:qint64][specs:const][v:5.8.0]
                  - function: setDate[r:void][p:const QDate &]
                  - function: setTime[r:void][p:const QTime &]
                  - function: setTimeSpec[r:void][p:Qt::TimeSpec]
                  - function: setOffsetFromUtc[r:void][p:int][v:5.2.0]
                  - function: setTimeZone[r:void][p:const QTimeZone &][v:5.2.0]
                  - function: setMSecsSinceEpoch[r:void][p:qint64]
                  - function: setSecsSinceEpoch[r:void][p:qint64][v:5.8.0]
                  - function: toString[r:QString][p:Qt::DateFormat=Qt::TextDate][specs:const]
                  - function: toString[r:QString][p:const QString &][specs:const]
                  - function: toString[r:QString][p:QStringView][specs:const]
                  - function: addDays[r:QDateTime][p:qint64][specs:const]
                  - function: addMonths[r:QDateTime][p:int][specs:const]
                  - function: addYears[r:QDateTime][p:int][specs:const]
                  - function: addSecs[r:QDateTime][p:qint64][specs:const]
                  - function: addMSecs[r:QDateTime][p:qint64][specs:const]
                  - function: toTimeSpec[r:QDateTime][p:Qt::TimeSpec][specs:const]
                  - function: toLocalTime[r:QDateTime][specs:const]
                  - function: toUTC[r:QDateTime][specs:const]
                  - function: toOffsetFromUtc[r:QDateTime][p:int][specs:const][v:5.2.0]
                  - function: toTimeZone[r:QDateTime][p:const QTimeZone &][specs:const][v:5.2.0]
                  - function: daysTo[r:qint64][p:const QDateTime &][specs:const]
                  - function: secsTo[r:qint64][p:const QDateTime &][specs:const]
                  - function: msecsTo[r:qint64][p:const QDateTime &][specs:const]
                  - function: operator==[r:bool][p:const QDateTime &][specs:const]
                  - function: operator!=[r:bool][p:const QDateTime &][specs:const]
                  - function: operator<[r:bool][p:const QDateTime &][specs:const]
                  - function: operator<=[r:bool][p:const QDateTime &][specs:const]
                  - function: operator>[r:bool][p:const QDateTime &][specs:const]
                  - function: operator>=[r:bool][p:const QDateTime &][specs:const]
                  - function: setUtcOffset[r:void][p:int]
                  - function: utcOffset[r:int][specs:const]
                  - function: currentDateTime[r:QDateTime][specs:static]
                  - function: currentDateTimeUtc[r:QDateTime][specs:static]
                  - function: fromString[r:QDateTime][p:const QString &;Qt::DateFormat=Qt::TextDate][specs:static]
                  - function: fromString[r:QDateTime][p:const QString &;const QString &][specs:static]
                  - function: toTime_t[r:uint][specs:const]
                  - function: setTime_t[r:void][p:uint]
                  - function: fromTime_t[r:QDateTime][p:uint][specs:static]
                  - function: fromTime_t[r:QDateTime][p:uint;Qt::TimeSpec;int][specs:static]
                  - function: fromTime_t[r:QDateTime][p:uint;const QTimeZone &][specs:static]
                  - function: fromMSecsSinceEpoch[r:QDateTime][p:qint64][specs:static]
                  - function: fromMSecsSinceEpoch[r:QDateTime][p:qint64;Qt::TimeSpec;int=0][specs:static][v:5.2.0]
                  - function: fromSecsSinceEpoch[r:QDateTime][p:qint64;Qt::TimeSpec=Qt::LocalTime;int=0][specs:static][v:5.8.0]
                  - function: fromMSecsSinceEpoch[r:QDateTime][p:qint64;const QTimeZone &][specs:static][v:5.2.0]
                  - function: fromSecsSinceEpoch[r:QDateTime][p:qint64;const QTimeZone &][specs:static][v:5.8.0]
                  - function: currentMSecsSinceEpoch[r:qint64][specs:static]
                  - function: currentSecsSinceEpoch[r:qint64][specs:static][v:5.8.0]
            - function: swap[r:void][p:QDateTime &;QDateTime &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QDate &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QDate &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QTime &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QTime &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QDateTime &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QDateTime &]
            - function: operator<<[r:QDebug][p:QDebug;const QDate &]
            - function: operator<<[r:QDebug][p:QDebug;const QTime &]
            - function: operator<<[r:QDebug][p:QDebug;const QDateTime &]
            - function: qHash[r:uint][p:const QDateTime &;uint]
            - function: qHash[r:uint][p:const QDate &;uint]
            - function: qHash[r:uint][p:const QTime &;uint]
          hincludes: <QDateTime>
      - file:
          name: dir
          checkstate: partially-checked
          elements:
            - class:
                name: QDir
                elements:
                  - enum:
                      name: Filter
                      enumerators:
                        - Dirs
                        - Files
                        - Drives
                        - NoSymLinks
                        - AllEntries
                        - TypeMask
                        - Readable
                        - Writable
                        - Executable
                        - PermissionMask
                        - Modified
                        - Hidden
                        - System
                        - AccessMask
                        - AllDirs
                        - CaseSensitive
                        - NoDot
                        - NoDotDot
                        - NoDotAndDotDot
                        - NoFilter
                  - enum:
                      name: SortFlag
                      enumerators:
                        - Name
                        - Time
                        - Size
                        - Unsorted
                        - SortByMask
                        - DirsFirst
                        - Reversed
                        - IgnoreCase
                        - DirsLast
                        - LocaleAware
                        - Type
                        - NoSort
                  - constructor: QDir[p:const QDir &]
                  - constructor: QDir[p:const QString &=QString()]
                  - constructor: QDir[p:const QString &;const QString &;QDir::SortFlags=QDir::SortFlags(QDir::Name | QDir::IgnoreCase);QDir::Filters=QDir::Filters(QDir::AllEntries)]
                  - destructor: ~QDir
                  - function: operator=[r:QDir &][p:const QDir &]
                  - function: operator=[r:QDir &][p:const QString &]
                  - function: operator=[r:QDir &][p:QDir &&]
                  - function: swap[r:void][p:QDir &]
                  - function: setPath[r:void][p:const QString &]
                  - function: path[r:QString][specs:const]
                  - function: absolutePath[r:QString][specs:const]
                  - function: canonicalPath[r:QString][specs:const]
                  - function: addResourceSearchPath[r:void][p:const QString &][specs:static]
                  - function: setSearchPaths[r:void][p:const QString &;const QStringList &][specs:static]
                  - function: addSearchPath[r:void][p:const QString &;const QString &][specs:static]
                  - function: searchPaths[r:QStringList][p:const QString &][specs:static]
                  - function: dirName[r:QString][specs:const]
                  - function: filePath[r:QString][p:const QString &][specs:const]
                  - function: absoluteFilePath[r:QString][p:const QString &][specs:const]
                  - function: relativeFilePath[r:QString][p:const QString &][specs:const]
                  - function: toNativeSeparators[r:QString][p:const QString &][specs:static]
                  - function: fromNativeSeparators[r:QString][p:const QString &][specs:static]
                  - function: cd[r:bool][p:const QString &]
                  - function: cdUp[r:bool]
                  - function: nameFilters[r:QStringList][specs:const]
                  - function: setNameFilters[r:void][p:const QStringList &]
                  - function: filter[r:QDir::Filters][specs:const]
                  - function: setFilter[r:void][p:QDir::Filters]
                  - function: sorting[r:QDir::SortFlags][specs:const]
                  - function: setSorting[r:void][p:QDir::SortFlags]
                  - function: count[r:uint][specs:const]
                  - function: isEmpty[r:bool][p:QDir::Filters=QDir::Filters(QDir::AllEntries | QDir::NoDotAndDotDot)][specs:const][v:5.9.0]
                  - function: operator[][r:QString][p:int][specs:const]
                  - function: nameFiltersFromString[r:QStringList][p:const QString &][specs:static]
                  - function: entryList[r:QStringList][p:QDir::Filters=QDir::Filters(QDir::NoFilter);QDir::SortFlags=QDir::SortFlags(QDir::NoSort)][specs:const]
                  - function: entryList[r:QStringList][p:const QStringList &;QDir::Filters=QDir::Filters(QDir::NoFilter);QDir::SortFlags=QDir::SortFlags(QDir::NoSort)][specs:const]
                  - function: entryInfoList[r:QFileInfoList][p:QDir::Filters=QDir::Filters(QDir::NoFilter);QDir::SortFlags=QDir::SortFlags(QDir::NoSort)][specs:const]
                  - function: entryInfoList[r:QFileInfoList][p:const QStringList &;QDir::Filters=QDir::Filters(QDir::NoFilter);QDir::SortFlags=QDir::SortFlags(QDir::NoSort)][specs:const]
                  - function: mkdir[r:bool][p:const QString &][specs:const]
                  - function: rmdir[r:bool][p:const QString &][specs:const]
                  - function: mkpath[r:bool][p:const QString &][specs:const]
                  - function: rmpath[r:bool][p:const QString &][specs:const]
                  - function: removeRecursively[r:bool]
                  - function: isReadable[r:bool][specs:const]
                  - function: exists[r:bool][specs:const]
                  - function: isRoot[r:bool][specs:const]
                  - function: isRelativePath[r:bool][p:const QString &][specs:static]
                  - function: isAbsolutePath[r:bool][p:const QString &][specs:static]
                  - function: isRelative[r:bool][specs:const]
                  - function: isAbsolute[r:bool][specs:const]
                  - function: makeAbsolute[r:bool]
                  - function: operator==[r:bool][p:const QDir &][specs:const]
                  - function: operator!=[r:bool][p:const QDir &][specs:const]
                  - function: remove[r:bool][p:const QString &]
                  - function: rename[r:bool][p:const QString &;const QString &]
                  - function: exists[r:bool][p:const QString &][specs:const]
                  - function: drives[r:QFileInfoList][specs:static]
                  - function: listSeparator[r:QChar][specs:static][v:5.6.0]
                  - function: separator[r:QChar][specs:static]
                  - function: setCurrent[r:bool][p:const QString &][specs:static]
                  - function: current[r:QDir][specs:static]
                  - function: currentPath[r:QString][specs:static]
                  - function: home[r:QDir][specs:static]
                  - function: homePath[r:QString][specs:static]
                  - function: root[r:QDir][specs:static]
                  - function: rootPath[r:QString][specs:static]
                  - function: temp[r:QDir][specs:static]
                  - function: tempPath[r:QString][specs:static]
                  - function: match[r:bool][p:const QStringList &;const QString &][specs:static]
                  - function: match[r:bool][p:const QString &;const QString &][specs:static]
                  - function: cleanPath[r:QString][p:const QString &][specs:static]
                  - function: refresh[r:void][specs:const]
            - function: swap[r:void][p:QDir &;QDir &]
            - function: operator|[r:QDir::Filters][p:QDir::Filter;QDir::Filter]
            - function: operator|[r:QDir::Filters][p:QDir::Filter;QDir::Filters]
            - function: operator|[r:QIncompatibleFlag][p:QDir::Filters::enum_type;int]
            - function: operator|[r:QDir::SortFlags][p:QDir::SortFlag;QDir::SortFlag]
            - function: operator|[r:QDir::SortFlags][p:QDir::SortFlag;QDir::SortFlags]
            - function: operator|[r:QIncompatibleFlag][p:QDir::SortFlags::enum_type;int]
            - function: operator<<[r:QDebug][p:QDebug;QDir::Filters]
            - function: operator<<[r:QDebug][p:QDebug;const QDir &]
          hincludes: <QDir>
      - file:
          name: fileinfo
          elements:
            - class:
                name: QFileInfo
                elements:
                  - constructor: QFileInfo[p:QFileInfoPrivate *]
                  - constructor: QFileInfo
                  - constructor: QFileInfo[p:const QString &]
                  - constructor: QFileInfo[p:const QFile &]
                  - constructor: QFileInfo[p:const QDir &;const QString &]
                  - constructor: QFileInfo[p:const QFileInfo &]
                  - destructor: ~QFileInfo
                  - function: operator=[r:QFileInfo &][p:const QFileInfo &]
                  - function: operator=[r:QFileInfo &][p:QFileInfo &&]
                  - function: swap[r:void][p:QFileInfo &]
                  - function: operator==[r:bool][p:const QFileInfo &][specs:const]
                  - function: operator!=[r:bool][p:const QFileInfo &][specs:const]
                  - function: setFile[r:void][p:const QString &]
                  - function: setFile[r:void][p:const QFile &]
                  - function: setFile[r:void][p:const QDir &;const QString &]
                  - function: exists[r:bool][specs:const]
                  - function: exists[r:bool][p:const QString &][specs:static][v:5.2.0]
                  - function: refresh[r:void]
                  - function: filePath[r:QString][specs:const]
                  - function: absoluteFilePath[r:QString][specs:const]
                  - function: canonicalFilePath[r:QString][specs:const]
                  - function: fileName[r:QString][specs:const]
                  - function: baseName[r:QString][specs:const]
                  - function: completeBaseName[r:QString][specs:const]
                  - function: suffix[r:QString][specs:const]
                  - function: bundleName[r:QString][specs:const]
                  - function: completeSuffix[r:QString][specs:const]
                  - function: path[r:QString][specs:const]
                  - function: absolutePath[r:QString][specs:const]
                  - function: canonicalPath[r:QString][specs:const]
                  - function: dir[r:QDir][specs:const]
                  - function: absoluteDir[r:QDir][specs:const]
                  - function: isReadable[r:bool][specs:const]
                  - function: isWritable[r:bool][specs:const]
                  - function: isExecutable[r:bool][specs:const]
                  - function: isHidden[r:bool][specs:const]
                  - function: isNativePath[r:bool][specs:const]
                  - function: isRelative[r:bool][specs:const]
                  - function: isAbsolute[r:bool][specs:const]
                  - function: makeAbsolute[r:bool]
                  - function: isFile[r:bool][specs:const]
                  - function: isDir[r:bool][specs:const]
                  - function: isSymLink[r:bool][specs:const]
                  - function: isRoot[r:bool][specs:const]
                  - function: isBundle[r:bool][specs:const]
                  - function: readLink[r:QString][specs:const]
                  - function: symLinkTarget[r:QString][specs:const]
                  - function: owner[r:QString][specs:const]
                  - function: ownerId[r:uint][specs:const]
                  - function: group[r:QString][specs:const]
                  - function: groupId[r:uint][specs:const]
                  - function: permission[r:bool][p:QFile::Permissions][specs:const]
                  - function: permissions[r:QFile::Permissions][specs:const]
                  - function: size[r:qint64][specs:const]
                  - function: created[r:QDateTime][specs:const]
                  - function: birthTime[r:QDateTime][specs:const][v:5.10.0]
                  - function: metadataChangeTime[r:QDateTime][specs:const][v:5.10.0]
                  - function: lastModified[r:QDateTime][specs:const]
                  - function: lastRead[r:QDateTime][specs:const]
                  - function: fileTime[r:QDateTime][p:QFile::FileTime][specs:const][v:5.10.0]
                  - function: caching[r:bool][specs:const]
                  - function: setCaching[r:void][p:bool]
            - function: swap[r:void][p:QFileInfo &;QFileInfo &]
            - function: operator<<[r:QDebug][p:QDebug;const QFileInfo &]
          hincludes: <QFileInfo>
      - file:
          name: line
          checkstate: partially-checked
          elements:
            - class:
                name: QLine
                elements:
                  - constructor: QLine
                  - constructor: QLine[p:const QLine &]
                  - destructor: ~QLine
                  - constructor: QLine[p:const QPoint &;const QPoint &]
                  - constructor: QLine[p:int;int;int;int]
                  - function: isNull[r:bool][specs:const]
                  - function: p1[r:QPoint][specs:const]
                  - function: p2[r:QPoint][specs:const]
                  - function: x1[r:int][specs:const]
                  - function: y1[r:int][specs:const]
                  - function: x2[r:int][specs:const]
                  - function: y2[r:int][specs:const]
                  - function: dx[r:int][specs:const]
                  - function: dy[r:int][specs:const]
                  - function: translate[r:void][p:const QPoint &]
                  - function: translate[r:void][p:int;int]
                  - function: translated[r:QLine][p:const QPoint &][specs:const]
                  - function: translated[r:QLine][p:int;int][specs:const]
                  - function: center[r:QPoint][specs:const]
                  - function: setP1[r:void][p:const QPoint &]
                  - function: setP2[r:void][p:const QPoint &]
                  - function: setPoints[r:void][p:const QPoint &;const QPoint &]
                  - function: setLine[r:void][p:int;int;int;int]
                  - function: operator=[r:QLine &][p:const QLine &]
                  - function: operator==[r:bool][p:const QLine &][specs:const]
                  - function: operator!=[r:bool][p:const QLine &][specs:const]
            - function: operator<<[r:QDebug][p:QDebug;const QLine &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QLine &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QLine &]
            - class:
                name: QLineF
                elements:
                  - enum:
                      name: IntersectType
                      enumerators:
                        - NoIntersection
                        - BoundedIntersection
                        - UnboundedIntersection
                  - constructor: QLineF
                  - constructor: QLineF[p:const QLineF &]
                  - destructor: ~QLineF
                  - constructor: QLineF[p:const QPointF &;const QPointF &]
                  - constructor: QLineF[p:qreal;qreal;qreal;qreal]
                  - constructor: QLineF[p:const QLine &]
                  - function: fromPolar[r:QLineF][p:qreal;qreal][specs:static]
                  - function: isNull[r:bool][specs:const]
                  - function: p1[r:QPointF][specs:const]
                  - function: p2[r:QPointF][specs:const]
                  - function: x1[r:qreal][specs:const]
                  - function: y1[r:qreal][specs:const]
                  - function: x2[r:qreal][specs:const]
                  - function: y2[r:qreal][specs:const]
                  - function: dx[r:qreal][specs:const]
                  - function: dy[r:qreal][specs:const]
                  - function: length[r:qreal][specs:const]
                  - function: setLength[r:void][p:qreal]
                  - function: angle[r:qreal][specs:const]
                  - function: setAngle[r:void][p:qreal]
                  - function: angleTo[r:qreal][p:const QLineF &][specs:const]
                  - function: unitVector[r:QLineF][specs:const]
                  - function: normalVector[r:QLineF][specs:const]
                  - function: intersect[r:QLineF::IntersectType][p:const QLineF &;QPointF *][specs:const]
                  - function: angle[r:qreal][p:const QLineF &][specs:const]
                  - function: pointAt[r:QPointF][p:qreal][specs:const]
                  - function: translate[r:void][p:const QPointF &]
                  - function: translate[r:void][p:qreal;qreal]
                  - function: translated[r:QLineF][p:const QPointF &][specs:const]
                  - function: translated[r:QLineF][p:qreal;qreal][specs:const]
                  - function: center[r:QPointF][specs:const]
                  - function: setP1[r:void][p:const QPointF &]
                  - function: setP2[r:void][p:const QPointF &]
                  - function: setPoints[r:void][p:const QPointF &;const QPointF &]
                  - function: setLine[r:void][p:qreal;qreal;qreal;qreal]
                  - function: operator=[r:QLineF &][p:const QLineF &]
                  - function: operator==[r:bool][p:const QLineF &][specs:const]
                  - function: operator!=[r:bool][p:const QLineF &][specs:const]
                  - function: toLine[r:QLine][specs:const]
            - function: operator<<[r:QDebug][p:QDebug;const QLineF &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QLineF &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QLineF &]
          hincludes: <QLine>
      - file:
          name: url
          checkstate: partially-checked
          elements:
            - function: qHash[r:uint][p:const QUrl &;uint]
            - class:
                name: QUrl
                elements:
                  - enum:
                      name: ParsingMode
                      enumerators:
                        - TolerantMode
                        - StrictMode
                        - DecodedMode
                  - enum:
                      name: UrlFormattingOption
                      enumerators:
                        - None
                        - RemoveScheme
                        - RemovePassword
                        - RemoveUserInfo
                        - RemovePort
                        - RemoveAuthority
                        - RemovePath
                        - RemoveQuery
                        - RemoveFragment
                        - PreferLocalFile
                        - StripTrailingSlash
                        - RemoveFilename
                        - NormalizePathSegments
                  - enum:
                      name: ComponentFormattingOption
                      enumerators:
                        - PrettyDecoded
                        - EncodeSpaces
                        - EncodeUnicode
                        - EncodeDelimiters
                        - EncodeReserved
                        - DecodeReserved
                        - FullyEncoded
                        - FullyDecoded
                  - constructor: QUrl
                  - constructor: QUrl[p:const QUrl &]
                  - function: operator=[r:QUrl &][p:const QUrl &]
                  - constructor: QUrl[p:const QString &;QUrl::ParsingMode=QUrl::TolerantMode]
                  - function: operator=[r:QUrl &][p:const QString &]
                  - constructor: QUrl[p:QUrl &&]
                  - function: operator=[r:QUrl &][p:QUrl &&]
                  - destructor: ~QUrl
                  - function: swap[r:void][p:QUrl &]
                  - function: setUrl[r:void][p:const QString &;QUrl::ParsingMode=QUrl::TolerantMode]
                  - function: url[r:QString][p:QUrl::FormattingOptions=QUrl::FormattingOptions(QUrl::FullyEncoded)][specs:const]
                  - function: toString[r:QString][p:QUrl::FormattingOptions=QUrl::FormattingOptions(QUrl::PrettyDecoded)][specs:const]
                  - function: toDisplayString[r:QString][p:QUrl::FormattingOptions=QUrl::FormattingOptions(QUrl::PrettyDecoded)][specs:const]
                  - function: adjusted[r:QUrl][p:QUrl::FormattingOptions][specs:const][v:5.2.0]
                  - function: toEncoded[r:QByteArray][p:QUrl::FormattingOptions=QUrl::FormattingOptions(QUrl::FullyEncoded)][specs:const]
                  - function: fromEncoded[r:QUrl][p:const QByteArray &;QUrl::ParsingMode=QUrl::TolerantMode][specs:static]
                  - enum:
                      name: UserInputResolutionOption
                      enumerators:
                        - DefaultResolution
                        - AssumeLocalFile
                  - function: fromUserInput[r:QUrl][p:const QString &][specs:static]
                  - function: fromUserInput[r:QUrl][p:const QString &;const QString &;QUrl::UserInputResolutionOptions=QUrl::UserInputResolutionOptions(QUrl::DefaultResolution)][specs:static][v:5.4.0]
                  - function: isValid[r:bool][specs:const]
                  - function: errorString[r:QString][specs:const]
                  - function: isEmpty[r:bool][specs:const]
                  - function: clear[r:void]
                  - function: setScheme[r:void][p:const QString &]
                  - function: scheme[r:QString][specs:const]
                  - function: setAuthority[r:void][p:const QString &;QUrl::ParsingMode=QUrl::TolerantMode]
                  - function: authority[r:QString][p:QUrl::ComponentFormattingOptions=QUrl::ComponentFormattingOptions(QUrl::PrettyDecoded)][specs:const]
                  - function: setUserInfo[r:void][p:const QString &;QUrl::ParsingMode=QUrl::TolerantMode]
                  - function: userInfo[r:QString][p:QUrl::ComponentFormattingOptions=QUrl::ComponentFormattingOptions(QUrl::PrettyDecoded)][specs:const]
                  - function: setUserName[r:void][p:const QString &;QUrl::ParsingMode=QUrl::DecodedMode]
                  - function: userName[r:QString][p:QUrl::ComponentFormattingOptions=QUrl::ComponentFormattingOptions(QUrl::FullyDecoded)][specs:const]
                  - function: setPassword[r:void][p:const QString &;QUrl::ParsingMode=QUrl::DecodedMode]
                  - function: password[r:QString][p:QUrl::ComponentFormattingOptions=QUrl::ComponentFormattingOptions(QUrl::FullyDecoded)][specs:const]
                  - function: setHost[r:void][p:const QString &;QUrl::ParsingMode=QUrl::DecodedMode]
                  - function: host[r:QString][p:QUrl::ComponentFormattingOptions=QUrl::ComponentFormattingOptions(QUrl::FullyDecoded)][specs:const]
                  - function: topLevelDomain[r:QString][p:QUrl::ComponentFormattingOptions=QUrl::ComponentFormattingOptions(QUrl::FullyDecoded)][specs:const]
                  - function: setPort[r:void][p:int]
                  - function: port[r:int][p:int=-1][specs:const]
                  - function: setPath[r:void][p:const QString &;QUrl::ParsingMode=QUrl::DecodedMode]
                  - function: path[r:QString][p:QUrl::ComponentFormattingOptions=QUrl::ComponentFormattingOptions(QUrl::FullyDecoded)][specs:const]
                  - function: fileName[r:QString][p:QUrl::ComponentFormattingOptions=QUrl::ComponentFormattingOptions(QUrl::FullyDecoded)][specs:const][v:5.2.0]
                  - function: hasQuery[r:bool][specs:const]
                  - function: setQuery[r:void][p:const QString &;QUrl::ParsingMode=QUrl::TolerantMode]
                  - function: setQuery[r:void][p:const QUrlQuery &]
                  - function: query[r:QString][p:QUrl::ComponentFormattingOptions=QUrl::ComponentFormattingOptions(QUrl::PrettyDecoded)][specs:const]
                  - function: hasFragment[r:bool][specs:const]
                  - function: fragment[r:QString][p:QUrl::ComponentFormattingOptions=QUrl::ComponentFormattingOptions(QUrl::PrettyDecoded)][specs:const]
                  - function: setFragment[r:void][p:const QString &;QUrl::ParsingMode]
                  - function: resolved[r:QUrl][p:const QUrl &][specs:const]
                  - function: isRelative[r:bool][specs:const]
                  - function: isParentOf[r:bool][p:const QUrl &][specs:const]
                  - function: isLocalFile[r:bool][specs:const]
                  - function: fromLocalFile[r:QUrl][p:const QString &][specs:static]
                  - function: toLocalFile[r:QString][specs:const]
                  - function: detach[r:void]
                  - function: isDetached[r:bool][specs:const]
                  - function: operator<[r:bool][p:const QUrl &][specs:const]
                  - function: operator==[r:bool][p:const QUrl &][specs:const]
                  - function: operator!=[r:bool][p:const QUrl &][specs:const]
                  - function: matches[r:bool][p:const QUrl &;QUrl::FormattingOptions][specs:const][v:5.2.0]
                  - function: fromPercentEncoding[r:QString][p:const QByteArray &][specs:static]
                  - function: toPercentEncoding[r:QByteArray][p:const QString &;const QByteArray &=QByteArray();const QByteArray &=QByteArray()][specs:static]
                  - function: fromAce[r:QString][p:const QByteArray &][specs:static]
                  - function: toAce[r:QByteArray][p:const QString &][specs:static]
                  - function: idnWhitelist[r:QStringList][specs:static]
                  - function: toStringList[r:QStringList][p:const QList<QUrl> &;QUrl::FormattingOptions=QUrl::FormattingOptions(QUrl::PrettyDecoded)][specs:static][v:5.1.0]
                  - function: fromStringList[r:QList<QUrl>][p:const QStringList &;QUrl::ParsingMode=QUrl::TolerantMode][specs:static][v:5.1.0]
                  - function: setIdnWhitelist[r:void][p:const QStringList &][specs:static]
                  - function: data_ptr[r:QUrl::DataPtr &]
            - function: swap[r:void][p:QUrl &;QUrl &]
            - function: operator|[r:QUrl::ComponentFormattingOptions][p:QUrl::ComponentFormattingOption;QUrl::ComponentFormattingOption]
            - function: operator|[r:QUrl::ComponentFormattingOptions][p:QUrl::ComponentFormattingOption;QUrl::ComponentFormattingOptions]
            - function: operator|[r:QIncompatibleFlag][p:QUrl::ComponentFormattingOptions::enum_type;int]
            - function: operator|[r:QUrl::FormattingOptions][p:QUrl::UrlFormattingOption;QUrl::UrlFormattingOption]
            - function: operator|[r:QUrl::FormattingOptions][p:QUrl::UrlFormattingOption;QUrl::FormattingOptions]
            - function: operator|[r:QIncompatibleFlag][p:QUrl::UrlFormattingOption;int]
            - function: operator|=[r:QUrl::FormattingOptions &][p:QUrl::FormattingOptions &;QUrl::ComponentFormattingOptions]
            - function: operator|[r:QUrl::FormattingOptions][p:QUrl::UrlFormattingOption;QUrl::ComponentFormattingOption]
            - function: operator|[r:QUrl::FormattingOptions][p:QUrl::UrlFormattingOption;QUrl::ComponentFormattingOptions]
            - function: operator|[r:QUrl::FormattingOptions][p:QUrl::ComponentFormattingOption;QUrl::UrlFormattingOption]
            - function: operator|[r:QUrl::FormattingOptions][p:QUrl::ComponentFormattingOptions;QUrl::UrlFormattingOption]
            - function: operator|[r:QUrl::FormattingOptions][p:QUrl::FormattingOptions;QUrl::ComponentFormattingOptions]
            - function: operator|[r:QUrl::FormattingOptions][p:QUrl::ComponentFormattingOption;QUrl::FormattingOptions]
            - function: operator|[r:QUrl::FormattingOptions][p:QUrl::ComponentFormattingOptions;QUrl::FormattingOptions]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QUrl &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QUrl &]
            - function: operator<<[r:QDebug][p:QDebug;const QUrl &]
          hincludes: <QUrl>
      - file:
          name: urlquery
          elements:
            - function: qHash[r:uint][p:const QUrlQuery &;uint][v:5.6.0]
            - class:
                name: QUrlQuery
                elements:
                  - constructor: QUrlQuery
                  - constructor: QUrlQuery[p:const QUrl &]
                  - constructor: QUrlQuery[p:const QString &]
                  - constructor: QUrlQuery[p:const QUrlQuery &]
                  - function: operator=[r:QUrlQuery &][p:const QUrlQuery &]
                  - function: operator=[r:QUrlQuery &][p:QUrlQuery &&]
                  - destructor: ~QUrlQuery
                  - function: operator==[r:bool][p:const QUrlQuery &][specs:const]
                  - function: operator!=[r:bool][p:const QUrlQuery &][specs:const]
                  - function: swap[r:void][p:QUrlQuery &]
                  - function: isEmpty[r:bool][specs:const]
                  - function: isDetached[r:bool][specs:const]
                  - function: clear[r:void]
                  - function: query[r:QString][p:QUrl::ComponentFormattingOptions=QUrl::ComponentFormattingOptions(QUrl::PrettyDecoded)][specs:const]
                  - function: setQuery[r:void][p:const QString &]
                  - function: toString[r:QString][p:QUrl::ComponentFormattingOptions=QUrl::ComponentFormattingOptions(QUrl::PrettyDecoded)][specs:const]
                  - function: setQueryDelimiters[r:void][p:QChar;QChar]
                  - function: queryValueDelimiter[r:QChar][specs:const]
                  - function: queryPairDelimiter[r:QChar][specs:const]
                  - function: setQueryItems[r:void][p:const QList<QPair<QString, QString> > &]
                  - function: queryItems[r:QList<QPair<QString, QString> >][p:QUrl::ComponentFormattingOptions=QUrl::ComponentFormattingOptions(QUrl::PrettyDecoded)][specs:const]
                  - function: hasQueryItem[r:bool][p:const QString &][specs:const]
                  - function: addQueryItem[r:void][p:const QString &;const QString &]
                  - function: removeQueryItem[r:void][p:const QString &]
                  - function: queryItemValue[r:QString][p:const QString &;QUrl::ComponentFormattingOptions=QUrl::ComponentFormattingOptions(QUrl::PrettyDecoded)][specs:const]
                  - function: allQueryItemValues[r:QStringList][p:const QString &;QUrl::ComponentFormattingOptions=QUrl::ComponentFormattingOptions(QUrl::PrettyDecoded)][specs:const]
                  - function: removeAllQueryItems[r:void][p:const QString &]
                  - function: defaultQueryValueDelimiter[r:QChar][specs:static]
                  - function: defaultQueryPairDelimiter[r:QChar][specs:static]
                  - function: data_ptr[r:QUrlQuery::DataPtr &]
            - function: swap[r:void][p:QUrlQuery &;QUrlQuery &]
          hincludes: <QUrlQuery>
      - file:
          name: locale
          checkstate: partially-checked
          elements:
            - function: qHash[r:uint][p:const QLocale &;uint]
            - class:
                name: QLocale
                checkstate: partially-checked
                elements:
                  - function: qt_check_for_QGADGET_macro[r:void][unchecked]
                  - enum:
                      name: Language
                      enumerators:
                        - AnyLanguage
                        - C
                        - Abkhazian
                        - Oromo
                        - Afar
                        - Afrikaans
                        - Albanian
                        - Amharic
                        - Arabic
                        - Armenian
                        - Assamese
                        - Aymara
                        - Azerbaijani
                        - Bashkir
                        - Basque
                        - Bengali
                        - Dzongkha
                        - Bihari
                        - Bislama
                        - Breton
                        - Bulgarian
                        - Burmese
                        - Belarusian
                        - Khmer
                        - Catalan
                        - Chinese
                        - Corsican
                        - Croatian
                        - Czech
                        - Danish
                        - Dutch
                        - English
                        - Esperanto
                        - Estonian
                        - Faroese
                        - Fijian
                        - Finnish
                        - French
                        - WesternFrisian
                        - Gaelic
                        - Galician
                        - Georgian
                        - German
                        - Greek
                        - Greenlandic
                        - Guarani
                        - Gujarati
                        - Hausa
                        - Hebrew
                        - Hindi
                        - Hungarian
                        - Icelandic
                        - Indonesian
                        - Interlingua
                        - Interlingue
                        - Inuktitut
                        - Inupiak
                        - Irish
                        - Italian
                        - Japanese
                        - Javanese
                        - Kannada
                        - Kashmiri
                        - Kazakh
                        - Kinyarwanda
                        - Kirghiz
                        - Korean
                        - Kurdish
                        - Rundi
                        - Lao
                        - Latin
                        - Latvian
                        - Lingala
                        - Lithuanian
                        - Macedonian
                        - Malagasy
                        - Malay
                        - Malayalam
                        - Maltese
                        - Maori
                        - Marathi
                        - Marshallese
                        - Mongolian
                        - NauruLanguage
                        - Nepali
                        - NorwegianBokmal
                        - Occitan
                        - Oriya
                        - Pashto
                        - Persian
                        - Polish
                        - Portuguese
                        - Punjabi
                        - Quechua
                        - Romansh
                        - Romanian
                        - Russian
                        - Samoan
                        - Sango
                        - Sanskrit
                        - Serbian
                        - Ossetic
                        - SouthernSotho
                        - Tswana
                        - Shona
                        - Sindhi
                        - Sinhala
                        - Swati
                        - Slovak
                        - Slovenian
                        - Somali
                        - Spanish
                        - Sundanese
                        - Swahili
                        - Swedish
                        - Sardinian
                        - Tajik
                        - Tamil
                        - Tatar
                        - Telugu
                        - Thai
                        - Tibetan
                        - Tigrinya
                        - Tongan
                        - Tsonga
                        - Turkish
                        - Turkmen
                        - Tahitian
                        - Uighur
                        - Ukrainian
                        - Urdu
                        - Uzbek
                        - Vietnamese
                        - Volapuk
                        - Welsh
                        - Wolof
                        - Xhosa
                        - Yiddish
                        - Yoruba
                        - Zhuang
                        - Zulu
                        - NorwegianNynorsk
                        - Bosnian
                        - Divehi
                        - Manx
                        - Cornish
                        - Akan
                        - Konkani
                        - Ga
                        - Igbo
                        - Kamba
                        - Syriac
                        - Blin
                        - Geez
                        - Koro
                        - Sidamo
                        - Atsam
                        - Tigre
                        - Jju
                        - Friulian
                        - Venda
                        - Ewe
                        - Walamo
                        - Hawaiian
                        - Tyap
                        - Nyanja
                        - Filipino
                        - SwissGerman
                        - SichuanYi
                        - Kpelle
                        - LowGerman
                        - SouthNdebele
                        - NorthernSotho
                        - NorthernSami
                        - Taroko
                        - Gusii
                        - Taita
                        - Fulah
                        - Kikuyu
                        - Samburu
                        - Sena
                        - NorthNdebele
                        - Rombo
                        - Tachelhit
                        - Kabyle
                        - Nyankole
                        - Bena
                        - Vunjo
                        - Bambara
                        - Embu
                        - Cherokee
                        - Morisyen
                        - Makonde
                        - Langi
                        - Ganda
                        - Bemba
                        - Kabuverdianu
                        - Meru
                        - Kalenjin
                        - Nama
                        - Machame
                        - Colognian
                        - Masai
                        - Soga
                        - Luyia
                        - Asu
                        - Teso
                        - Saho
                        - KoyraChiini
                        - Rwa
                        - Luo
                        - Chiga
                        - CentralMoroccoTamazight
                        - KoyraboroSenni
                        - Shambala
                        - Bodo
                        - Avaric
                        - Chamorro
                        - Chechen
                        - Church
                        - Chuvash
                        - Cree
                        - Haitian
                        - Herero
                        - HiriMotu
                        - Kanuri
                        - Komi
                        - Kongo
                        - Kwanyama
                        - Limburgish
                        - LubaKatanga
                        - Luxembourgish
                        - Navaho
                        - Ndonga
                        - Ojibwa
                        - Pali
                        - Walloon
                        - Aghem
                        - Basaa
                        - Zarma
                        - Duala
                        - JolaFonyi
                        - Ewondo
                        - Bafia
                        - MakhuwaMeetto
                        - Mundang
                        - Kwasio
                        - Nuer
                        - Sakha
                        - Sangu
                        - CongoSwahili
                        - Tasawaq
                        - Vai
                        - Walser
                        - Yangben
                        - Avestan
                        - Asturian
                        - Ngomba
                        - Kako
                        - Meta
                        - Ngiemboon
                        - Aragonese
                        - Akkadian
                        - AncientEgyptian
                        - AncientGreek
                        - Aramaic
                        - Balinese
                        - Bamun
                        - BatakToba
                        - Buginese
                        - Buhid
                        - Carian
                        - Chakma
                        - ClassicalMandaic
                        - Coptic
                        - Dogri
                        - EasternCham
                        - EasternKayah
                        - Etruscan
                        - Gothic
                        - Hanunoo
                        - Ingush
                        - LargeFloweryMiao
                        - Lepcha
                        - Limbu
                        - Lisu
                        - Lu
                        - Lycian
                        - Lydian
                        - Mandingo
                        - Manipuri
                        - Meroitic
                        - NorthernThai
                        - OldIrish
                        - OldNorse
                        - OldPersian
                        - OldTurkish
                        - Pahlavi
                        - Parthian
                        - Phoenician
                        - PrakritLanguage
                        - Rejang
                        - Sabaean
                        - Samaritan
                        - Santali
                        - Saurashtra
                        - Sora
                        - Sylheti
                        - Tagbanwa
                        - TaiDam
                        - TaiNua
                        - Ugaritic
                        - Akoose[v:5.3.0]
                        - Lakota[v:5.3.0]
                        - StandardMoroccanTamazight[v:5.3.0]
                        - Mapuche[v:5.5.0]
                        - CentralKurdish[v:5.5.0]
                        - LowerSorbian[v:5.5.0]
                        - UpperSorbian[v:5.5.0]
                        - Kenyang[v:5.5.0]
                        - Mohawk[v:5.5.0]
                        - Nko[v:5.5.0]
                        - Prussian[v:5.5.0]
                        - Kiche[v:5.5.0]
                        - SouthernSami[v:5.5.0]
                        - LuleSami[v:5.5.0]
                        - InariSami[v:5.5.0]
                        - SkoltSami[v:5.5.0]
                        - Warlpiri[v:5.5.0]
                        - ManichaeanMiddlePersian[v:5.5.0]
                        - Mende[v:5.5.0]
                        - AncientNorthArabian[v:5.5.0]
                        - LinearA[v:5.5.0]
                        - HmongNjua[v:5.5.0]
                        - Ho[v:5.5.0]
                        - Lezghian[v:5.5.0]
                        - Bassa[v:5.5.0]
                        - Mono[v:5.5.0]
                        - TedimChin[v:5.5.0]
                        - Maithili[v:5.5.0]
                        - Ahom[v:5.7.0]
                        - AmericanSignLanguage[v:5.7.0]
                        - ArdhamagadhiPrakrit[v:5.7.0]
                        - Bhojpuri[v:5.7.0]
                        - HieroglyphicLuwian[v:5.7.0]
                        - LiteraryChinese[v:5.7.0]
                        - Mazanderani[v:5.7.0]
                        - Mru[v:5.7.0]
                        - Newari[v:5.7.0]
                        - NorthernLuri[v:5.7.0]
                        - Palauan[v:5.7.0]
                        - Papiamento[v:5.7.0]
                        - Saraiki[v:5.7.0]
                        - TokelauLanguage[v:5.7.0]
                        - TokPisin[v:5.7.0]
                        - TuvaluLanguage[v:5.7.0]
                        - UncodedLanguages
                        - Cantonese
                        - Osage[v:5.7.0]
                        - Tangut[v:5.7.0]
                        - Norwegian
                        - Moldavian
                        - SerboCroatian
                        - Tagalog
                        - Twi
                        - Afan
                        - Byelorussian
                        - Bhutani
                        - Cambodian
                        - Kurundi
                        - RhaetoRomance
                        - Chewa
                        - Frisian
                        - Uigur
                        - LastLanguage
                  - enum:
                      name: Script
                      enumerators:
                        - AnyScript
                        - ArabicScript
                        - CyrillicScript
                        - DeseretScript
                        - GurmukhiScript
                        - SimplifiedHanScript
                        - TraditionalHanScript
                        - LatinScript
                        - MongolianScript
                        - TifinaghScript
                        - ArmenianScript
                        - BengaliScript
                        - CherokeeScript
                        - DevanagariScript
                        - EthiopicScript
                        - GeorgianScript
                        - GreekScript
                        - GujaratiScript
                        - HebrewScript
                        - JapaneseScript
                        - KhmerScript
                        - KannadaScript
                        - KoreanScript
                        - LaoScript
                        - MalayalamScript
                        - MyanmarScript
                        - OriyaScript
                        - TamilScript
                        - TeluguScript
                        - ThaanaScript
                        - ThaiScript
                        - TibetanScript
                        - SinhalaScript
                        - SyriacScript
                        - YiScript
                        - VaiScript
                        - AvestanScript
                        - BalineseScript
                        - BamumScript
                        - BatakScript
                        - BopomofoScript
                        - BrahmiScript
                        - BugineseScript
                        - BuhidScript
                        - CanadianAboriginalScript
                        - CarianScript
                        - ChakmaScript
                        - ChamScript
                        - CopticScript
                        - CypriotScript
                        - EgyptianHieroglyphsScript
                        - FraserScript
                        - GlagoliticScript
                        - GothicScript
                        - HanScript
                        - HangulScript
                        - HanunooScript
                        - ImperialAramaicScript
                        - InscriptionalPahlaviScript
                        - InscriptionalParthianScript
                        - JavaneseScript
                        - KaithiScript
                        - KatakanaScript
                        - KayahLiScript
                        - KharoshthiScript
                        - LannaScript
                        - LepchaScript
                        - LimbuScript
                        - LinearBScript
                        - LycianScript
                        - LydianScript
                        - MandaeanScript
                        - MeiteiMayekScript
                        - MeroiticScript
                        - MeroiticCursiveScript
                        - NkoScript
                        - NewTaiLueScript
                        - OghamScript
                        - OlChikiScript
                        - OldItalicScript
                        - OldPersianScript
                        - OldSouthArabianScript
                        - OrkhonScript
                        - OsmanyaScript
                        - PhagsPaScript
                        - PhoenicianScript
                        - PollardPhoneticScript
                        - RejangScript
                        - RunicScript
                        - SamaritanScript
                        - SaurashtraScript
                        - SharadaScript
                        - ShavianScript
                        - SoraSompengScript
                        - CuneiformScript
                        - SundaneseScript
                        - SylotiNagriScript
                        - TagalogScript
                        - TagbanwaScript
                        - TaiLeScript
                        - TaiVietScript
                        - TakriScript
                        - UgariticScript
                        - BrailleScript
                        - HiraganaScript
                        - CaucasianAlbanianScript
                        - BassaVahScript
                        - DuployanScript
                        - ElbasanScript
                        - GranthaScript
                        - PahawhHmongScript
                        - KhojkiScript
                        - LinearAScript
                        - MahajaniScript
                        - ManichaeanScript
                        - MendeKikakuiScript
                        - ModiScript
                        - MroScript
                        - OldNorthArabianScript
                        - NabataeanScript
                        - PalmyreneScript
                        - PauCinHauScript
                        - OldPermicScript
                        - PsalterPahlaviScript
                        - SiddhamScript
                        - KhudawadiScript
                        - TirhutaScript
                        - VarangKshitiScript
                        - AhomScript
                        - AnatolianHieroglyphsScript
                        - HatranScript
                        - MultaniScript
                        - OldHungarianScript
                        - SignWritingScript
                        - AdlamScript
                        - BhaiksukiScript
                        - MarchenScript
                        - NewaScript
                        - OsageScript
                        - TangutScript
                        - HanWithBopomofoScript
                        - JamoScript
                        - SimplifiedChineseScript
                        - TraditionalChineseScript
                        - LastScript
                  - enum:
                      name: Country
                      enumerators:
                        - AnyCountry
                        - Afghanistan
                        - Albania
                        - Algeria
                        - AmericanSamoa
                        - Andorra
                        - Angola
                        - Anguilla
                        - Antarctica
                        - AntiguaAndBarbuda
                        - Argentina
                        - Armenia
                        - Aruba
                        - Australia
                        - Austria
                        - Azerbaijan
                        - Bahamas
                        - Bahrain
                        - Bangladesh
                        - Barbados
                        - Belarus
                        - Belgium
                        - Belize
                        - Benin
                        - Bermuda
                        - Bhutan
                        - Bolivia
                        - BosniaAndHerzegowina
                        - Botswana
                        - BouvetIsland
                        - Brazil
                        - BritishIndianOceanTerritory
                        - Brunei
                        - Bulgaria
                        - BurkinaFaso
                        - Burundi
                        - Cambodia
                        - Cameroon
                        - Canada
                        - CapeVerde
                        - CaymanIslands
                        - CentralAfricanRepublic
                        - Chad
                        - Chile
                        - China
                        - ChristmasIsland
                        - CocosIslands
                        - Colombia
                        - Comoros
                        - CongoKinshasa
                        - CongoBrazzaville
                        - CookIslands
                        - CostaRica
                        - IvoryCoast
                        - Croatia
                        - Cuba
                        - Cyprus
                        - CzechRepublic
                        - Denmark
                        - Djibouti
                        - Dominica
                        - DominicanRepublic
                        - EastTimor
                        - Ecuador
                        - Egypt
                        - ElSalvador
                        - EquatorialGuinea
                        - Eritrea
                        - Estonia
                        - Ethiopia
                        - FalklandIslands
                        - FaroeIslands
                        - Fiji
                        - Finland
                        - France
                        - Guernsey
                        - FrenchGuiana
                        - FrenchPolynesia
                        - FrenchSouthernTerritories
                        - Gabon
                        - Gambia
                        - Georgia
                        - Germany
                        - Ghana
                        - Gibraltar
                        - Greece
                        - Greenland
                        - Grenada
                        - Guadeloupe
                        - Guam
                        - Guatemala
                        - Guinea
                        - GuineaBissau
                        - Guyana
                        - Haiti
                        - HeardAndMcDonaldIslands
                        - Honduras
                        - HongKong
                        - Hungary
                        - Iceland
                        - India
                        - Indonesia
                        - Iran
                        - Iraq
                        - Ireland
                        - Israel
                        - Italy
                        - Jamaica
                        - Japan
                        - Jordan
                        - Kazakhstan
                        - Kenya
                        - Kiribati
                        - NorthKorea
                        - SouthKorea
                        - Kuwait
                        - Kyrgyzstan
                        - Laos
                        - Latvia
                        - Lebanon
                        - Lesotho
                        - Liberia
                        - Libya
                        - Liechtenstein
                        - Lithuania
                        - Luxembourg
                        - Macau
                        - Macedonia
                        - Madagascar
                        - Malawi
                        - Malaysia
                        - Maldives
                        - Mali
                        - Malta
                        - MarshallIslands
                        - Martinique
                        - Mauritania
                        - Mauritius
                        - Mayotte
                        - Mexico
                        - Micronesia
                        - Moldova
                        - Monaco
                        - Mongolia
                        - Montserrat
                        - Morocco
                        - Mozambique
                        - Myanmar
                        - Namibia
                        - NauruCountry
                        - Nepal
                        - Netherlands
                        - CuraSao
                        - NewCaledonia
                        - NewZealand
                        - Nicaragua
                        - Niger
                        - Nigeria
                        - Niue
                        - NorfolkIsland
                        - NorthernMarianaIslands
                        - Norway
                        - Oman
                        - Pakistan
                        - Palau
                        - PalestinianTerritories
                        - Panama
                        - PapuaNewGuinea
                        - Paraguay
                        - Peru
                        - Philippines
                        - Pitcairn
                        - Poland
                        - Portugal
                        - PuertoRico
                        - Qatar
                        - Reunion
                        - Romania
                        - Russia
                        - Rwanda
                        - SaintKittsAndNevis
                        - SaintLucia
                        - SaintVincentAndTheGrenadines
                        - Samoa
                        - SanMarino
                        - SaoTomeAndPrincipe
                        - SaudiArabia
                        - Senegal
                        - Seychelles
                        - SierraLeone
                        - Singapore
                        - Slovakia
                        - Slovenia
                        - SolomonIslands
                        - Somalia
                        - SouthAfrica
                        - SouthGeorgiaAndTheSouthSandwichIslands
                        - Spain
                        - SriLanka
                        - SaintHelena
                        - SaintPierreAndMiquelon
                        - Sudan
                        - Suriname
                        - SvalbardAndJanMayenIslands
                        - Swaziland
                        - Sweden
                        - Switzerland
                        - Syria
                        - Taiwan
                        - Tajikistan
                        - Tanzania
                        - Thailand
                        - Togo
                        - TokelauCountry
                        - Tonga
                        - TrinidadAndTobago
                        - Tunisia
                        - Turkey
                        - Turkmenistan
                        - TurksAndCaicosIslands
                        - TuvaluCountry
                        - Uganda
                        - Ukraine
                        - UnitedArabEmirates
                        - UnitedKingdom
                        - UnitedStates
                        - UnitedStatesMinorOutlyingIslands
                        - Uruguay
                        - Uzbekistan
                        - Vanuatu
                        - VaticanCityState
                        - Venezuela
                        - Vietnam
                        - BritishVirginIslands
                        - UnitedStatesVirginIslands
                        - WallisAndFutunaIslands
                        - WesternSahara
                        - Yemen
                        - CanaryIslands
                        - Zambia
                        - Zimbabwe
                        - ClippertonIsland
                        - Montenegro
                        - Serbia
                        - SaintBarthelemy
                        - SaintMartin
                        - LatinAmericaAndTheCaribbean
                        - AscensionIsland
                        - AlandIslands
                        - DiegoGarcia
                        - CeutaAndMelilla
                        - IsleOfMan
                        - Jersey
                        - TristanDaCunha
                        - SouthSudan
                        - Bonaire
                        - SintMaarten
                        - Kosovo
                        - EuropeanUnion[v:5.7.0]
                        - OutlyingOceania[v:5.7.0]
                        - Tokelau
                        - Tuvalu
                        - DemocraticRepublicOfCongo
                        - PeoplesRepublicOfCongo
                        - DemocraticRepublicOfKorea
                        - RepublicOfKorea
                        - RussianFederation
                        - SyrianArabRepublic
                        - LastCountry
                  - enum:
                      name: MeasurementSystem
                      enumerators:
                        - MetricSystem
                        - ImperialUSSystem
                        - ImperialUKSystem
                        - ImperialSystem
                  - enum:
                      name: FormatType
                      enumerators:
                        - LongFormat
                        - ShortFormat
                        - NarrowFormat
                  - enum:
                      name: NumberOption
                      enumerators:
                        - DefaultNumberOptions
                        - OmitGroupSeparator
                        - RejectGroupSeparator
                        - OmitLeadingZeroInExponent
                        - RejectLeadingZeroInExponent
                        - IncludeTrailingZeroesAfterDot
                        - RejectTrailingZeroesAfterDot
                  - enum:
                      name: FloatingPointPrecisionOption
                      enumerators:
                        - FloatingPointShortest
                      version: 5.7.0
                  - enum:
                      name: CurrencySymbolFormat
                      enumerators:
                        - CurrencyIsoCode
                        - CurrencySymbol
                        - CurrencyDisplayName
                  - enum:
                      name: DataSizeFormat
                      checkstate: unchecked
                      enumerators:
                        - DataSizeBase1000[unchecked]
                        - DataSizeSIQuantifiers[unchecked]
                        - DataSizeIecFormat[unchecked]
                        - DataSizeTraditionalFormat[unchecked]
                        - DataSizeSIFormat[unchecked]
                      version: 5.10.0
                  - constructor: QLocale
                  - constructor: QLocale[p:const QString &]
                  - constructor: QLocale[p:QLocale::Language;QLocale::Country=QLocale::AnyCountry]
                  - constructor: QLocale[p:QLocale::Language;QLocale::Script;QLocale::Country]
                  - constructor: QLocale[p:const QLocale &]
                  - function: operator=[r:QLocale &][p:QLocale &&]
                  - function: operator=[r:QLocale &][p:const QLocale &]
                  - destructor: ~QLocale
                  - function: swap[r:void][p:QLocale &]
                  - function: language[r:QLocale::Language][specs:const]
                  - function: script[r:QLocale::Script][specs:const]
                  - function: country[r:QLocale::Country][specs:const]
                  - function: name[r:QString][specs:const]
                  - function: bcp47Name[r:QString][specs:const]
                  - function: nativeLanguageName[r:QString][specs:const]
                  - function: nativeCountryName[r:QString][specs:const]
                  - function: toShort[r:short][p:const QString &;bool *][specs:const]
                  - function: toUShort[r:ushort][p:const QString &;bool *][specs:const]
                  - function: toInt[r:int][p:const QString &;bool *][specs:const]
                  - function: toUInt[r:uint][p:const QString &;bool *][specs:const]
                  - function: toLongLong[r:qlonglong][p:const QString &;bool *][specs:const]
                  - function: toULongLong[r:qulonglong][p:const QString &;bool *][specs:const]
                  - function: toFloat[r:float][p:const QString &;bool *][specs:const]
                  - function: toDouble[r:double][p:const QString &;bool *][specs:const]
                  - function: toShort[r:short][p:const QStringRef &;bool *][specs:const]
                  - function: toUShort[r:ushort][p:const QStringRef &;bool *][specs:const]
                  - function: toInt[r:int][p:const QStringRef &;bool *][specs:const]
                  - function: toUInt[r:uint][p:const QStringRef &;bool *][specs:const]
                  - function: toLongLong[r:qlonglong][p:const QStringRef &;bool *][specs:const]
                  - function: toULongLong[r:qulonglong][p:const QStringRef &;bool *][specs:const]
                  - function: toFloat[r:float][p:const QStringRef &;bool *][specs:const]
                  - function: toDouble[r:double][p:const QStringRef &;bool *][specs:const]
                  - function: toShort[r:short][p:QStringView;bool *][specs:const]
                  - function: toUShort[r:ushort][p:QStringView;bool *][specs:const]
                  - function: toInt[r:int][p:QStringView;bool *][specs:const]
                  - function: toUInt[r:uint][p:QStringView;bool *][specs:const]
                  - function: toLongLong[r:qlonglong][p:QStringView;bool *][specs:const]
                  - function: toULongLong[r:qulonglong][p:QStringView;bool *][specs:const]
                  - function: toFloat[r:float][p:QStringView;bool *][specs:const]
                  - function: toDouble[r:double][p:QStringView;bool *][specs:const]
                  - function: toString[r:QString][p:qlonglong][specs:const]
                  - function: toString[r:QString][p:qulonglong][specs:const]
                  - function: toString[r:QString][p:short][specs:const]
                  - function: toString[r:QString][p:ushort][specs:const]
                  - function: toString[r:QString][p:int][specs:const]
                  - function: toString[r:QString][p:uint][specs:const]
                  - function: toString[r:QString][p:double;char='g';int=6][specs:const]
                  - function: toString[r:QString][p:float;char='g';int=6][specs:const]
                  - function: toString[r:QString][p:const QDate &;const QString &][specs:const]
                  - function: toString[r:QString][p:const QTime &;const QString &][specs:const]
                  - function: toString[r:QString][p:const QDateTime &;const QString &][specs:const]
                  - function: toString[r:QString][p:const QDate &;QStringView][specs:const]
                  - function: toString[r:QString][p:const QTime &;QStringView][specs:const]
                  - function: toString[r:QString][p:const QDateTime &;QStringView][specs:const]
                  - function: toString[r:QString][p:const QDate &;QLocale::FormatType][specs:const]
                  - function: toString[r:QString][p:const QTime &;QLocale::FormatType][specs:const]
                  - function: toString[r:QString][p:const QDateTime &;QLocale::FormatType][specs:const]
                  - function: dateFormat[r:QString][p:QLocale::FormatType=QLocale::LongFormat][specs:const]
                  - function: timeFormat[r:QString][p:QLocale::FormatType=QLocale::LongFormat][specs:const]
                  - function: dateTimeFormat[r:QString][p:QLocale::FormatType=QLocale::LongFormat][specs:const]
                  - function: toDate[r:QDate][p:const QString &;QLocale::FormatType=QLocale::LongFormat][specs:const]
                  - function: toTime[r:QTime][p:const QString &;QLocale::FormatType=QLocale::LongFormat][specs:const]
                  - function: toDateTime[r:QDateTime][p:const QString &;QLocale::FormatType=QLocale::LongFormat][specs:const]
                  - function: toDate[r:QDate][p:const QString &;const QString &][specs:const]
                  - function: toTime[r:QTime][p:const QString &;const QString &][specs:const]
                  - function: toDateTime[r:QDateTime][p:const QString &;const QString &][specs:const]
                  - function: decimalPoint[r:QChar][specs:const]
                  - function: groupSeparator[r:QChar][specs:const]
                  - function: percent[r:QChar][specs:const]
                  - function: zeroDigit[r:QChar][specs:const]
                  - function: negativeSign[r:QChar][specs:const]
                  - function: positiveSign[r:QChar][specs:const]
                  - function: exponential[r:QChar][specs:const]
                  - function: monthName[r:QString][p:int;QLocale::FormatType=QLocale::LongFormat][specs:const]
                  - function: standaloneMonthName[r:QString][p:int;QLocale::FormatType=QLocale::LongFormat][specs:const]
                  - function: dayName[r:QString][p:int;QLocale::FormatType=QLocale::LongFormat][specs:const]
                  - function: standaloneDayName[r:QString][p:int;QLocale::FormatType=QLocale::LongFormat][specs:const]
                  - function: firstDayOfWeek[r:Qt::DayOfWeek][specs:const]
                  - function: weekdays[r:QList<Qt::DayOfWeek>][specs:const]
                  - function: amText[r:QString][specs:const]
                  - function: pmText[r:QString][specs:const]
                  - function: measurementSystem[r:QLocale::MeasurementSystem][specs:const]
                  - function: textDirection[r:Qt::LayoutDirection][specs:const]
                  - function: toUpper[r:QString][p:const QString &][specs:const]
                  - function: toLower[r:QString][p:const QString &][specs:const]
                  - function: currencySymbol[r:QString][p:QLocale::CurrencySymbolFormat][specs:const]
                  - function: toCurrencyString[r:QString][p:qlonglong;const QString &][specs:const]
                  - function: toCurrencyString[r:QString][p:qulonglong;const QString &][specs:const]
                  - function: toCurrencyString[r:QString][p:short;const QString &][specs:const]
                  - function: toCurrencyString[r:QString][p:ushort;const QString &][specs:const]
                  - function: toCurrencyString[r:QString][p:int;const QString &=QString()][specs:const]
                  - function: toCurrencyString[r:QString][p:uint;const QString &][specs:const]
                  - function: toCurrencyString[r:QString][p:double;const QString &=QString()][specs:const]
                  - function: toCurrencyString[r:QString][p:double;const QString &;int][specs:const]
                  - function: toCurrencyString[r:QString][p:float;const QString &=QString()][specs:const]
                  - function: toCurrencyString[r:QString][p:float;const QString &;int][specs:const]
                  - function: formattedDataSize[r:QString][p:qint64;int=2;QLocale::DataSizeFormats=QLocale::DataSizeIecFormat]
                  - function: uiLanguages[r:QStringList][specs:const]
                  - function: operator==[r:bool][p:const QLocale &][specs:const]
                  - function: operator!=[r:bool][p:const QLocale &][specs:const]
                  - function: languageToString[r:QString][p:QLocale::Language][specs:static]
                  - function: countryToString[r:QString][p:QLocale::Country][specs:static]
                  - function: scriptToString[r:QString][p:QLocale::Script][specs:static]
                  - function: setDefault[r:void][p:const QLocale &][specs:static]
                  - function: c[r:QLocale][specs:static]
                  - function: system[r:QLocale][specs:static]
                  - function: matchingLocales[r:QList<QLocale>][p:QLocale::Language;QLocale::Script;QLocale::Country][specs:static]
                  - function: countriesForLanguage[r:QList<QLocale::Country>][p:QLocale::Language][specs:static]
                  - function: setNumberOptions[r:void][p:QLocale::NumberOptions]
                  - function: numberOptions[r:QLocale::NumberOptions][specs:const]
                  - enum:
                      name: QuotationStyle
                      enumerators:
                        - StandardQuotation
                        - AlternateQuotation
                  - function: quoteString[r:QString][p:const QString &;QLocale::QuotationStyle=QLocale::StandardQuotation][specs:const]
                  - function: quoteString[r:QString][p:const QStringRef &;QLocale::QuotationStyle=QLocale::StandardQuotation][specs:const]
                  - function: createSeparatedList[r:QString][p:const QStringList &][specs:const]
            - function: swap[r:void][p:QLocale &;QLocale &]
            - function: operator|[r:QLocale::NumberOptions][p:QLocale::NumberOption;QLocale::NumberOption]
            - function: operator|[r:QLocale::NumberOptions][p:QLocale::NumberOption;QLocale::NumberOptions]
            - function: operator|[r:QIncompatibleFlag][p:QLocale::NumberOptions::enum_type;int]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QLocale &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QLocale &]
            - function: operator<<[r:QDebug][p:QDebug;const QLocale &]
          hincludes: <QLocale>
      - file:
          name: timezone
          checkstate: partially-checked
          elements:
            - class:
                name: QTimeZone
                checkstate: partially-checked
                elements:
                  - enum:
                      name: ""
                      checkstate: unchecked
                      enumerators:
                        - MinUtcOffsetSecs
                        - MaxUtcOffsetSecs
                  - enum:
                      name: TimeType
                      enumerators:
                        - StandardTime
                        - DaylightTime
                        - GenericTime
                  - enum:
                      name: NameType
                      enumerators:
                        - DefaultName
                        - LongName
                        - ShortName
                        - OffsetName
                  - constructor: QTimeZone
                  - constructor: QTimeZone[p:const QByteArray &]
                  - constructor: QTimeZone[p:int]
                  - constructor: QTimeZone[p:const QByteArray &;int;const QString &;const QString &;QLocale::Country=QLocale::AnyCountry;const QString &=QString()]
                  - constructor: QTimeZone[p:const QTimeZone &]
                  - destructor: ~QTimeZone
                  - function: operator=[r:QTimeZone &][p:const QTimeZone &]
                  - function: operator=[r:QTimeZone &][p:QTimeZone &&]
                  - function: swap[r:void][p:QTimeZone &]
                  - function: operator==[r:bool][p:const QTimeZone &][specs:const]
                  - function: operator!=[r:bool][p:const QTimeZone &][specs:const]
                  - function: isValid[r:bool][specs:const]
                  - function: id[r:QByteArray][specs:const]
                  - function: country[r:QLocale::Country][specs:const]
                  - function: comment[r:QString][specs:const]
                  - function: displayName[r:QString][p:const QDateTime &;QTimeZone::NameType= QTimeZone::DefaultName;const QLocale &=QLocale()][specs:const]
                  - function: displayName[r:QString][p:QTimeZone::TimeType;QTimeZone::NameType= QTimeZone::DefaultName;const QLocale &=QLocale()][specs:const]
                  - function: abbreviation[r:QString][p:const QDateTime &][specs:const]
                  - function: offsetFromUtc[r:int][p:const QDateTime &][specs:const]
                  - function: standardTimeOffset[r:int][p:const QDateTime &][specs:const]
                  - function: daylightTimeOffset[r:int][p:const QDateTime &][specs:const]
                  - function: hasDaylightTime[r:bool][specs:const]
                  - function: isDaylightTime[r:bool][p:const QDateTime &][specs:const]
                  - function: offsetData[r:QTimeZone::OffsetData][p:const QDateTime &][specs:const]
                  - function: hasTransitions[r:bool][specs:const]
                  - function: nextTransition[r:QTimeZone::OffsetData][p:const QDateTime &][specs:const]
                  - function: previousTransition[r:QTimeZone::OffsetData][p:const QDateTime &][specs:const]
                  - function: transitions[r:QTimeZone::OffsetDataList][p:const QDateTime &;const QDateTime &][specs:const]
                  - function: systemTimeZoneId[r:QByteArray][specs:static][v:5.5.0]
                  - function: systemTimeZone[r:QTimeZone][specs:static]
                  - function: utc[r:QTimeZone][specs:static][v:5.5.0]
                  - function: isTimeZoneIdAvailable[r:bool][p:const QByteArray &][specs:static]
                  - function: availableTimeZoneIds[r:QList<QByteArray>][specs:static]
                  - function: availableTimeZoneIds[r:QList<QByteArray>][p:QLocale::Country][specs:static]
                  - function: availableTimeZoneIds[r:QList<QByteArray>][p:int][specs:static]
                  - function: ianaIdToWindowsId[r:QByteArray][p:const QByteArray &][specs:static]
                  - function: windowsIdToDefaultIanaId[r:QByteArray][p:const QByteArray &][specs:static]
                  - function: windowsIdToDefaultIanaId[r:QByteArray][p:const QByteArray &;QLocale::Country][specs:static]
                  - function: windowsIdToIanaIds[r:QList<QByteArray>][p:const QByteArray &][specs:static]
                  - function: windowsIdToIanaIds[r:QList<QByteArray>][p:const QByteArray &;QLocale::Country][specs:static]
                version: 5.2.0
            - function: swap[r:void][p:QTimeZone &;QTimeZone &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QTimeZone &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QTimeZone &]
            - function: operator<<[r:QDebug][p:QDebug;const QTimeZone &]
          hincludes: <QTimeZone>
      - file:
          name: object
          checkstate: partially-checked
          elements:
            - class:
                name: QObject
                checkstate: partially-checked
                elements:
                  - function: metaObject[r:const QMetaObject *][specs:const]
                  - function: tr[r:QString][p:const char *;const char *;int][specs:static]
                  - function: trUtf8[r:QString][p:const char *;const char *;int][specs:static]
                  - constructor: QObject[p:QObject *=(QObject*)nullptr]
                  - destructor: ~QObject
                  - function: event[r:bool][p:QEvent *]
                  - function: eventFilter[r:bool][p:QObject *;QEvent *]
                  - function: objectName[r:QString][specs:const]
                  - function: setObjectName[r:void][p:const QString &]
                  - function: isWidgetType[r:bool][specs:const]
                  - function: isWindowType[r:bool][specs:const]
                  - function: signalsBlocked[r:bool][specs:const]
                  - function: blockSignals[r:bool][p:bool]
                  - function: thread[r:QThread *][specs:const]
                  - function: moveToThread[r:void][p:QThread *]
                  - function: startTimer[r:int][p:int;Qt::TimerType=Qt::CoarseTimer]
                  - function: startTimer[r:int][p:std::chrono::milliseconds;Qt::TimerType]
                  - function: killTimer[r:void][p:int]
                  - function: children[r:const QObjectList &][specs:const]
                  - function: setParent[r:void][p:QObject *]
                  - function: installEventFilter[r:void][p:QObject *]
                  - function: removeEventFilter[r:void][p:QObject *]
                  - function: connect[r:QMetaObject::Connection][p:const QObject *;const char *;const QObject *;const char *;Qt::ConnectionType][specs:static]
                  - function: connect[r:QMetaObject::Connection][p:const QObject *;const QMetaMethod &;const QObject *;const QMetaMethod &;Qt::ConnectionType][specs:static]
                  - function: connect[r:QMetaObject::Connection][p:const QObject *;const char *;const char *;Qt::ConnectionType][specs:const]
                  - function: disconnect[r:bool][p:const QObject *;const char *;const QObject *;const char *][specs:static]
                  - function: disconnect[r:bool][p:const QObject *;const QMetaMethod &;const QObject *;const QMetaMethod &][specs:static]
                  - function: disconnect[r:bool][p:const char *;const QObject *;const char *][specs:const]
                  - function: disconnect[r:bool][p:const QObject *;const char *][specs:const]
                  - function: disconnect[r:bool][p:const QMetaObject::Connection &][specs:static]
                  - function: dumpObjectTree[r:void][specs:const][v:5.9.0]
                  - function: dumpObjectInfo[r:void][specs:const][v:5.9.0]
                  - function: setProperty[r:bool][p:const char *;const QVariant &]
                  - function: property[r:QVariant][p:const char *][specs:const]
                  - function: dynamicPropertyNames[r:QList<QByteArray>][specs:const]
                  - function: registerUserData[r:uint][specs:static][unchecked]
                  - function: setUserData[r:void][p:uint;QObjectUserData *][unchecked]
                  - function: userData[r:QObjectUserData *][p:uint][specs:const][unchecked]
                  - function: destroyed[r:void][p:QObject *][binding:signals]
                  - function: objectNameChanged[r:void][p:const QString &;QObject::QPrivateSignal][unchecked]
                  - function: parent[r:QObject *][specs:const]
                  - function: inherits[r:bool][p:const char *][specs:const]
                  - function: deleteLater[r:void]
            - function: operator<<[r:QDebug][p:QDebug;const QObject *]
            - class:
                name: QSignalBlocker
                elements:
                  - constructor: QSignalBlocker[p:QObject *]
                  - constructor: QSignalBlocker[p:QObject &]
                  - destructor: ~QSignalBlocker
                  - constructor: QSignalBlocker[p:QSignalBlocker &&]
                  - function: operator=[r:QSignalBlocker &][p:QSignalBlocker &&]
                  - function: reblock[r:void]
                  - function: unblock[r:void]
                version: 5.3.0
          hincludes: <QObject>
      - file:
          name: uuid
          checkstate: partially-checked
          elements:
            - class:
                name: QUuid
                checkstate: partially-checked
                elements:
                  - enum:
                      name: Variant
                      enumerators:
                        - VarUnknown
                        - NCS
                        - DCE
                        - Microsoft
                        - Reserved
                  - enum:
                      name: Version
                      enumerators:
                        - VerUnknown
                        - Time
                        - EmbeddedPOSIX
                        - Md5
                        - Name
                        - Random
                        - Sha1
                  - constructor: QUuid
                  - constructor: QUuid[p:const QUuid &]
                  - destructor: ~QUuid
                  - constructor: QUuid[p:uint;ushort;ushort;uchar;uchar;uchar;uchar;uchar;uchar;uchar;uchar]
                  - constructor: QUuid[p:const QString &]
                  - function: fromString[r:QUuid][p:QStringView][specs:static][unchecked]
                  - function: fromString[r:QUuid][p:QLatin1String][specs:static][unchecked]
                  - constructor: QUuid[p:const char *]
                  - function: toString[r:QString][specs:const]
                  - constructor: QUuid[p:const QByteArray &]
                  - function: toByteArray[r:QByteArray][specs:const]
                  - function: toRfc4122[r:QByteArray][specs:const]
                  - function: fromRfc4122[r:QUuid][p:const QByteArray &][specs:static]
                  - function: isNull[r:bool][specs:const]
                  - function: operator=[r:QUuid &][p:const QUuid &]
                  - function: operator==[r:bool][p:const QUuid &][specs:const]
                  - function: operator!=[r:bool][p:const QUuid &][specs:const]
                  - function: operator<[r:bool][p:const QUuid &][specs:const]
                  - function: operator>[r:bool][p:const QUuid &][specs:const]
                  - constructor: QUuid[p:const GUID &]
                  - function: operator=[r:QUuid &][p:const GUID &]
                  - function: operator==[r:bool][p:const GUID &][specs:const]
                  - function: operator!=[r:bool][p:const GUID &][specs:const]
                  - function: createUuid[r:QUuid][specs:static]
                  - function: createUuidV3[r:QUuid][p:const QUuid &;const QByteArray &][specs:static]
                  - function: createUuidV5[r:QUuid][p:const QUuid &;const QByteArray &][specs:static]
                  - function: createUuidV3[r:QUuid][p:const QUuid &;const QString &][specs:static]
                  - function: createUuidV5[r:QUuid][p:const QUuid &;const QString &][specs:static]
                  - function: variant[r:QUuid::Variant][specs:const]
                  - function: version[r:QUuid::Version][specs:const]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QUuid &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QUuid &]
            - function: operator<<[r:QDebug][p:QDebug;const QUuid &]
            - function: qHash[r:uint][p:const QUuid &;uint]
            - function: operator<=[r:bool][p:const QUuid &;const QUuid &][v:5.5.0]
            - function: operator>=[r:bool][p:const QUuid &;const QUuid &][v:5.5.0]
          hincludes: <QUuid>
      - file:
          name: variant
          checkstate: partially-checked
          cppincludes: yasl/core/variant-functions.h;yasl/common/variant-utils.h;yasl/core/qvariant-binder.h
          elements:
            - class:
                name: QVariant
                checkstate: partially-checked
                elements:
                  - constructor: QVariant
                  - destructor: ~QVariant
                  - constructor: QVariant[p:QVariant::Type]
                  - constructor: QVariant[p:int;const void *]
                  - constructor: QVariant[p:int;const void *;uint]
                  - constructor: QVariant[p:const QVariant &]
                  - constructor: QVariant[p:QDataStream &]
                  - constructor: QVariant[p:int]
                  - constructor: QVariant[p:uint][unchecked]
                  - constructor: QVariant[p:qlonglong]
                  - constructor: QVariant[p:qulonglong]
                  - constructor: QVariant[p:bool]
                  - constructor: QVariant[p:double]
                  - constructor: QVariant[p:float]
                  - constructor: QVariant[p:const char *]
                  - constructor: QVariant[p:const QByteArray &]
                  - constructor: QVariant[p:const QBitArray &]
                  - constructor: QVariant[p:const QString &]
                  - constructor: QVariant[p:QLatin1String]
                  - constructor: QVariant[p:const QStringList &]
                  - constructor: QVariant[p:QChar]
                  - constructor: QVariant[p:const QDate &]
                  - constructor: QVariant[p:const QTime &]
                  - constructor: QVariant[p:const QDateTime &]
                  - constructor: QVariant[p:const QList<QVariant> &]
                  - constructor: QVariant[p:const QMap<QString, QVariant> &]
                  - constructor: QVariant[p:const QHash<QString, QVariant> &]
                  - constructor: QVariant[p:const QSize &]
                  - constructor: QVariant[p:const QSizeF &]
                  - constructor: QVariant[p:const QPoint &]
                  - constructor: QVariant[p:const QPointF &]
                  - constructor: QVariant[p:const QLine &]
                  - constructor: QVariant[p:const QLineF &]
                  - constructor: QVariant[p:const QRect &]
                  - constructor: QVariant[p:const QRectF &]
                  - constructor: QVariant[p:const QLocale &]
                  - constructor: QVariant[p:const QRegExp &]
                  - constructor: QVariant[p:const QRegularExpression &]
                  - constructor: QVariant[p:const QUrl &]
                  - constructor: QVariant[p:const QEasingCurve &]
                  - constructor: QVariant[p:const QUuid &]
                  - constructor: QVariant[p:const QModelIndex &]
                  - constructor: QVariant[p:const QPersistentModelIndex &][v:5.5.0]
                  - constructor: QVariant[p:const QJsonValue &]
                  - constructor: QVariant[p:const QJsonObject &]
                  - constructor: QVariant[p:const QJsonArray &]
                  - constructor: QVariant[p:const QJsonDocument &]
                  - function: operator=[r:QVariant &][p:const QVariant &]
                  - constructor: QVariant[p:QVariant &&]
                  - function: operator=[r:QVariant &][p:QVariant &&]
                  - function: swap[r:void][p:QVariant &]
                  - function: type[r:QVariant::Type][specs:const][unchecked]
                  - function: userType[r:int][specs:const][unchecked]
                  - function: typeName[r:const char *][specs:const]
                  - function: canConvert[r:bool][p:int][specs:const]
                  - function: convert[r:bool][p:int]
                  - function: isValid[r:bool][specs:const]
                  - function: isNull[r:bool][specs:const]
                  - function: clear[r:void]
                  - function: detach[r:void]
                  - function: isDetached[r:bool][specs:const]
                  - function: toInt[r:int][p:bool *][specs:const][unchecked]
                  - function: va_toInt[r:int][binding:free][rename:toInt]
                  - function: toUInt[r:uint][p:bool *][specs:const][unchecked]
                  - function: toLongLong[r:qlonglong][p:bool *][specs:const][unchecked]
                  - function: toULongLong[r:qulonglong][p:bool *][specs:const][unchecked]
                  - function: toBool[r:bool][specs:const]
                  - function: toDouble[r:double][p:bool *][specs:const][unchecked]
                  - function: va_toDouble[r:double][binding:free][rename:toDouble]
                  - function: toFloat[r:float][p:bool *][specs:const][unchecked]
                  - function: va_toFloat[r:float][binding:free][rename:toFloat]
                  - function: toReal[r:qreal][p:bool *][specs:const]
                  - function: toByteArray[r:QByteArray][specs:const]
                  - function: toBitArray[r:QBitArray][specs:const]
                  - function: toString[r:QString][specs:const]
                  - function: toStringList[r:QStringList][specs:const]
                  - function: toChar[r:QChar][specs:const]
                  - function: toDate[r:QDate][specs:const]
                  - function: toTime[r:QTime][specs:const]
                  - function: toDateTime[r:QDateTime][specs:const]
                  - function: toList[r:QList<QVariant>][specs:const]
                  - function: toMap[r:QMap<QString, QVariant>][specs:const]
                  - function: toHash[r:QHash<QString, QVariant>][specs:const]
                  - function: toPoint[r:QPoint][specs:const]
                  - function: toPointF[r:QPointF][specs:const]
                  - function: toRect[r:QRect][specs:const]
                  - function: toSize[r:QSize][specs:const]
                  - function: toSizeF[r:QSizeF][specs:const]
                  - function: toLine[r:QLine][specs:const]
                  - function: toLineF[r:QLineF][specs:const]
                  - function: toRectF[r:QRectF][specs:const]
                  - function: toLocale[r:QLocale][specs:const]
                  - function: toRegExp[r:QRegExp][specs:const]
                  - function: toRegularExpression[r:QRegularExpression][specs:const]
                  - function: toUrl[r:QUrl][specs:const]
                  - function: toEasingCurve[r:QEasingCurve][specs:const]
                  - function: toUuid[r:QUuid][specs:const]
                  - function: toModelIndex[r:QModelIndex][specs:const]
                  - function: toPersistentModelIndex[r:QPersistentModelIndex][specs:const][v:5.5.0]
                  - function: toJsonValue[r:QJsonValue][specs:const]
                  - function: toJsonObject[r:QJsonObject][specs:const]
                  - function: toJsonArray[r:QJsonArray][specs:const]
                  - function: toJsonDocument[r:QJsonDocument][specs:const]
                  - function: load[r:void][p:QDataStream &]
                  - function: save[r:void][p:QDataStream &][specs:const]
                  - function: typeToName[r:const char *][p:int][specs:static][unchecked]
                  - function: nameToType[r:QVariant::Type][p:const char *][specs:static]
                  - function: data[r:void *]
                  - function: constData[r:const void *][specs:const]
                  - function: data[r:const void *][specs:const]
                  - function: operator==[r:bool][p:const QVariant &][specs:const]
                  - function: operator!=[r:bool][p:const QVariant &][specs:const]
                  - function: operator<[r:bool][p:const QVariant &][specs:const]
                  - function: operator<=[r:bool][p:const QVariant &][specs:const]
                  - function: operator>[r:bool][p:const QVariant &][specs:const]
                  - function: operator>=[r:bool][p:const QVariant &][specs:const]
                  - function: create[r:void][p:int;const void *]
                  - function: compare[r:int][p:const QVariant &][specs:const][unchecked]
                  - function: convert[r:bool][p:const int;void *][specs:const]
                  - function: data_ptr[r:QVariant::DataPtr &]
                  - function: data_ptr[r:const QVariant::DataPtr &][specs:const]
            - function: qVariantFromValue[r:QVariant][p:const QVariant &][unchecked]
            - function: qVariantSetValue[r:void][p:QVariant &;const QVariant &][unchecked]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QVariant &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QVariant &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QVariant::Type &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QVariant::Type]
            - function: swap[r:void][p:QVariant &;QVariant &]
            - function: qvariant_cast[r:QVariant][p:const QVariant &][unchecked]
            - function: operator<<[r:QDebug][p:QDebug;const QVariant &]
            - function: operator<<[r:QDebug][p:QDebug;const QVariant::Type]
            - statement: yasl::complete_variant_class(ns.engine());
          hincludes: yasl/core/qvariant-values.h
      - file:
          name: regularexpression
          checkstate: partially-checked
          elements:
            - function: qHash[r:uint][p:const QRegularExpression &;uint][v:5.6.0]
            - class:
                name: QRegularExpression
                elements:
                  - enum:
                      name: PatternOption
                      enumerators:
                        - NoPatternOption
                        - CaseInsensitiveOption
                        - DotMatchesEverythingOption
                        - MultilineOption
                        - ExtendedPatternSyntaxOption
                        - InvertedGreedinessOption
                        - DontCaptureOption
                        - UseUnicodePropertiesOption
                        - OptimizeOnFirstUsageOption[v:5.4.0]
                        - DontAutomaticallyOptimizeOption[v:5.4.0]
                  - function: patternOptions[r:QRegularExpression::PatternOptions][specs:const]
                  - function: setPatternOptions[r:void][p:QRegularExpression::PatternOptions]
                  - constructor: QRegularExpression
                  - constructor: QRegularExpression[p:const QString &;QRegularExpression::PatternOptions=QRegularExpression::PatternOptions(QRegularExpression::NoPatternOption)]
                  - constructor: QRegularExpression[p:const QRegularExpression &]
                  - destructor: ~QRegularExpression
                  - function: operator=[r:QRegularExpression &][p:const QRegularExpression &]
                  - function: operator=[r:QRegularExpression &][p:QRegularExpression &&]
                  - function: swap[r:void][p:QRegularExpression &]
                  - function: pattern[r:QString][specs:const]
                  - function: setPattern[r:void][p:const QString &]
                  - function: isValid[r:bool][specs:const]
                  - function: patternErrorOffset[r:int][specs:const]
                  - function: errorString[r:QString][specs:const]
                  - function: captureCount[r:int][specs:const]
                  - function: namedCaptureGroups[r:QStringList][specs:const][v:5.1.0]
                  - enum:
                      name: MatchType
                      enumerators:
                        - NormalMatch
                        - PartialPreferCompleteMatch
                        - PartialPreferFirstMatch
                        - NoMatch[v:5.1.0]
                  - enum:
                      name: MatchOption
                      enumerators:
                        - NoMatchOption
                        - AnchoredMatchOption
                        - DontCheckSubjectStringMatchOption[v:5.4.0]
                  - function: match[r:QRegularExpressionMatch][p:const QString &;int;QRegularExpression::MatchType=QRegularExpression::NormalMatch;QRegularExpression::MatchOptions=QRegularExpression::MatchOptions(QRegularExpression::NoMatchOption)][specs:const]
                  - function: match[r:QRegularExpressionMatch][p:const QStringRef &;int;QRegularExpression::MatchType;QRegularExpression::MatchOptions][specs:const]
                  - function: globalMatch[r:QRegularExpressionMatchIterator][p:const QString &;int;QRegularExpression::MatchType=QRegularExpression::NormalMatch;QRegularExpression::MatchOptions=QRegularExpression::MatchOptions(QRegularExpression::NoMatchOption)][specs:const]
                  - function: optimize[r:void][specs:const][v:5.4.0]
                  - function: escape[r:QString][p:const QString &][specs:static]
                  - function: operator==[r:bool][p:const QRegularExpression &][specs:const]
                  - function: operator!=[r:bool][p:const QRegularExpression &][specs:const]
            - function: swap[r:void][p:QRegularExpression &;QRegularExpression &]
            - function: operator|[r:QRegularExpression::PatternOptions][p:QRegularExpression::PatternOption;QRegularExpression::PatternOption]
            - function: operator|[r:QRegularExpression::PatternOptions][p:QRegularExpression::PatternOption;QRegularExpression::PatternOptions]
            - function: operator|[r:QIncompatibleFlag][p:QRegularExpression::PatternOptions::enum_type;int]
            - function: operator|[r:QRegularExpression::MatchOptions][p:QRegularExpression::MatchOption;QRegularExpression::MatchOption]
            - function: operator|[r:QRegularExpression::MatchOptions][p:QRegularExpression::MatchOption;QRegularExpression::MatchOptions]
            - function: operator|[r:QIncompatibleFlag][p:QRegularExpression::MatchOptions::enum_type;int]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QRegularExpression &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QRegularExpression &]
            - function: operator<<[r:QDebug][p:QDebug;const QRegularExpression &]
            - function: operator<<[r:QDebug][p:QDebug;QRegularExpression::PatternOptions]
            - class:
                name: QRegularExpressionMatch
                elements:
                  - constructor: QRegularExpressionMatch
                  - destructor: ~QRegularExpressionMatch
                  - constructor: QRegularExpressionMatch[p:const QRegularExpressionMatch &]
                  - function: operator=[r:QRegularExpressionMatch &][p:const QRegularExpressionMatch &]
                  - function: operator=[r:QRegularExpressionMatch &][p:QRegularExpressionMatch &&]
                  - function: swap[r:void][p:QRegularExpressionMatch &]
                  - function: regularExpression[r:QRegularExpression][specs:const]
                  - function: matchType[r:QRegularExpression::MatchType][specs:const]
                  - function: matchOptions[r:QRegularExpression::MatchOptions][specs:const]
                  - function: hasMatch[r:bool][specs:const]
                  - function: hasPartialMatch[r:bool][specs:const]
                  - function: isValid[r:bool][specs:const]
                  - function: lastCapturedIndex[r:int][specs:const]
                  - function: captured[r:QString][p:int][specs:const]
                  - function: capturedRef[r:QStringRef][p:int][specs:const]
                  - function: capturedView[r:QStringView][p:int][specs:const]
                  - function: captured[r:QString][p:const QString &][specs:const]
                  - function: capturedRef[r:QStringRef][p:const QString &][specs:const]
                  - function: captured[r:QString][p:QStringView][specs:const]
                  - function: capturedRef[r:QStringRef][p:QStringView][specs:const]
                  - function: capturedView[r:QStringView][p:QStringView][specs:const]
                  - function: capturedTexts[r:QStringList][specs:const]
                  - function: capturedStart[r:int][p:int][specs:const]
                  - function: capturedLength[r:int][p:int][specs:const]
                  - function: capturedEnd[r:int][p:int][specs:const]
                  - function: capturedStart[r:int][p:const QString &][specs:const]
                  - function: capturedLength[r:int][p:const QString &][specs:const]
                  - function: capturedEnd[r:int][p:const QString &][specs:const]
                  - function: capturedStart[r:int][p:QStringView][specs:const]
                  - function: capturedLength[r:int][p:QStringView][specs:const]
                  - function: capturedEnd[r:int][p:QStringView][specs:const]
            - function: swap[r:void][p:QRegularExpressionMatch &;QRegularExpressionMatch &]
            - function: operator<<[r:QDebug][p:QDebug;const QRegularExpressionMatch &]
            - class:
                name: QRegularExpressionMatchIterator
                elements:
                  - constructor: QRegularExpressionMatchIterator
                  - destructor: ~QRegularExpressionMatchIterator
                  - constructor: QRegularExpressionMatchIterator[p:const QRegularExpressionMatchIterator &]
                  - function: operator=[r:QRegularExpressionMatchIterator &][p:const QRegularExpressionMatchIterator &]
                  - function: operator=[r:QRegularExpressionMatchIterator &][p:QRegularExpressionMatchIterator &&]
                  - function: swap[r:void][p:QRegularExpressionMatchIterator &]
                  - function: isValid[r:bool][specs:const]
                  - function: hasNext[r:bool][specs:const]
                  - function: next[r:QRegularExpressionMatch]
                  - function: peekNext[r:QRegularExpressionMatch][specs:const]
                  - function: regularExpression[r:QRegularExpression][specs:const]
                  - function: matchType[r:QRegularExpression::MatchType][specs:const]
                  - function: matchOptions[r:QRegularExpression::MatchOptions][specs:const]
            - function: swap[r:void][p:QRegularExpressionMatchIterator &;QRegularExpressionMatchIterator &]
          hincludes: <QRegularExpression>
      - file:
          name: settings
          checkstate: partially-checked
          elements:
            - class:
                name: QSettings
                base: QObject
                checkstate: partially-checked
                elements:
                  - enum:
                      name: Status
                      enumerators:
                        - NoError
                        - AccessError
                        - FormatError
                  - enum:
                      name: Format
                      enumerators:
                        - NativeFormat
                        - IniFormat
                        - InvalidFormat
                        - CustomFormat1
                        - CustomFormat2
                        - CustomFormat3
                        - CustomFormat4
                        - CustomFormat5
                        - CustomFormat6
                        - CustomFormat7
                        - CustomFormat8
                        - CustomFormat9
                        - CustomFormat10
                        - CustomFormat11
                        - CustomFormat12
                        - CustomFormat13
                        - CustomFormat14
                        - CustomFormat15
                        - CustomFormat16
                  - enum:
                      name: Scope
                      enumerators:
                        - UserScope
                        - SystemScope
                  - constructor: QSettings[p:const QString &;const QString &=QString();QObject *=(QObject*)nullptr]
                  - constructor: QSettings[p:QSettings::Scope;const QString &;const QString &=QString();QObject *=(QObject*)nullptr]
                  - constructor: QSettings[p:QSettings::Format;QSettings::Scope;const QString &;const QString &=QString();QObject *=(QObject*)nullptr]
                  - constructor: QSettings[p:const QString &;QSettings::Format;QObject *=(QObject*)nullptr]
                  - constructor: QSettings[p:QObject *=(QObject*)nullptr]
                  - destructor: ~QSettings
                  - function: clear[r:void]
                  - function: sync[r:void]
                  - function: status[r:QSettings::Status][specs:const]
                  - function: isAtomicSyncRequired[r:bool][specs:const][v:5.10.0][unchecked]
                  - function: setAtomicSyncRequired[r:void][p:bool][v:5.10.0][unchecked]
                  - function: beginGroup[r:void][p:const QString &]
                  - function: endGroup[r:void]
                  - function: group[r:QString][specs:const]
                  - function: beginReadArray[r:int][p:const QString &]
                  - function: beginWriteArray[r:void][p:const QString &;int=-1]
                  - function: endArray[r:void]
                  - function: setArrayIndex[r:void][p:int]
                  - function: allKeys[r:QStringList][specs:const]
                  - function: childKeys[r:QStringList][specs:const]
                  - function: childGroups[r:QStringList][specs:const]
                  - function: isWritable[r:bool][specs:const]
                  - function: setValue[r:void][p:const QString &;const QVariant &]
                  - function: value[r:QVariant][p:const QString &;const QVariant &=QVariant()][specs:const]
                  - function: remove[r:void][p:const QString &]
                  - function: contains[r:bool][p:const QString &][specs:const]
                  - function: setFallbacksEnabled[r:void][p:bool]
                  - function: fallbacksEnabled[r:bool][specs:const]
                  - function: fileName[r:QString][specs:const]
                  - function: format[r:QSettings::Format][specs:const]
                  - function: scope[r:QSettings::Scope][specs:const]
                  - function: organizationName[r:QString][specs:const]
                  - function: applicationName[r:QString][specs:const]
                  - function: setIniCodec[r:void][p:QTextCodec *]
                  - function: setIniCodec[r:void][p:const char *]
                  - function: iniCodec[r:QTextCodec *][specs:const]
                  - function: setDefaultFormat[r:void][p:QSettings::Format][specs:static]
                  - function: defaultFormat[r:QSettings::Format][specs:static]
                  - function: setSystemIniPath[r:void][p:const QString &][specs:static]
                  - function: setUserIniPath[r:void][p:const QString &][specs:static]
                  - function: setPath[r:void][p:QSettings::Format;QSettings::Scope;const QString &][specs:static]
                  - function: registerFormat[r:QSettings::Format][p:const QString &;QSettings::ReadFunc;QSettings::WriteFunc;Qt::CaseSensitivity][specs:static]
          hincludes: <QSettings>
      - file:
          name: timer
          elements:
            - class:
                name: QTimer
                base: QObject
                elements:
                  - constructor: QTimer[p:QObject *=(QObject*)nullptr]
                  - destructor: ~QTimer
                  - function: isActive[r:bool][specs:const]
                  - function: timerId[r:int][specs:const]
                  - function: setInterval[r:void][p:int]
                  - function: interval[r:int][specs:const]
                  - function: remainingTime[r:int][specs:const]
                  - function: setTimerType[r:void][p:Qt::TimerType]
                  - function: timerType[r:Qt::TimerType][specs:const]
                  - function: setSingleShot[r:void][p:bool]
                  - function: isSingleShot[r:bool][specs:const]
                  - function: singleShot[r:void][p:int;const QObject *;const char *][specs:static]
                  - function: singleShot[r:void][p:int;Qt::TimerType;const QObject *;const char *][specs:static]
                  - function: start[r:void][p:int]
                  - function: start[r:void]
                  - function: stop[r:void]
                  - function: timeout[r:void][binding:signals]
                  - function: setInterval[r:void][p:std::chrono::milliseconds]
                  - function: intervalAsDuration[r:std::chrono::milliseconds][specs:const]
                  - function: remainingTimeAsDuration[r:std::chrono::milliseconds][specs:const]
                  - function: singleShot[r:void][p:std::chrono::milliseconds;const QObject *;const char *][specs:static]
                  - function: singleShot[r:void][p:std::chrono::milliseconds;Qt::TimerType;const QObject *;const char *][specs:static]
                  - function: start[r:void][p:std::chrono::milliseconds]
          hincludes: <QTimer>
      - file:
          name: iodevice
          checkstate: partially-checked
          elements:
            - class:
                name: QIODevice
                base: QObject
                checkstate: partially-checked
                elements:
                  - enum:
                      name: OpenModeFlag
                      enumerators:
                        - NotOpen
                        - ReadOnly
                        - WriteOnly
                        - ReadWrite
                        - Append
                        - Truncate
                        - Text
                        - Unbuffered
                  - constructor: QIODevice[unchecked]
                  - constructor: QIODevice[p:QObject *][unchecked]
                  - destructor: ~QIODevice
                  - function: openMode[r:QIODevice::OpenMode][specs:const]
                  - function: setTextModeEnabled[r:void][p:bool]
                  - function: isTextModeEnabled[r:bool][specs:const]
                  - function: isOpen[r:bool][specs:const]
                  - function: isReadable[r:bool][specs:const]
                  - function: isWritable[r:bool][specs:const]
                  - function: isSequential[r:bool][specs:const]
                  - function: readChannelCount[r:int][specs:const][v:5.7.0]
                  - function: writeChannelCount[r:int][specs:const][v:5.7.0]
                  - function: currentReadChannel[r:int][specs:const][v:5.7.0]
                  - function: setCurrentReadChannel[r:void][p:int][v:5.7.0]
                  - function: currentWriteChannel[r:int][specs:const][v:5.7.0]
                  - function: setCurrentWriteChannel[r:void][p:int][v:5.7.0]
                  - function: open[r:bool][p:QIODevice::OpenMode]
                  - function: close[r:void]
                  - function: pos[r:qint64][specs:const]
                  - function: size[r:qint64][specs:const]
                  - function: seek[r:bool][p:qint64]
                  - function: atEnd[r:bool][specs:const]
                  - function: reset[r:bool]
                  - function: bytesAvailable[r:qint64][specs:const]
                  - function: bytesToWrite[r:qint64][specs:const]
                  - function: read[r:qint64][p:char *;qint64]
                  - function: read[r:QByteArray][p:qint64]
                  - function: readAll[r:QByteArray]
                  - function: readLine[r:qint64][p:char *;qint64]
                  - function: readLine[r:QByteArray][p:qint64]
                  - function: canReadLine[r:bool][specs:const]
                  - function: startTransaction[r:void][v:5.7.0]
                  - function: commitTransaction[r:void]
                  - function: rollbackTransaction[r:void][v:5.7.0]
                  - function: isTransactionStarted[r:bool][specs:const][v:5.7.0]
                  - function: write[r:qint64][p:const char *;qint64]
                  - function: write[r:qint64][p:const char *]
                  - function: write[r:qint64][p:const QByteArray &]
                  - function: peek[r:qint64][p:char *;qint64]
                  - function: peek[r:QByteArray][p:qint64]
                  - function: skip[r:qint64][p:qint64][v:5.11.0]
                  - function: waitForReadyRead[r:bool][p:int]
                  - function: waitForBytesWritten[r:bool][p:int]
                  - function: ungetChar[r:void][p:char]
                  - function: putChar[r:bool][p:char]
                  - function: getChar[r:bool][p:char *]
                  - function: errorString[r:QString][specs:const]
                  - function: readyRead[r:void][binding:signals]
                  - function: channelReadyRead[r:void][p:int][binding:signals][v:5.7.0]
                  - function: bytesWritten[r:void][p:qint64][binding:signals]
                  - function: channelBytesWritten[r:void][p:int;qint64][binding:signals]
                  - function: aboutToClose[r:void][binding:signals]
                  - function: readChannelFinished[r:void][binding:signals][v:5.7.0]
            - function: operator|[r:QIODevice::OpenMode][p:QIODevice::OpenModeFlag;QIODevice::OpenModeFlag]
            - function: operator|[r:QIODevice::OpenMode][p:QIODevice::OpenModeFlag;QIODevice::OpenMode]
            - function: operator|[r:QIncompatibleFlag][p:QIODevice::OpenMode::enum_type;int]
            - function: operator<<[r:QDebug][p:QDebug;QIODevice::OpenMode]
          hincludes: <QIODevice>
      - file:
          name: filedevice
          checkstate: partially-checked
          elements:
            - class:
                name: QFileDevice
                base: QIODevice
                checkstate: partially-checked
                elements:
                  - enum:
                      name: FileError
                      enumerators:
                        - NoError
                        - ReadError
                        - WriteError
                        - FatalError
                        - ResourceError
                        - OpenError
                        - AbortError
                        - TimeOutError
                        - UnspecifiedError
                        - RemoveError
                        - RenameError
                        - PositionError
                        - ResizeError
                        - PermissionsError
                        - CopyError
                  - enum:
                      name: FileTime
                      checkstate: unchecked
                      enumerators:
                        - FileAccessTime[unchecked]
                        - FileBirthTime[unchecked]
                        - FileMetadataChangeTime[unchecked]
                        - FileModificationTime[unchecked]
                  - enum:
                      name: Permission
                      enumerators:
                        - ReadOwner
                        - WriteOwner
                        - ExeOwner
                        - ReadUser
                        - WriteUser
                        - ExeUser
                        - ReadGroup
                        - WriteGroup
                        - ExeGroup
                        - ReadOther
                        - WriteOther
                        - ExeOther
                  - enum:
                      name: FileHandleFlag
                      enumerators:
                        - AutoCloseHandle
                        - DontCloseHandle
                  - destructor: ~QFileDevice
                  - function: error[r:QFileDevice::FileError][specs:const]
                  - function: unsetError[r:void]
                  - function: close[r:void]
                  - function: isSequential[r:bool][specs:const]
                  - function: handle[r:int][specs:const]
                  - function: fileName[r:QString][specs:const]
                  - function: pos[r:qint64][specs:const]
                  - function: seek[r:bool][p:qint64]
                  - function: atEnd[r:bool][specs:const]
                  - function: flush[r:bool]
                  - function: size[r:qint64][specs:const]
                  - function: resize[r:bool][p:qint64]
                  - function: permissions[r:QFileDevice::Permissions][specs:const]
                  - function: setPermissions[r:bool][p:QFileDevice::Permissions]
                  - enum:
                      name: MemoryMapFlags
                      enumerators:
                        - NoOptions
                        - MapPrivateOption[v:5.4.0]
                  - function: map[r:uchar *][p:qint64;qint64;QFileDevice::MemoryMapFlags][unchecked]
                  - function: unmap[r:bool][p:uchar *][unchecked]
                  - function: fileTime[r:QDateTime][p:QFileDevice::FileTime][specs:const][v:5.10.0]
                  - function: setFileTime[r:bool][p:const QDateTime &;QFileDevice::FileTime][v:5.10.0]
            - function: operator|[r:QFileDevice::Permissions][p:QFileDevice::Permission;QFileDevice::Permission]
            - function: operator|[r:QFileDevice::Permissions][p:QFileDevice::Permission;QFileDevice::Permissions]
            - function: operator|[r:QIncompatibleFlag][p:QFileDevice::Permissions::enum_type;int]
          hincludes: yasl/core/iodevice.h;<QFileDevice>
      - file:
          name: file
          elements:
            - class:
                name: QFile
                base: QFileDevice
                elements:
                  - constructor: QFile
                  - constructor: QFile[p:const QString &]
                  - constructor: QFile[p:QObject *]
                  - constructor: QFile[p:const QString &;QObject *]
                  - destructor: ~QFile
                  - function: fileName[r:QString][specs:const]
                  - function: setFileName[r:void][p:const QString &]
                  - function: encodeName[r:QByteArray][p:const QString &][specs:static]
                  - function: decodeName[r:QString][p:const QByteArray &][specs:static]
                  - function: decodeName[r:QString][p:const char *][specs:static]
                  - function: exists[r:bool][specs:const]
                  - function: exists[r:bool][p:const QString &][specs:static]
                  - function: readLink[r:QString][specs:const]
                  - function: readLink[r:QString][p:const QString &][specs:static]
                  - function: symLinkTarget[r:QString][specs:const]
                  - function: symLinkTarget[r:QString][p:const QString &][specs:static]
                  - function: remove[r:bool]
                  - function: remove[r:bool][p:const QString &][specs:static]
                  - function: rename[r:bool][p:const QString &]
                  - function: rename[r:bool][p:const QString &;const QString &][specs:static]
                  - function: link[r:bool][p:const QString &]
                  - function: link[r:bool][p:const QString &;const QString &][specs:static]
                  - function: copy[r:bool][p:const QString &]
                  - function: copy[r:bool][p:const QString &;const QString &][specs:static]
                  - function: open[r:bool][p:QIODevice::OpenMode]
                  - function: open[r:bool][p:FILE *;QIODevice::OpenMode;QFileDevice::FileHandleFlags]
                  - function: open[r:bool][p:int;QIODevice::OpenMode;QFileDevice::FileHandleFlags]
                  - function: size[r:qint64][specs:const]
                  - function: resize[r:bool][p:qint64]
                  - function: resize[r:bool][p:const QString &;qint64][specs:static]
                  - function: permissions[r:QFileDevice::Permissions][specs:const]
                  - function: permissions[r:QFileDevice::Permissions][p:const QString &][specs:static]
                  - function: setPermissions[r:bool][p:QFileDevice::Permissions]
                  - function: setPermissions[r:bool][p:const QString &;QFileDevice::Permissions][specs:static]
          hincludes: <QFile>
      - file:
          name: event
          elements:
            - class:
                name: QEvent
                elements:
                  - enum:
                      name: Type
                      enumerators:
                        - None
                        - Timer
                        - MouseButtonPress
                        - MouseButtonRelease
                        - MouseButtonDblClick
                        - MouseMove
                        - KeyPress
                        - KeyRelease
                        - FocusIn
                        - FocusOut
                        - FocusAboutToChange
                        - Enter
                        - Leave
                        - Paint
                        - Move
                        - Resize
                        - Create
                        - Destroy
                        - Show
                        - Hide
                        - Close
                        - Quit
                        - ParentChange
                        - ParentAboutToChange
                        - ThreadChange
                        - WindowActivate
                        - WindowDeactivate
                        - ShowToParent
                        - HideToParent
                        - Wheel
                        - WindowTitleChange
                        - WindowIconChange
                        - ApplicationWindowIconChange
                        - ApplicationFontChange
                        - ApplicationLayoutDirectionChange
                        - ApplicationPaletteChange
                        - PaletteChange
                        - Clipboard
                        - Speech
                        - MetaCall
                        - SockAct
                        - WinEventAct
                        - DeferredDelete
                        - DragEnter
                        - DragMove
                        - DragLeave
                        - Drop
                        - DragResponse
                        - ChildAdded
                        - ChildPolished
                        - ChildRemoved
                        - ShowWindowRequest
                        - PolishRequest
                        - Polish
                        - LayoutRequest
                        - UpdateRequest
                        - UpdateLater
                        - EmbeddingControl
                        - ActivateControl
                        - DeactivateControl
                        - ContextMenu
                        - InputMethod
                        - TabletMove
                        - LocaleChange
                        - LanguageChange
                        - LayoutDirectionChange
                        - Style
                        - TabletPress
                        - TabletRelease
                        - OkRequest
                        - HelpRequest
                        - IconDrag
                        - FontChange
                        - EnabledChange
                        - ActivationChange
                        - StyleChange
                        - IconTextChange
                        - ModifiedChange
                        - MouseTrackingChange
                        - WindowBlocked
                        - WindowUnblocked
                        - WindowStateChange
                        - ReadOnlyChange[v:5.4.0]
                        - ToolTip
                        - WhatsThis
                        - StatusTip
                        - ActionChanged
                        - ActionAdded
                        - ActionRemoved
                        - FileOpen
                        - Shortcut
                        - ShortcutOverride
                        - WhatsThisClicked
                        - ToolBarChange
                        - ApplicationActivate
                        - ApplicationActivated
                        - ApplicationDeactivate
                        - ApplicationDeactivated
                        - QueryWhatsThis
                        - EnterWhatsThisMode
                        - LeaveWhatsThisMode
                        - ZOrderChange
                        - HoverEnter
                        - HoverLeave
                        - HoverMove
                        - AcceptDropsChange
                        - ZeroTimerEvent
                        - GraphicsSceneMouseMove
                        - GraphicsSceneMousePress
                        - GraphicsSceneMouseRelease
                        - GraphicsSceneMouseDoubleClick
                        - GraphicsSceneContextMenu
                        - GraphicsSceneHoverEnter
                        - GraphicsSceneHoverMove
                        - GraphicsSceneHoverLeave
                        - GraphicsSceneHelp
                        - GraphicsSceneDragEnter
                        - GraphicsSceneDragMove
                        - GraphicsSceneDragLeave
                        - GraphicsSceneDrop
                        - GraphicsSceneWheel
                        - KeyboardLayoutChange
                        - DynamicPropertyChange
                        - TabletEnterProximity
                        - TabletLeaveProximity
                        - NonClientAreaMouseMove
                        - NonClientAreaMouseButtonPress
                        - NonClientAreaMouseButtonRelease
                        - NonClientAreaMouseButtonDblClick
                        - MacSizeChange
                        - ContentsRectChange
                        - MacGLWindowChange
                        - FutureCallOut
                        - GraphicsSceneResize
                        - GraphicsSceneMove
                        - CursorChange
                        - ToolTipChange
                        - NetworkReplyUpdated
                        - GrabMouse
                        - UngrabMouse
                        - GrabKeyboard
                        - UngrabKeyboard
                        - MacGLClearDrawable
                        - StateMachineSignal
                        - StateMachineWrapped
                        - TouchBegin
                        - TouchUpdate
                        - TouchEnd
                        - NativeGesture
                        - RequestSoftwareInputPanel
                        - CloseSoftwareInputPanel
                        - WinIdChange
                        - Gesture
                        - GestureOverride
                        - ScrollPrepare
                        - Scroll
                        - Expose
                        - InputMethodQuery
                        - OrientationChange
                        - TouchCancel
                        - ThemeChange
                        - SockClose
                        - PlatformPanel
                        - StyleAnimationUpdate
                        - ApplicationStateChange
                        - WindowChangeInternal
                        - ScreenChangeInternal
                        - PlatformSurface
                        - Pointer
                        - TabletTrackingChange[v:5.9.0]
                        - User
                        - MaxUser
                  - constructor: QEvent[p:QEvent::Type]
                  - constructor: QEvent[p:const QEvent &]
                  - destructor: ~QEvent
                  - function: operator=[r:QEvent &][p:const QEvent &]
                  - function: type[r:QEvent::Type][specs:const]
                  - function: spontaneous[r:bool][specs:const]
                  - function: setAccepted[r:void][p:bool]
                  - function: isAccepted[r:bool][specs:const]
                  - function: accept[r:void]
                  - function: ignore[r:void]
                  - function: registerEventType[r:int][p:int][specs:static]
            - class:
                name: QTimerEvent
                elements:
                  - constructor: QTimerEvent[p:int]
                  - destructor: ~QTimerEvent
                  - function: timerId[r:int][specs:const]
            - class:
                name: QChildEvent
                elements:
                  - constructor: QChildEvent[p:QEvent::Type;QObject *]
                  - destructor: ~QChildEvent
                  - function: child[r:QObject *][specs:const]
                  - function: added[r:bool][specs:const]
                  - function: polished[r:bool][specs:const]
                  - function: removed[r:bool][specs:const]
            - class:
                name: QDynamicPropertyChangeEvent
                elements:
                  - constructor: QDynamicPropertyChangeEvent[p:const QByteArray &]
                  - destructor: ~QDynamicPropertyChangeEvent
                  - function: propertyName[r:QByteArray][specs:const]
            - class:
                name: QDeferredDeleteEvent
                elements:
                  - constructor: QDeferredDeleteEvent
                  - destructor: ~QDeferredDeleteEvent
                  - function: loopLevel[r:int][specs:const]
          hincludes: <QEvent>
      - file:
          name: jsonvalue
          checkstate: partially-checked
          elements:
            - class:
                name: QJsonValue
                checkstate: partially-checked
                elements:
                  - enum:
                      name: Type
                      enumerators:
                        - Null
                        - Bool
                        - Double
                        - String
                        - Array
                        - Object
                        - Undefined
                  - constructor: QJsonValue[p:QJsonValue::Type=QJsonValue::Null]
                  - constructor: QJsonValue[p:bool]
                  - constructor: QJsonValue[p:double]
                  - constructor: QJsonValue[p:int]
                  - constructor: QJsonValue[p:qint64]
                  - constructor: QJsonValue[p:const QString &]
                  - constructor: QJsonValue[p:QLatin1String]
                  - constructor: QJsonValue[p:const char *]
                  - constructor: QJsonValue[p:const QJsonArray &]
                  - constructor: QJsonValue[p:const QJsonObject &]
                  - destructor: ~QJsonValue
                  - constructor: QJsonValue[p:const QJsonValue &]
                  - function: operator=[r:QJsonValue &][p:const QJsonValue &]
                  - constructor: QJsonValue[p:QJsonValue &&][unchecked]
                  - function: operator=[r:QJsonValue &][p:QJsonValue &&][unchecked]
                  - function: swap[r:void][p:QJsonValue &][v:5.10.0][unchecked]
                  - function: fromVariant[r:QJsonValue][p:const QVariant &][specs:static]
                  - function: toVariant[r:QVariant][specs:const]
                  - function: type[r:QJsonValue::Type][specs:const]
                  - function: isNull[r:bool][specs:const]
                  - function: isBool[r:bool][specs:const]
                  - function: isDouble[r:bool][specs:const]
                  - function: isString[r:bool][specs:const]
                  - function: isArray[r:bool][specs:const]
                  - function: isObject[r:bool][specs:const]
                  - function: isUndefined[r:bool][specs:const]
                  - function: toBool[r:bool][p:bool=false][specs:const]
                  - function: toInt[r:int][p:int=0][specs:const]
                  - function: toDouble[r:double][p:double=double(0)][specs:const]
                  - function: toString[r:QString][specs:const]
                  - function: toString[r:QString][p:const QString &=QString()][specs:const]
                  - function: toArray[r:QJsonArray][specs:const]
                  - function: toArray[r:QJsonArray][p:const QJsonArray &=QJsonArray()][specs:const]
                  - function: toObject[r:QJsonObject][specs:const]
                  - function: toObject[r:QJsonObject][p:const QJsonObject &][specs:const]
                  - function: operator[][r:const QJsonValue][p:const QString &][specs:const][v:5.10.0]
                  - function: operator[][r:const QJsonValue][p:QLatin1String][specs:const][unchecked]
                  - function: operator[][r:const QJsonValue][p:int][specs:const][v:5.10.0]
                  - function: operator==[r:bool][p:const QJsonValue &][specs:const]
                  - function: operator!=[r:bool][p:const QJsonValue &][specs:const]
            - class:
                name: QJsonValueRef
                elements:
                  - constructor: QJsonValueRef[p:QJsonArray *;int]
                  - constructor: QJsonValueRef[p:QJsonObject *;int]
                  - function: operator=[r:QJsonValueRef &][p:const QJsonValue &]
                  - function: operator=[r:QJsonValueRef &][p:const QJsonValueRef &]
                  - function: toVariant[r:QVariant][specs:const]
                  - function: type[r:QJsonValue::Type][specs:const]
                  - function: isNull[r:bool][specs:const]
                  - function: isBool[r:bool][specs:const]
                  - function: isDouble[r:bool][specs:const]
                  - function: isString[r:bool][specs:const]
                  - function: isArray[r:bool][specs:const]
                  - function: isObject[r:bool][specs:const]
                  - function: isUndefined[r:bool][specs:const]
                  - function: toBool[r:bool][specs:const]
                  - function: toInt[r:int][specs:const]
                  - function: toDouble[r:double][specs:const]
                  - function: toString[r:QString][specs:const]
                  - function: toArray[r:QJsonArray][specs:const]
                  - function: toObject[r:QJsonObject][specs:const]
                  - function: toBool[r:bool][p:bool][specs:const]
                  - function: toInt[r:int][p:int][specs:const]
                  - function: toDouble[r:double][p:double][specs:const]
                  - function: toString[r:QString][p:const QString &][specs:const]
                  - function: operator==[r:bool][p:const QJsonValue &][specs:const]
                  - function: operator!=[r:bool][p:const QJsonValue &][specs:const]
            - function: swap[r:void][p:QJsonValue &;QJsonValue &][unchecked]
            - function: operator<<[r:QDebug][p:QDebug;const QJsonValue &]
          hincludes: <QJsonValue>
      - file:
          name: jsonarray
          checkstate: partially-checked
          elements:
            - class:
                name: QJsonArray
                checkstate: partially-checked
                elements:
                  - constructor: QJsonArray
                  - constructor: QJsonArray[p:std::initializer_list<QJsonValue>]
                  - destructor: ~QJsonArray
                  - constructor: QJsonArray[p:const QJsonArray &]
                  - function: operator=[r:QJsonArray &][p:const QJsonArray &]
                  - constructor: QJsonArray[p:QJsonArray &&][unchecked]
                  - function: operator=[r:QJsonArray &][p:QJsonArray &&][unchecked]
                  - function: fromStringList[r:QJsonArray][p:const QStringList &][specs:static]
                  - function: fromVariantList[r:QJsonArray][p:const QVariantList &][specs:static]
                  - function: toVariantList[r:QVariantList][specs:const]
                  - function: size[r:int][specs:const]
                  - function: count[r:int][specs:const]
                  - function: isEmpty[r:bool][specs:const]
                  - function: at[r:QJsonValue][p:int][specs:const]
                  - function: first[r:QJsonValue][specs:const]
                  - function: last[r:QJsonValue][specs:const]
                  - function: prepend[r:void][p:const QJsonValue &]
                  - function: append[r:void][p:const QJsonValue &]
                  - function: removeAt[r:void][p:int]
                  - function: takeAt[r:QJsonValue][p:int]
                  - function: removeFirst[r:void]
                  - function: removeLast[r:void]
                  - function: insert[r:void][p:int;const QJsonValue &]
                  - function: replace[r:void][p:int;const QJsonValue &]
                  - function: contains[r:bool][p:const QJsonValue &][specs:const]
                  - function: operator[][r:QJsonValueRef][p:int]
                  - function: operator[][r:QJsonValue][p:int][specs:const]
                  - function: operator==[r:bool][p:const QJsonArray &][specs:const]
                  - function: operator!=[r:bool][p:const QJsonArray &][specs:const]
                  - function: swap[r:void][p:QJsonArray &][v:5.10.0]
                  - function: begin[r:QJsonArray::iterator]
                  - function: begin[r:QJsonArray::const_iterator][specs:const]
                  - function: constBegin[r:QJsonArray::const_iterator][specs:const]
                  - function: end[r:QJsonArray::iterator]
                  - function: end[r:QJsonArray::const_iterator][specs:const]
                  - function: constEnd[r:QJsonArray::const_iterator][specs:const]
                  - function: insert[r:QJsonArray::iterator][p:QJsonArray::iterator;const QJsonValue &]
                  - function: erase[r:QJsonArray::iterator][p:QJsonArray::iterator]
                  - function: operator+[r:QJsonArray][p:const QJsonValue &][specs:const][v:5.3.0]
                  - function: operator+=[r:QJsonArray &][p:const QJsonValue &][v:5.3.0]
                  - function: operator<<[r:QJsonArray &][p:const QJsonValue &][v:5.3.0]
                  - function: push_back[r:void][p:const QJsonValue &]
                  - function: push_front[r:void][p:const QJsonValue &]
                  - function: pop_front[r:void]
                  - function: pop_back[r:void]
                  - function: empty[r:bool][specs:const]
            - function: swap[r:void][p:QJsonArray &;QJsonArray &][unchecked]
            - function: operator<<[r:QDebug][p:QDebug;const QJsonArray &]
          hincludes: <QJsonArray>
      - file:
          name: jsonobject
          checkstate: partially-checked
          elements:
            - class:
                name: QJsonObject
                checkstate: partially-checked
                elements:
                  - constructor: QJsonObject
                  - constructor: QJsonObject[p:std::initializer_list<QPair<QString, QJsonValue> >]
                  - destructor: ~QJsonObject
                  - constructor: QJsonObject[p:const QJsonObject &]
                  - function: operator=[r:QJsonObject &][p:const QJsonObject &]
                  - constructor: QJsonObject[p:QJsonObject &&][unchecked]
                  - function: operator=[r:QJsonObject &][p:QJsonObject &&][unchecked]
                  - function: swap[r:void][p:QJsonObject &][v:5.10.0]
                  - function: fromVariantMap[r:QJsonObject][p:const QVariantMap &][specs:static]
                  - function: toVariantMap[r:QVariantMap][specs:const]
                  - function: fromVariantHash[r:QJsonObject][p:const QVariantHash &][specs:static]
                  - function: toVariantHash[r:QVariantHash][specs:const][v:5.5.0]
                  - function: keys[r:QStringList][specs:const]
                  - function: size[r:int][specs:const]
                  - function: count[r:int][specs:const]
                  - function: length[r:int][specs:const]
                  - function: isEmpty[r:bool][specs:const]
                  - function: value[r:QJsonValue][p:const QString &][specs:const]
                  - function: value[r:QJsonValue][p:QLatin1String][specs:const]
                  - function: operator[][r:QJsonValue][p:const QString &][specs:const]
                  - function: operator[][r:QJsonValue][p:QLatin1String][specs:const]
                  - function: operator[][r:QJsonValueRef][p:const QString &]
                  - function: operator[][r:QJsonValueRef][p:QLatin1String]
                  - function: remove[r:void][p:const QString &]
                  - function: take[r:QJsonValue][p:const QString &]
                  - function: contains[r:bool][p:const QString &][specs:const]
                  - function: contains[r:bool][p:QLatin1String][specs:const]
                  - function: operator==[r:bool][p:const QJsonObject &][specs:const]
                  - function: operator!=[r:bool][p:const QJsonObject &][specs:const]
                  - function: begin[r:QJsonObject::iterator]
                  - function: begin[r:QJsonObject::const_iterator][specs:const]
                  - function: constBegin[r:QJsonObject::const_iterator][specs:const]
                  - function: end[r:QJsonObject::iterator]
                  - function: end[r:QJsonObject::const_iterator][specs:const]
                  - function: constEnd[r:QJsonObject::const_iterator][specs:const]
                  - function: erase[r:QJsonObject::iterator][p:QJsonObject::iterator]
                  - function: find[r:QJsonObject::iterator][p:const QString &]
                  - function: find[r:QJsonObject::iterator][p:QLatin1String]
                  - function: find[r:QJsonObject::const_iterator][p:const QString &][specs:const]
                  - function: find[r:QJsonObject::const_iterator][p:QLatin1String][specs:const]
                  - function: constFind[r:QJsonObject::const_iterator][p:const QString &][specs:const]
                  - function: constFind[r:QJsonObject::const_iterator][p:QLatin1String][specs:const]
                  - function: insert[r:QJsonObject::iterator][p:const QString &;const QJsonValue &]
                  - function: empty[r:bool][specs:const]
            - function: swap[r:void][p:QJsonObject &;QJsonObject &][unchecked]
            - function: operator<<[r:QDebug][p:QDebug;const QJsonObject &]
          hincludes: <QJsonObject>
      - file:
          name: jsondocument
          checkstate: partially-checked
          elements:
            - class:
                name: QJsonDocument
                checkstate: partially-checked
                elements:
                  - constructor: QJsonDocument
                  - constructor: QJsonDocument[p:const QJsonObject &]
                  - constructor: QJsonDocument[p:const QJsonArray &]
                  - destructor: ~QJsonDocument
                  - constructor: QJsonDocument[p:const QJsonDocument &]
                  - function: operator=[r:QJsonDocument &][p:const QJsonDocument &]
                  - constructor: QJsonDocument[p:QJsonDocument &&][unchecked]
                  - function: operator=[r:QJsonDocument &][p:QJsonDocument &&][unchecked]
                  - function: swap[r:void][p:QJsonDocument &][v:5.10.0]
                  - enum:
                      name: DataValidation
                      enumerators:
                        - Validate
                        - BypassValidation
                  - function: fromRawData[r:QJsonDocument][p:const char *;int;QJsonDocument::DataValidation][specs:static]
                  - function: rawData[r:const char *][p:int *][specs:const]
                  - function: fromBinaryData[r:QJsonDocument][p:const QByteArray &;QJsonDocument::DataValidation=QJsonDocument::Validate][specs:static]
                  - function: toBinaryData[r:QByteArray][specs:const]
                  - function: fromVariant[r:QJsonDocument][p:const QVariant &][specs:static]
                  - function: toVariant[r:QVariant][specs:const]
                  - enum:
                      name: JsonFormat
                      enumerators:
                        - Indented
                        - Compact
                  - function: fromJson[r:QJsonDocument][p:const QByteArray &;QJsonParseError *][specs:static]
                  - function: toJson[r:QByteArray][specs:const]
                  - function: toJson[r:QByteArray][p:QJsonDocument::JsonFormat][specs:const]
                  - function: isEmpty[r:bool][specs:const]
                  - function: isArray[r:bool][specs:const]
                  - function: isObject[r:bool][specs:const]
                  - function: object[r:QJsonObject][specs:const]
                  - function: array[r:QJsonArray][specs:const]
                  - function: setObject[r:void][p:const QJsonObject &]
                  - function: setArray[r:void][p:const QJsonArray &]
                  - function: operator[][r:const QJsonValue][p:const QString &][specs:const][v:5.10.0]
                  - function: operator[][r:const QJsonValue][p:QLatin1String][specs:const][unchecked]
                  - function: operator[][r:const QJsonValue][p:int][specs:const][v:5.10.0]
                  - function: operator==[r:bool][p:const QJsonDocument &][specs:const]
                  - function: operator!=[r:bool][p:const QJsonDocument &][specs:const]
                  - function: isNull[r:bool][specs:const]
            - function: swap[r:void][p:QJsonDocument &;QJsonDocument &][unchecked]
            - function: operator<<[r:QDebug][p:QDebug;const QJsonDocument &]
          hincludes: <QJsonDocument>
      - file:
          name: elapsedtimer
          elements:
            - class:
                name: QElapsedTimer
                elements:
                  - enum:
                      name: ClockType
                      enumerators:
                        - SystemTime
                        - MonotonicClock
                        - TickCounter
                        - MachAbsoluteTime
                        - PerformanceCounter
                  - constructor: QElapsedTimer[v:5.4.0]
                  - destructor: ~QElapsedTimer
                  - function: clockType[r:QElapsedTimer::ClockType][specs:static]
                  - function: isMonotonic[r:bool][specs:static]
                  - function: start[r:void]
                  - function: restart[r:qint64]
                  - function: invalidate[r:void]
                  - function: isValid[r:bool][specs:const]
                  - function: nsecsElapsed[r:qint64][specs:const]
                  - function: elapsed[r:qint64][specs:const]
                  - function: hasExpired[r:bool][p:qint64][specs:const]
                  - function: msecsSinceReference[r:qint64][specs:const]
                  - function: msecsTo[r:qint64][p:const QElapsedTimer &][specs:const]
                  - function: secsTo[r:qint64][p:const QElapsedTimer &][specs:const]
                  - function: operator==[r:bool][p:const QElapsedTimer &][specs:const]
                  - function: operator!=[r:bool][p:const QElapsedTimer &][specs:const]
          hincludes: <QElapsedTimer>
      - file:
          name: process
          checkstate: partially-checked
          elements:
            - class:
                name: QProcessEnvironment
                elements:
                  - constructor: QProcessEnvironment
                  - constructor: QProcessEnvironment[p:const QProcessEnvironment &]
                  - destructor: ~QProcessEnvironment
                  - function: operator=[r:QProcessEnvironment &][p:QProcessEnvironment &&]
                  - function: operator=[r:QProcessEnvironment &][p:const QProcessEnvironment &]
                  - function: swap[r:void][p:QProcessEnvironment &]
                  - function: operator==[r:bool][p:const QProcessEnvironment &][specs:const]
                  - function: operator!=[r:bool][p:const QProcessEnvironment &][specs:const]
                  - function: isEmpty[r:bool][specs:const]
                  - function: clear[r:void]
                  - function: contains[r:bool][p:const QString &][specs:const]
                  - function: insert[r:void][p:const QString &;const QString &]
                  - function: remove[r:void][p:const QString &]
                  - function: value[r:QString][p:const QString &;const QString &][specs:const]
                  - function: toStringList[r:QStringList][specs:const]
                  - function: keys[r:QStringList][specs:const]
                  - function: insert[r:void][p:const QProcessEnvironment &]
                  - function: systemEnvironment[r:QProcessEnvironment][specs:static]
            - function: swap[r:void][p:QProcessEnvironment &;QProcessEnvironment &]
            - class:
                name: QProcess
                base: QIODevice
                checkstate: partially-checked
                elements:
                  - enum:
                      name: ProcessError
                      enumerators:
                        - FailedToStart
                        - Crashed
                        - Timedout
                        - ReadError
                        - WriteError
                        - UnknownError
                  - enum:
                      name: ProcessState
                      enumerators:
                        - NotRunning
                        - Starting
                        - Running
                  - enum:
                      name: ProcessChannel
                      enumerators:
                        - StandardOutput
                        - StandardError
                  - enum:
                      name: ProcessChannelMode
                      enumerators:
                        - SeparateChannels
                        - MergedChannels
                        - ForwardedChannels
                        - ForwardedOutputChannel[v:5.2.0]
                        - ForwardedErrorChannel[v:5.2.0]
                  - enum:
                      name: InputChannelMode
                      enumerators:
                        - ManagedInputChannel
                        - ForwardedInputChannel
                      version: 5.2.0
                  - enum:
                      name: ExitStatus
                      enumerators:
                        - NormalExit
                        - CrashExit
                  - constructor: QProcess[p:QObject *=(QObject*) nullptr]
                  - destructor: ~QProcess
                  - function: start[r:void][p:const QString &;const QStringList &;QIODevice::OpenMode]
                  - function: start[r:void][p:const QString &;QIODevice::OpenMode=QIODevice::OpenMode(QIODevice::ReadWrite)]
                  - function: start[r:void][p:QIODevice::OpenMode][v:5.1.0]
                  - function: startDetached[r:bool][p:qint64 *][v:5.10.0][unchecked]
                  - function: open[r:bool][p:QIODevice::OpenMode=QIODevice::OpenMode(QIODevice::ReadWrite)]
                  - function: program[r:QString][specs:const]
                  - function: setProgram[r:void][p:const QString &][v:5.1.0]
                  - function: arguments[r:QStringList][specs:const]
                  - function: setArguments[r:void][p:const QStringList &][v:5.1.0]
                  - function: readChannelMode[r:QProcess::ProcessChannelMode][specs:const]
                  - function: setReadChannelMode[r:void][p:QProcess::ProcessChannelMode]
                  - function: processChannelMode[r:QProcess::ProcessChannelMode][specs:const]
                  - function: setProcessChannelMode[r:void][p:QProcess::ProcessChannelMode]
                  - function: inputChannelMode[r:QProcess::InputChannelMode][specs:const][v:5.2.0]
                  - function: setInputChannelMode[r:void][p:QProcess::InputChannelMode][v:5.2.0]
                  - function: readChannel[r:QProcess::ProcessChannel][specs:const]
                  - function: setReadChannel[r:void][p:QProcess::ProcessChannel]
                  - function: closeReadChannel[r:void][p:QProcess::ProcessChannel]
                  - function: closeWriteChannel[r:void]
                  - function: setStandardInputFile[r:void][p:const QString &]
                  - function: setStandardOutputFile[r:void][p:const QString &;QIODevice::OpenMode=QIODevice::OpenMode(QIODevice::Truncate)]
                  - function: setStandardErrorFile[r:void][p:const QString &;QIODevice::OpenMode=QIODevice::OpenMode(QIODevice::Truncate)]
                  - function: setStandardOutputProcess[r:void][p:QProcess *]
                  - function: createProcessArgumentsModifier[r:QProcess::CreateProcessArgumentModifier][specs:const][v:5.7.0][unchecked]
                  - function: setCreateProcessArgumentsModifier[r:void][p:QProcess::CreateProcessArgumentModifier][v:5.7.0][unchecked]
                  - function: workingDirectory[r:QString][specs:const]
                  - function: setWorkingDirectory[r:void][p:const QString &]
                  - function: setEnvironment[r:void][p:const QStringList &]
                  - function: environment[r:QStringList][specs:const]
                  - function: setProcessEnvironment[r:void][p:const QProcessEnvironment &]
                  - function: processEnvironment[r:QProcessEnvironment][specs:const]
                  - function: error[r:QProcess::ProcessError][specs:const]
                  - function: state[r:QProcess::ProcessState][specs:const]
                  - function: pid[r:Q_PID][specs:const]
                  - function: processId[r:qint64][specs:const][v:5.3.0]
                  - function: waitForStarted[r:bool][p:int=30000]
                  - function: waitForReadyRead[r:bool][p:int=30000]
                  - function: waitForBytesWritten[r:bool][p:int=30000]
                  - function: waitForFinished[r:bool][p:int=30000]
                  - function: readAllStandardOutput[r:QByteArray]
                  - function: readAllStandardError[r:QByteArray]
                  - function: exitCode[r:int][specs:const]
                  - function: exitStatus[r:QProcess::ExitStatus][specs:const]
                  - function: bytesAvailable[r:qint64][specs:const]
                  - function: bytesToWrite[r:qint64][specs:const]
                  - function: isSequential[r:bool][specs:const]
                  - function: canReadLine[r:bool][specs:const]
                  - function: close[r:void]
                  - function: atEnd[r:bool][specs:const]
                  - function: execute[r:int][p:const QString &;const QStringList &][specs:static]
                  - function: execute[r:int][p:const QString &][specs:static]
                  - function: startDetached[r:bool][p:const QString &;const QStringList &;const QString &;qint64 *][specs:static]
                  - function: startDetached[r:bool][p:const QString &;const QStringList &][specs:static]
                  - function: startDetached[r:bool][p:const QString &][specs:static]
                  - function: systemEnvironment[r:QStringList][specs:static]
                  - function: nullDevice[r:QString][specs:static][v:5.2.0]
                  - function: terminate[r:void]
                  - function: kill[r:void]
                  - function: started[r:void][p:QProcess::QPrivateSignal]
                  - function: finished[r:void][p:int][binding:signals]
                  - function: finished[r:void][p:int;QProcess::ExitStatus][binding:signals]
                  - function: error[r:void][p:QProcess::ProcessError]
                  - function: errorOccurred[r:void][p:QProcess::ProcessError][binding:signals][v:5.6.0]
                  - function: stateChanged[r:void][p:QProcess::ProcessState][binding:signals]
                  - function: readyReadStandardOutput[r:void][binding:signals]
                  - function: readyReadStandardError[r:void][binding:signals]
          hincludes: <QProcess>
      - file:
          name: mimetype
          checkstate: partially-checked
          elements:
            - function: qHash[r:uint][p:const QMimeType &;uint]
            - class:
                name: QMimeType
                elements:
                  - constructor: QMimeType
                  - constructor: QMimeType[p:const QMimeType &]
                  - function: operator=[r:QMimeType &][p:const QMimeType &]
                  - function: operator=[r:QMimeType &][p:QMimeType &&]
                  - function: swap[r:void][p:QMimeType &]
                  - constructor: QMimeType[p:const QMimeTypePrivate &]
                  - destructor: ~QMimeType
                  - function: operator==[r:bool][p:const QMimeType &][specs:const]
                  - function: operator!=[r:bool][p:const QMimeType &][specs:const]
                  - function: isValid[r:bool][specs:const]
                  - function: isDefault[r:bool][specs:const]
                  - function: name[r:QString][specs:const]
                  - function: comment[r:QString][specs:const]
                  - function: genericIconName[r:QString][specs:const]
                  - function: iconName[r:QString][specs:const]
                  - function: globPatterns[r:QStringList][specs:const]
                  - function: parentMimeTypes[r:QStringList][specs:const]
                  - function: allAncestors[r:QStringList][specs:const]
                  - function: aliases[r:QStringList][specs:const]
                  - function: suffixes[r:QStringList][specs:const]
                  - function: preferredSuffix[r:QString][specs:const]
                  - function: inherits[r:bool][p:const QString &][specs:const]
                  - function: filterString[r:QString][specs:const]
            - function: swap[r:void][p:QMimeType &;QMimeType &]
            - function: operator<<[r:QDebug][p:QDebug;const QMimeType &]
          hincludes: <QMimeType>
      - file:
          name: datastream
          checkstate: partially-checked
          elements:
            - class:
                name: QDataStream
                checkstate: partially-checked
                elements:
                  - enum:
                      name: Version
                      checkstate: partially-checked
                      enumerators:
                        - Qt_1_0
                        - Qt_2_0
                        - Qt_2_1
                        - Qt_3_0
                        - Qt_3_1
                        - Qt_3_3
                        - Qt_4_0
                        - Qt_4_1
                        - Qt_4_2
                        - Qt_4_3
                        - Qt_4_4
                        - Qt_4_5
                        - Qt_4_6
                        - Qt_4_7
                        - Qt_4_8
                        - Qt_4_9
                        - Qt_5_0
                        - Qt_5_1[v:5.1.0]
                        - Qt_5_2[v:5.2.0]
                        - Qt_5_3[v:5.3.0]
                        - Qt_5_4[v:5.4.0]
                        - Qt_5_5[v:5.5.0]
                        - Qt_5_6[v:5.6.0]
                        - Qt_5_7[v:5.7.0]
                        - Qt_5_8[v:5.8.0]
                        - Qt_5_9[v:5.9.0]
                        - Qt_5_10[v:5.10.0]
                        - Qt_DefaultCompiledVersion
                  - enum:
                      name: ByteOrder
                      enumerators:
                        - BigEndian
                        - LittleEndian
                  - enum:
                      name: Status
                      enumerators:
                        - Ok
                        - ReadPastEnd
                        - ReadCorruptData
                        - WriteFailed
                  - enum:
                      name: FloatingPointPrecision
                      enumerators:
                        - SinglePrecision
                        - DoublePrecision
                  - constructor: QDataStream
                  - constructor: QDataStream[p:QIODevice *]
                  - constructor: QDataStream[p:QByteArray *;QIODevice::OpenMode]
                  - constructor: QDataStream[p:const QByteArray &]
                  - destructor: ~QDataStream
                  - function: device[r:QIODevice *][specs:const]
                  - function: setDevice[r:void][p:QIODevice *]
                  - function: unsetDevice[r:void]
                  - function: atEnd[r:bool][specs:const]
                  - function: status[r:QDataStream::Status][specs:const]
                  - function: setStatus[r:void][p:QDataStream::Status]
                  - function: resetStatus[r:void]
                  - function: floatingPointPrecision[r:QDataStream::FloatingPointPrecision][specs:const]
                  - function: setFloatingPointPrecision[r:void][p:QDataStream::FloatingPointPrecision]
                  - function: byteOrder[r:QDataStream::ByteOrder][specs:const]
                  - function: setByteOrder[r:void][p:QDataStream::ByteOrder]
                  - function: version[r:int][specs:const]
                  - function: setVersion[r:void][p:int]
                  - function: operator>>[r:QDataStream &][p:qint8 &]
                  - function: operator>>[r:QDataStream &][p:quint8 &]
                  - function: operator>>[r:QDataStream &][p:qint16 &]
                  - function: operator>>[r:QDataStream &][p:quint16 &]
                  - function: operator>>[r:QDataStream &][p:qint32 &]
                  - function: operator>>[r:QDataStream &][p:quint32 &]
                  - function: operator>>[r:QDataStream &][p:qint64 &]
                  - function: operator>>[r:QDataStream &][p:quint64 &]
                  - function: operator>>[r:QDataStream &][p:std::nullptr_t &]
                  - function: operator>>[r:QDataStream &][p:bool &]
                  - function: operator>>[r:QDataStream &][p:qfloat16 &]
                  - function: operator>>[r:QDataStream &][p:float &]
                  - function: operator>>[r:QDataStream &][p:double &]
                  - function: operator>>[r:QDataStream &][p:char *&]
                  - function: operator<<[r:QDataStream &][p:qint8]
                  - function: operator<<[r:QDataStream &][p:quint8]
                  - function: operator<<[r:QDataStream &][p:qint16]
                  - function: operator<<[r:QDataStream &][p:quint16]
                  - function: operator<<[r:QDataStream &][p:qint32]
                  - function: operator<<[r:QDataStream &][p:quint32]
                  - function: operator<<[r:QDataStream &][p:qint64]
                  - function: operator<<[r:QDataStream &][p:quint64]
                  - function: operator<<[r:QDataStream &][p:std::nullptr_t]
                  - function: operator<<[r:QDataStream &][p:bool]
                  - function: operator<<[r:QDataStream &][p:qfloat16]
                  - function: operator<<[r:QDataStream &][p:float]
                  - function: operator<<[r:QDataStream &][p:double]
                  - function: operator<<[r:QDataStream &][p:const char *]
                  - function: readBytes[r:QDataStream &][p:char *&;uint &]
                  - function: readRawData[r:int][p:char *;int]
                  - function: writeBytes[r:QDataStream &][p:const char *;uint]
                  - function: writeRawData[r:int][p:const char *;int]
                  - function: skipRawData[r:int][p:int]
                  - function: startTransaction[r:void][v:5.7.0]
                  - function: commitTransaction[r:bool][v:5.7.0]
                  - function: rollbackTransaction[r:void][v:5.7.0]
                  - function: abortTransaction[r:void][v:5.7.0]
          hincludes: <QDataStream>
  - gui:
      - file:
          name: color
          checkstate: partially-checked
          elements:
            - function: operator<<[r:QDebug][p:QDebug;const QColor &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QColor &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QColor &]
            - class:
                name: QColor
                elements:
                  - enum:
                      name: Spec
                      enumerators:
                        - Invalid
                        - Rgb
                        - Hsv
                        - Cmyk
                        - Hsl
                  - enum:
                      name: NameFormat
                      enumerators:
                        - HexRgb
                        - HexArgb
                  - constructor: QColor
                  - destructor: ~QColor
                  - constructor: QColor[p:Qt::GlobalColor]
                  - constructor: QColor[p:int;int;int;int=255]
                  - constructor: QColor[p:QRgb]
                  - constructor: QColor[p:QRgba64]
                  - constructor: QColor[p:const QString &]
                  - constructor: QColor[p:QStringView]
                  - constructor: QColor[p:const char *]
                  - constructor: QColor[p:QLatin1String]
                  - constructor: QColor[p:QColor::Spec]
                  - constructor: QColor[p:const QColor &]
                  - constructor: QColor[p:QColor &&]
                  - function: operator=[r:QColor &][p:QColor &&]
                  - function: operator=[r:QColor &][p:const QColor &]
                  - function: operator=[r:QColor &][p:Qt::GlobalColor]
                  - function: isValid[r:bool][specs:const]
                  - function: name[r:QString][specs:const]
                  - function: name[r:QString][p:QColor::NameFormat][specs:const][v:5.2.0]
                  - function: setNamedColor[r:void][p:const QString &]
                  - function: setNamedColor[r:void][p:QStringView]
                  - function: setNamedColor[r:void][p:QLatin1String]
                  - function: colorNames[r:QStringList][specs:static]
                  - function: spec[r:QColor::Spec][specs:const]
                  - function: alpha[r:int][specs:const]
                  - function: setAlpha[r:void][p:int]
                  - function: alphaF[r:qreal][specs:const]
                  - function: setAlphaF[r:void][p:qreal]
                  - function: red[r:int][specs:const]
                  - function: green[r:int][specs:const]
                  - function: blue[r:int][specs:const]
                  - function: setRed[r:void][p:int]
                  - function: setGreen[r:void][p:int]
                  - function: setBlue[r:void][p:int]
                  - function: redF[r:qreal][specs:const]
                  - function: greenF[r:qreal][specs:const]
                  - function: blueF[r:qreal][specs:const]
                  - function: setRedF[r:void][p:qreal]
                  - function: setGreenF[r:void][p:qreal]
                  - function: setBlueF[r:void][p:qreal]
                  - function: getRgb[r:void][p:int *;int *;int *;int *][specs:const]
                  - function: setRgb[r:void][p:int;int;int;int=255]
                  - function: getRgbF[r:void][p:qreal *;qreal *;qreal *;qreal *][specs:const]
                  - function: setRgbF[r:void][p:qreal;qreal;qreal;qreal=qreal(1.0)]
                  - function: rgba64[r:QRgba64][specs:const][v:5.6.0]
                  - function: setRgba64[r:void][p:QRgba64][v:5.6.0]
                  - function: rgba[r:QRgb][specs:const]
                  - function: setRgba[r:void][p:QRgb]
                  - function: rgb[r:QRgb][specs:const]
                  - function: setRgb[r:void][p:QRgb]
                  - function: hue[r:int][specs:const]
                  - function: saturation[r:int][specs:const]
                  - function: hsvHue[r:int][specs:const]
                  - function: hsvSaturation[r:int][specs:const]
                  - function: value[r:int][specs:const]
                  - function: hueF[r:qreal][specs:const]
                  - function: saturationF[r:qreal][specs:const]
                  - function: hsvHueF[r:qreal][specs:const]
                  - function: hsvSaturationF[r:qreal][specs:const]
                  - function: valueF[r:qreal][specs:const]
                  - function: getHsv[r:void][p:int *;int *;int *;int *][specs:const]
                  - function: setHsv[r:void][p:int;int;int;int=255]
                  - function: getHsvF[r:void][p:qreal *;qreal *;qreal *;qreal *][specs:const]
                  - function: setHsvF[r:void][p:qreal;qreal;qreal;qreal=qreal(1.0)]
                  - function: cyan[r:int][specs:const]
                  - function: magenta[r:int][specs:const]
                  - function: yellow[r:int][specs:const]
                  - function: black[r:int][specs:const]
                  - function: cyanF[r:qreal][specs:const]
                  - function: magentaF[r:qreal][specs:const]
                  - function: yellowF[r:qreal][specs:const]
                  - function: blackF[r:qreal][specs:const]
                  - function: getCmyk[r:void][p:int *;int *;int *;int *;int *]
                  - function: setCmyk[r:void][p:int;int;int;int;int=255]
                  - function: getCmykF[r:void][p:qreal *;qreal *;qreal *;qreal *;qreal *]
                  - function: setCmykF[r:void][p:qreal;qreal;qreal;qreal;qreal=qreal(1.0)]
                  - function: hslHue[r:int][specs:const]
                  - function: hslSaturation[r:int][specs:const]
                  - function: lightness[r:int][specs:const]
                  - function: hslHueF[r:qreal][specs:const]
                  - function: hslSaturationF[r:qreal][specs:const]
                  - function: lightnessF[r:qreal][specs:const]
                  - function: getHsl[r:void][p:int *;int *;int *;int *][specs:const]
                  - function: setHsl[r:void][p:int;int;int;int=255]
                  - function: getHslF[r:void][p:qreal *;qreal *;qreal *;qreal *][specs:const]
                  - function: setHslF[r:void][p:qreal;qreal;qreal;qreal=qreal(1.0)]
                  - function: toRgb[r:QColor][specs:const]
                  - function: toHsv[r:QColor][specs:const]
                  - function: toCmyk[r:QColor][specs:const]
                  - function: toHsl[r:QColor][specs:const]
                  - function: convertTo[r:QColor][p:QColor::Spec][specs:const]
                  - function: fromRgb[r:QColor][p:QRgb][specs:static]
                  - function: fromRgba[r:QColor][p:QRgb][specs:static]
                  - function: fromRgb[r:QColor][p:int;int;int;int=255][specs:static]
                  - function: fromRgbF[r:QColor][p:qreal;qreal;qreal;qreal=qreal(1.0)][specs:static]
                  - function: fromRgba64[r:QColor][p:ushort;ushort;ushort;ushort][specs:static]
                  - function: fromRgba64[r:QColor][p:QRgba64][specs:static]
                  - function: fromHsv[r:QColor][p:int;int;int;int=255][specs:static]
                  - function: fromHsvF[r:QColor][p:qreal;qreal;qreal;qreal=qreal(1.0)][specs:static]
                  - function: fromCmyk[r:QColor][p:int;int;int;int;int=255][specs:static]
                  - function: fromCmykF[r:QColor][p:qreal;qreal;qreal;qreal;qreal=qreal(1.0)][specs:static]
                  - function: fromHsl[r:QColor][p:int;int;int;int=255][specs:static]
                  - function: fromHslF[r:QColor][p:qreal;qreal;qreal;qreal=qreal(1.0)][specs:static]
                  - function: light[r:QColor][p:int][specs:const]
                  - function: lighter[r:QColor][p:int=150][specs:const]
                  - function: dark[r:QColor][p:int][specs:const]
                  - function: darker[r:QColor][p:int][specs:const]
                  - function: operator==[r:bool][p:const QColor &][specs:const]
                  - function: operator!=[r:bool][p:const QColor &][specs:const]
                  - function: isValidColor[r:bool][p:const QString &][specs:static]
                  - function: isValidColor[r:bool][p:QStringView][specs:static]
                  - function: isValidColor[r:bool][p:QLatin1String][specs:static]
          hincludes: <QColor>
      - file:
          name: font
          checkstate: partially-checked
          elements:
            - class:
                name: QFont
                checkstate: partially-checked
                elements:
                  - enum:
                      name: StyleHint
                      enumerators:
                        - Helvetica
                        - SansSerif
                        - Times
                        - Serif
                        - Courier
                        - TypeWriter
                        - OldEnglish
                        - Decorative
                        - System
                        - AnyStyle
                        - Cursive
                        - Monospace
                        - Fantasy
                  - enum:
                      name: StyleStrategy
                      checkstate: partially-checked
                      enumerators:
                        - PreferDefault
                        - PreferBitmap
                        - PreferDevice
                        - PreferOutline
                        - ForceOutline
                        - PreferMatch
                        - PreferQuality
                        - PreferAntialias
                        - NoAntialias
                        - OpenGLCompatible
                        - ForceIntegerMetrics
                        - NoSubpixelAntialias
                        - PreferNoShaping[unchecked]
                        - NoFontMerging
                  - enum:
                      name: HintingPreference
                      enumerators:
                        - PreferDefaultHinting
                        - PreferNoHinting
                        - PreferVerticalHinting
                        - PreferFullHinting
                  - enum:
                      name: Weight
                      enumerators:
                        - Thin
                        - ExtraLight
                        - Light
                        - Normal
                        - Medium
                        - DemiBold
                        - Bold
                        - ExtraBold
                        - Black
                  - enum:
                      name: Style
                      enumerators:
                        - StyleNormal
                        - StyleItalic
                        - StyleOblique
                  - enum:
                      name: Stretch
                      enumerators:
                        - AnyStretch[v:5.8.0]
                        - UltraCondensed
                        - ExtraCondensed
                        - Condensed
                        - SemiCondensed
                        - Unstretched
                        - SemiExpanded
                        - Expanded
                        - ExtraExpanded
                        - UltraExpanded
                  - enum:
                      name: Capitalization
                      enumerators:
                        - MixedCase
                        - AllUppercase
                        - AllLowercase
                        - SmallCaps
                        - Capitalize
                  - enum:
                      name: SpacingType
                      enumerators:
                        - PercentageSpacing
                        - AbsoluteSpacing
                  - enum:
                      name: ResolveProperties
                      enumerators:
                        - FamilyResolved
                        - SizeResolved
                        - StyleHintResolved
                        - StyleStrategyResolved
                        - WeightResolved
                        - StyleResolved
                        - UnderlineResolved
                        - OverlineResolved
                        - StrikeOutResolved
                        - FixedPitchResolved
                        - StretchResolved
                        - KerningResolved
                        - CapitalizationResolved
                        - LetterSpacingResolved
                        - WordSpacingResolved
                        - HintingPreferenceResolved
                        - StyleNameResolved
                        - AllPropertiesResolved
                  - constructor: QFont
                  - constructor: QFont[p:const QString &;int=-1;int=-1;bool=false]
                  - constructor: QFont[p:const QFont &;QPaintDevice *]
                  - constructor: QFont[p:const QFont &]
                  - destructor: ~QFont
                  - function: swap[r:void][p:QFont &]
                  - function: family[r:QString][specs:const]
                  - function: setFamily[r:void][p:const QString &]
                  - function: styleName[r:QString][specs:const]
                  - function: setStyleName[r:void][p:const QString &]
                  - function: pointSize[r:int][specs:const]
                  - function: setPointSize[r:void][p:int]
                  - function: pointSizeF[r:qreal][specs:const]
                  - function: setPointSizeF[r:void][p:qreal]
                  - function: pixelSize[r:int][specs:const]
                  - function: setPixelSize[r:void][p:int]
                  - function: weight[r:int][specs:const]
                  - function: setWeight[r:void][p:int]
                  - function: bold[r:bool][specs:const]
                  - function: setBold[r:void][p:bool]
                  - function: setStyle[r:void][p:QFont::Style]
                  - function: style[r:QFont::Style][specs:const]
                  - function: italic[r:bool][specs:const]
                  - function: setItalic[r:void][p:bool]
                  - function: underline[r:bool][specs:const]
                  - function: setUnderline[r:void][p:bool]
                  - function: overline[r:bool][specs:const]
                  - function: setOverline[r:void][p:bool]
                  - function: strikeOut[r:bool][specs:const]
                  - function: setStrikeOut[r:void][p:bool]
                  - function: fixedPitch[r:bool][specs:const]
                  - function: setFixedPitch[r:void][p:bool]
                  - function: kerning[r:bool][specs:const]
                  - function: setKerning[r:void][p:bool]
                  - function: styleHint[r:QFont::StyleHint][specs:const]
                  - function: styleStrategy[r:QFont::StyleStrategy][specs:const]
                  - function: setStyleHint[r:void][p:QFont::StyleHint;QFont::StyleStrategy=QFont::PreferDefault]
                  - function: setStyleStrategy[r:void][p:QFont::StyleStrategy]
                  - function: stretch[r:int][specs:const]
                  - function: setStretch[r:void][p:int]
                  - function: letterSpacing[r:qreal][specs:const]
                  - function: letterSpacingType[r:QFont::SpacingType][specs:const]
                  - function: setLetterSpacing[r:void][p:QFont::SpacingType;qreal]
                  - function: wordSpacing[r:qreal][specs:const]
                  - function: setWordSpacing[r:void][p:qreal]
                  - function: setCapitalization[r:void][p:QFont::Capitalization]
                  - function: capitalization[r:QFont::Capitalization][specs:const]
                  - function: setHintingPreference[r:void][p:QFont::HintingPreference]
                  - function: hintingPreference[r:QFont::HintingPreference][specs:const]
                  - function: rawMode[r:bool][specs:const]
                  - function: setRawMode[r:void][p:bool]
                  - function: exactMatch[r:bool][specs:const]
                  - function: operator=[r:QFont &][p:const QFont &]
                  - function: operator==[r:bool][p:const QFont &][specs:const]
                  - function: operator!=[r:bool][p:const QFont &][specs:const]
                  - function: operator<[r:bool][p:const QFont &][specs:const]
                  - function: isCopyOf[r:bool][p:const QFont &][specs:const]
                  - function: operator=[r:QFont &][p:QFont &&]
                  - function: setRawName[r:void][p:const QString &]
                  - function: rawName[r:QString][specs:const]
                  - function: key[r:QString][specs:const]
                  - function: toString[r:QString][specs:const]
                  - function: fromString[r:bool][p:const QString &]
                  - function: substitute[r:QString][p:const QString &][specs:static]
                  - function: substitutes[r:QStringList][p:const QString &][specs:static]
                  - function: substitutions[r:QStringList][specs:static]
                  - function: insertSubstitution[r:void][p:const QString &;const QString &][specs:static]
                  - function: insertSubstitutions[r:void][p:const QString &;const QStringList &][specs:static]
                  - function: removeSubstitutions[r:void][p:const QString &][specs:static]
                  - function: initialize[r:void][specs:static]
                  - function: cleanup[r:void][specs:static]
                  - function: cacheStatistics[r:void][specs:static]
                  - function: defaultFamily[r:QString][specs:const]
                  - function: lastResortFamily[r:QString][specs:const]
                  - function: lastResortFont[r:QString][specs:const]
                  - function: resolve[r:QFont][p:const QFont &][specs:const]
                  - function: resolve[r:uint][specs:const]
                  - function: resolve[r:void][p:uint]
            - function: swap[r:void][p:QFont &;QFont &]
            - function: qHash[r:uint][p:const QFont &;uint][v:5.3.0]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QFont &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QFont &]
            - function: operator<<[r:QDebug][p:QDebug;const QFont &]
          hincludes: <QFont>
      - file:
          name: fontdatabase
          elements:
            - class:
                name: QFontDatabase
                elements:
                  - enum:
                      name: WritingSystem
                      enumerators:
                        - Any
                        - Latin
                        - Greek
                        - Cyrillic
                        - Armenian
                        - Hebrew
                        - Arabic
                        - Syriac
                        - Thaana
                        - Devanagari
                        - Bengali
                        - Gurmukhi
                        - Gujarati
                        - Oriya
                        - Tamil
                        - Telugu
                        - Kannada
                        - Malayalam
                        - Sinhala
                        - Thai
                        - Lao
                        - Tibetan
                        - Myanmar
                        - Georgian
                        - Khmer
                        - SimplifiedChinese
                        - TraditionalChinese
                        - Japanese
                        - Korean
                        - Vietnamese
                        - Symbol
                        - Other
                        - Ogham
                        - Runic
                        - Nko
                        - WritingSystemsCount
                  - enum:
                      name: SystemFont
                      enumerators:
                        - GeneralFont
                        - FixedFont
                        - TitleFont
                        - SmallestReadableFont
                  - function: standardSizes[r:QList<int>][specs:static]
                  - constructor: QFontDatabase
                  - function: writingSystems[r:QList<QFontDatabase::WritingSystem>][specs:const]
                  - function: writingSystems[r:QList<QFontDatabase::WritingSystem>][p:const QString &][specs:const]
                  - function: families[r:QStringList][p:QFontDatabase::WritingSystem=QFontDatabase::Any][specs:const]
                  - function: styles[r:QStringList][p:const QString &][specs:const]
                  - function: pointSizes[r:QList<int>][p:const QString &;const QString &=QString()]
                  - function: smoothSizes[r:QList<int>][p:const QString &;const QString &]
                  - function: styleString[r:QString][p:const QFont &]
                  - function: styleString[r:QString][p:const QFontInfo &]
                  - function: font[r:QFont][p:const QString &;const QString &;int][specs:const]
                  - function: isBitmapScalable[r:bool][p:const QString &;const QString &=QString()][specs:const]
                  - function: isSmoothlyScalable[r:bool][p:const QString &;const QString &=QString()][specs:const]
                  - function: isScalable[r:bool][p:const QString &;const QString &=QString()][specs:const]
                  - function: isFixedPitch[r:bool][p:const QString &;const QString &=QString()][specs:const]
                  - function: italic[r:bool][p:const QString &;const QString &][specs:const]
                  - function: bold[r:bool][p:const QString &;const QString &][specs:const]
                  - function: weight[r:int][p:const QString &;const QString &][specs:const]
                  - function: hasFamily[r:bool][p:const QString &][specs:const]
                  - function: isPrivateFamily[r:bool][p:const QString &][specs:const][v:5.5.0]
                  - function: writingSystemName[r:QString][p:QFontDatabase::WritingSystem][specs:static]
                  - function: writingSystemSample[r:QString][p:QFontDatabase::WritingSystem][specs:static]
                  - function: addApplicationFont[r:int][p:const QString &][specs:static]
                  - function: addApplicationFontFromData[r:int][p:const QByteArray &][specs:static]
                  - function: applicationFontFamilies[r:QStringList][p:int][specs:static]
                  - function: removeApplicationFont[r:bool][p:int][specs:static]
                  - function: removeAllApplicationFonts[r:bool][specs:static]
                  - function: supportsThreadedFontRendering[r:bool][specs:static]
                  - function: systemFont[r:QFont][p:QFontDatabase::SystemFont][specs:static][v:5.2.0]
          hincludes: <QFontDatabase>
      - file:
          name: fontinfo
          elements:
            - class:
                name: QFontInfo
                elements:
                  - constructor: QFontInfo[p:const QFont &]
                  - constructor: QFontInfo[p:const QFontInfo &]
                  - destructor: ~QFontInfo
                  - function: operator=[r:QFontInfo &][p:const QFontInfo &]
                  - function: swap[r:void][p:QFontInfo &]
                  - function: family[r:QString][specs:const]
                  - function: styleName[r:QString][specs:const]
                  - function: pixelSize[r:int][specs:const]
                  - function: pointSize[r:int][specs:const]
                  - function: pointSizeF[r:qreal][specs:const]
                  - function: italic[r:bool][specs:const]
                  - function: style[r:QFont::Style][specs:const]
                  - function: weight[r:int][specs:const]
                  - function: bold[r:bool][specs:const]
                  - function: underline[r:bool][specs:const]
                  - function: overline[r:bool][specs:const]
                  - function: strikeOut[r:bool][specs:const]
                  - function: fixedPitch[r:bool][specs:const]
                  - function: styleHint[r:QFont::StyleHint][specs:const]
                  - function: rawMode[r:bool][specs:const]
                  - function: exactMatch[r:bool][specs:const]
            - function: swap[r:void][p:QFontInfo &;QFontInfo &]
          hincludes: <QFontInfo>
      - file:
          name: fontmetrics
          checkstate: partially-checked
          elements:
            - class:
                name: QFontMetrics
                elements:
                  - constructor: QFontMetrics[p:const QFont &]
                  - constructor: QFontMetrics[p:const QFont &;QPaintDevice *]
                  - constructor: QFontMetrics[p:const QFontMetrics &]
                  - destructor: ~QFontMetrics
                  - function: operator=[r:QFontMetrics &][p:const QFontMetrics &]
                  - function: operator=[r:QFontMetrics &][p:QFontMetrics &&]
                  - function: swap[r:void][p:QFontMetrics &]
                  - function: ascent[r:int][specs:const]
                  - function: capHeight[r:int][specs:const][v:5.8.0]
                  - function: descent[r:int][specs:const]
                  - function: height[r:int][specs:const]
                  - function: leading[r:int][specs:const]
                  - function: lineSpacing[r:int][specs:const]
                  - function: minLeftBearing[r:int][specs:const]
                  - function: minRightBearing[r:int][specs:const]
                  - function: maxWidth[r:int][specs:const]
                  - function: xHeight[r:int][specs:const]
                  - function: averageCharWidth[r:int][specs:const]
                  - function: inFont[r:bool][p:QChar][specs:const]
                  - function: inFontUcs4[r:bool][p:uint][specs:const]
                  - function: leftBearing[r:int][p:QChar][specs:const]
                  - function: rightBearing[r:int][p:QChar][specs:const]
                  - function: width[r:int][p:const QString &;int=-1][specs:const]
                  - function: width[r:int][p:const QString &;int;int][specs:const]
                  - function: width[r:int][p:QChar][specs:const]
                  - function: charWidth[r:int][p:const QString &;int][specs:const]
                  - function: boundingRect[r:QRect][p:QChar][specs:const]
                  - function: boundingRect[r:QRect][p:const QString &][specs:const]
                  - function: boundingRect[r:QRect][p:const QRect &;int;const QString &;int;int *][specs:const]
                  - function: boundingRect[r:QRect][p:int;int;int;int;int;const QString &;int;int *][specs:const]
                  - function: size[r:QSize][p:int;const QString &;int;int *][specs:const]
                  - function: tightBoundingRect[r:QRect][p:const QString &][specs:const]
                  - function: elidedText[r:QString][p:const QString &;Qt::TextElideMode;int;int=0][specs:const]
                  - function: underlinePos[r:int][specs:const]
                  - function: overlinePos[r:int][specs:const]
                  - function: strikeOutPos[r:int][specs:const]
                  - function: lineWidth[r:int][specs:const]
                  - function: operator==[r:bool][p:const QFontMetrics &][specs:const]
                  - function: operator!=[r:bool][p:const QFontMetrics &][specs:const]
            - function: swap[r:void][p:QFontMetrics &;QFontMetrics &]
            - class:
                name: QFontMetricsF
                elements:
                  - constructor: QFontMetricsF[p:const QFont &]
                  - constructor: QFontMetricsF[p:const QFont &;QPaintDevice *]
                  - constructor: QFontMetricsF[p:const QFontMetrics &]
                  - constructor: QFontMetricsF[p:const QFontMetricsF &]
                  - destructor: ~QFontMetricsF
                  - function: operator=[r:QFontMetricsF &][p:const QFontMetricsF &]
                  - function: operator=[r:QFontMetricsF &][p:const QFontMetrics &]
                  - function: operator=[r:QFontMetricsF &][p:QFontMetricsF &&]
                  - function: swap[r:void][p:QFontMetricsF &]
                  - function: ascent[r:qreal][specs:const]
                  - function: capHeight[r:qreal][specs:const][v:5.8.0]
                  - function: descent[r:qreal][specs:const]
                  - function: height[r:qreal][specs:const]
                  - function: leading[r:qreal][specs:const]
                  - function: lineSpacing[r:qreal][specs:const]
                  - function: minLeftBearing[r:qreal][specs:const]
                  - function: minRightBearing[r:qreal][specs:const]
                  - function: maxWidth[r:qreal][specs:const]
                  - function: xHeight[r:qreal][specs:const]
                  - function: averageCharWidth[r:qreal][specs:const]
                  - function: inFont[r:bool][p:QChar][specs:const]
                  - function: inFontUcs4[r:bool][p:uint][specs:const]
                  - function: leftBearing[r:qreal][p:QChar][specs:const]
                  - function: rightBearing[r:qreal][p:QChar][specs:const]
                  - function: width[r:qreal][p:const QString &][specs:const]
                  - function: width[r:qreal][p:QChar][specs:const]
                  - function: boundingRect[r:QRectF][p:const QString &][specs:const]
                  - function: boundingRect[r:QRectF][p:QChar][specs:const]
                  - function: boundingRect[r:QRectF][p:const QRectF &;int;const QString &;int;int *][specs:const]
                  - function: size[r:QSizeF][p:int;const QString &;int;int *][specs:const]
                  - function: tightBoundingRect[r:QRectF][p:const QString &][specs:const]
                  - function: elidedText[r:QString][p:const QString &;Qt::TextElideMode;qreal;int=0][specs:const]
                  - function: underlinePos[r:qreal][specs:const]
                  - function: overlinePos[r:qreal][specs:const]
                  - function: strikeOutPos[r:qreal][specs:const]
                  - function: lineWidth[r:qreal][specs:const]
                  - function: operator==[r:bool][p:const QFontMetricsF &][specs:const]
                  - function: operator!=[r:bool][p:const QFontMetricsF &][specs:const]
            - function: swap[r:void][p:QFontMetricsF &;QFontMetricsF &]
          hincludes: <QFontMetrics>
      - file:
          name: cursor
          checkstate: partially-checked
          elements:
            - class:
                name: QCursor
                elements:
                  - constructor: QCursor
                  - constructor: QCursor[p:Qt::CursorShape]
                  - constructor: QCursor[p:const QBitmap &;const QBitmap &;int=-1;int=-1]
                  - constructor: QCursor[p:const QPixmap &;int=-1;int=-1]
                  - constructor: QCursor[p:const QCursor &]
                  - destructor: ~QCursor
                  - function: operator=[r:QCursor &][p:const QCursor &]
                  - constructor: QCursor[p:QCursor &&]
                  - function: operator=[r:QCursor &][p:QCursor &&]
                  - function: swap[r:void][p:QCursor &]
                  - function: shape[r:Qt::CursorShape][specs:const]
                  - function: setShape[r:void][p:Qt::CursorShape]
                  - function: bitmap[r:const QBitmap *][specs:const]
                  - function: mask[r:const QBitmap *][specs:const]
                  - function: pixmap[r:QPixmap][specs:const]
                  - function: hotSpot[r:QPoint][specs:const]
                  - function: pos[r:QPoint][specs:static]
                  - function: pos[r:QPoint][p:const QScreen *][specs:static]
                  - function: setPos[r:void][p:int;int][specs:static]
                  - function: setPos[r:void][p:QScreen *;int;int][specs:static]
                  - function: setPos[r:void][p:const QPoint &][specs:static]
                  - function: setPos[r:void][p:QScreen *;const QPoint &][specs:static]
            - function: swap[r:void][p:QCursor &;QCursor &]
            - function: operator==[r:bool][p:const QCursor &;const QCursor &][v:5.10.0]
            - function: operator!=[r:bool][p:const QCursor &;const QCursor &][v:5.10.0]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QCursor &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QCursor &]
            - function: operator<<[r:QDebug][p:QDebug;const QCursor &]
          hincludes: <QCursor>
      - file:
          name: pixmap
          checkstate: partially-checked
          elements:
            - class:
                name: QPixmap
                elements:
                  - constructor: QPixmap
                  - constructor: QPixmap[p:QPlatformPixmap *]
                  - constructor: QPixmap[p:int;int]
                  - constructor: QPixmap[p:const QSize &]
                  - constructor: QPixmap[p:const QString &;const char *;Qt::ImageConversionFlags]
                  - constructor: QPixmap[p:const QPixmap &]
                  - destructor: ~QPixmap
                  - function: operator=[r:QPixmap &][p:const QPixmap &]
                  - function: operator=[r:QPixmap &][p:QPixmap &&]
                  - function: swap[r:void][p:QPixmap &]
                  - function: isNull[r:bool][specs:const]
                  - function: devType[r:int][specs:const]
                  - function: width[r:int][specs:const]
                  - function: height[r:int][specs:const]
                  - function: size[r:QSize][specs:const]
                  - function: rect[r:QRect][specs:const]
                  - function: depth[r:int][specs:const]
                  - function: defaultDepth[r:int][specs:static]
                  - function: fill[r:void][p:const QColor &=QColor(Qt::white)]
                  - function: fill[r:void][p:const QPaintDevice *;const QPoint &]
                  - function: fill[r:void][p:const QPaintDevice *;int;int]
                  - function: mask[r:QBitmap][specs:const]
                  - function: setMask[r:void][p:const QBitmap &]
                  - function: devicePixelRatio[r:qreal][specs:const]
                  - function: setDevicePixelRatio[r:void][p:qreal]
                  - function: hasAlpha[r:bool][specs:const]
                  - function: hasAlphaChannel[r:bool][specs:const]
                  - function: createHeuristicMask[r:QBitmap][p:bool=true][specs:const]
                  - function: createMaskFromColor[r:QBitmap][p:const QColor &;Qt::MaskMode=Qt::MaskInColor][specs:const]
                  - function: grabWindow[r:QPixmap][p:WId;int;int;int;int][specs:static]
                  - function: grabWidget[r:QPixmap][p:QObject *;const QRect &][specs:static]
                  - function: grabWidget[r:QPixmap][p:QObject *;int;int;int;int][specs:static]
                  - function: scaled[r:QPixmap][p:int;int;Qt::AspectRatioMode=Qt::IgnoreAspectRatio;Qt::TransformationMode=Qt::FastTransformation][specs:const]
                  - function: scaled[r:QPixmap][p:const QSize &;Qt::AspectRatioMode=Qt::IgnoreAspectRatio;Qt::TransformationMode=Qt::FastTransformation][specs:const]
                  - function: scaledToWidth[r:QPixmap][p:int;Qt::TransformationMode=Qt::FastTransformation][specs:const]
                  - function: scaledToHeight[r:QPixmap][p:int;Qt::TransformationMode=Qt::FastTransformation][specs:const]
                  - function: transformed[r:QPixmap][p:const QMatrix &;Qt::TransformationMode=Qt::FastTransformation][specs:const]
                  - function: trueMatrix[r:QMatrix][p:const QMatrix &;int;int][specs:static]
                  - function: transformed[r:QPixmap][p:const QTransform &;Qt::TransformationMode=Qt::FastTransformation][specs:const]
                  - function: trueMatrix[r:QTransform][p:const QTransform &;int;int][specs:static]
                  - function: toImage[r:QImage][specs:const]
                  - function: fromImage[r:QPixmap][p:const QImage &;Qt::ImageConversionFlags=Qt::ImageConversionFlags(Qt::AutoColor)][specs:static]
                  - function: fromImageReader[r:QPixmap][p:QImageReader *;Qt::ImageConversionFlags=Qt::ImageConversionFlags(Qt::AutoColor)][specs:static]
                  - function: fromImage[r:QPixmap][p:QImage &&;Qt::ImageConversionFlags=Qt::ImageConversionFlags(Qt::AutoColor)][specs:static][v:5.3.0]
                  - function: load[r:bool][p:const QString &;const char *;Qt::ImageConversionFlags]
                  - function: loadFromData[r:bool][p:const uchar *;uint;const char *;Qt::ImageConversionFlags]
                  - function: loadFromData[r:bool][p:const QByteArray &;const char *;Qt::ImageConversionFlags]
                  - function: save[r:bool][p:const QString &;const char *;int][specs:const]
                  - function: save[r:bool][p:QIODevice *;const char *;int][specs:const]
                  - function: convertFromImage[r:bool][p:const QImage &;Qt::ImageConversionFlags=Qt::ImageConversionFlags(Qt::AutoColor)]
                  - function: copy[r:QPixmap][p:int;int;int;int][specs:const]
                  - function: copy[r:QPixmap][p:const QRect &=QRect()][specs:const]
                  - function: scroll[r:void][p:int;int;int;int;int;int;QRegion *]
                  - function: scroll[r:void][p:int;int;const QRect &;QRegion *]
                  - function: cacheKey[r:qint64][specs:const]
                  - function: isDetached[r:bool][specs:const]
                  - function: detach[r:void]
                  - function: isQBitmap[r:bool][specs:const]
                  - function: paintEngine[r:QPaintEngine *][specs:const]
                  - function: operator![r:bool][specs:const]
                  - function: handle[r:QPlatformPixmap *][specs:const]
                  - function: data_ptr[r:QPixmap::DataPtr &]
            - function: swap[r:void][p:QPixmap &;QPixmap &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QPixmap &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QPixmap &]
            - function: operator<<[r:QDebug][p:QDebug;const QPixmap &]
          hincludes: <QPixmap>
      - file:
          name: bitmap
          checkstate: partially-checked
          elements:
            - class:
                name: QBitmap
                base: QPixmap
                elements:
                  - constructor: QBitmap
                  - constructor: QBitmap[p:const QPixmap &]
                  - constructor: QBitmap[p:int;int]
                  - constructor: QBitmap[p:const QSize &]
                  - constructor: QBitmap[p:const QString &;const char *]
                  - constructor: QBitmap[p:const QBitmap &]
                  - function: operator=[r:QBitmap &][p:const QBitmap &]
                  - function: operator=[r:QBitmap &][p:QBitmap &&]
                  - destructor: ~QBitmap
                  - function: operator=[r:QBitmap &][p:const QPixmap &]
                  - function: swap[r:void][p:QBitmap &]
                  - function: clear[r:void]
                  - function: fromImage[r:QBitmap][p:const QImage &;Qt::ImageConversionFlags=Qt::ImageConversionFlags(Qt::AutoColor)][specs:static]
                  - function: fromData[r:QBitmap][p:const QSize &;const uchar *;QImage::Format][specs:static]
                  - function: transformed[r:QBitmap][p:const QMatrix &][specs:const]
                  - function: transformed[r:QBitmap][p:const QTransform &][specs:const]
            - function: swap[r:void][p:QBitmap &;QBitmap &]
          hincludes: <QBitmap>
      - file:
          name: icon
          checkstate: partially-checked
          elements:
            - class:
                name: QIcon
                elements:
                  - enum:
                      name: Mode
                      enumerators:
                        - Normal
                        - Disabled
                        - Active
                        - Selected
                  - enum:
                      name: State
                      enumerators:
                        - On
                        - Off
                  - constructor: QIcon
                  - constructor: QIcon[p:const QPixmap &]
                  - constructor: QIcon[p:const QIcon &]
                  - constructor: QIcon[p:QIcon &&]
                  - constructor: QIcon[p:const QString &]
                  - constructor: QIcon[p:QIconEngine *]
                  - destructor: ~QIcon
                  - function: operator=[r:QIcon &][p:const QIcon &]
                  - function: operator=[r:QIcon &][p:QIcon &&]
                  - function: swap[r:void][p:QIcon &]
                  - function: pixmap[r:QPixmap][p:const QSize &;QIcon::Mode=QIcon::Normal;QIcon::State=QIcon::Off][specs:const]
                  - function: pixmap[r:QPixmap][p:int;int;QIcon::Mode=QIcon::Normal;QIcon::State=QIcon::Off][specs:const]
                  - function: pixmap[r:QPixmap][p:int;QIcon::Mode=QIcon::Normal;QIcon::State=QIcon::Off][specs:const]
                  - function: pixmap[r:QPixmap][p:QWindow *;const QSize &;QIcon::Mode=QIcon::Normal;QIcon::State=QIcon::Off][specs:const][v:5.1.0]
                  - function: actualSize[r:QSize][p:const QSize &;QIcon::Mode=QIcon::Normal;QIcon::State=QIcon::Off][specs:const]
                  - function: actualSize[r:QSize][p:QWindow *;const QSize &;QIcon::Mode=QIcon::Normal;QIcon::State=QIcon::Off][specs:const][v:5.1.0]
                  - function: name[r:QString][specs:const]
                  - function: paint[r:void][p:QPainter *;const QRect &;Qt::Alignment=Qt::Alignment(Qt::AlignCenter);QIcon::Mode=QIcon::Normal;QIcon::State=QIcon::Off][specs:const]
                  - function: paint[r:void][p:QPainter *;int;int;int;int;Qt::Alignment=Qt::Alignment(Qt::AlignCenter);QIcon::Mode=QIcon::Normal;QIcon::State=QIcon::Off][specs:const]
                  - function: isNull[r:bool][specs:const]
                  - function: isDetached[r:bool][specs:const]
                  - function: detach[r:void]
                  - function: cacheKey[r:qint64][specs:const]
                  - function: addPixmap[r:void][p:const QPixmap &;QIcon::Mode=QIcon::Normal;QIcon::State=QIcon::Off]
                  - function: addFile[r:void][p:const QString &;const QSize &=QSize();QIcon::Mode=QIcon::Normal;QIcon::State=QIcon::Off]
                  - function: availableSizes[r:QList<QSize>][p:QIcon::Mode=QIcon::Normal;QIcon::State=QIcon::Off][specs:const]
                  - function: setIsMask[r:void][p:bool][v:5.6.0]
                  - function: isMask[r:bool][specs:const][v:5.6.0]
                  - function: fromTheme[r:QIcon][p:const QString &][specs:static]
                  - function: fromTheme[r:QIcon][p:const QString &;const QIcon &][specs:static]
                  - function: hasThemeIcon[r:bool][p:const QString &][specs:static]
                  - function: themeSearchPaths[r:QStringList][specs:static]
                  - function: setThemeSearchPaths[r:void][p:const QStringList &][specs:static]
                  - function: themeName[r:QString][specs:static]
                  - function: setThemeName[r:void][p:const QString &][specs:static]
                  - function: data_ptr[r:QIcon::DataPtr &]
            - function: swap[r:void][p:QIcon &;QIcon &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QIcon &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QIcon &]
            - function: operator<<[r:QDebug][p:QDebug;const QIcon &]
            - function: qt_findAtNxFile[r:QString][p:const QString &;qreal;qreal *]
          hincludes: <QIcon>
      - file:
          name: image
          checkstate: partially-checked
          cppincludes: yasl/gui/image-functions.h
          elements:
            - class:
                name: QImage
                checkstate: partially-checked
                elements:
                  - enum:
                      name: InvertMode
                      enumerators:
                        - InvertRgb
                        - InvertRgba
                  - enum:
                      name: Format
                      enumerators:
                        - Format_Invalid
                        - Format_Mono
                        - Format_MonoLSB
                        - Format_Indexed8
                        - Format_RGB32
                        - Format_ARGB32
                        - Format_ARGB32_Premultiplied
                        - Format_RGB16
                        - Format_ARGB8565_Premultiplied
                        - Format_RGB666
                        - Format_ARGB6666_Premultiplied
                        - Format_RGB555
                        - Format_ARGB8555_Premultiplied
                        - Format_RGB888
                        - Format_RGB444
                        - Format_ARGB4444_Premultiplied
                        - Format_RGBX8888[v:5.2.0]
                        - Format_RGBA8888[v:5.2.0]
                        - Format_RGBA8888_Premultiplied[v:5.2.0]
                        - Format_BGR30[v:5.4.0]
                        - Format_A2BGR30_Premultiplied[v:5.4.0]
                        - Format_RGB30[v:5.4.0]
                        - Format_A2RGB30_Premultiplied[v:5.4.0]
                        - Format_Alpha8[v:5.5.0]
                        - Format_Grayscale8[v:5.5.0]
                        - NImageFormats
                  - constructor: QImage
                  - constructor: QImage[p:const QSize &;QImage::Format]
                  - constructor: QImage[p:int;int;QImage::Format]
                  - constructor: QImage[p:uchar *;int;int;QImage::Format;QImageCleanupFunction;void *]
                  - constructor: QImage[p:const uchar *;int;int;QImage::Format;QImageCleanupFunction;void *]
                  - constructor: QImage[p:uchar *;int;int;int;QImage::Format;QImageCleanupFunction;void *]
                  - constructor: QImage[p:const uchar *;int;int;int;QImage::Format;QImageCleanupFunction;void *]
                  - constructor: QImage[p:const QString &;const char *]
                  - constructor: QImage[p:const QImage &]
                  - constructor: QImage[p:QImage &&]
                  - destructor: ~QImage
                  - function: operator=[r:QImage &][p:const QImage &]
                  - function: operator=[r:QImage &][p:QImage &&]
                  - function: swap[r:void][p:QImage &]
                  - function: isNull[r:bool][specs:const]
                  - function: devType[r:int][specs:const]
                  - function: operator==[r:bool][p:const QImage &][specs:const]
                  - function: operator!=[r:bool][p:const QImage &][specs:const]
                  - function: detach[r:void]
                  - function: isDetached[r:bool][specs:const]
                  - function: copy[r:QImage][p:const QRect &=QRect()][specs:const]
                  - function: copy[r:QImage][p:int;int;int;int][specs:const]
                  - function: format[r:QImage::Format][specs:const]
                  - function: convertToFormat[r:QImage][p:QImage::Format;Qt::ImageConversionFlags][specs:const][unchecked]
                  - function: img_convertToFormat[r:QImage][p:QImage::Format;Qt::ImageConversionFlags=Qt::ImageConversionFlags(Qt::AutoColor)][binding:free][rename:convertToFormat]
                  - function: convertToFormat[r:QImage][p:QImage::Format;const QVector<QRgb> &;Qt::ImageConversionFlags=Qt::ImageConversionFlags(Qt::AutoColor)][specs:const]
                  - function: reinterpretAsFormat[r:bool][p:QImage::Format][v:5.9.0]
                  - function: width[r:int][specs:const]
                  - function: height[r:int][specs:const]
                  - function: size[r:QSize][specs:const]
                  - function: rect[r:QRect][specs:const]
                  - function: depth[r:int][specs:const]
                  - function: colorCount[r:int][specs:const]
                  - function: bitPlaneCount[r:int][specs:const]
                  - function: color[r:QRgb][p:int][specs:const]
                  - function: setColor[r:void][p:int;QRgb]
                  - function: setColorCount[r:void][p:int]
                  - function: allGray[r:bool][specs:const]
                  - function: isGrayscale[r:bool][specs:const]
                  - function: bits[r:uchar *]
                  - function: bits[r:const uchar *][specs:const]
                  - function: constBits[r:const uchar *][specs:const]
                  - function: byteCount[r:int][specs:const]
                  - function: sizeInBytes[r:qsizetype][specs:const][v:5.10.0]
                  - function: scanLine[r:uchar *][p:int]
                  - function: scanLine[r:const uchar *][p:int][specs:const]
                  - function: constScanLine[r:const uchar *][p:int][specs:const]
                  - function: bytesPerLine[r:int][specs:const]
                  - function: valid[r:bool][p:int;int][specs:const]
                  - function: valid[r:bool][p:const QPoint &][specs:const]
                  - function: pixelIndex[r:int][p:int;int][specs:const]
                  - function: pixelIndex[r:int][p:const QPoint &][specs:const]
                  - function: pixel[r:QRgb][p:int;int][specs:const]
                  - function: pixel[r:QRgb][p:const QPoint &][specs:const]
                  - function: setPixel[r:void][p:int;int;uint]
                  - function: setPixel[r:void][p:const QPoint &;uint]
                  - function: pixelColor[r:QColor][p:int;int][specs:const][v:5.6.0]
                  - function: pixelColor[r:QColor][p:const QPoint &][specs:const][v:5.6.0]
                  - function: setPixelColor[r:void][p:int;int;const QColor &]
                  - function: setPixelColor[r:void][p:const QPoint &;const QColor &]
                  - function: colorTable[r:QVector<QRgb>][specs:const]
                  - function: setColorTable[r:void][p:const QVector<QRgb>]
                  - function: devicePixelRatio[r:qreal][specs:const]
                  - function: setDevicePixelRatio[r:void][p:qreal]
                  - function: fill[r:void][p:uint]
                  - function: fill[r:void][p:const QColor &]
                  - function: fill[r:void][p:Qt::GlobalColor]
                  - function: hasAlphaChannel[r:bool][specs:const]
                  - function: setAlphaChannel[r:void][p:const QImage &]
                  - function: alphaChannel[r:QImage][specs:const]
                  - function: createAlphaMask[r:QImage][p:Qt::ImageConversionFlags=Qt::ImageConversionFlags(Qt::AutoColor)][specs:const]
                  - function: createHeuristicMask[r:QImage][p:bool=true][specs:const]
                  - function: createMaskFromColor[r:QImage][p:QRgb;Qt::MaskMode=Qt::MaskInColor][specs:const]
                  - function: scaled[r:QImage][p:int;int;Qt::AspectRatioMode=Qt::IgnoreAspectRatio;Qt::TransformationMode=Qt::FastTransformation][specs:const]
                  - function: scaled[r:QImage][p:const QSize &;Qt::AspectRatioMode=Qt::IgnoreAspectRatio;Qt::TransformationMode=Qt::FastTransformation][specs:const]
                  - function: scaledToWidth[r:QImage][p:int;Qt::TransformationMode=Qt::FastTransformation][specs:const]
                  - function: scaledToHeight[r:QImage][p:int;Qt::TransformationMode=Qt::FastTransformation][specs:const]
                  - function: transformed[r:QImage][p:const QMatrix &;Qt::TransformationMode=Qt::FastTransformation][specs:const]
                  - function: trueMatrix[r:QMatrix][p:const QMatrix &;int;int][specs:static]
                  - function: transformed[r:QImage][p:const QTransform &;Qt::TransformationMode=Qt::FastTransformation][specs:const]
                  - function: trueMatrix[r:QTransform][p:const QTransform &;int;int][specs:static]
                  - function: mirrored[r:QImage][p:bool;bool][specs:const][unchecked]
                  - function: img_mirrored[r:QImage][p:bool=false;bool=true][binding:free][rename:mirrored]
                  - function: rgbSwapped[r:QImage][specs:const][unchecked]
                  - function: img_rgbSwapped[r:QImage][binding:free][rename:rgbSwapped]
                  - function: invertPixels[r:void][p:QImage::InvertMode=QImage::InvertRgb]
                  - function: load[r:bool][p:QIODevice *;const char *]
                  - function: load[r:bool][p:const QString &;const char *]
                  - function: loadFromData[r:bool][p:const uchar *;int;const char *]
                  - function: loadFromData[r:bool][p:const QByteArray &;const char *]
                  - function: save[r:bool][p:const QString &;const char *;int][specs:const]
                  - function: save[r:bool][p:QIODevice *;const char *;int][specs:const]
                  - function: fromData[r:QImage][p:const uchar *;int;const char *][specs:static]
                  - function: fromData[r:QImage][p:const QByteArray &;const char *][specs:static]
                  - function: cacheKey[r:qint64][specs:const]
                  - function: paintEngine[r:QPaintEngine *][specs:const]
                  - function: dotsPerMeterX[r:int][specs:const]
                  - function: dotsPerMeterY[r:int][specs:const]
                  - function: setDotsPerMeterX[r:void][p:int]
                  - function: setDotsPerMeterY[r:void][p:int]
                  - function: offset[r:QPoint][specs:const]
                  - function: setOffset[r:void][p:const QPoint &]
                  - function: textKeys[r:QStringList][specs:const]
                  - function: text[r:QString][p:const QString &][specs:const]
                  - function: setText[r:void][p:const QString &;const QString &]
                  - function: pixelFormat[r:QPixelFormat][specs:const]
                  - function: toPixelFormat[r:QPixelFormat][p:QImage::Format][specs:static]
                  - function: toImageFormat[r:QImage::Format][p:QPixelFormat][specs:static]
                  - function: data_ptr[r:QImage::DataPtr &]
            - function: swap[r:void][p:QImage &;QImage &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QImage &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QImage &]
            - function: operator<<[r:QDebug][p:QDebug;const QImage &]
          hincludes: <QImage>
      - file:
          name: transform
          checkstate: partially-checked
          elements:
            - class:
                name: QTransform
                checkstate: partially-checked
                elements:
                  - enum:
                      name: TransformationType
                      enumerators:
                        - TxNone
                        - TxTranslate
                        - TxScale
                        - TxRotate
                        - TxShear
                        - TxProject
                  - constructor: QTransform[p:Qt::Initialization]
                  - constructor: QTransform
                  - destructor: ~QTransform
                  - constructor: QTransform[p:qreal;qreal;qreal;qreal;qreal;qreal;qreal;qreal;qreal=qreal(1.0)][unchecked]
                  - constructor: QTransform[p:qreal;qreal;qreal;qreal;qreal;qreal]
                  - constructor: QTransform[p:const QMatrix &]
                  - function: operator=[r:QTransform &][p:QTransform &&]
                  - function: operator=[r:QTransform &][p:const QTransform &]
                  - constructor: QTransform[p:QTransform &&]
                  - constructor: QTransform[p:const QTransform &]
                  - function: isAffine[r:bool][specs:const]
                  - function: isIdentity[r:bool][specs:const]
                  - function: isInvertible[r:bool][specs:const]
                  - function: isScaling[r:bool][specs:const]
                  - function: isRotating[r:bool][specs:const]
                  - function: isTranslating[r:bool][specs:const]
                  - function: type[r:QTransform::TransformationType][specs:const]
                  - function: determinant[r:qreal][specs:const]
                  - function: det[r:qreal][specs:const]
                  - function: m11[r:qreal][specs:const]
                  - function: m12[r:qreal][specs:const]
                  - function: m13[r:qreal][specs:const]
                  - function: m21[r:qreal][specs:const]
                  - function: m22[r:qreal][specs:const]
                  - function: m23[r:qreal][specs:const]
                  - function: m31[r:qreal][specs:const]
                  - function: m32[r:qreal][specs:const]
                  - function: m33[r:qreal][specs:const]
                  - function: dx[r:qreal][specs:const]
                  - function: dy[r:qreal][specs:const]
                  - function: setMatrix[r:void][p:qreal;qreal;qreal;qreal;qreal;qreal;qreal;qreal;qreal][unchecked]
                  - function: inverted[r:QTransform][p:bool *][specs:const]
                  - function: adjoint[r:QTransform][specs:const]
                  - function: transposed[r:QTransform][specs:const]
                  - function: translate[r:QTransform &][p:qreal;qreal]
                  - function: scale[r:QTransform &][p:qreal;qreal]
                  - function: shear[r:QTransform &][p:qreal;qreal]
                  - function: rotate[r:QTransform &][p:qreal;Qt::Axis=Qt::ZAxis]
                  - function: rotateRadians[r:QTransform &][p:qreal;Qt::Axis=Qt::ZAxis]
                  - function: squareToQuad[r:bool][p:const QPolygonF &;QTransform &][specs:static]
                  - function: quadToSquare[r:bool][p:const QPolygonF &;QTransform &][specs:static]
                  - function: quadToQuad[r:bool][p:const QPolygonF &;const QPolygonF &;QTransform &][specs:static]
                  - function: operator==[r:bool][p:const QTransform &][specs:const]
                  - function: operator!=[r:bool][p:const QTransform &][specs:const]
                  - function: operator*=[r:QTransform &][p:const QTransform &]
                  - function: operator*[r:QTransform][p:const QTransform &][specs:const]
                  - function: reset[r:void]
                  - function: map[r:QPoint][p:const QPoint &][specs:const]
                  - function: map[r:QPointF][p:const QPointF &][specs:const]
                  - function: map[r:QLine][p:const QLine &][specs:const]
                  - function: map[r:QLineF][p:const QLineF &][specs:const]
                  - function: map[r:QPolygonF][p:const QPolygonF &][specs:const]
                  - function: map[r:QPolygon][p:const QPolygon &][specs:const]
                  - function: map[r:QRegion][p:const QRegion &][specs:const]
                  - function: map[r:QPainterPath][p:const QPainterPath &][specs:const]
                  - function: mapToPolygon[r:QPolygon][p:const QRect &][specs:const]
                  - function: mapRect[r:QRect][p:const QRect &][specs:const]
                  - function: mapRect[r:QRectF][p:const QRectF &][specs:const]
                  - function: map[r:void][p:int;int;int *;int *][specs:const]
                  - function: map[r:void][p:qreal;qreal;qreal *;qreal *][specs:const]
                  - function: toAffine[r:const QMatrix &][specs:const]
                  - function: operator*=[r:QTransform &][p:qreal]
                  - function: operator/=[r:QTransform &][p:qreal]
                  - function: operator+=[r:QTransform &][p:qreal]
                  - function: operator-=[r:QTransform &][p:qreal]
                  - function: fromTranslate[r:QTransform][p:qreal;qreal][specs:static]
                  - function: fromScale[r:QTransform][p:qreal;qreal][specs:static]
            - function: qHash[r:uint][p:const QTransform &;uint][v:5.6.0]
            - function: qFuzzyCompare[r:bool][p:const QTransform &;const QTransform &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QTransform &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QTransform &]
            - function: operator<<[r:QDebug][p:QDebug;const QTransform &]
            - function: operator*[r:QPoint][p:const QPoint &;const QTransform &]
            - function: operator*[r:QPointF][p:const QPointF &;const QTransform &]
            - function: operator*[r:QLineF][p:const QLineF &;const QTransform &]
            - function: operator*[r:QLine][p:const QLine &;const QTransform &]
            - function: operator*[r:QPolygon][p:const QPolygon &;const QTransform &]
            - function: operator*[r:QPolygonF][p:const QPolygonF &;const QTransform &]
            - function: operator*[r:QRegion][p:const QRegion &;const QTransform &]
            - function: operator*[r:QPainterPath][p:const QPainterPath &;const QTransform &]
            - function: operator*[r:QTransform][p:const QTransform &;qreal]
            - function: operator/[r:QTransform][p:const QTransform &;qreal]
            - function: operator+[r:QTransform][p:const QTransform &;qreal]
            - function: operator-[r:QTransform][p:const QTransform &;qreal]
          hincludes: <QTransform>
      - file:
          name: vector2d
          checkstate: partially-checked
          elements:
            - class:
                name: QVector2D
                checkstate: partially-checked
                elements:
                  - constructor: QVector2D
                  - constructor: QVector2D[p:Qt::Initialization]
                  - constructor: QVector2D[p:const QVector2D &]
                  - destructor: ~QVector2D
                  - function: operator=[r:QVector2D &][p:const QVector2D &]
                  - constructor: QVector2D[p:float;float]
                  - constructor: QVector2D[p:const QPoint &]
                  - constructor: QVector2D[p:const QPointF &]
                  - constructor: QVector2D[p:const QVector3D &]
                  - constructor: QVector2D[p:const QVector4D &]
                  - function: isNull[r:bool][specs:const]
                  - function: x[r:float][specs:const]
                  - function: y[r:float][specs:const]
                  - function: setX[r:void][p:float]
                  - function: setY[r:void][p:float]
                  - function: operator[][r:float &][p:int][v:5.2.0][unchecked]
                  - function: operator[][r:float][p:int][specs:const][v:5.2.0]
                  - function: length[r:float][specs:const]
                  - function: lengthSquared[r:float][specs:const]
                  - function: normalized[r:QVector2D][specs:const]
                  - function: normalize[r:void]
                  - function: distanceToPoint[r:float][p:const QVector2D &][specs:const][v:5.1.0]
                  - function: distanceToLine[r:float][p:const QVector2D &;const QVector2D &][specs:const][v:5.1.0]
                  - function: operator+=[r:QVector2D &][p:const QVector2D &]
                  - function: operator-=[r:QVector2D &][p:const QVector2D &]
                  - function: operator*=[r:QVector2D &][p:float]
                  - function: operator*=[r:QVector2D &][p:const QVector2D &]
                  - function: operator/=[r:QVector2D &][p:float]
                  - function: operator/=[r:QVector2D &][p:const QVector2D &][v:5.5.0]
                  - function: dotProduct[r:float][p:const QVector2D &;const QVector2D &][specs:static]
                  - function: toVector3D[r:QVector3D][specs:const]
                  - function: toVector4D[r:QVector4D][specs:const]
                  - function: toPoint[r:QPoint][specs:const]
                  - function: toPointF[r:QPointF][specs:const]
            - function: operator==[r:bool][p:const QVector2D &;const QVector2D &]
            - function: operator!=[r:bool][p:const QVector2D &;const QVector2D &]
            - function: operator+[r:const QVector2D][p:const QVector2D &;const QVector2D &]
            - function: operator-[r:const QVector2D][p:const QVector2D &;const QVector2D &]
            - function: operator*[r:const QVector2D][p:float;const QVector2D &]
            - function: operator*[r:const QVector2D][p:const QVector2D &;float]
            - function: operator*[r:const QVector2D][p:const QVector2D &;const QVector2D &]
            - function: operator-[r:const QVector2D][p:const QVector2D &]
            - function: operator/[r:const QVector2D][p:const QVector2D &;float]
            - function: operator/[r:const QVector2D][p:const QVector2D &;const QVector2D &][v:5.5.0]
            - function: qFuzzyCompare[r:bool][p:const QVector2D &;const QVector2D &]
            - function: operator<<[r:QDebug][p:QDebug;const QVector2D &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QVector2D &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QVector2D &]
          hincludes: <QVector2D>
      - file:
          name: vector3d
          checkstate: partially-checked
          elements:
            - class:
                name: QVector3D
                checkstate: partially-checked
                elements:
                  - constructor: QVector3D
                  - constructor: QVector3D[p:const QVector3D &]
                  - destructor: ~QVector3D
                  - function: operator=[r:QVector3D &][p:const QVector3D &]
                  - constructor: QVector3D[p:Qt::Initialization]
                  - constructor: QVector3D[p:float;float;float]
                  - constructor: QVector3D[p:const QPoint &]
                  - constructor: QVector3D[p:const QPointF &]
                  - constructor: QVector3D[p:const QVector2D &]
                  - constructor: QVector3D[p:const QVector2D &;float]
                  - constructor: QVector3D[p:const QVector4D &]
                  - function: isNull[r:bool][specs:const]
                  - function: x[r:float][specs:const]
                  - function: y[r:float][specs:const]
                  - function: z[r:float][specs:const]
                  - function: setX[r:void][p:float]
                  - function: setY[r:void][p:float]
                  - function: setZ[r:void][p:float]
                  - function: operator[][r:float &][p:int][v:5.2.0][unchecked]
                  - function: operator[][r:float][p:int][specs:const][v:5.2.0]
                  - function: length[r:float][specs:const]
                  - function: lengthSquared[r:float][specs:const]
                  - function: normalized[r:QVector3D][specs:const]
                  - function: normalize[r:void]
                  - function: operator+=[r:QVector3D &][p:const QVector3D &]
                  - function: operator-=[r:QVector3D &][p:const QVector3D &]
                  - function: operator*=[r:QVector3D &][p:float]
                  - function: operator*=[r:QVector3D &][p:const QVector3D &]
                  - function: operator/=[r:QVector3D &][p:float]
                  - function: operator/=[r:QVector3D &][p:const QVector3D &][v:5.5.0]
                  - function: dotProduct[r:float][p:const QVector3D &;const QVector3D &][specs:static]
                  - function: crossProduct[r:QVector3D][p:const QVector3D &;const QVector3D &][specs:static]
                  - function: normal[r:QVector3D][p:const QVector3D &;const QVector3D &][specs:static]
                  - function: normal[r:QVector3D][p:const QVector3D &;const QVector3D &;const QVector3D &][specs:static]
                  - function: project[r:QVector3D][p:const QMatrix4x4 &;const QMatrix4x4 &;const QRect &][specs:const][v:5.5.0]
                  - function: unproject[r:QVector3D][p:const QMatrix4x4 &;const QMatrix4x4 &;const QRect &][specs:const][v:5.5.0]
                  - function: distanceToPoint[r:float][p:const QVector3D &][specs:const][v:5.1.0]
                  - function: distanceToPlane[r:float][p:const QVector3D &;const QVector3D &][specs:const]
                  - function: distanceToPlane[r:float][p:const QVector3D &;const QVector3D &;const QVector3D &][specs:const]
                  - function: distanceToLine[r:float][p:const QVector3D &;const QVector3D &][specs:const]
                  - function: toVector2D[r:QVector2D][specs:const]
                  - function: toVector4D[r:QVector4D][specs:const]
                  - function: toPoint[r:QPoint][specs:const]
                  - function: toPointF[r:QPointF][specs:const]
            - function: operator==[r:bool][p:const QVector3D &;const QVector3D &]
            - function: operator!=[r:bool][p:const QVector3D &;const QVector3D &]
            - function: operator+[r:const QVector3D][p:const QVector3D &;const QVector3D &]
            - function: operator-[r:const QVector3D][p:const QVector3D &;const QVector3D &]
            - function: operator*[r:const QVector3D][p:float;const QVector3D &]
            - function: operator*[r:const QVector3D][p:const QVector3D &;float]
            - function: operator*[r:const QVector3D][p:const QVector3D &;const QVector3D &]
            - function: operator-[r:const QVector3D][p:const QVector3D &]
            - function: operator/[r:const QVector3D][p:const QVector3D &;float]
            - function: operator/[r:const QVector3D][p:const QVector3D &;const QVector3D &][v:5.5.0]
            - function: qFuzzyCompare[r:bool][p:const QVector3D &;const QVector3D &]
            - function: operator<<[r:QDebug][p:QDebug;const QVector3D &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QVector3D &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QVector3D &]
          hincludes: <QVector3D>
      - file:
          name: vector4d
          checkstate: partially-checked
          elements:
            - class:
                name: QVector4D
                checkstate: partially-checked
                elements:
                  - constructor: QVector4D
                  - constructor: QVector4D[p:const QVector4D &]
                  - destructor: ~QVector4D
                  - function: operator=[r:QVector4D &][p:const QVector4D &]
                  - constructor: QVector4D[p:Qt::Initialization]
                  - constructor: QVector4D[p:float;float;float;float]
                  - constructor: QVector4D[p:const QPoint &]
                  - constructor: QVector4D[p:const QPointF &]
                  - constructor: QVector4D[p:const QVector2D &]
                  - constructor: QVector4D[p:const QVector2D &;float;float]
                  - constructor: QVector4D[p:const QVector3D &]
                  - constructor: QVector4D[p:const QVector3D &;float]
                  - function: isNull[r:bool][specs:const]
                  - function: x[r:float][specs:const]
                  - function: y[r:float][specs:const]
                  - function: z[r:float][specs:const]
                  - function: w[r:float][specs:const]
                  - function: setX[r:void][p:float]
                  - function: setY[r:void][p:float]
                  - function: setZ[r:void][p:float]
                  - function: setW[r:void][p:float]
                  - function: operator[][r:float &][p:int][v:5.2.0][unchecked]
                  - function: operator[][r:float][p:int][specs:const][v:5.2.0]
                  - function: length[r:float][specs:const]
                  - function: lengthSquared[r:float][specs:const]
                  - function: normalized[r:QVector4D][specs:const]
                  - function: normalize[r:void]
                  - function: operator+=[r:QVector4D &][p:const QVector4D &]
                  - function: operator-=[r:QVector4D &][p:const QVector4D &]
                  - function: operator*=[r:QVector4D &][p:float]
                  - function: operator*=[r:QVector4D &][p:const QVector4D &]
                  - function: operator/=[r:QVector4D &][p:float]
                  - function: operator/=[r:QVector4D &][p:const QVector4D &][v:5.5.0]
                  - function: dotProduct[r:float][p:const QVector4D &;const QVector4D &][specs:static]
                  - function: toVector2D[r:QVector2D][specs:const]
                  - function: toVector2DAffine[r:QVector2D][specs:const]
                  - function: toVector3D[r:QVector3D][specs:const]
                  - function: toVector3DAffine[r:QVector3D][specs:const]
                  - function: toPoint[r:QPoint][specs:const]
                  - function: toPointF[r:QPointF][specs:const]
            - function: operator==[r:bool][p:const QVector4D &;const QVector4D &]
            - function: operator!=[r:bool][p:const QVector4D &;const QVector4D &]
            - function: operator+[r:const QVector4D][p:const QVector4D &;const QVector4D &]
            - function: operator-[r:const QVector4D][p:const QVector4D &;const QVector4D &]
            - function: operator*[r:const QVector4D][p:float;const QVector4D &]
            - function: operator*[r:const QVector4D][p:const QVector4D &;float]
            - function: operator*[r:const QVector4D][p:const QVector4D &;const QVector4D &]
            - function: operator-[r:const QVector4D][p:const QVector4D &]
            - function: operator/[r:const QVector4D][p:const QVector4D &;float]
            - function: operator/[r:const QVector4D][p:const QVector4D &;const QVector4D &][v:5.5.0]
            - function: qFuzzyCompare[r:bool][p:const QVector4D &;const QVector4D &]
            - function: operator<<[r:QDebug][p:QDebug;const QVector4D &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QVector4D &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QVector4D &]
          hincludes: <QVector4D>
      - file:
          name: quaternion
          checkstate: partially-checked
          elements:
            - class:
                name: QQuaternion
                elements:
                  - constructor: QQuaternion
                  - constructor: QQuaternion[p:const QQuaternion &]
                  - destructor: ~QQuaternion
                  - function: operator=[r:QQuaternion &][p:const QQuaternion &]
                  - constructor: QQuaternion[p:Qt::Initialization]
                  - constructor: QQuaternion[p:float;float;float;float]
                  - constructor: QQuaternion[p:float;const QVector3D &]
                  - constructor: QQuaternion[p:const QVector4D &]
                  - function: isNull[r:bool][specs:const]
                  - function: isIdentity[r:bool][specs:const]
                  - function: vector[r:QVector3D][specs:const]
                  - function: setVector[r:void][p:const QVector3D &]
                  - function: setVector[r:void][p:float;float;float]
                  - function: x[r:float][specs:const]
                  - function: y[r:float][specs:const]
                  - function: z[r:float][specs:const]
                  - function: scalar[r:float][specs:const]
                  - function: setX[r:void][p:float]
                  - function: setY[r:void][p:float]
                  - function: setZ[r:void][p:float]
                  - function: setScalar[r:void][p:float]
                  - function: dotProduct[r:float][p:const QQuaternion &;const QQuaternion &][specs:static][v:5.5.0]
                  - function: length[r:float][specs:const]
                  - function: lengthSquared[r:float][specs:const]
                  - function: normalized[r:QQuaternion][specs:const]
                  - function: normalize[r:void]
                  - function: inverted[r:QQuaternion][specs:const][v:5.5.0]
                  - function: conjugated[r:QQuaternion][specs:const][v:5.5.0]
                  - function: conjugate[r:QQuaternion][specs:const]
                  - function: rotatedVector[r:QVector3D][p:const QVector3D &][specs:const]
                  - function: operator+=[r:QQuaternion &][p:const QQuaternion &]
                  - function: operator-=[r:QQuaternion &][p:const QQuaternion &]
                  - function: operator*=[r:QQuaternion &][p:float]
                  - function: operator*=[r:QQuaternion &][p:const QQuaternion &]
                  - function: operator/=[r:QQuaternion &][p:float]
                  - function: toVector4D[r:QVector4D][specs:const]
                  - function: getAxisAndAngle[r:void][p:QVector3D *;float *][specs:const][v:5.5.0]
                  - function: fromAxisAndAngle[r:QQuaternion][p:const QVector3D &;float][specs:static]
                  - function: getAxisAndAngle[r:void][p:float *;float *;float *;float *][specs:const][v:5.5.0]
                  - function: fromAxisAndAngle[r:QQuaternion][p:float;float;float;float][specs:static]
                  - function: toEulerAngles[r:QVector3D][specs:const][v:5.5.0]
                  - function: fromEulerAngles[r:QQuaternion][p:const QVector3D &][specs:static][v:5.5.0]
                  - function: getEulerAngles[r:void][p:float *;float *;float *][specs:const][v:5.5.0]
                  - function: fromEulerAngles[r:QQuaternion][p:float;float;float][specs:static][v:5.5.0]
                  - function: toRotationMatrix[r:QMatrix3x3][specs:const][v:5.5.0]
                  - function: fromRotationMatrix[r:QQuaternion][p:const QMatrix3x3 &][specs:static][v:5.5.0]
                  - function: getAxes[r:void][p:QVector3D *;QVector3D *;QVector3D *][specs:const][v:5.5.0]
                  - function: fromAxes[r:QQuaternion][p:const QVector3D &;const QVector3D &;const QVector3D &][specs:static][v:5.5.0]
                  - function: fromDirection[r:QQuaternion][p:const QVector3D &;const QVector3D &][specs:static][v:5.5.0]
                  - function: rotationTo[r:QQuaternion][p:const QVector3D &;const QVector3D &][specs:static][v:5.5.0]
                  - function: slerp[r:QQuaternion][p:const QQuaternion &;const QQuaternion &;float][specs:static]
                  - function: nlerp[r:QQuaternion][p:const QQuaternion &;const QQuaternion &;float][specs:static]
            - function: operator==[r:bool][p:const QQuaternion &;const QQuaternion &]
            - function: operator*[r:const QQuaternion][p:const QQuaternion &;const QQuaternion &]
            - function: operator!=[r:bool][p:const QQuaternion &;const QQuaternion &]
            - function: operator+[r:const QQuaternion][p:const QQuaternion &;const QQuaternion &]
            - function: operator-[r:const QQuaternion][p:const QQuaternion &;const QQuaternion &]
            - function: operator*[r:const QQuaternion][p:float;const QQuaternion &]
            - function: operator*[r:const QQuaternion][p:const QQuaternion &;float]
            - function: operator-[r:const QQuaternion][p:const QQuaternion &]
            - function: operator/[r:const QQuaternion][p:const QQuaternion &;float]
            - function: qFuzzyCompare[r:bool][p:const QQuaternion &;const QQuaternion &]
            - function: operator*[r:QVector3D][p:const QQuaternion &;const QVector3D &][v:5.5.0]
            - function: operator<<[r:QDebug][p:QDebug;const QQuaternion &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QQuaternion &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QQuaternion &]
          hincludes: <QQuaternion>
      - file:
          name: region
          elements:
            - class:
                name: QRegion
                elements:
                  - enum:
                      name: RegionType
                      enumerators:
                        - Rectangle
                        - Ellipse
                  - constructor: QRegion
                  - constructor: QRegion[p:int;int;int;int;QRegion::RegionType=QRegion::Rectangle]
                  - constructor: QRegion[p:const QRect &;QRegion::RegionType=QRegion::Rectangle]
                  - constructor: QRegion[p:const QPolygon &;Qt::FillRule=Qt::OddEvenFill]
                  - constructor: QRegion[p:const QRegion &]
                  - constructor: QRegion[p:QRegion &&]
                  - constructor: QRegion[p:const QBitmap &]
                  - destructor: ~QRegion
                  - function: operator=[r:QRegion &][p:const QRegion &]
                  - function: operator=[r:QRegion &][p:QRegion &&]
                  - function: swap[r:void][p:QRegion &]
                  - function: isEmpty[r:bool][specs:const]
                  - function: isNull[r:bool][specs:const]
                  - function: begin[r:QRegion::const_iterator][specs:const][v:5.8.0]
                  - function: cbegin[r:QRegion::const_iterator][specs:const][v:5.8.0]
                  - function: end[r:QRegion::const_iterator][specs:const][v:5.8.0]
                  - function: cend[r:QRegion::const_iterator][specs:const][v:5.8.0]
                  - function: rbegin[r:QRegion::const_reverse_iterator][specs:const][v:5.8.0]
                  - function: crbegin[r:QRegion::const_reverse_iterator][specs:const][v:5.8.0]
                  - function: rend[r:QRegion::const_reverse_iterator][specs:const][v:5.8.0]
                  - function: crend[r:QRegion::const_reverse_iterator][specs:const][v:5.8.0]
                  - function: contains[r:bool][p:const QPoint &][specs:const]
                  - function: contains[r:bool][p:const QRect &][specs:const]
                  - function: translate[r:void][p:int;int]
                  - function: translate[r:void][p:const QPoint &]
                  - function: translated[r:QRegion][p:int;int][specs:const]
                  - function: translated[r:QRegion][p:const QPoint &][specs:const]
                  - function: united[r:QRegion][p:const QRegion &][specs:const]
                  - function: united[r:QRegion][p:const QRect &][specs:const]
                  - function: intersected[r:QRegion][p:const QRegion &][specs:const]
                  - function: intersected[r:QRegion][p:const QRect &][specs:const]
                  - function: subtracted[r:QRegion][p:const QRegion &][specs:const]
                  - function: xored[r:QRegion][p:const QRegion &][specs:const]
                  - function: intersects[r:bool][p:const QRegion &][specs:const]
                  - function: intersects[r:bool][p:const QRect &][specs:const]
                  - function: boundingRect[r:QRect][specs:const]
                  - function: rects[r:QVector<QRect>][specs:const]
                  - function: setRects[r:void][p:const QRect *;int]
                  - function: rectCount[r:int][specs:const]
                  - function: operator|[r:const QRegion][p:const QRegion &][specs:const]
                  - function: operator+[r:const QRegion][p:const QRegion &][specs:const]
                  - function: operator+[r:const QRegion][p:const QRect &][specs:const]
                  - function: operator&[r:const QRegion][p:const QRegion &][specs:const]
                  - function: operator&[r:const QRegion][p:const QRect &][specs:const]
                  - function: operator-[r:const QRegion][p:const QRegion &][specs:const]
                  - function: operator^[r:const QRegion][p:const QRegion &][specs:const]
                  - function: operator|=[r:QRegion &][p:const QRegion &]
                  - function: operator+=[r:QRegion &][p:const QRegion &]
                  - function: operator+=[r:QRegion &][p:const QRect &]
                  - function: operator&=[r:QRegion &][p:const QRegion &]
                  - function: operator&=[r:QRegion &][p:const QRect &]
                  - function: operator-=[r:QRegion &][p:const QRegion &]
                  - function: operator^=[r:QRegion &][p:const QRegion &]
                  - function: operator==[r:bool][p:const QRegion &][specs:const]
                  - function: operator!=[r:bool][p:const QRegion &][specs:const]
            - function: swap[r:void][p:QRegion &;QRegion &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QRegion &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QRegion &]
            - function: operator<<[r:QDebug][p:QDebug;const QRegion &]
          hincludes: <QRegion>
      - file:
          name: clipboard
          elements:
            - class:
                name: QClipboard
                base: QObject
                elements:
                  - enum:
                      name: Mode
                      enumerators:
                        - Clipboard
                        - Selection
                        - FindBuffer
                        - LastMode
                  - function: clear[r:void][p:QClipboard::Mode=QClipboard::Clipboard]
                  - function: supportsSelection[r:bool][specs:const]
                  - function: supportsFindBuffer[r:bool][specs:const]
                  - function: ownsSelection[r:bool][specs:const]
                  - function: ownsClipboard[r:bool][specs:const]
                  - function: ownsFindBuffer[r:bool][specs:const]
                  - function: text[r:QString][p:QClipboard::Mode=QClipboard::Clipboard][specs:const]
                  - function: text[r:QString][p:QString &;QClipboard::Mode=QClipboard::Clipboard][specs:const]
                  - function: setText[r:void][p:const QString &;QClipboard::Mode=QClipboard::Clipboard]
                  - function: mimeData[r:const QMimeData *][p:QClipboard::Mode=QClipboard::Clipboard][specs:const]
                  - function: setMimeData[r:void][p:QMimeData *;QClipboard::Mode=QClipboard::Clipboard]
                  - function: image[r:QImage][p:QClipboard::Mode=QClipboard::Clipboard][specs:const]
                  - function: pixmap[r:QPixmap][p:QClipboard::Mode=QClipboard::Clipboard][specs:const]
                  - function: setImage[r:void][p:const QImage &;QClipboard::Mode=QClipboard::Clipboard]
                  - function: setPixmap[r:void][p:const QPixmap &;QClipboard::Mode=QClipboard::Clipboard]
                  - function: changed[r:void][p:QClipboard::Mode][binding:signals]
                  - function: selectionChanged[r:void][binding:signals]
                  - function: findBufferChanged[r:void][binding:signals]
                  - function: dataChanged[r:void][binding:signals]
          hincludes: <QClipboard>
      - file:
          name: keysequence
          checkstate: partially-checked
          elements:
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QKeySequence &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QKeySequence &]
            - function: qHash[r:uint][p:const QKeySequence &;uint]
            - class:
                name: QKeySequence
                elements:
                  - enum:
                      name: StandardKey
                      enumerators:
                        - UnknownKey
                        - HelpContents
                        - WhatsThis
                        - Open
                        - Close
                        - Save
                        - New
                        - Delete
                        - Cut
                        - Copy
                        - Paste
                        - Undo
                        - Redo
                        - Back
                        - Forward
                        - Refresh
                        - ZoomIn
                        - ZoomOut
                        - Print
                        - AddTab
                        - NextChild
                        - PreviousChild
                        - Find
                        - FindNext
                        - FindPrevious
                        - Replace
                        - SelectAll
                        - Bold
                        - Italic
                        - Underline
                        - MoveToNextChar
                        - MoveToPreviousChar
                        - MoveToNextWord
                        - MoveToPreviousWord
                        - MoveToNextLine
                        - MoveToPreviousLine
                        - MoveToNextPage
                        - MoveToPreviousPage
                        - MoveToStartOfLine
                        - MoveToEndOfLine
                        - MoveToStartOfBlock
                        - MoveToEndOfBlock
                        - MoveToStartOfDocument
                        - MoveToEndOfDocument
                        - SelectNextChar
                        - SelectPreviousChar
                        - SelectNextWord
                        - SelectPreviousWord
                        - SelectNextLine
                        - SelectPreviousLine
                        - SelectNextPage
                        - SelectPreviousPage
                        - SelectStartOfLine
                        - SelectEndOfLine
                        - SelectStartOfBlock
                        - SelectEndOfBlock
                        - SelectStartOfDocument
                        - SelectEndOfDocument
                        - DeleteStartOfWord
                        - DeleteEndOfWord
                        - DeleteEndOfLine
                        - InsertParagraphSeparator
                        - InsertLineSeparator
                        - SaveAs
                        - Preferences
                        - Quit
                        - FullScreen
                        - Deselect[v:5.1.0]
                        - DeleteCompleteLine
                        - Backspace
                        - Cancel
                  - enum:
                      name: SequenceFormat
                      enumerators:
                        - NativeText
                        - PortableText
                  - constructor: QKeySequence
                  - constructor: QKeySequence[p:const QString &;QKeySequence::SequenceFormat=QKeySequence::NativeText]
                  - constructor: QKeySequence[p:int;int=0;int=0;int=0]
                  - constructor: QKeySequence[p:const QKeySequence &]
                  - constructor: QKeySequence[p:QKeySequence::StandardKey]
                  - destructor: ~QKeySequence
                  - function: count[r:int][specs:const]
                  - function: isEmpty[r:bool][specs:const]
                  - enum:
                      name: SequenceMatch
                      enumerators:
                        - NoMatch
                        - PartialMatch
                        - ExactMatch
                  - function: toString[r:QString][p:QKeySequence::SequenceFormat=QKeySequence::PortableText][specs:const]
                  - function: fromString[r:QKeySequence][p:const QString &;QKeySequence::SequenceFormat=QKeySequence::PortableText][specs:static]
                  - function: listFromString[r:QList<QKeySequence>][p:const QString &;QKeySequence::SequenceFormat=QKeySequence::PortableText][specs:static][v:5.1.0]
                  - function: listToString[r:QString][p:const QList<QKeySequence> &;QKeySequence::SequenceFormat=QKeySequence::PortableText][specs:static][v:5.1.0]
                  - function: matches[r:QKeySequence::SequenceMatch][p:const QKeySequence &][specs:const]
                  - function: mnemonic[r:QKeySequence][p:const QString &][specs:static]
                  - function: keyBindings[r:QList<QKeySequence>][p:QKeySequence::StandardKey][specs:static]
                  - function: operator[][r:int][p:uint][specs:const]
                  - function: operator=[r:QKeySequence &][p:const QKeySequence &]
                  - function: operator=[r:QKeySequence &][p:QKeySequence &&]
                  - function: swap[r:void][p:QKeySequence &]
                  - function: operator==[r:bool][p:const QKeySequence &][specs:const]
                  - function: operator!=[r:bool][p:const QKeySequence &][specs:const]
                  - function: operator<[r:bool][p:const QKeySequence &][specs:const]
                  - function: operator>[r:bool][p:const QKeySequence &][specs:const]
                  - function: operator<=[r:bool][p:const QKeySequence &][specs:const]
                  - function: operator>=[r:bool][p:const QKeySequence &][specs:const]
                  - function: isDetached[r:bool][specs:const]
                  - function: data_ptr[r:QKeySequence::DataPtr &]
            - function: swap[r:void][p:QKeySequence &;QKeySequence &]
            - function: operator<<[r:QDebug][p:QDebug;const QKeySequence &]
          hincludes: <QKeySequence>
      - file:
          name: brush
          elements:
            - class:
                name: QBrush
                elements:
                  - constructor: QBrush
                  - constructor: QBrush[p:Qt::BrushStyle]
                  - constructor: QBrush[p:const QColor &;Qt::BrushStyle=Qt::SolidPattern]
                  - constructor: QBrush[p:Qt::GlobalColor;Qt::BrushStyle=Qt::SolidPattern]
                  - constructor: QBrush[p:const QColor &;const QPixmap &]
                  - constructor: QBrush[p:Qt::GlobalColor;const QPixmap &]
                  - constructor: QBrush[p:const QPixmap &]
                  - constructor: QBrush[p:const QImage &]
                  - constructor: QBrush[p:const QBrush &]
                  - constructor: QBrush[p:const QGradient &]
                  - destructor: ~QBrush
                  - function: operator=[r:QBrush &][p:const QBrush &]
                  - function: operator=[r:QBrush &][p:QBrush &&]
                  - function: swap[r:void][p:QBrush &]
                  - function: style[r:Qt::BrushStyle][specs:const]
                  - function: setStyle[r:void][p:Qt::BrushStyle]
                  - function: matrix[r:const QMatrix &][specs:const]
                  - function: setMatrix[r:void][p:const QMatrix &]
                  - function: transform[r:QTransform][specs:const]
                  - function: setTransform[r:void][p:const QTransform &]
                  - function: texture[r:QPixmap][specs:const]
                  - function: setTexture[r:void][p:const QPixmap &]
                  - function: textureImage[r:QImage][specs:const]
                  - function: setTextureImage[r:void][p:const QImage &]
                  - function: color[r:const QColor &][specs:const]
                  - function: setColor[r:void][p:const QColor &]
                  - function: setColor[r:void][p:Qt::GlobalColor]
                  - function: gradient[r:const QGradient *][specs:const]
                  - function: isOpaque[r:bool][specs:const]
                  - function: operator==[r:bool][p:const QBrush &][specs:const]
                  - function: operator!=[r:bool][p:const QBrush &][specs:const]
                  - function: isDetached[r:bool][specs:const]
                  - function: data_ptr[r:QBrush::DataPtr &]
            - function: swap[r:void][p:QBrush &;QBrush &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QBrush &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QBrush &]
            - function: operator<<[r:QDebug][p:QDebug;const QBrush &]
            - class:
                name: QGradient
                elements:
                  - enum:
                      name: Type
                      enumerators:
                        - LinearGradient
                        - RadialGradient
                        - ConicalGradient
                        - NoGradient
                  - enum:
                      name: Spread
                      enumerators:
                        - PadSpread
                        - ReflectSpread
                        - RepeatSpread
                  - enum:
                      name: CoordinateMode
                      enumerators:
                        - LogicalMode
                        - StretchToDeviceMode
                        - ObjectBoundingMode
                  - enum:
                      name: InterpolationMode
                      enumerators:
                        - ColorInterpolation
                        - ComponentInterpolation
                  - constructor: QGradient
                  - function: type[r:QGradient::Type][specs:const]
                  - function: setSpread[r:void][p:QGradient::Spread]
                  - function: spread[r:QGradient::Spread][specs:const]
                  - function: setColorAt[r:void][p:qreal;const QColor &]
                  - function: setStops[r:void][p:const QGradientStops &]
                  - function: stops[r:QGradientStops][specs:const]
                  - function: coordinateMode[r:QGradient::CoordinateMode][specs:const]
                  - function: setCoordinateMode[r:void][p:QGradient::CoordinateMode]
                  - function: interpolationMode[r:QGradient::InterpolationMode][specs:const]
                  - function: setInterpolationMode[r:void][p:QGradient::InterpolationMode]
                  - function: operator==[r:bool][p:const QGradient &][specs:const]
                  - function: operator!=[r:bool][p:const QGradient &][specs:const]
            - class:
                name: QLinearGradient
                base: QGradient
                elements:
                  - constructor: QLinearGradient
                  - constructor: QLinearGradient[p:const QLinearGradient &]
                  - destructor: ~QLinearGradient
                  - function: operator=[r:QLinearGradient &][p:const QLinearGradient &]
                  - constructor: QLinearGradient[p:const QPointF &;const QPointF &]
                  - constructor: QLinearGradient[p:qreal;qreal;qreal;qreal]
                  - function: start[r:QPointF][specs:const]
                  - function: setStart[r:void][p:const QPointF &]
                  - function: setStart[r:void][p:qreal;qreal]
                  - function: finalStop[r:QPointF][specs:const]
                  - function: setFinalStop[r:void][p:const QPointF &]
                  - function: setFinalStop[r:void][p:qreal;qreal]
            - class:
                name: QRadialGradient
                base: QGradient
                elements:
                  - constructor: QRadialGradient
                  - constructor: QRadialGradient[p:const QRadialGradient &]
                  - function: operator=[r:QRadialGradient &][p:const QRadialGradient &]
                  - destructor: ~QRadialGradient
                  - constructor: QRadialGradient[p:const QPointF &;qreal;const QPointF &]
                  - constructor: QRadialGradient[p:qreal;qreal;qreal;qreal;qreal]
                  - constructor: QRadialGradient[p:const QPointF &;qreal]
                  - constructor: QRadialGradient[p:qreal;qreal;qreal]
                  - constructor: QRadialGradient[p:const QPointF &;qreal;const QPointF &;qreal]
                  - constructor: QRadialGradient[p:qreal;qreal;qreal;qreal;qreal;qreal]
                  - function: center[r:QPointF][specs:const]
                  - function: setCenter[r:void][p:const QPointF &]
                  - function: setCenter[r:void][p:qreal;qreal]
                  - function: focalPoint[r:QPointF][specs:const]
                  - function: setFocalPoint[r:void][p:const QPointF &]
                  - function: setFocalPoint[r:void][p:qreal;qreal]
                  - function: radius[r:qreal][specs:const]
                  - function: setRadius[r:void][p:qreal]
                  - function: centerRadius[r:qreal][specs:const]
                  - function: setCenterRadius[r:void][p:qreal]
                  - function: focalRadius[r:qreal][specs:const]
                  - function: setFocalRadius[r:void][p:qreal]
            - class:
                name: QConicalGradient
                base: QGradient
                elements:
                  - constructor: QConicalGradient
                  - constructor: QConicalGradient[p:const QConicalGradient &]
                  - function: operator=[r:QConicalGradient &][p:const QConicalGradient &]
                  - destructor: ~QConicalGradient
                  - constructor: QConicalGradient[p:const QPointF &;qreal]
                  - constructor: QConicalGradient[p:qreal;qreal;qreal]
                  - function: center[r:QPointF][specs:const]
                  - function: setCenter[r:void][p:const QPointF &]
                  - function: setCenter[r:void][p:qreal;qreal]
                  - function: angle[r:qreal][specs:const]
                  - function: setAngle[r:void][p:qreal]
          hincludes: <QBrush>
      - file:
          name: glyphrun
          elements:
            - class:
                name: QGlyphRun
                elements:
                  - enum:
                      name: GlyphRunFlag
                      enumerators:
                        - Overline
                        - Underline
                        - StrikeOut
                        - RightToLeft
                        - SplitLigature
                  - constructor: QGlyphRun
                  - constructor: QGlyphRun[p:const QGlyphRun &]
                  - function: operator=[r:QGlyphRun &][p:QGlyphRun &&]
                  - function: operator=[r:QGlyphRun &][p:const QGlyphRun &]
                  - destructor: ~QGlyphRun
                  - function: swap[r:void][p:QGlyphRun &]
                  - function: rawFont[r:QRawFont][specs:const]
                  - function: setRawFont[r:void][p:const QRawFont &]
                  - function: setRawData[r:void][p:const quint32 *;const QPointF *;int]
                  - function: glyphIndexes[r:QVector<quint32>][specs:const]
                  - function: setGlyphIndexes[r:void][p:const QVector<quint32> &]
                  - function: positions[r:QVector<QPointF>][specs:const]
                  - function: setPositions[r:void][p:const QVector<QPointF> &]
                  - function: clear[r:void]
                  - function: operator==[r:bool][p:const QGlyphRun &][specs:const]
                  - function: operator!=[r:bool][p:const QGlyphRun &][specs:const]
                  - function: setOverline[r:void][p:bool]
                  - function: overline[r:bool][specs:const]
                  - function: setUnderline[r:void][p:bool]
                  - function: underline[r:bool][specs:const]
                  - function: setStrikeOut[r:void][p:bool]
                  - function: strikeOut[r:bool][specs:const]
                  - function: setRightToLeft[r:void][p:bool]
                  - function: isRightToLeft[r:bool][specs:const]
                  - function: setFlag[r:void][p:QGlyphRun::GlyphRunFlag;bool=true]
                  - function: setFlags[r:void][p:QGlyphRun::GlyphRunFlags]
                  - function: flags[r:QGlyphRun::GlyphRunFlags][specs:const]
                  - function: setBoundingRect[r:void][p:const QRectF &]
                  - function: boundingRect[r:QRectF][specs:const]
                  - function: isEmpty[r:bool][specs:const]
            - function: swap[r:void][p:QGlyphRun &;QGlyphRun &]
          hincludes: <QGlyphRun>
      - file:
          name: painter
          checkstate: partially-checked
          elements:
            - class:
                name: QPainter
                checkstate: partially-checked
                elements:
                  - enum:
                      name: RenderHint
                      enumerators:
                        - Antialiasing
                        - TextAntialiasing
                        - SmoothPixmapTransform
                        - HighQualityAntialiasing
                        - NonCosmeticDefaultPen
                        - Qt4CompatiblePainting
                  - enum:
                      name: PixmapFragmentHint
                      enumerators:
                        - OpaqueHint
                  - constructor: QPainter
                  - constructor: QPainter[p:QPaintDevice *]
                  - destructor: ~QPainter
                  - function: device[r:QPaintDevice *][specs:const]
                  - function: begin[r:bool][p:QPaintDevice *]
                  - function: end[r:bool]
                  - function: isActive[r:bool][specs:const]
                  - function: initFrom[r:void][p:const QPaintDevice *]
                  - enum:
                      name: CompositionMode
                      enumerators:
                        - CompositionMode_SourceOver
                        - CompositionMode_DestinationOver
                        - CompositionMode_Clear
                        - CompositionMode_Source
                        - CompositionMode_Destination
                        - CompositionMode_SourceIn
                        - CompositionMode_DestinationIn
                        - CompositionMode_SourceOut
                        - CompositionMode_DestinationOut
                        - CompositionMode_SourceAtop
                        - CompositionMode_DestinationAtop
                        - CompositionMode_Xor
                        - CompositionMode_Plus
                        - CompositionMode_Multiply
                        - CompositionMode_Screen
                        - CompositionMode_Overlay
                        - CompositionMode_Darken
                        - CompositionMode_Lighten
                        - CompositionMode_ColorDodge
                        - CompositionMode_ColorBurn
                        - CompositionMode_HardLight
                        - CompositionMode_SoftLight
                        - CompositionMode_Difference
                        - CompositionMode_Exclusion
                        - RasterOp_SourceOrDestination
                        - RasterOp_SourceAndDestination
                        - RasterOp_SourceXorDestination
                        - RasterOp_NotSourceAndNotDestination
                        - RasterOp_NotSourceOrNotDestination
                        - RasterOp_NotSourceXorDestination
                        - RasterOp_NotSource
                        - RasterOp_NotSourceAndDestination
                        - RasterOp_SourceAndNotDestination
                        - RasterOp_NotSourceOrDestination
                        - RasterOp_SourceOrNotDestination
                        - RasterOp_ClearDestination
                        - RasterOp_SetDestination
                        - RasterOp_NotDestination
                  - function: setCompositionMode[r:void][p:QPainter::CompositionMode]
                  - function: compositionMode[r:QPainter::CompositionMode][specs:const]
                  - function: font[r:const QFont &][specs:const]
                  - function: setFont[r:void][p:const QFont &]
                  - function: fontMetrics[r:QFontMetrics][specs:const]
                  - function: fontInfo[r:QFontInfo][specs:const]
                  - function: setPen[r:void][p:const QColor &]
                  - function: setPen[r:void][p:const QPen &]
                  - function: setPen[r:void][p:Qt::PenStyle]
                  - function: pen[r:const QPen &][specs:const]
                  - function: setBrush[r:void][p:const QBrush &]
                  - function: setBrush[r:void][p:Qt::BrushStyle]
                  - function: brush[r:const QBrush &][specs:const]
                  - function: setBackgroundMode[r:void][p:Qt::BGMode]
                  - function: backgroundMode[r:Qt::BGMode][specs:const]
                  - function: brushOrigin[r:QPoint][specs:const]
                  - function: setBrushOrigin[r:void][p:int;int]
                  - function: setBrushOrigin[r:void][p:const QPoint &]
                  - function: setBrushOrigin[r:void][p:const QPointF &]
                  - function: setBackground[r:void][p:const QBrush &]
                  - function: background[r:const QBrush &][specs:const]
                  - function: opacity[r:qreal][specs:const]
                  - function: setOpacity[r:void][p:qreal]
                  - function: clipRegion[r:QRegion][specs:const]
                  - function: clipPath[r:QPainterPath][specs:const]
                  - function: setClipRect[r:void][p:const QRectF &;Qt::ClipOperation=Qt::ReplaceClip]
                  - function: setClipRect[r:void][p:const QRect &;Qt::ClipOperation=Qt::ReplaceClip]
                  - function: setClipRect[r:void][p:int;int;int;int;Qt::ClipOperation=Qt::ReplaceClip]
                  - function: setClipRegion[r:void][p:const QRegion &;Qt::ClipOperation=Qt::ReplaceClip]
                  - function: setClipPath[r:void][p:const QPainterPath &;Qt::ClipOperation=Qt::ReplaceClip]
                  - function: setClipping[r:void][p:bool]
                  - function: hasClipping[r:bool][specs:const]
                  - function: clipBoundingRect[r:QRectF][specs:const]
                  - function: save[r:void]
                  - function: restore[r:void]
                  - function: setMatrix[r:void][p:const QMatrix &;bool]
                  - function: matrix[r:const QMatrix &][specs:const]
                  - function: deviceMatrix[r:const QMatrix &][specs:const]
                  - function: resetMatrix[r:void]
                  - function: setTransform[r:void][p:const QTransform &;bool=false]
                  - function: transform[r:const QTransform &][specs:const]
                  - function: deviceTransform[r:const QTransform &][specs:const]
                  - function: resetTransform[r:void]
                  - function: setWorldMatrix[r:void][p:const QMatrix &;bool]
                  - function: worldMatrix[r:const QMatrix &][specs:const]
                  - function: setWorldTransform[r:void][p:const QTransform &;bool=false]
                  - function: worldTransform[r:const QTransform &][specs:const]
                  - function: combinedMatrix[r:QMatrix][specs:const]
                  - function: combinedTransform[r:QTransform][specs:const]
                  - function: setMatrixEnabled[r:void][p:bool]
                  - function: matrixEnabled[r:bool][specs:const]
                  - function: setWorldMatrixEnabled[r:void][p:bool]
                  - function: worldMatrixEnabled[r:bool][specs:const]
                  - function: scale[r:void][p:qreal;qreal]
                  - function: shear[r:void][p:qreal;qreal]
                  - function: rotate[r:void][p:qreal]
                  - function: translate[r:void][p:const QPointF &]
                  - function: translate[r:void][p:const QPoint &]
                  - function: translate[r:void][p:qreal;qreal]
                  - function: window[r:QRect][specs:const]
                  - function: setWindow[r:void][p:const QRect &]
                  - function: setWindow[r:void][p:int;int;int;int]
                  - function: viewport[r:QRect][specs:const]
                  - function: setViewport[r:void][p:const QRect &]
                  - function: setViewport[r:void][p:int;int;int;int]
                  - function: setViewTransformEnabled[r:void][p:bool]
                  - function: viewTransformEnabled[r:bool][specs:const]
                  - function: strokePath[r:void][p:const QPainterPath &;const QPen &]
                  - function: fillPath[r:void][p:const QPainterPath &;const QBrush &]
                  - function: drawPath[r:void][p:const QPainterPath &]
                  - function: drawPoint[r:void][p:const QPointF &]
                  - function: drawPoint[r:void][p:const QPoint &]
                  - function: drawPoint[r:void][p:int;int]
                  - function: drawPoints[r:void][p:const QPointF *;int]
                  - function: drawPoints[r:void][p:const QPolygonF &]
                  - function: drawPoints[r:void][p:const QPoint *;int]
                  - function: drawPoints[r:void][p:const QPolygon &]
                  - function: drawLine[r:void][p:const QLineF &]
                  - function: drawLine[r:void][p:const QLine &]
                  - function: drawLine[r:void][p:int;int;int;int]
                  - function: drawLine[r:void][p:const QPoint &;const QPoint &]
                  - function: drawLine[r:void][p:const QPointF &;const QPointF &]
                  - function: drawLines[r:void][p:const QLineF *;int]
                  - function: drawLines[r:void][p:const QVector<QLineF> &]
                  - function: drawLines[r:void][p:const QPointF *;int]
                  - function: drawLines[r:void][p:const QVector<QPointF> &]
                  - function: drawLines[r:void][p:const QLine *;int]
                  - function: drawLines[r:void][p:const QVector<QLine> &]
                  - function: drawLines[r:void][p:const QPoint *;int]
                  - function: drawLines[r:void][p:const QVector<QPoint> &]
                  - function: drawRect[r:void][p:const QRectF &]
                  - function: drawRect[r:void][p:int;int;int;int]
                  - function: drawRect[r:void][p:const QRect &]
                  - function: drawRects[r:void][p:const QRectF *;int]
                  - function: drawRects[r:void][p:const QVector<QRectF> &]
                  - function: drawRects[r:void][p:const QRect *;int]
                  - function: drawRects[r:void][p:const QVector<QRect> &]
                  - function: drawEllipse[r:void][p:const QRectF &]
                  - function: drawEllipse[r:void][p:const QRect &]
                  - function: drawEllipse[r:void][p:int;int;int;int]
                  - function: drawEllipse[r:void][p:const QPointF &;qreal;qreal]
                  - function: drawEllipse[r:void][p:const QPoint &;int;int]
                  - function: drawPolyline[r:void][p:const QPointF *;int]
                  - function: drawPolyline[r:void][p:const QPolygonF &]
                  - function: drawPolyline[r:void][p:const QPoint *;int]
                  - function: drawPolyline[r:void][p:const QPolygon &]
                  - function: drawPolygon[r:void][p:const QPointF *;int;Qt::FillRule=Qt::OddEvenFill]
                  - function: drawPolygon[r:void][p:const QPolygonF &;Qt::FillRule=Qt::OddEvenFill]
                  - function: drawPolygon[r:void][p:const QPoint *;int;Qt::FillRule=Qt::OddEvenFill]
                  - function: drawPolygon[r:void][p:const QPolygon &;Qt::FillRule=Qt::OddEvenFill]
                  - function: drawConvexPolygon[r:void][p:const QPointF *;int]
                  - function: drawConvexPolygon[r:void][p:const QPolygonF &]
                  - function: drawConvexPolygon[r:void][p:const QPoint *;int]
                  - function: drawConvexPolygon[r:void][p:const QPolygon &]
                  - function: drawArc[r:void][p:const QRectF &;int;int]
                  - function: drawArc[r:void][p:const QRect &;int;int]
                  - function: drawArc[r:void][p:int;int;int;int;int;int]
                  - function: drawPie[r:void][p:const QRectF &;int;int]
                  - function: drawPie[r:void][p:int;int;int;int;int;int]
                  - function: drawPie[r:void][p:const QRect &;int;int]
                  - function: drawChord[r:void][p:const QRectF &;int;int]
                  - function: drawChord[r:void][p:int;int;int;int;int;int]
                  - function: drawChord[r:void][p:const QRect &;int;int]
                  - function: drawRoundedRect[r:void][p:const QRectF &;qreal;qreal;Qt::SizeMode=Qt::AbsoluteSize]
                  - function: drawRoundedRect[r:void][p:int;int;int;int;qreal;qreal;Qt::SizeMode=Qt::AbsoluteSize][unchecked]
                  - function: drawRoundedRect[r:void][p:const QRect &;qreal;qreal;Qt::SizeMode=Qt::AbsoluteSize]
                  - function: drawRoundRect[r:void][p:const QRectF &;int;int]
                  - function: drawRoundRect[r:void][p:int;int;int;int;int;int]
                  - function: drawRoundRect[r:void][p:const QRect &;int;int]
                  - function: drawTiledPixmap[r:void][p:const QRectF &;const QPixmap &;const QPointF &=QPointF()]
                  - function: drawTiledPixmap[r:void][p:int;int;int;int;const QPixmap &;int=0;int=0][unchecked]
                  - function: drawTiledPixmap[r:void][p:const QRect &;const QPixmap &;const QPoint &=QPoint()]
                  - function: drawPicture[r:void][p:const QPointF &;const QPicture &]
                  - function: drawPicture[r:void][p:int;int;const QPicture &]
                  - function: drawPicture[r:void][p:const QPoint &;const QPicture &]
                  - function: drawPixmap[r:void][p:const QRectF &;const QPixmap &;const QRectF &]
                  - function: drawPixmap[r:void][p:const QRect &;const QPixmap &;const QRect &]
                  - function: drawPixmap[r:void][p:int;int;int;int;const QPixmap &;int;int;int;int][unchecked]
                  - function: drawPixmap[r:void][p:int;int;const QPixmap &;int;int;int;int][unchecked]
                  - function: drawPixmap[r:void][p:const QPointF &;const QPixmap &;const QRectF &]
                  - function: drawPixmap[r:void][p:const QPoint &;const QPixmap &;const QRect &]
                  - function: drawPixmap[r:void][p:const QPointF &;const QPixmap &]
                  - function: drawPixmap[r:void][p:const QPoint &;const QPixmap &]
                  - function: drawPixmap[r:void][p:int;int;const QPixmap &]
                  - function: drawPixmap[r:void][p:const QRect &;const QPixmap &]
                  - function: drawPixmap[r:void][p:int;int;int;int;const QPixmap &]
                  - function: drawPixmapFragments[r:void][p:const QPainter::PixmapFragment *;int;const QPixmap &;QPainter::PixmapFragmentHints]
                  - function: drawImage[r:void][p:const QRectF &;const QImage &;const QRectF &;Qt::ImageConversionFlags=Qt::ImageConversionFlags(Qt::AutoColor)]
                  - function: drawImage[r:void][p:const QRect &;const QImage &;const QRect &;Qt::ImageConversionFlags=Qt::ImageConversionFlags(Qt::AutoColor)]
                  - function: drawImage[r:void][p:const QPointF &;const QImage &;const QRectF &;Qt::ImageConversionFlags=Qt::ImageConversionFlags(Qt::AutoColor)]
                  - function: drawImage[r:void][p:const QPoint &;const QImage &;const QRect &;Qt::ImageConversionFlags=Qt::ImageConversionFlags(Qt::AutoColor)]
                  - function: drawImage[r:void][p:const QRectF &;const QImage &]
                  - function: drawImage[r:void][p:const QRect &;const QImage &]
                  - function: drawImage[r:void][p:const QPointF &;const QImage &]
                  - function: drawImage[r:void][p:const QPoint &;const QImage &]
                  - function: drawImage[r:void][p:int;int;const QImage &;int=0;int=0;int=-1;int=-1;Qt::ImageConversionFlags=Qt::ImageConversionFlags(Qt::AutoColor)][unchecked]
                  - function: setLayoutDirection[r:void][p:Qt::LayoutDirection]
                  - function: layoutDirection[r:Qt::LayoutDirection][specs:const]
                  - function: drawGlyphRun[r:void][p:const QPointF &;const QGlyphRun &]
                  - function: drawStaticText[r:void][p:const QPointF &;const QStaticText &]
                  - function: drawStaticText[r:void][p:const QPoint &;const QStaticText &]
                  - function: drawStaticText[r:void][p:int;int;const QStaticText &]
                  - function: drawText[r:void][p:const QPointF &;const QString &]
                  - function: drawText[r:void][p:const QPoint &;const QString &]
                  - function: drawText[r:void][p:int;int;const QString &]
                  - function: drawText[r:void][p:const QPointF &;const QString &;int;int]
                  - function: drawText[r:void][p:const QRectF &;int;const QString &;QRectF *]
                  - function: drawText[r:void][p:const QRect &;int;const QString &;QRect *]
                  - function: drawText[r:void][p:int;int;int;int;int;const QString &;QRect *]
                  - function: drawText[r:void][p:const QRectF &;const QString &;const QTextOption &=QTextOption()]
                  - function: boundingRect[r:QRectF][p:const QRectF &;int;const QString &]
                  - function: boundingRect[r:QRect][p:const QRect &;int;const QString &]
                  - function: boundingRect[r:QRect][p:int;int;int;int;int;const QString &]
                  - function: boundingRect[r:QRectF][p:const QRectF &;const QString &;const QTextOption &=QTextOption()]
                  - function: drawTextItem[r:void][p:const QPointF &;const QTextItem &]
                  - function: drawTextItem[r:void][p:int;int;const QTextItem &]
                  - function: drawTextItem[r:void][p:const QPoint &;const QTextItem &]
                  - function: fillRect[r:void][p:const QRectF &;const QBrush &]
                  - function: fillRect[r:void][p:int;int;int;int;const QBrush &]
                  - function: fillRect[r:void][p:const QRect &;const QBrush &]
                  - function: fillRect[r:void][p:const QRectF &;const QColor &]
                  - function: fillRect[r:void][p:int;int;int;int;const QColor &]
                  - function: fillRect[r:void][p:const QRect &;const QColor &]
                  - function: fillRect[r:void][p:int;int;int;int;Qt::GlobalColor]
                  - function: fillRect[r:void][p:const QRect &;Qt::GlobalColor]
                  - function: fillRect[r:void][p:const QRectF &;Qt::GlobalColor]
                  - function: fillRect[r:void][p:int;int;int;int;Qt::BrushStyle]
                  - function: fillRect[r:void][p:const QRect &;Qt::BrushStyle]
                  - function: fillRect[r:void][p:const QRectF &;Qt::BrushStyle]
                  - function: eraseRect[r:void][p:const QRectF &]
                  - function: eraseRect[r:void][p:int;int;int;int]
                  - function: eraseRect[r:void][p:const QRect &]
                  - function: setRenderHint[r:void][p:QPainter::RenderHint;bool]
                  - function: setRenderHints[r:void][p:QPainter::RenderHints;bool]
                  - function: renderHints[r:QPainter::RenderHints][specs:const]
                  - function: testRenderHint[r:bool][p:QPainter::RenderHint][specs:const]
                  - function: paintEngine[r:QPaintEngine *][specs:const]
                  - function: setRedirected[r:void][p:const QPaintDevice *;QPaintDevice *;const QPoint &][specs:static]
                  - function: redirected[r:QPaintDevice *][p:const QPaintDevice *;QPoint *][specs:static]
                  - function: restoreRedirected[r:void][p:const QPaintDevice *][specs:static]
                  - function: beginNativePainting[r:void]
                  - function: endNativePainting[r:void]
            - function: operator|[r:QFlags<QPainter::RenderHints::enum_type>][p:QPainter::RenderHints::enum_type;QPainter::RenderHints::enum_type]
            - function: operator|[r:QFlags<QPainter::RenderHints::enum_type>][p:QPainter::RenderHints::enum_type;QFlags<QPainter::RenderHints::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:QPainter::RenderHints::enum_type;int]
          hincludes: <QPainter>
      - file:
          name: painterpath
          checkstate: partially-checked
          elements:
            - class:
                name: QPainterPath
                checkstate: partially-checked
                elements:
                  - enum:
                      name: ElementType
                      enumerators:
                        - MoveToElement
                        - LineToElement
                        - CurveToElement
                        - CurveToDataElement
                  - constructor: QPainterPath
                  - constructor: QPainterPath[p:const QPointF &]
                  - constructor: QPainterPath[p:const QPainterPath &]
                  - function: operator=[r:QPainterPath &][p:const QPainterPath &]
                  - function: operator=[r:QPainterPath &][p:QPainterPath &&]
                  - destructor: ~QPainterPath
                  - function: swap[r:void][p:QPainterPath &]
                  - function: closeSubpath[r:void]
                  - function: moveTo[r:void][p:const QPointF &]
                  - function: moveTo[r:void][p:qreal;qreal]
                  - function: lineTo[r:void][p:const QPointF &]
                  - function: lineTo[r:void][p:qreal;qreal]
                  - function: arcMoveTo[r:void][p:const QRectF &;qreal]
                  - function: arcMoveTo[r:void][p:qreal;qreal;qreal;qreal;qreal]
                  - function: arcTo[r:void][p:const QRectF &;qreal;qreal]
                  - function: arcTo[r:void][p:qreal;qreal;qreal;qreal;qreal;qreal]
                  - function: cubicTo[r:void][p:const QPointF &;const QPointF &;const QPointF &]
                  - function: cubicTo[r:void][p:qreal;qreal;qreal;qreal;qreal;qreal]
                  - function: quadTo[r:void][p:const QPointF &;const QPointF &]
                  - function: quadTo[r:void][p:qreal;qreal;qreal;qreal]
                  - function: currentPosition[r:QPointF][specs:const]
                  - function: addRect[r:void][p:const QRectF &]
                  - function: addRect[r:void][p:qreal;qreal;qreal;qreal]
                  - function: addEllipse[r:void][p:const QRectF &]
                  - function: addEllipse[r:void][p:qreal;qreal;qreal;qreal]
                  - function: addEllipse[r:void][p:const QPointF &;qreal;qreal]
                  - function: addPolygon[r:void][p:const QPolygonF &]
                  - function: addText[r:void][p:const QPointF &;const QFont &;const QString &]
                  - function: addText[r:void][p:qreal;qreal;const QFont &;const QString &]
                  - function: addPath[r:void][p:const QPainterPath &]
                  - function: addRegion[r:void][p:const QRegion &]
                  - function: addRoundedRect[r:void][p:const QRectF &;qreal;qreal;Qt::SizeMode=Qt::AbsoluteSize]
                  - function: addRoundedRect[r:void][p:qreal;qreal;qreal;qreal;qreal;qreal;Qt::SizeMode=Qt::AbsoluteSize][unchecked]
                  - function: addRoundRect[r:void][p:const QRectF &;int;int]
                  - function: addRoundRect[r:void][p:qreal;qreal;qreal;qreal;int;int]
                  - function: addRoundRect[r:void][p:const QRectF &;int]
                  - function: addRoundRect[r:void][p:qreal;qreal;qreal;qreal;int]
                  - function: connectPath[r:void][p:const QPainterPath &]
                  - function: contains[r:bool][p:const QPointF &][specs:const]
                  - function: contains[r:bool][p:const QRectF &][specs:const]
                  - function: intersects[r:bool][p:const QRectF &][specs:const]
                  - function: translate[r:void][p:qreal;qreal]
                  - function: translate[r:void][p:const QPointF &]
                  - function: translated[r:QPainterPath][p:qreal;qreal][specs:const]
                  - function: translated[r:QPainterPath][p:const QPointF &][specs:const]
                  - function: boundingRect[r:QRectF][specs:const]
                  - function: controlPointRect[r:QRectF][specs:const]
                  - function: fillRule[r:Qt::FillRule][specs:const]
                  - function: setFillRule[r:void][p:Qt::FillRule]
                  - function: isEmpty[r:bool][specs:const]
                  - function: toReversed[r:QPainterPath][specs:const]
                  - function: toSubpathPolygons[r:QList<QPolygonF>][p:const QMatrix &][specs:const]
                  - function: toFillPolygons[r:QList<QPolygonF>][p:const QMatrix &][specs:const]
                  - function: toFillPolygon[r:QPolygonF][p:const QMatrix &][specs:const]
                  - function: toSubpathPolygons[r:QList<QPolygonF>][p:const QTransform &][specs:const]
                  - function: toFillPolygons[r:QList<QPolygonF>][p:const QTransform &][specs:const]
                  - function: toFillPolygon[r:QPolygonF][p:const QTransform &][specs:const]
                  - function: elementCount[r:int][specs:const]
                  - function: elementAt[r:QPainterPath::Element][p:int][specs:const]
                  - function: setElementPositionAt[r:void][p:int;qreal;qreal]
                  - function: length[r:qreal][specs:const]
                  - function: percentAtLength[r:qreal][p:qreal][specs:const]
                  - function: pointAtPercent[r:QPointF][p:qreal][specs:const]
                  - function: angleAtPercent[r:qreal][p:qreal][specs:const]
                  - function: slopeAtPercent[r:qreal][p:qreal][specs:const]
                  - function: intersects[r:bool][p:const QPainterPath &][specs:const]
                  - function: contains[r:bool][p:const QPainterPath &][specs:const]
                  - function: united[r:QPainterPath][p:const QPainterPath &][specs:const]
                  - function: intersected[r:QPainterPath][p:const QPainterPath &][specs:const]
                  - function: subtracted[r:QPainterPath][p:const QPainterPath &][specs:const]
                  - function: subtractedInverted[r:QPainterPath][p:const QPainterPath &][specs:const]
                  - function: simplified[r:QPainterPath][specs:const]
                  - function: operator==[r:bool][p:const QPainterPath &][specs:const]
                  - function: operator!=[r:bool][p:const QPainterPath &][specs:const]
                  - function: operator&[r:QPainterPath][p:const QPainterPath &][specs:const]
                  - function: operator|[r:QPainterPath][p:const QPainterPath &][specs:const]
                  - function: operator+[r:QPainterPath][p:const QPainterPath &][specs:const]
                  - function: operator-[r:QPainterPath][p:const QPainterPath &][specs:const]
                  - function: operator&=[r:QPainterPath &][p:const QPainterPath &]
                  - function: operator|=[r:QPainterPath &][p:const QPainterPath &]
                  - function: operator+=[r:QPainterPath &][p:const QPainterPath &]
                  - function: operator-=[r:QPainterPath &][p:const QPainterPath &]
            - function: swap[r:void][p:QPainterPath &;QPainterPath &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QPainterPath &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QPainterPath &]
            - class:
                name: QPainterPathStroker
                elements:
                  - constructor: QPainterPathStroker
                  - constructor: QPainterPathStroker[p:const QPen &]
                  - destructor: ~QPainterPathStroker
                  - function: setWidth[r:void][p:qreal]
                  - function: width[r:qreal][specs:const]
                  - function: setCapStyle[r:void][p:Qt::PenCapStyle]
                  - function: capStyle[r:Qt::PenCapStyle][specs:const]
                  - function: setJoinStyle[r:void][p:Qt::PenJoinStyle]
                  - function: joinStyle[r:Qt::PenJoinStyle][specs:const]
                  - function: setMiterLimit[r:void][p:qreal]
                  - function: miterLimit[r:qreal][specs:const]
                  - function: setCurveThreshold[r:void][p:qreal]
                  - function: curveThreshold[r:qreal][specs:const]
                  - function: setDashPattern[r:void][p:Qt::PenStyle]
                  - function: setDashPattern[r:void][p:const QVector<qreal> &]
                  - function: dashPattern[r:QVector<qreal>][specs:const]
                  - function: setDashOffset[r:void][p:qreal]
                  - function: dashOffset[r:qreal][specs:const]
                  - function: createStroke[r:QPainterPath][p:const QPainterPath &][specs:const]
            - function: operator<<[r:QDebug][p:QDebug;const QPainterPath &]
          hincludes: <QPainterPath>
      - file:
          name: palette
          checkstate: partially-checked
          elements:
            - class:
                name: QPalette
                checkstate: partially-checked
                elements:
                  - constructor: QPalette
                  - constructor: QPalette[p:const QColor &]
                  - constructor: QPalette[p:Qt::GlobalColor]
                  - constructor: QPalette[p:const QColor &;const QColor &]
                  - constructor: QPalette[p:const QBrush &;const QBrush &;const QBrush &;const QBrush &;const QBrush &;const QBrush &;const QBrush &;const QBrush &;const QBrush &][unchecked]
                  - constructor: QPalette[p:const QColor &;const QColor &;const QColor &;const QColor &;const QColor &;const QColor &;const QColor &][unchecked]
                  - constructor: QPalette[p:const QPalette &]
                  - destructor: ~QPalette
                  - function: operator=[r:QPalette &][p:const QPalette &]
                  - constructor: QPalette[p:QPalette &&]
                  - function: operator=[r:QPalette &][p:QPalette &&]
                  - function: swap[r:void][p:QPalette &]
                  - enum:
                      name: ColorGroup
                      enumerators:
                        - Active
                        - Disabled
                        - Inactive
                        - NColorGroups
                        - Current
                        - All
                        - Normal
                  - enum:
                      name: ColorRole
                      enumerators:
                        - WindowText
                        - Button
                        - Light
                        - Midlight
                        - Dark
                        - Mid
                        - Text
                        - BrightText
                        - ButtonText
                        - Base
                        - Window
                        - Shadow
                        - Highlight
                        - HighlightedText
                        - Link
                        - LinkVisited
                        - AlternateBase
                        - NoRole
                        - ToolTipBase
                        - ToolTipText
                        - NColorRoles
                        - Foreground
                        - Background
                  - function: currentColorGroup[r:QPalette::ColorGroup][specs:const]
                  - function: setCurrentColorGroup[r:void][p:QPalette::ColorGroup]
                  - function: color[r:const QColor &][p:QPalette::ColorGroup;QPalette::ColorRole][specs:const]
                  - function: brush[r:const QBrush &][p:QPalette::ColorGroup;QPalette::ColorRole][specs:const]
                  - function: setColor[r:void][p:QPalette::ColorGroup;QPalette::ColorRole;const QColor &]
                  - function: setColor[r:void][p:QPalette::ColorRole;const QColor &]
                  - function: setBrush[r:void][p:QPalette::ColorRole;const QBrush &]
                  - function: isBrushSet[r:bool][p:QPalette::ColorGroup;QPalette::ColorRole][specs:const]
                  - function: setBrush[r:void][p:QPalette::ColorGroup;QPalette::ColorRole;const QBrush &]
                  - function: setColorGroup[r:void][p:QPalette::ColorGroup;const QBrush &;const QBrush &;const QBrush &;const QBrush &;const QBrush &;const QBrush &;const QBrush &;const QBrush &;const QBrush &][unchecked]
                  - function: isEqual[r:bool][p:QPalette::ColorGroup;QPalette::ColorGroup][specs:const]
                  - function: color[r:const QColor &][p:QPalette::ColorRole][specs:const]
                  - function: brush[r:const QBrush &][p:QPalette::ColorRole][specs:const]
                  - function: foreground[r:const QBrush &][specs:const]
                  - function: windowText[r:const QBrush &][specs:const]
                  - function: button[r:const QBrush &][specs:const]
                  - function: light[r:const QBrush &][specs:const]
                  - function: dark[r:const QBrush &][specs:const]
                  - function: mid[r:const QBrush &][specs:const]
                  - function: text[r:const QBrush &][specs:const]
                  - function: base[r:const QBrush &][specs:const]
                  - function: alternateBase[r:const QBrush &][specs:const]
                  - function: toolTipBase[r:const QBrush &][specs:const]
                  - function: toolTipText[r:const QBrush &][specs:const]
                  - function: background[r:const QBrush &][specs:const]
                  - function: window[r:const QBrush &][specs:const]
                  - function: midlight[r:const QBrush &][specs:const]
                  - function: brightText[r:const QBrush &][specs:const]
                  - function: buttonText[r:const QBrush &][specs:const]
                  - function: shadow[r:const QBrush &][specs:const]
                  - function: highlight[r:const QBrush &][specs:const]
                  - function: highlightedText[r:const QBrush &][specs:const]
                  - function: link[r:const QBrush &][specs:const]
                  - function: linkVisited[r:const QBrush &][specs:const]
                  - function: operator==[r:bool][p:const QPalette &][specs:const]
                  - function: operator!=[r:bool][p:const QPalette &][specs:const]
                  - function: isCopyOf[r:bool][p:const QPalette &][specs:const]
                  - function: cacheKey[r:qint64][specs:const]
                  - function: resolve[r:QPalette][p:const QPalette &][specs:const]
                  - function: resolve[r:uint][specs:const]
                  - function: resolve[r:void][p:uint]
            - function: swap[r:void][p:QPalette &;QPalette &]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QPalette &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QPalette &]
            - function: operator<<[r:QDebug][p:QDebug;const QPalette &]
          hincludes: <QPalette>
      - file:
          name: pen
          elements:
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QPen &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QPen &]
            - class:
                name: QPen
                elements:
                  - constructor: QPen
                  - constructor: QPen[p:Qt::PenStyle]
                  - constructor: QPen[p:const QColor &]
                  - constructor: QPen[p:const QBrush &;qreal;Qt::PenStyle=Qt::SolidLine;Qt::PenCapStyle=Qt::SquareCap;Qt::PenJoinStyle=Qt::BevelJoin]
                  - constructor: QPen[p:const QPen &]
                  - destructor: ~QPen
                  - function: operator=[r:QPen &][p:const QPen &]
                  - constructor: QPen[p:QPen &&]
                  - function: operator=[r:QPen &][p:QPen &&]
                  - function: swap[r:void][p:QPen &]
                  - function: style[r:Qt::PenStyle][specs:const]
                  - function: setStyle[r:void][p:Qt::PenStyle]
                  - function: dashPattern[r:QVector<qreal>][specs:const]
                  - function: setDashPattern[r:void][p:const QVector<qreal> &]
                  - function: dashOffset[r:qreal][specs:const]
                  - function: setDashOffset[r:void][p:qreal]
                  - function: miterLimit[r:qreal][specs:const]
                  - function: setMiterLimit[r:void][p:qreal]
                  - function: widthF[r:qreal][specs:const]
                  - function: setWidthF[r:void][p:qreal]
                  - function: width[r:int][specs:const]
                  - function: setWidth[r:void][p:int]
                  - function: color[r:QColor][specs:const]
                  - function: setColor[r:void][p:const QColor &]
                  - function: brush[r:QBrush][specs:const]
                  - function: setBrush[r:void][p:const QBrush &]
                  - function: isSolid[r:bool][specs:const]
                  - function: capStyle[r:Qt::PenCapStyle][specs:const]
                  - function: setCapStyle[r:void][p:Qt::PenCapStyle]
                  - function: joinStyle[r:Qt::PenJoinStyle][specs:const]
                  - function: setJoinStyle[r:void][p:Qt::PenJoinStyle]
                  - function: isCosmetic[r:bool][specs:const]
                  - function: setCosmetic[r:void][p:bool]
                  - function: operator==[r:bool][p:const QPen &][specs:const]
                  - function: operator!=[r:bool][p:const QPen &][specs:const]
                  - function: isDetached[r:bool]
                  - function: data_ptr[r:QPen::DataPtr &]
            - function: swap[r:void][p:QPen &;QPen &]
            - function: operator<<[r:QDebug][p:QDebug;const QPen &]
          hincludes: <QPen>
      - file:
          name: picture
          checkstate: partially-checked
          elements:
            - class:
                name: QPicture
                elements:
                  - constructor: QPicture[p:int=-1]
                  - constructor: QPicture[p:const QPicture &]
                  - destructor: ~QPicture
                  - function: isNull[r:bool][specs:const]
                  - function: devType[r:int][specs:const]
                  - function: size[r:uint][specs:const]
                  - function: data[r:const char *][specs:const]
                  - function: setData[r:void][p:const char *;uint]
                  - function: play[r:bool][p:QPainter *]
                  - function: load[r:bool][p:QIODevice *;const char *]
                  - function: load[r:bool][p:const QString &;const char *]
                  - function: save[r:bool][p:QIODevice *;const char *]
                  - function: save[r:bool][p:const QString &;const char *]
                  - function: boundingRect[r:QRect][specs:const]
                  - function: setBoundingRect[r:void][p:const QRect &]
                  - function: operator=[r:QPicture &][p:const QPicture &]
                  - function: operator=[r:QPicture &][p:QPicture &&]
                  - function: swap[r:void][p:QPicture &]
                  - function: detach[r:void]
                  - function: isDetached[r:bool][specs:const]
                  - function: pictureFormat[r:const char *][p:const QString &][specs:static]
                  - function: inputFormats[r:QList<QByteArray>][specs:static]
                  - function: outputFormats[r:QList<QByteArray>][specs:static]
                  - function: inputFormatList[r:QStringList][specs:static]
                  - function: outputFormatList[r:QStringList][specs:static]
                  - function: paintEngine[r:QPaintEngine *][specs:const]
                  - function: data_ptr[r:QPicture::DataPtr &]
            - function: swap[r:void][p:QPicture &;QPicture &]
            - class:
                name: QPictureIO
                elements:
                  - constructor: QPictureIO
                  - constructor: QPictureIO[p:QIODevice *;const char *]
                  - constructor: QPictureIO[p:const QString &;const char *]
                  - destructor: ~QPictureIO
                  - function: picture[r:const QPicture &][specs:const]
                  - function: status[r:int][specs:const]
                  - function: format[r:const char *][specs:const]
                  - function: ioDevice[r:QIODevice *][specs:const]
                  - function: fileName[r:QString][specs:const]
                  - function: quality[r:int][specs:const]
                  - function: description[r:QString][specs:const]
                  - function: parameters[r:const char *][specs:const]
                  - function: gamma[r:float][specs:const]
                  - function: setPicture[r:void][p:const QPicture &]
                  - function: setStatus[r:void][p:int]
                  - function: setFormat[r:void][p:const char *]
                  - function: setIODevice[r:void][p:QIODevice *]
                  - function: setFileName[r:void][p:const QString &]
                  - function: setQuality[r:void][p:int]
                  - function: setDescription[r:void][p:const QString &]
                  - function: setParameters[r:void][p:const char *]
                  - function: setGamma[r:void][p:float]
                  - function: read[r:bool]
                  - function: write[r:bool]
                  - function: pictureFormat[r:QByteArray][p:const QString &][specs:static]
                  - function: pictureFormat[r:QByteArray][p:QIODevice *][specs:static]
                  - function: inputFormats[r:QList<QByteArray>][specs:static]
                  - function: outputFormats[r:QList<QByteArray>][specs:static]
                  - function: defineIOHandler[r:void][p:const char *;const char *;const char *;picture_io_handler;picture_io_handler][specs:static]
            - function: operator<<[r:QDataStream &][p:QDataStream &;const QPicture &]
            - function: operator>>[r:QDataStream &][p:QDataStream &;QPicture &]
          hincludes: <QPicture>
      - file:
          name: pixelformat
          elements:
            - class:
                name: QPixelFormat
                elements:
                  - enum:
                      name: ColorModel
                      enumerators:
                        - RGB
                        - BGR
                        - Indexed
                        - Grayscale
                        - CMYK
                        - HSL
                        - HSV
                        - YUV
                        - Alpha[v:5.5.0]
                  - enum:
                      name: AlphaUsage
                      enumerators:
                        - UsesAlpha
                        - IgnoresAlpha
                  - enum:
                      name: AlphaPosition
                      enumerators:
                        - AtBeginning
                        - AtEnd
                  - enum:
                      name: AlphaPremultiplied
                      enumerators:
                        - NotPremultiplied
                        - Premultiplied
                  - enum:
                      name: TypeInterpretation
                      enumerators:
                        - UnsignedInteger
                        - UnsignedShort
                        - UnsignedByte
                        - FloatingPoint
                  - enum:
                      name: YUVLayout
                      enumerators:
                        - YUV444
                        - YUV422
                        - YUV411
                        - YUV420P
                        - YUV420SP
                        - YV12
                        - UYVY
                        - YUYV
                        - NV12
                        - NV21
                        - IMC1
                        - IMC2
                        - IMC3
                        - IMC4
                        - Y8
                        - Y16
                  - enum:
                      name: ByteOrder
                      enumerators:
                        - LittleEndian
                        - BigEndian
                        - CurrentSystemEndian
                  - constructor: QPixelFormat
                  - constructor: QPixelFormat[p:const QPixelFormat &]
                  - destructor: ~QPixelFormat
                  - function: operator=[r:QPixelFormat &][p:const QPixelFormat &]
                  - constructor: QPixelFormat[p:QPixelFormat::ColorModel;uchar;uchar;uchar;uchar;uchar;uchar;QPixelFormat::AlphaUsage;QPixelFormat::AlphaPosition;QPixelFormat::AlphaPremultiplied;QPixelFormat::TypeInterpretation;QPixelFormat::ByteOrder;uchar]
                  - function: colorModel[r:QPixelFormat::ColorModel][specs:const]
                  - function: channelCount[r:uchar][specs:const]
                  - function: redSize[r:uchar][specs:const]
                  - function: greenSize[r:uchar][specs:const]
                  - function: blueSize[r:uchar][specs:const]
                  - function: cyanSize[r:uchar][specs:const]
                  - function: magentaSize[r:uchar][specs:const]
                  - function: yellowSize[r:uchar][specs:const]
                  - function: blackSize[r:uchar][specs:const]
                  - function: hueSize[r:uchar][specs:const]
                  - function: saturationSize[r:uchar][specs:const]
                  - function: lightnessSize[r:uchar][specs:const]
                  - function: brightnessSize[r:uchar][specs:const]
                  - function: alphaSize[r:uchar][specs:const]
                  - function: bitsPerPixel[r:uchar][specs:const]
                  - function: alphaUsage[r:QPixelFormat::AlphaUsage][specs:const]
                  - function: alphaPosition[r:QPixelFormat::AlphaPosition][specs:const]
                  - function: premultiplied[r:QPixelFormat::AlphaPremultiplied][specs:const]
                  - function: typeInterpretation[r:QPixelFormat::TypeInterpretation][specs:const]
                  - function: byteOrder[r:QPixelFormat::ByteOrder][specs:const]
                  - function: yuvLayout[r:QPixelFormat::YUVLayout][specs:const]
                  - function: subEnum[r:uchar][specs:const]
            - function: qPixelFormatRgba[r:QPixelFormat][p:uchar;uchar;uchar;uchar;QPixelFormat::AlphaUsage;QPixelFormat::AlphaPosition;QPixelFormat::AlphaPremultiplied;QPixelFormat::TypeInterpretation]
            - function: qPixelFormatGrayscale[r:QPixelFormat][p:uchar;QPixelFormat::TypeInterpretation]
            - function: qPixelFormatAlpha[r:QPixelFormat][p:uchar;QPixelFormat::TypeInterpretation][v:5.5.0]
            - function: qPixelFormatCmyk[r:QPixelFormat][p:uchar;uchar;QPixelFormat::AlphaUsage;QPixelFormat::AlphaPosition;QPixelFormat::TypeInterpretation]
            - function: qPixelFormatHsl[r:QPixelFormat][p:uchar;uchar;QPixelFormat::AlphaUsage;QPixelFormat::AlphaPosition;QPixelFormat::TypeInterpretation]
            - function: qPixelFormatHsv[r:QPixelFormat][p:uchar;uchar;QPixelFormat::AlphaUsage;QPixelFormat::AlphaPosition;QPixelFormat::TypeInterpretation]
            - function: qPixelFormatYuv[r:QPixelFormat][p:QPixelFormat::YUVLayout;uchar;QPixelFormat::AlphaUsage;QPixelFormat::AlphaPosition;QPixelFormat::AlphaPremultiplied;QPixelFormat::TypeInterpretation;QPixelFormat::ByteOrder]
          hincludes: <QPixelFormat>
      - file:
          name: screen
          elements:
            - class:
                name: QScreen
                base: QObject
                elements:
                  - destructor: ~QScreen
                  - function: handle[r:QPlatformScreen *][specs:const]
                  - function: name[r:QString][specs:const]
                  - function: manufacturer[r:QString][specs:const][v:5.9.0]
                  - function: model[r:QString][specs:const][v:5.9.0]
                  - function: serialNumber[r:QString][specs:const][v:5.9.0]
                  - function: depth[r:int][specs:const]
                  - function: size[r:QSize][specs:const]
                  - function: geometry[r:QRect][specs:const]
                  - function: physicalSize[r:QSizeF][specs:const]
                  - function: physicalDotsPerInchX[r:qreal][specs:const]
                  - function: physicalDotsPerInchY[r:qreal][specs:const]
                  - function: physicalDotsPerInch[r:qreal][specs:const]
                  - function: logicalDotsPerInchX[r:qreal][specs:const]
                  - function: logicalDotsPerInchY[r:qreal][specs:const]
                  - function: logicalDotsPerInch[r:qreal][specs:const]
                  - function: devicePixelRatio[r:qreal][specs:const][v:5.5.0]
                  - function: availableSize[r:QSize][specs:const]
                  - function: availableGeometry[r:QRect][specs:const]
                  - function: virtualSiblings[r:QList<QScreen *>][specs:const]
                  - function: virtualSize[r:QSize][specs:const]
                  - function: virtualGeometry[r:QRect][specs:const]
                  - function: availableVirtualSize[r:QSize][specs:const]
                  - function: availableVirtualGeometry[r:QRect][specs:const]
                  - function: primaryOrientation[r:Qt::ScreenOrientation][specs:const]
                  - function: orientation[r:Qt::ScreenOrientation][specs:const]
                  - function: nativeOrientation[r:Qt::ScreenOrientation][specs:const][v:5.2.0]
                  - function: orientationUpdateMask[r:Qt::ScreenOrientations][specs:const]
                  - function: setOrientationUpdateMask[r:void][p:Qt::ScreenOrientations]
                  - function: angleBetween[r:int][p:Qt::ScreenOrientation;Qt::ScreenOrientation][specs:const]
                  - function: transformBetween[r:QTransform][p:Qt::ScreenOrientation;Qt::ScreenOrientation;const QRect &][specs:const]
                  - function: mapBetween[r:QRect][p:Qt::ScreenOrientation;Qt::ScreenOrientation;const QRect &][specs:const]
                  - function: isPortrait[r:bool][p:Qt::ScreenOrientation][specs:const]
                  - function: isLandscape[r:bool][p:Qt::ScreenOrientation][specs:const]
                  - function: grabWindow[r:QPixmap][p:WId;int;int;int;int]
                  - function: refreshRate[r:qreal][specs:const]
                  - function: geometryChanged[r:void][p:const QRect &]
                  - function: availableGeometryChanged[r:void][p:const QRect &]
                  - function: physicalSizeChanged[r:void][p:const QSizeF &]
                  - function: physicalDotsPerInchChanged[r:void][p:qreal]
                  - function: logicalDotsPerInchChanged[r:void][p:qreal]
                  - function: virtualGeometryChanged[r:void][p:const QRect &]
                  - function: primaryOrientationChanged[r:void][p:Qt::ScreenOrientation]
                  - function: orientationChanged[r:void][p:Qt::ScreenOrientation]
                  - function: refreshRateChanged[r:void][p:qreal]
            - function: operator<<[r:QDebug][p:QDebug;const QScreen *]
          hincludes: <QScreen>
      - file:
          name: statictext
          elements:
            - class:
                name: QStaticText
                elements:
                  - enum:
                      name: PerformanceHint
                      enumerators:
                        - ModerateCaching
                        - AggressiveCaching
                  - constructor: QStaticText
                  - constructor: QStaticText[p:const QString &]
                  - constructor: QStaticText[p:const QStaticText &]
                  - function: operator=[r:QStaticText &][p:QStaticText &&]
                  - function: operator=[r:QStaticText &][p:const QStaticText &]
                  - destructor: ~QStaticText
                  - function: swap[r:void][p:QStaticText &]
                  - function: setText[r:void][p:const QString &]
                  - function: text[r:QString][specs:const]
                  - function: setTextFormat[r:void][p:Qt::TextFormat]
                  - function: textFormat[r:Qt::TextFormat][specs:const]
                  - function: setTextWidth[r:void][p:qreal]
                  - function: textWidth[r:qreal][specs:const]
                  - function: setTextOption[r:void][p:const QTextOption &]
                  - function: textOption[r:QTextOption][specs:const]
                  - function: size[r:QSizeF][specs:const]
                  - function: prepare[r:void][p:const QTransform &=QTransform();const QFont &=QFont()]
                  - function: setPerformanceHint[r:void][p:QStaticText::PerformanceHint]
                  - function: performanceHint[r:QStaticText::PerformanceHint][specs:const]
                  - function: operator==[r:bool][p:const QStaticText &][specs:const]
                  - function: operator!=[r:bool][p:const QStaticText &][specs:const]
            - function: swap[r:void][p:QStaticText &;QStaticText &]
          hincludes: <QStaticText>
      - file:
          name: textoption
          checkstate: partially-checked
          elements:
            - class:
                name: QTextOption
                checkstate: partially-checked
                elements:
                  - enum:
                      name: TabType
                      enumerators:
                        - LeftTab
                        - RightTab
                        - CenterTab
                        - DelimiterTab
                  - constructor: QTextOption
                  - constructor: QTextOption[p:Qt::Alignment]
                  - destructor: ~QTextOption
                  - constructor: QTextOption[p:const QTextOption &]
                  - function: operator=[r:QTextOption &][p:const QTextOption &]
                  - function: setAlignment[r:void][p:Qt::Alignment]
                  - function: alignment[r:Qt::Alignment][specs:const]
                  - function: setTextDirection[r:void][p:Qt::LayoutDirection]
                  - function: textDirection[r:Qt::LayoutDirection][specs:const]
                  - enum:
                      name: WrapMode
                      enumerators:
                        - NoWrap
                        - WordWrap
                        - ManualWrap
                        - WrapAnywhere
                        - WrapAtWordBoundaryOrAnywhere
                  - function: setWrapMode[r:void][p:QTextOption::WrapMode]
                  - function: wrapMode[r:QTextOption::WrapMode][specs:const]
                  - enum:
                      name: Flag
                      enumerators:
                        - ShowTabsAndSpaces
                        - ShowLineAndParagraphSeparators
                        - AddSpaceForLineAndParagraphSeparators
                        - SuppressColors
                        - ShowDocumentTerminator[v:5.7.0]
                        - IncludeTrailingSpaces
                  - function: setFlags[r:void][p:QTextOption::Flags]
                  - function: flags[r:QTextOption::Flags][specs:const]
                  - function: setTabStop[r:void][p:qreal]
                  - function: tabStop[r:qreal][specs:const]
                  - function: setTabStopDistance[r:void][p:qreal][v:5.10.0]
                  - function: tabStopDistance[r:qreal][specs:const][v:5.10.0]
                  - function: setTabArray[r:void][p:const QList<qreal> &]
                  - function: tabArray[r:QList<qreal>][specs:const]
                  - function: setTabs[r:void][p:const QList<QTextOption::Tab> &]
                  - function: tabs[r:QList<QTextOption::Tab>][specs:const]
                  - function: setUseDesignMetrics[r:void][p:bool]
                  - function: useDesignMetrics[r:bool][specs:const]
            - function: operator|[r:QFlags<QTextOption::Flags::enum_type>][p:QTextOption::Flags::enum_type;QTextOption::Flags::enum_type]
            - function: operator|[r:QFlags<QTextOption::Flags::enum_type>][p:QTextOption::Flags::enum_type;QFlags<QTextOption::Flags::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:QTextOption::Flags::enum_type;int]
          hincludes: <QTextOption>
      - file:
          name: validator
          checkstate: partially-checked
          elements:
            - class:
                name: QValidator
                base: QObject
                checkstate: partially-checked
                elements:
                  - constructor: QValidator[p:QObject *][unchecked]
                  - destructor: ~QValidator
                  - enum:
                      name: State
                      enumerators:
                        - Invalid
                        - Intermediate
                        - Acceptable
                  - function: setLocale[r:void][p:const QLocale &]
                  - function: locale[r:QLocale][specs:const]
                  - function: validate[r:QValidator::State][p:QString &;int &][specs:const]
                  - function: fixup[r:void][p:QString &][specs:const]
                  - function: changed[r:void][binding:signals]
            - class:
                name: QIntValidator
                base: QValidator
                elements:
                  - constructor: QIntValidator[p:QObject *=(QObject*)nullptr]
                  - constructor: QIntValidator[p:int;int;QObject *=(QObject*)nullptr]
                  - destructor: ~QIntValidator
                  - function: validate[r:QValidator::State][p:QString &;int &][specs:const]
                  - function: fixup[r:void][p:QString &][specs:const]
                  - function: setBottom[r:void][p:int]
                  - function: setTop[r:void][p:int]
                  - function: setRange[r:void][p:int;int]
                  - function: bottom[r:int][specs:const]
                  - function: top[r:int][specs:const]
                  - function: bottomChanged[r:void][p:int]
                  - function: topChanged[r:void][p:int]
            - class:
                name: QDoubleValidator
                base: QValidator
                elements:
                  - constructor: QDoubleValidator[p:QObject *=(QObject*)nullptr]
                  - constructor: QDoubleValidator[p:double;double;int;QObject *=(QObject*)nullptr]
                  - destructor: ~QDoubleValidator
                  - enum:
                      name: Notation
                      enumerators:
                        - StandardNotation
                        - ScientificNotation
                  - function: validate[r:QValidator::State][p:QString &;int &][specs:const]
                  - function: setRange[r:void][p:double;double;int=0]
                  - function: setBottom[r:void][p:double]
                  - function: setTop[r:void][p:double]
                  - function: setDecimals[r:void][p:int]
                  - function: setNotation[r:void][p:QDoubleValidator::Notation]
                  - function: bottom[r:double][specs:const]
                  - function: top[r:double][specs:const]
                  - function: decimals[r:int][specs:const]
                  - function: notation[r:QDoubleValidator::Notation][specs:const]
                  - function: bottomChanged[r:void][p:double]
                  - function: topChanged[r:void][p:double]
                  - function: decimalsChanged[r:void][p:int]
                  - function: notationChanged[r:void][p:QDoubleValidator::Notation]
            - class:
                name: QRegularExpressionValidator
                base: QValidator
                elements:
                  - constructor: QRegularExpressionValidator[p:QObject *=(QObject*)nullptr]
                  - constructor: QRegularExpressionValidator[p:const QRegularExpression &;QObject *=(QObject*)nullptr]
                  - destructor: ~QRegularExpressionValidator
                  - function: validate[r:QValidator::State][p:QString &;int &][specs:const]
                  - function: regularExpression[r:QRegularExpression][specs:const]
                  - function: setRegularExpression[r:void][p:const QRegularExpression &]
                  - function: regularExpressionChanged[r:void][p:const QRegularExpression &]
          hincludes: <QValidator>
      - file:
          name: window
          checkstate: partially-checked
          elements:
            - class:
                name: QWindow
                base: QObject
                checkstate: partially-checked
                elements:
                  - enum:
                      name: Visibility
                      enumerators:
                        - Hidden
                        - AutomaticVisibility
                        - Windowed
                        - Minimized
                        - Maximized
                        - FullScreen
                  - enum:
                      name: AncestorMode
                      enumerators:
                        - ExcludeTransients
                        - IncludeTransients
                  - constructor: QWindow[p:QScreen *=(QScreen*)nullptr]
                  - constructor: QWindow[p:QWindow *]
                  - destructor: ~QWindow
                  - function: setSurfaceType[r:void][p:QSurface::SurfaceType]
                  - function: surfaceType[r:QSurface::SurfaceType][specs:const]
                  - function: isVisible[r:bool][specs:const]
                  - function: visibility[r:QWindow::Visibility][specs:const]
                  - function: setVisibility[r:void][p:QWindow::Visibility]
                  - function: create[r:void]
                  - function: winId[r:WId][specs:const]
                  - function: parent[r:QWindow *][p:QWindow::AncestorMode][specs:const][v:5.9.0]
                  - function: parent[r:QWindow *][specs:const]
                  - function: setParent[r:void][p:QWindow *]
                  - function: isTopLevel[r:bool][specs:const]
                  - function: isModal[r:bool][specs:const]
                  - function: modality[r:Qt::WindowModality][specs:const]
                  - function: setModality[r:void][p:Qt::WindowModality]
                  - function: setFormat[r:void][p:const QSurfaceFormat &]
                  - function: format[r:QSurfaceFormat][specs:const]
                  - function: requestedFormat[r:QSurfaceFormat][specs:const]
                  - function: setFlags[r:void][p:Qt::WindowFlags]
                  - function: flags[r:Qt::WindowFlags][specs:const]
                  - function: setFlag[r:void][p:Qt::WindowType;bool=true][v:5.9.0]
                  - function: type[r:Qt::WindowType][specs:const]
                  - function: title[r:QString][specs:const]
                  - function: setOpacity[r:void][p:qreal]
                  - function: opacity[r:qreal][specs:const]
                  - function: setMask[r:void][p:const QRegion &]
                  - function: mask[r:QRegion][specs:const]
                  - function: isActive[r:bool][specs:const]
                  - function: reportContentOrientationChange[r:void][p:Qt::ScreenOrientation]
                  - function: contentOrientation[r:Qt::ScreenOrientation][specs:const]
                  - function: devicePixelRatio[r:qreal][specs:const]
                  - function: windowState[r:Qt::WindowState][specs:const]
                  - function: windowStates[r:Qt::WindowStates][specs:const][v:5.10.0]
                  - function: setWindowState[r:void][p:Qt::WindowState]
                  - function: setWindowStates[r:void][p:Qt::WindowStates][v:5.10.0]
                  - function: setTransientParent[r:void][p:QWindow *]
                  - function: transientParent[r:QWindow *][specs:const]
                  - function: isAncestorOf[r:bool][p:const QWindow *;QWindow::AncestorMode=QWindow::IncludeTransients][specs:const]
                  - function: isExposed[r:bool][specs:const]
                  - function: minimumWidth[r:int][specs:const]
                  - function: minimumHeight[r:int][specs:const]
                  - function: maximumWidth[r:int][specs:const]
                  - function: maximumHeight[r:int][specs:const]
                  - function: minimumSize[r:QSize][specs:const]
                  - function: maximumSize[r:QSize][specs:const]
                  - function: baseSize[r:QSize][specs:const]
                  - function: sizeIncrement[r:QSize][specs:const]
                  - function: setMinimumSize[r:void][p:const QSize &]
                  - function: setMaximumSize[r:void][p:const QSize &]
                  - function: setBaseSize[r:void][p:const QSize &]
                  - function: setSizeIncrement[r:void][p:const QSize &]
                  - function: geometry[r:QRect][specs:const]
                  - function: frameMargins[r:QMargins][specs:const]
                  - function: frameGeometry[r:QRect][specs:const]
                  - function: framePosition[r:QPoint][specs:const]
                  - function: setFramePosition[r:void][p:const QPoint &]
                  - function: width[r:int][specs:const]
                  - function: height[r:int][specs:const]
                  - function: x[r:int][specs:const]
                  - function: y[r:int][specs:const]
                  - function: size[r:QSize][specs:const]
                  - function: position[r:QPoint][specs:const]
                  - function: setPosition[r:void][p:const QPoint &]
                  - function: setPosition[r:void][p:int;int]
                  - function: resize[r:void][p:const QSize &]
                  - function: resize[r:void][p:int;int]
                  - function: setFilePath[r:void][p:const QString &]
                  - function: filePath[r:QString][specs:const]
                  - function: setIcon[r:void][p:const QIcon &]
                  - function: icon[r:QIcon][specs:const]
                  - function: destroy[r:void]
                  - function: handle[r:QPlatformWindow *][specs:const]
                  - function: setKeyboardGrabEnabled[r:bool][p:bool]
                  - function: setMouseGrabEnabled[r:bool][p:bool]
                  - function: screen[r:QScreen *][specs:const]
                  - function: setScreen[r:void][p:QScreen *]
                  - function: accessibleRoot[r:QAccessibleInterface *][specs:const]
                  - function: focusObject[r:QObject *][specs:const]
                  - function: mapToGlobal[r:QPoint][p:const QPoint &][specs:const]
                  - function: mapFromGlobal[r:QPoint][p:const QPoint &][specs:const]
                  - function: cursor[r:QCursor][specs:const]
                  - function: setCursor[r:void][p:const QCursor &]
                  - function: unsetCursor[r:void]
                  - function: fromWinId[r:QWindow *][p:WId][specs:static]
                  - function: setVulkanInstance[r:void][p:QVulkanInstance *]
                  - function: vulkanInstance[r:QVulkanInstance *][specs:const]
                  - function: requestActivate[r:void]
                  - function: setVisible[r:void][p:bool]
                  - function: show[r:void]
                  - function: hide[r:void]
                  - function: showMinimized[r:void]
                  - function: showMaximized[r:void]
                  - function: showFullScreen[r:void]
                  - function: showNormal[r:void]
                  - function: close[r:bool]
                  - function: raise[r:void]
                  - function: lower[r:void]
                  - function: setTitle[r:void][p:const QString &]
                  - function: setX[r:void][p:int]
                  - function: setY[r:void][p:int]
                  - function: setWidth[r:void][p:int]
                  - function: setHeight[r:void][p:int]
                  - function: setGeometry[r:void][p:int;int;int;int]
                  - function: setGeometry[r:void][p:const QRect &]
                  - function: setMinimumWidth[r:void][p:int]
                  - function: setMinimumHeight[r:void][p:int]
                  - function: setMaximumWidth[r:void][p:int]
                  - function: setMaximumHeight[r:void][p:int]
                  - function: alert[r:void][p:int][v:5.1.0]
                  - function: requestUpdate[r:void][v:5.5.0]
                  - function: screenChanged[r:void][p:QScreen *][binding:signals][unchecked]
                  - function: modalityChanged[r:void][p:Qt::WindowModality][binding:signals]
                  - function: windowStateChanged[r:void][p:Qt::WindowState][binding:signals]
                  - function: windowTitleChanged[r:void][p:const QString &][binding:signals]
                  - function: xChanged[r:void][p:int][binding:signals]
                  - function: yChanged[r:void][p:int][binding:signals]
                  - function: widthChanged[r:void][p:int][binding:signals]
                  - function: heightChanged[r:void][p:int][binding:signals]
                  - function: minimumWidthChanged[r:void][p:int][binding:signals]
                  - function: minimumHeightChanged[r:void][p:int][binding:signals]
                  - function: maximumWidthChanged[r:void][p:int][binding:signals]
                  - function: maximumHeightChanged[r:void][p:int][binding:signals]
                  - function: visibleChanged[r:void][p:bool][binding:signals]
                  - function: visibilityChanged[r:void][p:QWindow::Visibility][binding:signals]
                  - function: activeChanged[r:void][binding:signals]
                  - function: contentOrientationChanged[r:void][p:Qt::ScreenOrientation][binding:signals]
                  - function: focusObjectChanged[r:void][p:QObject *][binding:signals]
                  - function: opacityChanged[r:void][p:qreal][binding:signals]
            - function: operator<<[r:QDebug][p:QDebug;const QWindow *]
          hincludes: <QWindow>
      - file:
          name: guievent
          checkstate: partially-checked
          elements:
            - class:
                name: QMouseEvent
                base: QEvent
                elements:
                  - constructor: QMouseEvent[p:QEvent::Type;const QPointF &;Qt::MouseButton;Qt::MouseButtons;Qt::KeyboardModifiers]
                  - constructor: QMouseEvent[p:QEvent::Type;const QPointF &;const QPointF &;Qt::MouseButton;Qt::MouseButtons;Qt::KeyboardModifiers]
                  - constructor: QMouseEvent[p:QEvent::Type;const QPointF &;const QPointF &;const QPointF &;Qt::MouseButton;Qt::MouseButtons;Qt::KeyboardModifiers]
                  - constructor: QMouseEvent[p:QEvent::Type;const QPointF &;const QPointF &;const QPointF &;Qt::MouseButton;Qt::MouseButtons;Qt::KeyboardModifiers;Qt::MouseEventSource]
                  - destructor: ~QMouseEvent
                  - function: pos[r:QPoint][specs:const]
                  - function: globalPos[r:QPoint][specs:const]
                  - function: x[r:int][specs:const]
                  - function: y[r:int][specs:const]
                  - function: globalX[r:int][specs:const]
                  - function: globalY[r:int][specs:const]
                  - function: localPos[r:const QPointF &][specs:const]
                  - function: windowPos[r:const QPointF &][specs:const]
                  - function: screenPos[r:const QPointF &][specs:const]
                  - function: button[r:Qt::MouseButton][specs:const]
                  - function: buttons[r:Qt::MouseButtons][specs:const]
                  - function: setLocalPos[r:void][p:const QPointF &]
                  - function: source[r:Qt::MouseEventSource][specs:const]
                  - function: flags[r:Qt::MouseEventFlags][specs:const]
            - class:
                name: QWheelEvent
                base: QEvent
                checkstate: partially-checked
                elements:
                  - enum:
                      name: ""
                      checkstate: unchecked
                      enumerators:
                        - DefaultDeltasPerStep
                  - constructor: QWheelEvent[p:const QPointF &;int;Qt::MouseButtons;Qt::KeyboardModifiers;Qt::Orientation]
                  - constructor: QWheelEvent[p:const QPointF &;const QPointF &;int;Qt::MouseButtons;Qt::KeyboardModifiers;Qt::Orientation]
                  - constructor: QWheelEvent[p:const QPointF &;const QPointF &;QPoint;QPoint;int;Qt::Orientation;Qt::MouseButtons;Qt::KeyboardModifiers]
                  - constructor: QWheelEvent[p:const QPointF &;const QPointF &;QPoint;QPoint;int;Qt::Orientation;Qt::MouseButtons;Qt::KeyboardModifiers;Qt::ScrollPhase]
                  - constructor: QWheelEvent[p:const QPointF &;const QPointF &;QPoint;QPoint;int;Qt::Orientation;Qt::MouseButtons;Qt::KeyboardModifiers;Qt::ScrollPhase;Qt::MouseEventSource]
                  - constructor: QWheelEvent[p:const QPointF &;const QPointF &;QPoint;QPoint;int;Qt::Orientation;Qt::MouseButtons;Qt::KeyboardModifiers;Qt::ScrollPhase;Qt::MouseEventSource;bool]
                  - destructor: ~QWheelEvent
                  - function: pixelDelta[r:QPoint][specs:const]
                  - function: angleDelta[r:QPoint][specs:const]
                  - function: delta[r:int][specs:const]
                  - function: orientation[r:Qt::Orientation][specs:const]
                  - function: pos[r:QPoint][specs:const]
                  - function: globalPos[r:QPoint][specs:const]
                  - function: x[r:int][specs:const]
                  - function: y[r:int][specs:const]
                  - function: globalX[r:int][specs:const]
                  - function: globalY[r:int][specs:const]
                  - function: posF[r:const QPointF &][specs:const]
                  - function: globalPosF[r:const QPointF &][specs:const]
                  - function: buttons[r:Qt::MouseButtons][specs:const]
                  - function: phase[r:Qt::ScrollPhase][specs:const]
                  - function: inverted[r:bool][specs:const]
                  - function: source[r:Qt::MouseEventSource][specs:const]
            - class:
                name: QKeyEvent
                base: QEvent
                elements:
                  - constructor: QKeyEvent[p:QEvent::Type;int;Qt::KeyboardModifiers;const QString &;bool;ushort]
                  - constructor: QKeyEvent[p:QEvent::Type;int;Qt::KeyboardModifiers;quint32;quint32;quint32;const QString &;bool;ushort]
                  - destructor: ~QKeyEvent
                  - function: key[r:int][specs:const]
                  - function: matches[r:bool][p:QKeySequence::StandardKey][specs:const]
                  - function: modifiers[r:Qt::KeyboardModifiers][specs:const]
                  - function: text[r:QString][specs:const]
                  - function: isAutoRepeat[r:bool][specs:const]
                  - function: count[r:int][specs:const]
                  - function: nativeScanCode[r:quint32][specs:const]
                  - function: nativeVirtualKey[r:quint32][specs:const]
                  - function: nativeModifiers[r:quint32][specs:const]
            - class:
                name: QPaintEvent
                base: QEvent
                elements:
                  - constructor: QPaintEvent[p:const QRegion &]
                  - constructor: QPaintEvent[p:const QRect &]
                  - destructor: ~QPaintEvent
                  - function: rect[r:const QRect &][specs:const]
                  - function: region[r:const QRegion &][specs:const]
            - class:
                name: QMoveEvent
                base: QEvent
                elements:
                  - constructor: QMoveEvent[p:const QPoint &;const QPoint &]
                  - destructor: ~QMoveEvent
                  - function: pos[r:const QPoint &][specs:const]
                  - function: oldPos[r:const QPoint &][specs:const]
            - class:
                name: QResizeEvent
                base: QEvent
                elements:
                  - constructor: QResizeEvent[p:const QSize &;const QSize &]
                  - destructor: ~QResizeEvent
                  - function: size[r:const QSize &][specs:const]
                  - function: oldSize[r:const QSize &][specs:const]
            - class:
                name: QCloseEvent
                base: QEvent
                elements:
                  - constructor: QCloseEvent
                  - destructor: ~QCloseEvent
            - class:
                name: QShowEvent
                base: QEvent
                elements:
                  - constructor: QShowEvent
                  - destructor: ~QShowEvent
            - class:
                name: QHideEvent
                base: QEvent
                elements:
                  - constructor: QHideEvent
                  - destructor: ~QHideEvent
            - function: operator==[r:bool][p:QKeyEvent *;QKeySequence::StandardKey]
            - function: operator==[r:bool][p:QKeySequence::StandardKey;QKeyEvent *]
          hincludes: <qevent.h>;yasl/core/event.h
  - widgets:
      - file:
          name: widget
          elements:
            - class:
                name: QWidget
                base: QObject
                elements:
                  - enum:
                      name: RenderFlag
                      enumerators:
                        - DrawWindowBackground
                        - DrawChildren
                        - IgnoreMask
                  - constructor: QWidget[p:QWidget *=(QWidget*)nullptr;Qt::WindowFlags=Qt::WindowFlags()]
                  - destructor: ~QWidget
                  - function: devType[r:int][specs:const]
                  - function: winId[r:WId][specs:const]
                  - function: createWinId[r:void]
                  - function: internalWinId[r:WId][specs:const]
                  - function: effectiveWinId[r:WId][specs:const]
                  - function: style[r:QStyle *][specs:const]
                  - function: setStyle[r:void][p:QStyle *]
                  - function: isTopLevel[r:bool][specs:const]
                  - function: isWindow[r:bool][specs:const]
                  - function: isModal[r:bool][specs:const]
                  - function: windowModality[r:Qt::WindowModality][specs:const]
                  - function: setWindowModality[r:void][p:Qt::WindowModality]
                  - function: isEnabled[r:bool][specs:const]
                  - function: isEnabledTo[r:bool][p:const QWidget *][specs:const]
                  - function: isEnabledToTLW[r:bool][specs:const]
                  - function: setEnabled[r:void][p:bool]
                  - function: setDisabled[r:void][p:bool]
                  - function: setWindowModified[r:void][p:bool]
                  - function: frameGeometry[r:QRect][specs:const]
                  - function: geometry[r:const QRect &][specs:const]
                  - function: normalGeometry[r:QRect][specs:const]
                  - function: x[r:int][specs:const]
                  - function: y[r:int][specs:const]
                  - function: pos[r:QPoint][specs:const]
                  - function: frameSize[r:QSize][specs:const]
                  - function: size[r:QSize][specs:const]
                  - function: width[r:int][specs:const]
                  - function: height[r:int][specs:const]
                  - function: rect[r:QRect][specs:const]
                  - function: childrenRect[r:QRect][specs:const]
                  - function: childrenRegion[r:QRegion][specs:const]
                  - function: minimumSize[r:QSize][specs:const]
                  - function: maximumSize[r:QSize][specs:const]
                  - function: minimumWidth[r:int][specs:const]
                  - function: minimumHeight[r:int][specs:const]
                  - function: maximumWidth[r:int][specs:const]
                  - function: maximumHeight[r:int][specs:const]
                  - function: setMinimumSize[r:void][p:const QSize &]
                  - function: setMinimumSize[r:void][p:int;int]
                  - function: setMaximumSize[r:void][p:const QSize &]
                  - function: setMaximumSize[r:void][p:int;int]
                  - function: setMinimumWidth[r:void][p:int]
                  - function: setMinimumHeight[r:void][p:int]
                  - function: setMaximumWidth[r:void][p:int]
                  - function: setMaximumHeight[r:void][p:int]
                  - function: sizeIncrement[r:QSize][specs:const]
                  - function: setSizeIncrement[r:void][p:const QSize &]
                  - function: setSizeIncrement[r:void][p:int;int]
                  - function: baseSize[r:QSize][specs:const]
                  - function: setBaseSize[r:void][p:const QSize &]
                  - function: setBaseSize[r:void][p:int;int]
                  - function: setFixedSize[r:void][p:const QSize &]
                  - function: setFixedSize[r:void][p:int;int]
                  - function: setFixedWidth[r:void][p:int]
                  - function: setFixedHeight[r:void][p:int]
                  - function: mapToGlobal[r:QPoint][p:const QPoint &][specs:const]
                  - function: mapFromGlobal[r:QPoint][p:const QPoint &][specs:const]
                  - function: mapToParent[r:QPoint][p:const QPoint &][specs:const]
                  - function: mapFromParent[r:QPoint][p:const QPoint &][specs:const]
                  - function: mapTo[r:QPoint][p:const QWidget *;const QPoint &][specs:const]
                  - function: mapFrom[r:QPoint][p:const QWidget *;const QPoint &][specs:const]
                  - function: window[r:QWidget *][specs:const]
                  - function: nativeParentWidget[r:QWidget *][specs:const]
                  - function: topLevelWidget[r:QWidget *][specs:const]
                  - function: palette[r:const QPalette &][specs:const]
                  - function: setPalette[r:void][p:const QPalette &]
                  - function: setBackgroundRole[r:void][p:QPalette::ColorRole]
                  - function: backgroundRole[r:QPalette::ColorRole][specs:const]
                  - function: setForegroundRole[r:void][p:QPalette::ColorRole]
                  - function: foregroundRole[r:QPalette::ColorRole][specs:const]
                  - function: font[r:const QFont &][specs:const]
                  - function: setFont[r:void][p:const QFont &]
                  - function: fontMetrics[r:QFontMetrics][specs:const]
                  - function: fontInfo[r:QFontInfo][specs:const]
                  - function: cursor[r:QCursor][specs:const]
                  - function: setCursor[r:void][p:const QCursor &]
                  - function: unsetCursor[r:void]
                  - function: setMouseTracking[r:void][p:bool]
                  - function: hasMouseTracking[r:bool][specs:const]
                  - function: underMouse[r:bool][specs:const]
                  - function: setTabletTracking[r:void][p:bool]
                  - function: hasTabletTracking[r:bool][specs:const]
                  - function: setMask[r:void][p:const QBitmap &]
                  - function: setMask[r:void][p:const QRegion &]
                  - function: mask[r:QRegion][specs:const]
                  - function: clearMask[r:void]
                  - function: render[r:void][p:QPaintDevice *;const QPoint &;const QRegion &;QWidget::RenderFlags]
                  - function: render[r:void][p:QPainter *;const QPoint &;const QRegion &;QWidget::RenderFlags=QWidget::RenderFlags(QWidget::DrawWindowBackground | QWidget::DrawChildren)]
                  - function: grab[r:QPixmap][p:const QRect &=QRect(QPoint(0, 0), QSize(-1, -1))]
                  - function: graphicsEffect[r:QGraphicsEffect *][specs:const]
                  - function: setGraphicsEffect[r:void][p:QGraphicsEffect *]
                  - function: grabGesture[r:void][p:Qt::GestureType;Qt::GestureFlags=Qt::GestureFlags()]
                  - function: ungrabGesture[r:void][p:Qt::GestureType]
                  - function: setWindowTitle[r:void][p:const QString &]
                  - function: setStyleSheet[r:void][p:const QString &]
                  - function: styleSheet[r:QString][specs:const]
                  - function: windowTitle[r:QString][specs:const]
                  - function: setWindowIcon[r:void][p:const QIcon &]
                  - function: windowIcon[r:QIcon][specs:const]
                  - function: setWindowIconText[r:void][p:const QString &]
                  - function: windowIconText[r:QString][specs:const]
                  - function: setWindowRole[r:void][p:const QString &]
                  - function: windowRole[r:QString][specs:const]
                  - function: setWindowFilePath[r:void][p:const QString &]
                  - function: windowFilePath[r:QString][specs:const]
                  - function: setWindowOpacity[r:void][p:qreal]
                  - function: windowOpacity[r:qreal][specs:const]
                  - function: isWindowModified[r:bool][specs:const]
                  - function: setToolTip[r:void][p:const QString &]
                  - function: toolTip[r:QString][specs:const]
                  - function: setToolTipDuration[r:void][p:int][v:5.2.0]
                  - function: toolTipDuration[r:int][specs:const][v:5.2.0]
                  - function: setStatusTip[r:void][p:const QString &]
                  - function: statusTip[r:QString][specs:const]
                  - function: setWhatsThis[r:void][p:const QString &]
                  - function: whatsThis[r:QString][specs:const]
                  - function: accessibleName[r:QString][specs:const]
                  - function: setAccessibleName[r:void][p:const QString &]
                  - function: accessibleDescription[r:QString][specs:const]
                  - function: setAccessibleDescription[r:void][p:const QString &]
                  - function: setLayoutDirection[r:void][p:Qt::LayoutDirection]
                  - function: layoutDirection[r:Qt::LayoutDirection][specs:const]
                  - function: unsetLayoutDirection[r:void]
                  - function: setLocale[r:void][p:const QLocale &]
                  - function: locale[r:QLocale][specs:const]
                  - function: unsetLocale[r:void]
                  - function: isRightToLeft[r:bool][specs:const]
                  - function: isLeftToRight[r:bool][specs:const]
                  - function: setFocus[r:void]
                  - function: isActiveWindow[r:bool][specs:const]
                  - function: activateWindow[r:void]
                  - function: clearFocus[r:void]
                  - function: setFocus[r:void][p:Qt::FocusReason]
                  - function: focusPolicy[r:Qt::FocusPolicy][specs:const]
                  - function: setFocusPolicy[r:void][p:Qt::FocusPolicy]
                  - function: hasFocus[r:bool][specs:const]
                  - function: setTabOrder[r:void][p:QWidget *;QWidget *][specs:static]
                  - function: setFocusProxy[r:void][p:QWidget *]
                  - function: focusProxy[r:QWidget *][specs:const]
                  - function: contextMenuPolicy[r:Qt::ContextMenuPolicy][specs:const]
                  - function: setContextMenuPolicy[r:void][p:Qt::ContextMenuPolicy]
                  - function: grabMouse[r:void]
                  - function: grabMouse[r:void][p:const QCursor &]
                  - function: releaseMouse[r:void]
                  - function: grabKeyboard[r:void]
                  - function: releaseKeyboard[r:void]
                  - function: grabShortcut[r:int][p:const QKeySequence &;Qt::ShortcutContext=Qt::WindowShortcut]
                  - function: releaseShortcut[r:void][p:int]
                  - function: setShortcutEnabled[r:void][p:int;bool=true]
                  - function: setShortcutAutoRepeat[r:void][p:int;bool=true]
                  - function: mouseGrabber[r:QWidget *][specs:static]
                  - function: keyboardGrabber[r:QWidget *][specs:static]
                  - function: updatesEnabled[r:bool][specs:const]
                  - function: setUpdatesEnabled[r:void][p:bool]
                  - function: graphicsProxyWidget[r:QGraphicsProxyWidget *][specs:const]
                  - function: update[r:void]
                  - function: repaint[r:void]
                  - function: update[r:void][p:int;int;int;int]
                  - function: update[r:void][p:const QRect &]
                  - function: update[r:void][p:const QRegion &]
                  - function: repaint[r:void][p:int;int;int;int]
                  - function: repaint[r:void][p:const QRect &]
                  - function: repaint[r:void][p:const QRegion &]
                  - function: setVisible[r:void][p:bool]
                  - function: setHidden[r:void][p:bool]
                  - function: show[r:void]
                  - function: hide[r:void]
                  - function: showMinimized[r:void]
                  - function: showMaximized[r:void]
                  - function: showFullScreen[r:void]
                  - function: showNormal[r:void]
                  - function: close[r:bool]
                  - function: raise[r:void]
                  - function: lower[r:void]
                  - function: stackUnder[r:void][p:QWidget *]
                  - function: move[r:void][p:int;int]
                  - function: move[r:void][p:const QPoint &]
                  - function: resize[r:void][p:int;int]
                  - function: resize[r:void][p:const QSize &]
                  - function: setGeometry[r:void][p:int;int;int;int]
                  - function: setGeometry[r:void][p:const QRect &]
                  - function: saveGeometry[r:QByteArray][specs:const]
                  - function: restoreGeometry[r:bool][p:const QByteArray &]
                  - function: adjustSize[r:void]
                  - function: isVisible[r:bool][specs:const]
                  - function: isVisibleTo[r:bool][p:const QWidget *][specs:const]
                  - function: isHidden[r:bool][specs:const]
                  - function: isMinimized[r:bool][specs:const]
                  - function: isMaximized[r:bool][specs:const]
                  - function: isFullScreen[r:bool][specs:const]
                  - function: windowState[r:Qt::WindowStates][specs:const]
                  - function: setWindowState[r:void][p:Qt::WindowStates]
                  - function: overrideWindowState[r:void][p:Qt::WindowStates]
                  - function: sizeHint[r:QSize][specs:const]
                  - function: minimumSizeHint[r:QSize][specs:const]
                  - function: sizePolicy[r:QSizePolicy][specs:const]
                  - function: setSizePolicy[r:void][p:QSizePolicy]
                  - function: setSizePolicy[r:void][p:QSizePolicy::Policy;QSizePolicy::Policy]
                  - function: heightForWidth[r:int][p:int][specs:const]
                  - function: hasHeightForWidth[r:bool][specs:const]
                  - function: visibleRegion[r:QRegion][specs:const]
                  - function: setContentsMargins[r:void][p:int;int;int;int]
                  - function: setContentsMargins[r:void][p:const QMargins &]
                  - function: getContentsMargins[r:void][p:int *;int *;int *;int *][specs:const]
                  - function: contentsMargins[r:QMargins][specs:const]
                  - function: contentsRect[r:QRect][specs:const]
                  - function: layout[r:QLayout *][specs:const]
                  - function: setLayout[r:void][p:QLayout *]
                  - function: updateGeometry[r:void]
                  - function: setParent[r:void][p:QWidget *]
                  - function: setParent[r:void][p:QWidget *;Qt::WindowFlags]
                  - function: scroll[r:void][p:int;int]
                  - function: scroll[r:void][p:int;int;const QRect &]
                  - function: focusWidget[r:QWidget *][specs:const]
                  - function: nextInFocusChain[r:QWidget *][specs:const]
                  - function: previousInFocusChain[r:QWidget *][specs:const]
                  - function: acceptDrops[r:bool][specs:const]
                  - function: setAcceptDrops[r:void][p:bool]
                  - function: addAction[r:void][p:QAction *]
                  - function: addActions[r:void][p:QList<QAction *>]
                  - function: insertActions[r:void][p:QAction *;QList<QAction *>]
                  - function: insertAction[r:void][p:QAction *;QAction *]
                  - function: removeAction[r:void][p:QAction *]
                  - function: actions[r:QList<QAction *>][specs:const]
                  - function: parentWidget[r:QWidget *][specs:const]
                  - function: setWindowFlags[r:void][p:Qt::WindowFlags]
                  - function: windowFlags[r:Qt::WindowFlags][specs:const]
                  - function: setWindowFlag[r:void][p:Qt::WindowType;bool=true][v:5.9.0]
                  - function: overrideWindowFlags[r:void][p:Qt::WindowFlags]
                  - function: windowType[r:Qt::WindowType][specs:const]
                  - function: find[r:QWidget *][p:WId][specs:static]
                  - function: childAt[r:QWidget *][p:int;int][specs:const]
                  - function: childAt[r:QWidget *][p:const QPoint &][specs:const]
                  - function: setAttribute[r:void][p:Qt::WidgetAttribute;bool=true]
                  - function: testAttribute[r:bool][p:Qt::WidgetAttribute][specs:const]
                  - function: paintEngine[r:QPaintEngine *][specs:const]
                  - function: ensurePolished[r:void][specs:const]
                  - function: isAncestorOf[r:bool][p:const QWidget *][specs:const]
                  - function: autoFillBackground[r:bool][specs:const]
                  - function: setAutoFillBackground[r:void][p:bool]
                  - function: backingStore[r:QBackingStore *][specs:const]
                  - function: windowHandle[r:QWindow *][specs:const]
                  - function: createWindowContainer[r:QWidget *][p:QWindow *;QWidget *=(QWidget*)nullptr;Qt::WindowFlags=Qt::WindowFlags()][specs:static]
                  - function: windowTitleChanged[r:void][p:const QString &][binding:signals][v:5.2.0]
                  - function: windowIconChanged[r:void][p:const QIcon &][binding:signals][v:5.2.0]
                  - function: windowIconTextChanged[r:void][p:const QString &][binding:signals]
                  - function: customContextMenuRequested[r:void][p:const QPoint &][binding:signals]
                  - function: inputMethodQuery[r:QVariant][p:Qt::InputMethodQuery][specs:const]
                  - function: inputMethodHints[r:Qt::InputMethodHints][specs:const]
                  - function: setInputMethodHints[r:void][p:Qt::InputMethodHints]
            - function: operator|[r:QFlags<QWidget::RenderFlags::enum_type>][p:QWidget::RenderFlags::enum_type;QWidget::RenderFlags::enum_type]
            - function: operator|[r:QFlags<QWidget::RenderFlags::enum_type>][p:QWidget::RenderFlags::enum_type;QFlags<QWidget::RenderFlags::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:QWidget::RenderFlags::enum_type;int]
            - function: operator<<[r:QDebug][p:QDebug;const QWidget *]
            - statement: void register_newwidget_file(script::Namespace n); // defined in newwidget.cpp
            - statement: register_newwidget_file(widgets);
          hincludes: <QWidget>
      - file:
          name: abstractbutton
          elements:
            - class:
                name: QAbstractButton
                base: QWidget
                elements:
                  - destructor: ~QAbstractButton
                  - function: setText[r:void][p:const QString &]
                  - function: text[r:QString][specs:const]
                  - function: setIcon[r:void][p:const QIcon &]
                  - function: icon[r:QIcon][specs:const]
                  - function: iconSize[r:QSize][specs:const]
                  - function: setShortcut[r:void][p:const QKeySequence &]
                  - function: shortcut[r:QKeySequence][specs:const]
                  - function: setCheckable[r:void][p:bool]
                  - function: isCheckable[r:bool][specs:const]
                  - function: isChecked[r:bool][specs:const]
                  - function: setDown[r:void][p:bool]
                  - function: isDown[r:bool][specs:const]
                  - function: setAutoRepeat[r:void][p:bool]
                  - function: autoRepeat[r:bool][specs:const]
                  - function: setAutoRepeatDelay[r:void][p:int]
                  - function: autoRepeatDelay[r:int][specs:const]
                  - function: setAutoRepeatInterval[r:void][p:int]
                  - function: autoRepeatInterval[r:int][specs:const]
                  - function: setAutoExclusive[r:void][p:bool]
                  - function: autoExclusive[r:bool][specs:const]
                  - function: group[r:QButtonGroup *][specs:const]
                  - function: setIconSize[r:void][p:const QSize &]
                  - function: animateClick[r:void][p:int=100]
                  - function: click[r:void]
                  - function: toggle[r:void]
                  - function: setChecked[r:void][p:bool]
                  - function: pressed[r:void][binding:signals]
                  - function: released[r:void][binding:signals]
                  - function: clicked[r:void][p:bool][binding:signals]
                  - function: toggled[r:void][p:bool][binding:signals]
          hincludes: <QAbstractButton>
      - file:
          name: pushbutton
          elements:
            - class:
                name: QPushButton
                base: QAbstractButton
                elements:
                  - constructor: QPushButton[p:QWidget *=(QWidget*)nullptr]
                  - constructor: QPushButton[p:const QString &;QWidget *=(QWidget*)nullptr]
                  - constructor: QPushButton[p:const QIcon &;const QString &;QWidget *=(QWidget*)nullptr]
                  - destructor: ~QPushButton
                  - function: sizeHint[r:QSize][specs:const]
                  - function: minimumSizeHint[r:QSize][specs:const]
                  - function: autoDefault[r:bool][specs:const]
                  - function: setAutoDefault[r:void][p:bool]
                  - function: isDefault[r:bool][specs:const]
                  - function: setDefault[r:void][p:bool]
                  - function: setMenu[r:void][p:QMenu *]
                  - function: menu[r:QMenu *][specs:const]
                  - function: setFlat[r:void][p:bool]
                  - function: isFlat[r:bool][specs:const]
                  - function: showMenu[r:void]
                  - function: clicked[r:void][binding:signals]
            - statement: void register_newpushbutton_file(script::Namespace n); // defined in newpushbutton.cpp
            - statement: register_newpushbutton_file(widgets);
          hincludes: <QPushButton>
      - file:
          name: frame
          elements:
            - class:
                name: QFrame
                base: QWidget
                elements:
                  - constructor: QFrame[p:QWidget *=(QWidget*)nullptr;Qt::WindowFlags=Qt::WindowFlags()]
                  - destructor: ~QFrame
                  - function: frameStyle[r:int][specs:const]
                  - function: setFrameStyle[r:void][p:int]
                  - function: frameWidth[r:int][specs:const]
                  - function: sizeHint[r:QSize][specs:const]
                  - enum:
                      name: Shape
                      enumerators:
                        - NoFrame
                        - Box
                        - Panel
                        - WinPanel
                        - HLine
                        - VLine
                        - StyledPanel
                  - enum:
                      name: Shadow
                      enumerators:
                        - Plain
                        - Raised
                        - Sunken
                  - enum:
                      name: StyleMask
                      enumerators:
                        - Shadow_Mask
                        - Shape_Mask
                  - function: frameShape[r:QFrame::Shape][specs:const]
                  - function: setFrameShape[r:void][p:QFrame::Shape]
                  - function: frameShadow[r:QFrame::Shadow][specs:const]
                  - function: setFrameShadow[r:void][p:QFrame::Shadow]
                  - function: lineWidth[r:int][specs:const]
                  - function: setLineWidth[r:void][p:int]
                  - function: midLineWidth[r:int][specs:const]
                  - function: setMidLineWidth[r:void][p:int]
                  - function: frameRect[r:QRect][specs:const]
                  - function: setFrameRect[r:void][p:const QRect &]
          hincludes: <QFrame>
      - file:
          name: label
          elements:
            - class:
                name: QLabel
                base: QFrame
                elements:
                  - constructor: QLabel[p:QWidget *=(QWidget*)nullptr;Qt::WindowFlags=Qt::WindowFlags()]
                  - constructor: QLabel[p:const QString &;QWidget *=(QWidget*)nullptr;Qt::WindowFlags=Qt::WindowFlags()]
                  - destructor: ~QLabel
                  - function: text[r:QString][specs:const]
                  - function: pixmap[r:const QPixmap *][specs:const]
                  - function: picture[r:const QPicture *][specs:const]
                  - function: movie[r:QMovie *][specs:const]
                  - function: textFormat[r:Qt::TextFormat][specs:const]
                  - function: setTextFormat[r:void][p:Qt::TextFormat]
                  - function: alignment[r:Qt::Alignment][specs:const]
                  - function: setAlignment[r:void][p:Qt::Alignment]
                  - function: setWordWrap[r:void][p:bool]
                  - function: wordWrap[r:bool][specs:const]
                  - function: indent[r:int][specs:const]
                  - function: setIndent[r:void][p:int]
                  - function: margin[r:int][specs:const]
                  - function: setMargin[r:void][p:int]
                  - function: hasScaledContents[r:bool][specs:const]
                  - function: setScaledContents[r:void][p:bool]
                  - function: sizeHint[r:QSize][specs:const]
                  - function: minimumSizeHint[r:QSize][specs:const]
                  - function: setBuddy[r:void][p:QWidget *]
                  - function: buddy[r:QWidget *][specs:const]
                  - function: heightForWidth[r:int][p:int][specs:const]
                  - function: openExternalLinks[r:bool][specs:const]
                  - function: setOpenExternalLinks[r:void][p:bool]
                  - function: setTextInteractionFlags[r:void][p:Qt::TextInteractionFlags]
                  - function: textInteractionFlags[r:Qt::TextInteractionFlags][specs:const]
                  - function: setSelection[r:void][p:int;int]
                  - function: hasSelectedText[r:bool][specs:const]
                  - function: selectedText[r:QString][specs:const]
                  - function: selectionStart[r:int][specs:const]
                  - function: setText[r:void][p:const QString &]
                  - function: setPixmap[r:void][p:const QPixmap &]
                  - function: setPicture[r:void][p:const QPicture &]
                  - function: setMovie[r:void][p:QMovie *]
                  - function: setNum[r:void][p:int]
                  - function: setNum[r:void][p:double]
                  - function: clear[r:void]
                  - function: linkActivated[r:void][p:const QString &]
                  - function: linkHovered[r:void][p:const QString &]
            - function: newLabel[r:QLabel&][p:QWidget*][binding:newfunction]
            - function: newLabel[r:QLabel&][p:const QString&;QWidget*][binding:newfunction]
          hincludes: <QLabel>
      - file:
          name: tabwidget
          elements:
            - class:
                name: QTabWidget
                base: QWidget
                elements:
                  - constructor: QTabWidget[p:QWidget *=(QWidget*)nullptr]
                  - destructor: ~QTabWidget
                  - function: addTab[r:int][p:QWidget *;const QString &]
                  - function: addTab[r:int][p:QWidget *;const QIcon &;const QString &]
                  - function: insertTab[r:int][p:int;QWidget *;const QString &]
                  - function: insertTab[r:int][p:int;QWidget *;const QIcon &;const QString &]
                  - function: removeTab[r:void][p:int]
                  - function: isTabEnabled[r:bool][p:int][specs:const]
                  - function: setTabEnabled[r:void][p:int;bool]
                  - function: tabText[r:QString][p:int][specs:const]
                  - function: setTabText[r:void][p:int;const QString &]
                  - function: tabIcon[r:QIcon][p:int][specs:const]
                  - function: setTabIcon[r:void][p:int;const QIcon &]
                  - function: setTabToolTip[r:void][p:int;const QString &]
                  - function: tabToolTip[r:QString][p:int][specs:const]
                  - function: setTabWhatsThis[r:void][p:int;const QString &]
                  - function: tabWhatsThis[r:QString][p:int][specs:const]
                  - function: currentIndex[r:int][specs:const]
                  - function: currentWidget[r:QWidget *][specs:const]
                  - function: widget[r:QWidget *][p:int][specs:const]
                  - function: indexOf[r:int][p:QWidget *][specs:const]
                  - function: count[r:int][specs:const]
                  - enum:
                      name: TabPosition
                      enumerators:
                        - North
                        - South
                        - West
                        - East
                  - function: tabPosition[r:QTabWidget::TabPosition][specs:const]
                  - function: setTabPosition[r:void][p:QTabWidget::TabPosition]
                  - function: tabsClosable[r:bool][specs:const]
                  - function: setTabsClosable[r:void][p:bool]
                  - function: isMovable[r:bool][specs:const]
                  - function: setMovable[r:void][p:bool]
                  - enum:
                      name: TabShape
                      enumerators:
                        - Rounded
                        - Triangular
                  - function: tabShape[r:QTabWidget::TabShape][specs:const]
                  - function: setTabShape[r:void][p:QTabWidget::TabShape]
                  - function: sizeHint[r:QSize][specs:const]
                  - function: minimumSizeHint[r:QSize][specs:const]
                  - function: heightForWidth[r:int][p:int][specs:const]
                  - function: hasHeightForWidth[r:bool][specs:const]
                  - function: setCornerWidget[r:void][p:QWidget *;Qt::Corner=Qt::TopRightCorner]
                  - function: cornerWidget[r:QWidget *][p:Qt::Corner=Qt::TopRightCorner][specs:const]
                  - function: elideMode[r:Qt::TextElideMode][specs:const]
                  - function: setElideMode[r:void][p:Qt::TextElideMode]
                  - function: iconSize[r:QSize][specs:const]
                  - function: setIconSize[r:void][p:const QSize &]
                  - function: usesScrollButtons[r:bool][specs:const]
                  - function: setUsesScrollButtons[r:void][p:bool]
                  - function: documentMode[r:bool][specs:const]
                  - function: setDocumentMode[r:void][p:bool]
                  - function: tabBarAutoHide[r:bool][specs:const][v:5.4.0]
                  - function: setTabBarAutoHide[r:void][p:bool][v:5.4.0]
                  - function: clear[r:void]
                  - function: tabBar[r:QTabBar *][specs:const]
                  - function: setCurrentIndex[r:void][p:int]
                  - function: setCurrentWidget[r:void][p:QWidget *]
                  - function: currentChanged[r:void][p:int][binding:signals]
                  - function: tabCloseRequested[r:void][p:int][binding:signals]
                  - function: tabBarClicked[r:void][p:int][binding:signals][v:5.2.0]
                  - function: tabBarDoubleClicked[r:void][p:int][binding:signals][v:5.2.0]
            - function: newTabWidget[r:QTabWidget&][p:QWidget*][binding:newfunction]
          hincludes: <QTabWidget>
      - file:
          name: lineedit
          checkstate: partially-checked
          elements:
            - class:
                name: QLineEdit
                base: QWidget
                checkstate: partially-checked
                elements:
                  - enum:
                      name: ActionPosition
                      enumerators:
                        - LeadingPosition
                        - TrailingPosition
                  - constructor: QLineEdit[p:QWidget *=(QWidget*)nullptr]
                  - constructor: QLineEdit[p:const QString &;QWidget *=(QWidget*)nullptr]
                  - destructor: ~QLineEdit
                  - function: text[r:QString][specs:const]
                  - function: displayText[r:QString][specs:const]
                  - function: placeholderText[r:QString][specs:const]
                  - function: setPlaceholderText[r:void][p:const QString &]
                  - function: maxLength[r:int][specs:const]
                  - function: setMaxLength[r:void][p:int]
                  - function: setFrame[r:void][p:bool]
                  - function: hasFrame[r:bool][specs:const]
                  - function: setClearButtonEnabled[r:void][p:bool]
                  - function: isClearButtonEnabled[r:bool][specs:const]
                  - enum:
                      name: EchoMode
                      enumerators:
                        - Normal
                        - NoEcho
                        - Password
                        - PasswordEchoOnEdit
                  - function: echoMode[r:QLineEdit::EchoMode][specs:const]
                  - function: setEchoMode[r:void][p:QLineEdit::EchoMode]
                  - function: isReadOnly[r:bool][specs:const]
                  - function: setReadOnly[r:void][p:bool]
                  - function: setValidator[r:void][p:const QValidator *]
                  - function: validator[r:const QValidator *][specs:const]
                  - function: setCompleter[r:void][p:QCompleter *]
                  - function: completer[r:QCompleter *][specs:const]
                  - function: sizeHint[r:QSize][specs:const]
                  - function: minimumSizeHint[r:QSize][specs:const]
                  - function: cursorPosition[r:int][specs:const]
                  - function: setCursorPosition[r:void][p:int]
                  - function: cursorPositionAt[r:int][p:const QPoint &]
                  - function: setAlignment[r:void][p:Qt::Alignment]
                  - function: alignment[r:Qt::Alignment][specs:const]
                  - function: cursorForward[r:void][p:bool;int=1]
                  - function: cursorBackward[r:void][p:bool;int=1]
                  - function: cursorWordForward[r:void][p:bool]
                  - function: cursorWordBackward[r:void][p:bool]
                  - function: backspace[r:void]
                  - function: del[r:void]
                  - function: home[r:void][p:bool]
                  - function: end[r:void][p:bool]
                  - function: isModified[r:bool][specs:const]
                  - function: setModified[r:void][p:bool]
                  - function: setSelection[r:void][p:int;int]
                  - function: hasSelectedText[r:bool][specs:const]
                  - function: selectedText[r:QString][specs:const]
                  - function: selectionStart[r:int][specs:const]
                  - function: selectionEnd[r:int][specs:const][v:5.10.0]
                  - function: selectionLength[r:int][specs:const][v:5.10.0]
                  - function: isUndoAvailable[r:bool][specs:const]
                  - function: isRedoAvailable[r:bool][specs:const]
                  - function: setDragEnabled[r:void][p:bool]
                  - function: dragEnabled[r:bool][specs:const]
                  - function: setCursorMoveStyle[r:void][p:Qt::CursorMoveStyle]
                  - function: cursorMoveStyle[r:Qt::CursorMoveStyle][specs:const]
                  - function: inputMask[r:QString][specs:const]
                  - function: setInputMask[r:void][p:const QString &]
                  - function: hasAcceptableInput[r:bool][specs:const]
                  - function: setTextMargins[r:void][p:int;int;int;int]
                  - function: setTextMargins[r:void][p:const QMargins &]
                  - function: getTextMargins[r:void][p:int *;int *;int *;int *][specs:const]
                  - function: textMargins[r:QMargins][specs:const]
                  - function: addAction[r:void][p:QAction *;QLineEdit::ActionPosition][v:5.2.0]
                  - function: addAction[r:QAction *][p:const QIcon &;QLineEdit::ActionPosition][v:5.2.0]
                  - function: setText[r:void][p:const QString &]
                  - function: clear[r:void]
                  - function: selectAll[r:void]
                  - function: undo[r:void]
                  - function: redo[r:void]
                  - function: cut[r:void]
                  - function: copy[r:void][specs:const]
                  - function: paste[r:void]
                  - function: deselect[r:void]
                  - function: insert[r:void][p:const QString &]
                  - function: createStandardContextMenu[r:QMenu *]
                  - function: textChanged[r:void][p:const QString &][binding:signals]
                  - function: textEdited[r:void][p:const QString &][binding:signals]
                  - function: cursorPositionChanged[r:void][p:int;int][binding:signals]
                  - function: returnPressed[r:void][binding:signals]
                  - function: editingFinished[r:void][binding:signals]
                  - function: selectionChanged[r:void][binding:signals]
                  - function: inputMethodQuery[r:QVariant][p:Qt::InputMethodQuery][specs:const]
                  - function: inputMethodQuery[r:QVariant][p:Qt::InputMethodQuery;QVariant][specs:const]
                  - function: event[r:bool][p:QEvent *]
            - function: newLineEdit[r:QLineEdit&][p:QWidget*][binding:newfunction]
            - function: newLineEdit[r:QLineEdit&][p:const QString &;QWidget*][binding:newfunction]
          hincludes: <QLineEdit>
      - file:
          name: groupbox
          elements:
            - class:
                name: QGroupBox
                base: QWidget
                elements:
                  - constructor: QGroupBox[p:QWidget *=(QWidget*)nullptr]
                  - constructor: QGroupBox[p:const QString &;QWidget *=(QWidget*)nullptr]
                  - destructor: ~QGroupBox
                  - function: title[r:QString][specs:const]
                  - function: setTitle[r:void][p:const QString &]
                  - function: alignment[r:Qt::Alignment][specs:const]
                  - function: setAlignment[r:void][p:int]
                  - function: minimumSizeHint[r:QSize][specs:const]
                  - function: isFlat[r:bool][specs:const]
                  - function: setFlat[r:void][p:bool]
                  - function: isCheckable[r:bool][specs:const]
                  - function: setCheckable[r:void][p:bool]
                  - function: isChecked[r:bool][specs:const]
                  - function: setChecked[r:void][p:bool]
                  - function: clicked[r:void][p:bool][binding:signals]
                  - function: toggled[r:void][p:bool][binding:signals]
            - function: newGroupBox[r:QGroupBox&][p:QWidget*][binding:newfunction]
            - function: newGroupBox[r:QGroupBox&][p:const QString &;QWidget*][binding:newfunction]
          hincludes: <QGroupBox>
      - file:
          name: combobox
          elements:
            - class:
                name: QComboBox
                base: QWidget
                elements:
                  - constructor: QComboBox[p:QWidget *=(QWidget*)nullptr]
                  - destructor: ~QComboBox
                  - function: maxVisibleItems[r:int][specs:const]
                  - function: setMaxVisibleItems[r:void][p:int]
                  - function: count[r:int][specs:const]
                  - function: setMaxCount[r:void][p:int]
                  - function: maxCount[r:int][specs:const]
                  - function: autoCompletion[r:bool][specs:const]
                  - function: setAutoCompletion[r:void][p:bool]
                  - function: autoCompletionCaseSensitivity[r:Qt::CaseSensitivity][specs:const]
                  - function: setAutoCompletionCaseSensitivity[r:void][p:Qt::CaseSensitivity]
                  - function: duplicatesEnabled[r:bool][specs:const]
                  - function: setDuplicatesEnabled[r:void][p:bool]
                  - function: setFrame[r:void][p:bool]
                  - function: hasFrame[r:bool][specs:const]
                  - function: findText[r:int][p:const QString &;Qt::MatchFlags=static_cast<Qt::MatchFlags>(Qt::MatchExactly | Qt::MatchCaseSensitive)][specs:const]
                  - function: findData[r:int][p:const QVariant &;int;Qt::MatchFlags=static_cast<Qt::MatchFlags>(Qt::MatchExactly | Qt::MatchCaseSensitive)][specs:const]
                  - enum:
                      name: InsertPolicy
                      enumerators:
                        - NoInsert
                        - InsertAtTop
                        - InsertAtCurrent
                        - InsertAtBottom
                        - InsertAfterCurrent
                        - InsertBeforeCurrent
                        - InsertAlphabetically
                  - function: insertPolicy[r:QComboBox::InsertPolicy][specs:const]
                  - function: setInsertPolicy[r:void][p:QComboBox::InsertPolicy]
                  - enum:
                      name: SizeAdjustPolicy
                      enumerators:
                        - AdjustToContents
                        - AdjustToContentsOnFirstShow
                        - AdjustToMinimumContentsLength
                        - AdjustToMinimumContentsLengthWithIcon
                  - function: sizeAdjustPolicy[r:QComboBox::SizeAdjustPolicy][specs:const]
                  - function: setSizeAdjustPolicy[r:void][p:QComboBox::SizeAdjustPolicy]
                  - function: minimumContentsLength[r:int][specs:const]
                  - function: setMinimumContentsLength[r:void][p:int]
                  - function: iconSize[r:QSize][specs:const]
                  - function: setIconSize[r:void][p:const QSize &]
                  - function: isEditable[r:bool][specs:const]
                  - function: setEditable[r:void][p:bool]
                  - function: setLineEdit[r:void][p:QLineEdit *]
                  - function: lineEdit[r:QLineEdit *][specs:const]
                  - function: setValidator[r:void][p:const QValidator *]
                  - function: validator[r:const QValidator *][specs:const]
                  - function: setCompleter[r:void][p:QCompleter *]
                  - function: completer[r:QCompleter *][specs:const]
                  - function: itemDelegate[r:QAbstractItemDelegate *][specs:const]
                  - function: setItemDelegate[r:void][p:QAbstractItemDelegate *]
                  - function: model[r:QAbstractItemModel *][specs:const]
                  - function: setModel[r:void][p:QAbstractItemModel *]
                  - function: rootModelIndex[r:QModelIndex][specs:const]
                  - function: setRootModelIndex[r:void][p:const QModelIndex &]
                  - function: modelColumn[r:int][specs:const]
                  - function: setModelColumn[r:void][p:int]
                  - function: currentIndex[r:int][specs:const]
                  - function: currentText[r:QString][specs:const]
                  - function: currentData[r:QVariant][p:int=int(Qt::UserRole)][specs:const][v:5.2.0]
                  - function: itemText[r:QString][p:int][specs:const]
                  - function: itemIcon[r:QIcon][p:int][specs:const]
                  - function: itemData[r:QVariant][p:int;int=int(Qt::UserRole)][specs:const]
                  - function: addItem[r:void][p:const QString &;const QVariant &=QVariant()]
                  - function: addItem[r:void][p:const QIcon &;const QString &;const QVariant &=QVariant()]
                  - function: addItems[r:void][p:const QStringList &]
                  - function: insertItem[r:void][p:int;const QString &;const QVariant &=QVariant()]
                  - function: insertItem[r:void][p:int;const QIcon &;const QString &;const QVariant &=QVariant()]
                  - function: insertItems[r:void][p:int;const QStringList &]
                  - function: insertSeparator[r:void][p:int]
                  - function: removeItem[r:void][p:int]
                  - function: setItemText[r:void][p:int;const QString &]
                  - function: setItemIcon[r:void][p:int;const QIcon &]
                  - function: setItemData[r:void][p:int;const QVariant &;int=int(Qt::UserRole)]
                  - function: view[r:QAbstractItemView *][specs:const]
                  - function: setView[r:void][p:QAbstractItemView *]
                  - function: sizeHint[r:QSize][specs:const]
                  - function: minimumSizeHint[r:QSize][specs:const]
                  - function: showPopup[r:void]
                  - function: hidePopup[r:void]
                  - function: event[r:bool][p:QEvent *]
                  - function: inputMethodQuery[r:QVariant][p:Qt::InputMethodQuery][specs:const]
                  - function: inputMethodQuery[r:QVariant][p:Qt::InputMethodQuery;const QVariant &][specs:const]
                  - function: clear[r:void]
                  - function: clearEditText[r:void]
                  - function: setEditText[r:void][p:const QString &]
                  - function: setCurrentIndex[r:void][p:int]
                  - function: setCurrentText[r:void][p:const QString &]
                  - function: editTextChanged[r:void][p:const QString &][binding:signals]
                  - function: activated[r:void][p:int][binding:signals]
                  - function: activated[r:void][p:const QString &][binding:signals]
                  - function: highlighted[r:void][p:int][binding:signals]
                  - function: highlighted[r:void][p:const QString &][binding:signals]
                  - function: currentIndexChanged[r:void][p:int][binding:signals]
                  - function: currentIndexChanged[r:void][p:const QString &][binding:signals]
                  - function: currentTextChanged[r:void][p:const QString &][binding:signals]
            - function: newComboBox[r:QComboBox&][p:QWidget*][binding:newfunction]
          hincludes: <QComboBox>
      - file:
          name: fontcombobox
          elements:
            - class:
                name: QFontComboBox
                base: QComboBox
                elements:
                  - constructor: QFontComboBox[p:QWidget *=(QWidget*)nullptr]
                  - destructor: ~QFontComboBox
                  - function: setWritingSystem[r:void][p:QFontDatabase::WritingSystem]
                  - function: writingSystem[r:QFontDatabase::WritingSystem][specs:const]
                  - enum:
                      name: FontFilter
                      enumerators:
                        - AllFonts
                        - ScalableFonts
                        - NonScalableFonts
                        - MonospacedFonts
                        - ProportionalFonts
                  - function: setFontFilters[r:void][p:QFontComboBox::FontFilters]
                  - function: fontFilters[r:QFontComboBox::FontFilters][specs:const]
                  - function: currentFont[r:QFont][specs:const]
                  - function: sizeHint[r:QSize][specs:const]
                  - function: setCurrentFont[r:void][p:const QFont &]
                  - function: currentFontChanged[r:void][p:const QFont &][binding:signals]
            - function: operator|[r:QFlags<QFontComboBox::FontFilters::enum_type>][p:QFontComboBox::FontFilters::enum_type;QFontComboBox::FontFilters::enum_type]
            - function: operator|[r:QFlags<QFontComboBox::FontFilters::enum_type>][p:QFontComboBox::FontFilters::enum_type;QFlags<QFontComboBox::FontFilters::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:QFontComboBox::FontFilters::enum_type;int]
            - function: newFontComboBox[r:QFontComboBox&][p:QWidget*][binding:newfunction]
          hincludes: <QFontComboBox>
      - file:
          name: abstractslider
          elements:
            - class:
                name: QAbstractSlider
                base: QWidget
                elements:
                  - constructor: QAbstractSlider[p:QWidget *=(QWidget*)nullptr]
                  - destructor: ~QAbstractSlider
                  - function: orientation[r:Qt::Orientation][specs:const]
                  - function: setMinimum[r:void][p:int]
                  - function: minimum[r:int][specs:const]
                  - function: setMaximum[r:void][p:int]
                  - function: maximum[r:int][specs:const]
                  - function: setSingleStep[r:void][p:int]
                  - function: singleStep[r:int][specs:const]
                  - function: setPageStep[r:void][p:int]
                  - function: pageStep[r:int][specs:const]
                  - function: setTracking[r:void][p:bool]
                  - function: hasTracking[r:bool][specs:const]
                  - function: setSliderDown[r:void][p:bool]
                  - function: isSliderDown[r:bool][specs:const]
                  - function: setSliderPosition[r:void][p:int]
                  - function: sliderPosition[r:int][specs:const]
                  - function: setInvertedAppearance[r:void][p:bool]
                  - function: invertedAppearance[r:bool][specs:const]
                  - function: setInvertedControls[r:void][p:bool]
                  - function: invertedControls[r:bool][specs:const]
                  - enum:
                      name: SliderAction
                      enumerators:
                        - SliderNoAction
                        - SliderSingleStepAdd
                        - SliderSingleStepSub
                        - SliderPageStepAdd
                        - SliderPageStepSub
                        - SliderToMinimum
                        - SliderToMaximum
                        - SliderMove
                  - function: value[r:int][specs:const]
                  - function: triggerAction[r:void][p:QAbstractSlider::SliderAction]
                  - function: setValue[r:void][p:int]
                  - function: setOrientation[r:void][p:Qt::Orientation]
                  - function: setRange[r:void][p:int;int]
                  - function: valueChanged[r:void][p:int][binding:signals]
                  - function: sliderPressed[r:void][binding:signals]
                  - function: sliderMoved[r:void][p:int][binding:signals]
                  - function: sliderReleased[r:void][binding:signals]
                  - function: rangeChanged[r:void][p:int;int][binding:signals]
                  - function: actionTriggered[r:void][p:int][binding:signals]
          hincludes: <QAbstractSlider>
      - file:
          name: slider
          elements:
            - class:
                name: QSlider
                base: QAbstractSlider
                elements:
                  - enum:
                      name: TickPosition
                      enumerators:
                        - NoTicks
                        - TicksAbove
                        - TicksLeft
                        - TicksBelow
                        - TicksRight
                        - TicksBothSides
                  - constructor: QSlider[p:QWidget *=(QWidget*)nullptr]
                  - constructor: QSlider[p:Qt::Orientation;QWidget *]
                  - destructor: ~QSlider
                  - function: setTickPosition[r:void][p:QSlider::TickPosition]
                  - function: tickPosition[r:QSlider::TickPosition][specs:const]
                  - function: setTickInterval[r:void][p:int]
                  - function: tickInterval[r:int][specs:const]
            - function: newSlider[r:QSlider&][p:QWidget*][binding:newfunction]
            - function: newSlider[r:QSlider&][p:Qt::Orientation;QWidget*][binding:newfunction]
          hincludes: <QSlider>
      - file:
          name: scrollbar
          elements:
            - class:
                name: QScrollBar
                base: QAbstractSlider
                elements:
                  - constructor: QScrollBar[p:QWidget *=(QWidget*)nullptr]
                  - constructor: QScrollBar[p:Qt::Orientation;QWidget *=(QWidget*)nullptr]
                  - destructor: ~QScrollBar
            - function: newScrollBar[r:QScrollBar&][p:QWidget*=(QWidget*)nullptr][binding:newfunction]
            - function: newScrollBar[r:QScrollBar&][p:Qt::Orientation;QWidget*=(QWidget*)nullptr][binding:newfunction]
          hincludes: <QScrollBar>
      - file:
          name: dial
          elements:
            - class:
                name: QDial
                base: QAbstractSlider
                elements:
                  - constructor: QDial[p:QWidget *=(QWidget*)nullptr]
                  - destructor: ~QDial
                  - function: wrapping[r:bool][specs:const]
                  - function: notchSize[r:int][specs:const]
                  - function: setNotchTarget[r:void][p:double]
                  - function: notchTarget[r:qreal][specs:const]
                  - function: notchesVisible[r:bool][specs:const]
                  - function: setNotchesVisible[r:void][p:bool]
                  - function: setWrapping[r:void][p:bool]
            - function: newDial[r:QDial&][p:QWidget*=(QWidget*)nullptr][binding:newfunction]
          hincludes: <QDial>
      - file:
          name: abstractspinbox
          elements:
            - class:
                name: QAbstractSpinBox
                base: QWidget
                elements:
                  - constructor: QAbstractSpinBox[p:QWidget *=(QWidget*)nullptr]
                  - destructor: ~QAbstractSpinBox
                  - enum:
                      name: StepEnabledFlag
                      enumerators:
                        - StepNone
                        - StepUpEnabled
                        - StepDownEnabled
                  - enum:
                      name: ButtonSymbols
                      enumerators:
                        - UpDownArrows
                        - PlusMinus
                        - NoButtons
                  - function: buttonSymbols[r:QAbstractSpinBox::ButtonSymbols][specs:const]
                  - function: setButtonSymbols[r:void][p:QAbstractSpinBox::ButtonSymbols]
                  - enum:
                      name: CorrectionMode
                      enumerators:
                        - CorrectToPreviousValue
                        - CorrectToNearestValue
                  - function: setCorrectionMode[r:void][p:QAbstractSpinBox::CorrectionMode]
                  - function: correctionMode[r:QAbstractSpinBox::CorrectionMode][specs:const]
                  - function: hasAcceptableInput[r:bool][specs:const]
                  - function: text[r:QString][specs:const]
                  - function: specialValueText[r:QString][specs:const]
                  - function: setSpecialValueText[r:void][p:const QString &]
                  - function: wrapping[r:bool][specs:const]
                  - function: setWrapping[r:void][p:bool]
                  - function: setReadOnly[r:void][p:bool]
                  - function: isReadOnly[r:bool][specs:const]
                  - function: setKeyboardTracking[r:void][p:bool]
                  - function: keyboardTracking[r:bool][specs:const]
                  - function: setAlignment[r:void][p:Qt::Alignment]
                  - function: alignment[r:Qt::Alignment][specs:const]
                  - function: setFrame[r:void][p:bool]
                  - function: hasFrame[r:bool][specs:const]
                  - function: setAccelerated[r:void][p:bool]
                  - function: isAccelerated[r:bool][specs:const]
                  - function: setGroupSeparatorShown[r:void][p:bool][v:5.3.0]
                  - function: isGroupSeparatorShown[r:bool][specs:const][v:5.3.0]
                  - function: sizeHint[r:QSize][specs:const]
                  - function: minimumSizeHint[r:QSize][specs:const]
                  - function: interpretText[r:void]
                  - function: event[r:bool][p:QEvent *]
                  - function: inputMethodQuery[r:QVariant][p:Qt::InputMethodQuery][specs:const]
                  - function: validate[r:QValidator::State][p:QString &;int &][specs:const]
                  - function: fixup[r:void][p:QString &][specs:const]
                  - function: stepBy[r:void][p:int]
                  - function: stepUp[r:void]
                  - function: stepDown[r:void]
                  - function: selectAll[r:void]
                  - function: clear[r:void]
                  - function: editingFinished[r:void][binding:signals]
            - function: operator|[r:QFlags<QAbstractSpinBox::StepEnabled::enum_type>][p:QAbstractSpinBox::StepEnabled::enum_type;QAbstractSpinBox::StepEnabled::enum_type]
            - function: operator|[r:QFlags<QAbstractSpinBox::StepEnabled::enum_type>][p:QAbstractSpinBox::StepEnabled::enum_type;QFlags<QAbstractSpinBox::StepEnabled::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:QAbstractSpinBox::StepEnabled::enum_type;int]
          hincludes: <QAbstractSpinBox>
      - file:
          name: spinbox
          elements:
            - class:
                name: QSpinBox
                base: QAbstractSpinBox
                elements:
                  - constructor: QSpinBox[p:QWidget *=(QWidget*)nullptr]
                  - destructor: ~QSpinBox
                  - function: value[r:int][specs:const]
                  - function: prefix[r:QString][specs:const]
                  - function: setPrefix[r:void][p:const QString &]
                  - function: suffix[r:QString][specs:const]
                  - function: setSuffix[r:void][p:const QString &]
                  - function: cleanText[r:QString][specs:const]
                  - function: singleStep[r:int][specs:const]
                  - function: setSingleStep[r:void][p:int]
                  - function: minimum[r:int][specs:const]
                  - function: setMinimum[r:void][p:int]
                  - function: maximum[r:int][specs:const]
                  - function: setMaximum[r:void][p:int]
                  - function: setRange[r:void][p:int;int]
                  - function: displayIntegerBase[r:int][specs:const][v:5.2.0]
                  - function: setDisplayIntegerBase[r:void][p:int][v:5.2.0]
                  - function: setValue[r:void][p:int]
                  - function: valueChanged[r:void][p:int][binding:signals]
                  - function: valueChanged[r:void][p:const QString &][binding:signals]
            - class:
                name: QDoubleSpinBox
                base: QAbstractSpinBox
                elements:
                  - constructor: QDoubleSpinBox[p:QWidget *]
                  - destructor: ~QDoubleSpinBox
                  - function: value[r:double][specs:const]
                  - function: prefix[r:QString][specs:const]
                  - function: setPrefix[r:void][p:const QString &]
                  - function: suffix[r:QString][specs:const]
                  - function: setSuffix[r:void][p:const QString &]
                  - function: cleanText[r:QString][specs:const]
                  - function: singleStep[r:double][specs:const]
                  - function: setSingleStep[r:void][p:double]
                  - function: minimum[r:double][specs:const]
                  - function: setMinimum[r:void][p:double]
                  - function: maximum[r:double][specs:const]
                  - function: setMaximum[r:void][p:double]
                  - function: setRange[r:void][p:double;double]
                  - function: decimals[r:int][specs:const]
                  - function: setDecimals[r:void][p:int]
                  - function: validate[r:QValidator::State][p:QString &;int &][specs:const]
                  - function: valueFromText[r:double][p:const QString &][specs:const]
                  - function: textFromValue[r:QString][p:double][specs:const]
                  - function: fixup[r:void][p:QString &][specs:const]
                  - function: setValue[r:void][p:double]
                  - function: valueChanged[r:void][p:double][binding:signals]
                  - function: valueChanged[r:void][p:const QString &][binding:signals]
            - function: newSpinBox[r:QSpinBox&][p:QWidget*][binding:newfunction]
            - function: newDoubleSpinBox[r:QDoubleSpinBox&][p:QWidget*][binding:newfunction]
          hincludes: <QSpinBox>
      - file:
          name: datetimeedit
          elements:
            - class:
                name: QDateTimeEdit
                base: QAbstractSpinBox
                elements:
                  - enum:
                      name: Section
                      enumerators:
                        - NoSection
                        - AmPmSection
                        - MSecSection
                        - SecondSection
                        - MinuteSection
                        - HourSection
                        - DaySection
                        - MonthSection
                        - YearSection
                        - TimeSections_Mask
                        - DateSections_Mask
                  - constructor: QDateTimeEdit[p:QWidget *=(QWidget*)nullptr]
                  - constructor: QDateTimeEdit[p:const QDateTime &;QWidget *=(QWidget*)nullptr]
                  - constructor: QDateTimeEdit[p:const QDate &;QWidget *=(QWidget*)nullptr]
                  - constructor: QDateTimeEdit[p:const QTime &;QWidget *=(QWidget*)nullptr]
                  - destructor: ~QDateTimeEdit
                  - function: dateTime[r:QDateTime][specs:const]
                  - function: date[r:QDate][specs:const]
                  - function: time[r:QTime][specs:const]
                  - function: minimumDateTime[r:QDateTime][specs:const]
                  - function: clearMinimumDateTime[r:void]
                  - function: setMinimumDateTime[r:void][p:const QDateTime &]
                  - function: maximumDateTime[r:QDateTime][specs:const]
                  - function: clearMaximumDateTime[r:void]
                  - function: setMaximumDateTime[r:void][p:const QDateTime &]
                  - function: setDateTimeRange[r:void][p:const QDateTime &;const QDateTime &]
                  - function: minimumDate[r:QDate][specs:const]
                  - function: setMinimumDate[r:void][p:const QDate &]
                  - function: clearMinimumDate[r:void]
                  - function: maximumDate[r:QDate][specs:const]
                  - function: setMaximumDate[r:void][p:const QDate &]
                  - function: clearMaximumDate[r:void]
                  - function: setDateRange[r:void][p:const QDate &;const QDate &]
                  - function: minimumTime[r:QTime][specs:const]
                  - function: setMinimumTime[r:void][p:const QTime &]
                  - function: clearMinimumTime[r:void]
                  - function: maximumTime[r:QTime][specs:const]
                  - function: setMaximumTime[r:void][p:const QTime &]
                  - function: clearMaximumTime[r:void]
                  - function: setTimeRange[r:void][p:const QTime &;const QTime &]
                  - function: displayedSections[r:QDateTimeEdit::Sections][specs:const]
                  - function: currentSection[r:QDateTimeEdit::Section][specs:const]
                  - function: sectionAt[r:QDateTimeEdit::Section][p:int][specs:const]
                  - function: setCurrentSection[r:void][p:QDateTimeEdit::Section]
                  - function: currentSectionIndex[r:int][specs:const]
                  - function: setCurrentSectionIndex[r:void][p:int]
                  - function: calendarWidget[r:QCalendarWidget *][specs:const]
                  - function: setCalendarWidget[r:void][p:QCalendarWidget *]
                  - function: sectionCount[r:int][specs:const]
                  - function: setSelectedSection[r:void][p:QDateTimeEdit::Section]
                  - function: sectionText[r:QString][p:QDateTimeEdit::Section][specs:const]
                  - function: displayFormat[r:QString][specs:const]
                  - function: setDisplayFormat[r:void][p:const QString &]
                  - function: calendarPopup[r:bool][specs:const]
                  - function: setCalendarPopup[r:void][p:bool]
                  - function: timeSpec[r:Qt::TimeSpec][specs:const]
                  - function: setTimeSpec[r:void][p:Qt::TimeSpec]
                  - function: sizeHint[r:QSize][specs:const]
                  - function: clear[r:void]
                  - function: stepBy[r:void][p:int]
                  - function: event[r:bool][p:QEvent *]
                  - function: dateTimeChanged[r:void][p:const QDateTime &][binding:signals]
                  - function: timeChanged[r:void][p:const QTime &][binding:signals]
                  - function: dateChanged[r:void][p:const QDate &][binding:signals]
                  - function: setDateTime[r:void][p:const QDateTime &]
                  - function: setDate[r:void][p:const QDate &]
                  - function: setTime[r:void][p:const QTime &]
            - class:
                name: QTimeEdit
                base: QDateTimeEdit
                elements:
                  - constructor: QTimeEdit[p:QWidget *]
                  - constructor: QTimeEdit[p:const QTime &;QWidget *]
                  - destructor: ~QTimeEdit
                  - function: userTimeChanged[r:void][p:const QTime &][binding:signals]
            - class:
                name: QDateEdit
                base: QDateTimeEdit
                elements:
                  - constructor: QDateEdit[p:QWidget *]
                  - constructor: QDateEdit[p:const QDate &;QWidget *]
                  - destructor: ~QDateEdit
                  - function: userDateChanged[r:void][p:const QDate &][binding:signals]
            - function: operator|[r:QFlags<QDateTimeEdit::Sections::enum_type>][p:QDateTimeEdit::Sections::enum_type;QDateTimeEdit::Sections::enum_type]
            - function: operator|[r:QFlags<QDateTimeEdit::Sections::enum_type>][p:QDateTimeEdit::Sections::enum_type;QFlags<QDateTimeEdit::Sections::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:QDateTimeEdit::Sections::enum_type;int]
            - function: newDateTimeEdit[r:QDateTimeEdit&][p:QWidget*][binding:newfunction]
            - function: newDateTimeEdit[r:QDateTimeEdit&][p:const QDateTime&;QWidget*][binding:newfunction]
            - function: newDateTimeEdit[r:QDateTimeEdit&][p:const QDate&;QWidget*][binding:newfunction]
            - function: newDateTimeEdit[r:QDateTimeEdit&][p:const QTime&;QWidget*][binding:newfunction]
            - function: newDateEdit[r:QDateEdit&][p:QWidget*][binding:newfunction]
            - function: newDateEdit[r:QDateEdit&][p:const QDate&;QWidget*][binding:newfunction]
            - function: newTimeEdit[r:QTimeEdit&][p:QWidget*][binding:newfunction]
            - function: newTimeEdit[r:QTimeEdit&][p:const QTime&;QWidget*][binding:newfunction]
          hincludes: <QDateTimeEdit>
      - file:
          name: checkbox
          cppincludes: checkbox.inc
          elements:
            - class:
                name: QCheckBox
                base: QAbstractButton
                elements:
                  - constructor: QCheckBox[p:QWidget *=(QWidget*)nullptr]
                  - constructor: QCheckBox[p:const QString &;QWidget *=(QWidget*)nullptr]
                  - destructor: ~QCheckBox
                  - function: setTristate[r:void][p:bool=true]
                  - function: isTristate[r:bool][specs:const]
                  - function: checkState[r:Qt::CheckState][specs:const]
                  - function: setCheckState[r:void][p:Qt::CheckState]
                  - function: stateChanged[r:void][p:int][binding:signals]
            - statement: register_newcheckbox_functions(widgets);
          hincludes: <QCheckBox>
      - file:
          name: radiobutton
          elements:
            - class:
                name: QRadioButton
                base: QAbstractButton
                elements:
                  - constructor: QRadioButton[p:QWidget *=(QWidget*)nullptr]
                  - constructor: QRadioButton[p:const QString &;QWidget *=(QWidget*)nullptr]
                  - destructor: ~QRadioButton
            - function: newRadioButton[r:QRadioButton&][p:QWidget*=(QWidget*)nullptr][binding:newfunction]
            - function: newRadioButton[r:QRadioButton&][p:const QString&;QWidget*=(QWidget*)nullptr][binding:newfunction]
          hincludes: <QRadioButton>
      - file:
          name: toolbutton
          elements:
            - class:
                name: QToolButton
                base: QAbstractButton
                elements:
                  - enum:
                      name: ToolButtonPopupMode
                      enumerators:
                        - DelayedPopup
                        - MenuButtonPopup
                        - InstantPopup
                  - constructor: QToolButton[p:QWidget *=(QWidget*)nullptr]
                  - destructor: ~QToolButton
                  - function: sizeHint[r:QSize][specs:const]
                  - function: minimumSizeHint[r:QSize][specs:const]
                  - function: toolButtonStyle[r:Qt::ToolButtonStyle][specs:const]
                  - function: arrowType[r:Qt::ArrowType][specs:const]
                  - function: setArrowType[r:void][p:Qt::ArrowType]
                  - function: setMenu[r:void][p:QMenu *]
                  - function: menu[r:QMenu *][specs:const]
                  - function: setPopupMode[r:void][p:QToolButton::ToolButtonPopupMode]
                  - function: popupMode[r:QToolButton::ToolButtonPopupMode][specs:const]
                  - function: defaultAction[r:QAction *][specs:const]
                  - function: setAutoRaise[r:void][p:bool]
                  - function: autoRaise[r:bool][specs:const]
                  - function: showMenu[r:void]
                  - function: setToolButtonStyle[r:void][p:Qt::ToolButtonStyle]
                  - function: setDefaultAction[r:void][p:QAction *]
                  - function: triggered[r:void][p:QAction *][binding:signals]
            - function: newToolButton[r:QToolButton&][p:QWidget*=(QWidget*)nullptr][binding:newfunction]
          hincludes: <QToolButton>
      - file:
          name: action
          checkstate: partially-checked
          elements:
            - class:
                name: QAction
                base: QObject
                checkstate: partially-checked
                elements:
                  - enum:
                      name: MenuRole
                      enumerators:
                        - NoRole
                        - TextHeuristicRole
                        - ApplicationSpecificRole
                        - AboutQtRole
                        - AboutRole
                        - PreferencesRole
                        - QuitRole
                  - enum:
                      name: Priority
                      enumerators:
                        - LowPriority
                        - NormalPriority
                        - HighPriority
                  - constructor: QAction[p:QObject *=(QObject*)nullptr]
                  - constructor: QAction[p:const QString &;QObject *=(QObject*)nullptr]
                  - constructor: QAction[p:const QIcon &;const QString &;QObject *=(QObject*)nullptr]
                  - destructor: ~QAction
                  - function: setActionGroup[r:void][p:QActionGroup *]
                  - function: actionGroup[r:QActionGroup *][specs:const]
                  - function: setIcon[r:void][p:const QIcon &]
                  - function: icon[r:QIcon][specs:const]
                  - function: setText[r:void][p:const QString &]
                  - function: text[r:QString][specs:const]
                  - function: setIconText[r:void][p:const QString &]
                  - function: iconText[r:QString][specs:const]
                  - function: setToolTip[r:void][p:const QString &]
                  - function: toolTip[r:QString][specs:const]
                  - function: setStatusTip[r:void][p:const QString &]
                  - function: statusTip[r:QString][specs:const]
                  - function: setWhatsThis[r:void][p:const QString &]
                  - function: whatsThis[r:QString][specs:const]
                  - function: setPriority[r:void][p:QAction::Priority]
                  - function: priority[r:QAction::Priority][specs:const]
                  - function: menu[r:QMenu *][specs:const]
                  - function: setMenu[r:void][p:QMenu *]
                  - function: setSeparator[r:void][p:bool]
                  - function: isSeparator[r:bool][specs:const]
                  - function: setShortcut[r:void][p:const QKeySequence &]
                  - function: shortcut[r:QKeySequence][specs:const]
                  - function: setShortcuts[r:void][p:const QList<QKeySequence> &]
                  - function: setShortcuts[r:void][p:QKeySequence::StandardKey]
                  - function: shortcuts[r:QList<QKeySequence>][specs:const]
                  - function: setShortcutContext[r:void][p:Qt::ShortcutContext]
                  - function: shortcutContext[r:Qt::ShortcutContext][specs:const]
                  - function: setAutoRepeat[r:void][p:bool]
                  - function: autoRepeat[r:bool][specs:const]
                  - function: setFont[r:void][p:const QFont &]
                  - function: font[r:QFont][specs:const]
                  - function: setCheckable[r:void][p:bool]
                  - function: isCheckable[r:bool][specs:const]
                  - function: data[r:QVariant][specs:const]
                  - function: setData[r:void][p:const QVariant &]
                  - function: isChecked[r:bool][specs:const]
                  - function: isEnabled[r:bool][specs:const]
                  - function: isVisible[r:bool][specs:const]
                  - enum:
                      name: ActionEvent
                      enumerators:
                        - Trigger
                        - Hover
                  - function: activate[r:void][p:QAction::ActionEvent]
                  - function: showStatusText[r:bool][p:QWidget *=(QWidget*)nullptr]
                  - function: setMenuRole[r:void][p:QAction::MenuRole]
                  - function: menuRole[r:QAction::MenuRole][specs:const]
                  - function: setIconVisibleInMenu[r:void][p:bool]
                  - function: isIconVisibleInMenu[r:bool][specs:const]
                  - function: setShortcutVisibleInContextMenu[r:void][p:bool][v:5.10.0]
                  - function: isShortcutVisibleInContextMenu[r:bool][specs:const][v:5.10.0]
                  - function: parentWidget[r:QWidget *][specs:const]
                  - function: associatedWidgets[r:QList<QWidget *>][specs:const]
                  - function: associatedGraphicsWidgets[r:QList<QGraphicsWidget *>][specs:const]
                  - function: trigger[r:void]
                  - function: hover[r:void]
                  - function: setChecked[r:void][p:bool]
                  - function: toggle[r:void]
                  - function: setEnabled[r:void][p:bool]
                  - function: setDisabled[r:void][p:bool]
                  - function: setVisible[r:void][p:bool]
                  - function: changed[r:void][binding:signals]
                  - function: triggered[r:void][p:bool][binding:signals]
                  - function: hovered[r:void][binding:signals]
                  - function: toggled[r:void][p:bool][binding:signals]
            - function: operator<<[r:QDebug][p:QDebug;const QAction *]
            - function: newAction[r:QAction&][p:QObject*][binding:newfunction]
            - function: newAction[r:QAction&][p:const QString&;QObject*][binding:newfunction]
            - function: newAction[r:QAction&][p:const QIcon&;const QString&;QObject*][binding:newfunction]
          hincludes: <QAction>
      - file:
          name: menu
          elements:
            - class:
                name: QMenu
                base: QWidget
                elements:
                  - constructor: QMenu[p:QWidget *=(QWidget*)nullptr]
                  - constructor: QMenu[p:const QString &;QWidget *=(QWidget*)nullptr]
                  - destructor: ~QMenu
                  - function: addAction[r:QAction *][p:const QString &]
                  - function: addAction[r:QAction *][p:const QIcon &;const QString &]
                  - function: addAction[r:QAction *][p:const QString &;const QObject *;const char *;const QKeySequence &=QKeySequence()]
                  - function: addAction[r:QAction *][p:const QIcon &;const QString &;const QObject *;const char *;const QKeySequence &=QKeySequence()]
                  - function: addMenu[r:QAction *][p:QMenu *]
                  - function: addMenu[r:QMenu *][p:const QString &]
                  - function: addMenu[r:QMenu *][p:const QIcon &;const QString &]
                  - function: addSeparator[r:QAction *]
                  - function: addSection[r:QAction *][p:const QString &][v:5.1.0]
                  - function: addSection[r:QAction *][p:const QIcon &;const QString &][v:5.1.0]
                  - function: insertMenu[r:QAction *][p:QAction *;QMenu *]
                  - function: insertSeparator[r:QAction *][p:QAction *]
                  - function: insertSection[r:QAction *][p:QAction *;const QString &][v:5.1.0]
                  - function: insertSection[r:QAction *][p:QAction *;const QIcon &;const QString &][v:5.1.0]
                  - function: isEmpty[r:bool][specs:const]
                  - function: clear[r:void]
                  - function: setTearOffEnabled[r:void][p:bool]
                  - function: isTearOffEnabled[r:bool][specs:const]
                  - function: isTearOffMenuVisible[r:bool][specs:const]
                  - function: showTearOffMenu[r:void][v:5.7.0]
                  - function: showTearOffMenu[r:void][p:const QPoint &][v:5.7.0]
                  - function: hideTearOffMenu[r:void]
                  - function: setDefaultAction[r:void][p:QAction *]
                  - function: defaultAction[r:QAction *][specs:const]
                  - function: setActiveAction[r:void][p:QAction *]
                  - function: activeAction[r:QAction *][specs:const]
                  - function: popup[r:void][p:const QPoint &;QAction *=(QAction*)nullptr]
                  - function: exec[r:QAction *]
                  - function: exec[r:QAction *][p:const QPoint &;QAction *=(QAction*)nullptr]
                  - function: exec[r:QAction *][p:QList<QAction *>;const QPoint &;QAction *;QWidget *][specs:static]
                  - function: sizeHint[r:QSize][specs:const]
                  - function: actionGeometry[r:QRect][p:QAction *][specs:const]
                  - function: actionAt[r:QAction *][p:const QPoint &][specs:const]
                  - function: menuAction[r:QAction *][specs:const]
                  - function: title[r:QString][specs:const]
                  - function: setTitle[r:void][p:const QString &]
                  - function: icon[r:QIcon][specs:const]
                  - function: setIcon[r:void][p:const QIcon &]
                  - function: setNoReplayFor[r:void][p:QWidget *]
                  - function: platformMenu[r:QPlatformMenu *]
                  - function: setPlatformMenu[r:void][p:QPlatformMenu *]
                  - function: separatorsCollapsible[r:bool][specs:const]
                  - function: setSeparatorsCollapsible[r:void][p:bool]
                  - function: toolTipsVisible[r:bool][specs:const][v:5.1.0]
                  - function: setToolTipsVisible[r:void][p:bool][v:5.1.0]
                  - function: aboutToShow[r:void][binding:signals]
                  - function: aboutToHide[r:void][binding:signals]
                  - function: triggered[r:void][p:QAction *][binding:signals]
                  - function: hovered[r:void][p:QAction *][binding:signals]
            - function: newMenu[r:QMenu&][p:QWidget*][binding:newfunction]
            - function: newMenu[r:QMenu&][p:const QString&;QWidget*][binding:newfunction]
          hincludes: <QMenu>
      - file:
          name: layout
          checkstate: partially-checked
          elements:
            - class:
                name: QLayout
                base: QObject
                checkstate: partially-checked
                elements:
                  - enum:
                      name: SizeConstraint
                      enumerators:
                        - SetDefaultConstraint
                        - SetNoConstraint
                        - SetMinimumSize
                        - SetFixedSize
                        - SetMaximumSize
                        - SetMinAndMaxSize
                  - constructor: QLayout[p:QWidget *][unchecked]
                  - constructor: QLayout[unchecked]
                  - destructor: ~QLayout
                  - function: margin[r:int][specs:const]
                  - function: spacing[r:int][specs:const]
                  - function: setMargin[r:void][p:int]
                  - function: setSpacing[r:void][p:int]
                  - function: setContentsMargins[r:void][p:int;int;int;int]
                  - function: setContentsMargins[r:void][p:const QMargins &]
                  - function: getContentsMargins[r:void][p:int *;int *;int *;int *][specs:const]
                  - function: contentsMargins[r:QMargins][specs:const]
                  - function: contentsRect[r:QRect][specs:const]
                  - function: setAlignment[r:bool][p:QWidget *;Qt::Alignment]
                  - function: setAlignment[r:bool][p:QLayout *;Qt::Alignment]
                  - function: setSizeConstraint[r:void][p:QLayout::SizeConstraint]
                  - function: sizeConstraint[r:QLayout::SizeConstraint][specs:const]
                  - function: setMenuBar[r:void][p:QWidget *]
                  - function: menuBar[r:QWidget *][specs:const]
                  - function: parentWidget[r:QWidget *][specs:const]
                  - function: invalidate[r:void]
                  - function: geometry[r:QRect][specs:const]
                  - function: activate[r:bool]
                  - function: update[r:void]
                  - function: addWidget[r:void][p:QWidget *]
                  - function: addItem[r:void][p:QLayoutItem *]
                  - function: removeWidget[r:void][p:QWidget *]
                  - function: removeItem[r:void][p:QLayoutItem *]
                  - function: expandingDirections[r:Qt::Orientations][specs:const]
                  - function: minimumSize[r:QSize][specs:const]
                  - function: maximumSize[r:QSize][specs:const]
                  - function: setGeometry[r:void][p:const QRect &]
                  - function: itemAt[r:QLayoutItem *][p:int][specs:const]
                  - function: takeAt[r:QLayoutItem *][p:int]
                  - function: indexOf[r:int][p:QWidget *][specs:const]
                  - function: count[r:int][specs:const]
                  - function: isEmpty[r:bool][specs:const]
                  - function: controlTypes[r:QSizePolicy::ControlTypes][specs:const]
                  - function: replaceWidget[r:QLayoutItem *][p:QWidget *;QWidget *;Qt::FindChildOptions][v:5.2.0]
                  - function: totalHeightForWidth[r:int][p:int][specs:const]
                  - function: totalMinimumSize[r:QSize][specs:const]
                  - function: totalMaximumSize[r:QSize][specs:const]
                  - function: totalSizeHint[r:QSize][specs:const]
                  - function: layout[r:QLayout *]
                  - function: setEnabled[r:void][p:bool]
                  - function: isEnabled[r:bool][specs:const]
                  - function: closestAcceptableSize[r:QSize][p:const QWidget *;const QSize &][specs:static]
          hincludes: <QLayout>
      - file:
          name: boxlayout
          cppincludes: boxlayout.inc
          elements:
            - class:
                name: QBoxLayout
                base: QLayout
                elements:
                  - enum:
                      name: Direction
                      enumerators:
                        - LeftToRight
                        - RightToLeft
                        - TopToBottom
                        - BottomToTop
                        - Down
                        - Up
                  - constructor: QBoxLayout[p:QBoxLayout::Direction;QWidget *=(QWidget*)nullptr]
                  - destructor: ~QBoxLayout
                  - function: direction[r:QBoxLayout::Direction][specs:const]
                  - function: setDirection[r:void][p:QBoxLayout::Direction]
                  - function: addSpacing[r:void][p:int]
                  - function: addStretch[r:void][p:int=0]
                  - function: addSpacerItem[r:void][p:QSpacerItem *]
                  - function: addWidget[r:void][p:QWidget *;int=0;Qt::Alignment=Qt::Alignment()]
                  - function: addLayout[r:void][p:QLayout *;int=0]
                  - function: addStrut[r:void][p:int]
                  - function: insertSpacing[r:void][p:int;int]
                  - function: insertStretch[r:void][p:int;int=0]
                  - function: insertSpacerItem[r:void][p:int;QSpacerItem *]
                  - function: insertWidget[r:void][p:int;QWidget *;int=0;Qt::Alignment=Qt::Alignment()]
                  - function: insertLayout[r:void][p:int;QLayout *;int=0]
                  - function: insertItem[r:void][p:int;QLayoutItem *]
                  - function: spacing[r:int][specs:const]
                  - function: setSpacing[r:void][p:int]
                  - function: setStretchFactor[r:bool][p:QWidget *;int]
                  - function: setStretchFactor[r:bool][p:QLayout *;int]
                  - function: setStretch[r:void][p:int;int]
                  - function: stretch[r:int][p:int][specs:const]
            - class:
                name: QHBoxLayout
                base: QBoxLayout
                elements:
                  - constructor: QHBoxLayout
                  - constructor: QHBoxLayout[p:QWidget *]
                  - destructor: ~QHBoxLayout
            - class:
                name: QVBoxLayout
                base: QBoxLayout
                elements:
                  - constructor: QVBoxLayout
                  - constructor: QVBoxLayout[p:QWidget *]
                  - destructor: ~QVBoxLayout
            - statement: register_newlayout_functions(widgets);
            - function: newHBoxLayout[r:QHBoxLayout&][binding:newfunction]
            - function: newHBoxLayout[r:QHBoxLayout&][p:QWidget*][binding:newfunction]
            - function: newVBoxLayout[r:QVBoxLayout&][binding:newfunction]
            - function: newVBoxLayout[r:QVBoxLayout&][p:QWidget*][binding:newfunction]
          hincludes: <QBoxLayout>
      - file:
          name: formlayout
          elements:
            - class:
                name: QFormLayout
                base: QLayout
                elements:
                  - enum:
                      name: FieldGrowthPolicy
                      enumerators:
                        - FieldsStayAtSizeHint
                        - ExpandingFieldsGrow
                        - AllNonFixedFieldsGrow
                  - enum:
                      name: RowWrapPolicy
                      enumerators:
                        - DontWrapRows
                        - WrapLongRows
                        - WrapAllRows
                  - enum:
                      name: ItemRole
                      enumerators:
                        - LabelRole
                        - FieldRole
                        - SpanningRole
                  - constructor: QFormLayout[p:QWidget *]
                  - destructor: ~QFormLayout
                  - function: setFieldGrowthPolicy[r:void][p:QFormLayout::FieldGrowthPolicy]
                  - function: fieldGrowthPolicy[r:QFormLayout::FieldGrowthPolicy][specs:const]
                  - function: setRowWrapPolicy[r:void][p:QFormLayout::RowWrapPolicy]
                  - function: rowWrapPolicy[r:QFormLayout::RowWrapPolicy][specs:const]
                  - function: setLabelAlignment[r:void][p:Qt::Alignment]
                  - function: labelAlignment[r:Qt::Alignment][specs:const]
                  - function: setFormAlignment[r:void][p:Qt::Alignment]
                  - function: formAlignment[r:Qt::Alignment][specs:const]
                  - function: setHorizontalSpacing[r:void][p:int]
                  - function: horizontalSpacing[r:int][specs:const]
                  - function: setVerticalSpacing[r:void][p:int]
                  - function: verticalSpacing[r:int][specs:const]
                  - function: spacing[r:int][specs:const]
                  - function: setSpacing[r:void][p:int]
                  - function: addRow[r:void][p:QWidget *;QWidget *]
                  - function: addRow[r:void][p:QWidget *;QLayout *]
                  - function: addRow[r:void][p:const QString &;QWidget *]
                  - function: addRow[r:void][p:const QString &;QLayout *]
                  - function: addRow[r:void][p:QWidget *]
                  - function: addRow[r:void][p:QLayout *]
                  - function: insertRow[r:void][p:int;QWidget *;QWidget *]
                  - function: insertRow[r:void][p:int;QWidget *;QLayout *]
                  - function: insertRow[r:void][p:int;const QString &;QWidget *]
                  - function: insertRow[r:void][p:int;const QString &;QLayout *]
                  - function: insertRow[r:void][p:int;QWidget *]
                  - function: insertRow[r:void][p:int;QLayout *]
                  - function: removeRow[r:void][p:int][v:5.8.0]
                  - function: removeRow[r:void][p:QWidget *][v:5.8.0]
                  - function: removeRow[r:void][p:QLayout *][v:5.8.0]
                  - function: takeRow[r:QFormLayout::TakeRowResult][p:int][v:5.8.0]
                  - function: takeRow[r:QFormLayout::TakeRowResult][p:QWidget *][v:5.8.0]
                  - function: takeRow[r:QFormLayout::TakeRowResult][p:QLayout *][v:5.8.0]
                  - function: setItem[r:void][p:int;QFormLayout::ItemRole;QLayoutItem *]
                  - function: setWidget[r:void][p:int;QFormLayout::ItemRole;QWidget *]
                  - function: setLayout[r:void][p:int;QFormLayout::ItemRole;QLayout *]
                  - function: itemAt[r:QLayoutItem *][p:int;QFormLayout::ItemRole][specs:const]
                  - function: getItemPosition[r:void][p:int;int *;QFormLayout::ItemRole *][specs:const]
                  - function: getWidgetPosition[r:void][p:QWidget *;int *;QFormLayout::ItemRole *][specs:const]
                  - function: getLayoutPosition[r:void][p:QLayout *;int *;QFormLayout::ItemRole *][specs:const]
                  - function: labelForField[r:QWidget *][p:QWidget *][specs:const]
                  - function: labelForField[r:QWidget *][p:QLayout *][specs:const]
                  - function: addItem[r:void][p:QLayoutItem *]
                  - function: itemAt[r:QLayoutItem *][p:int][specs:const]
                  - function: rowCount[r:int][specs:const]
            - function: newFormLayout[r:QFormLayout&][p:QWidget*][binding:newfunction]
          hincludes: <QFormLayout>
      - file:
          name: gridlayout
          checkstate: partially-checked
          elements:
            - class:
                name: QGridLayout
                base: QLayout
                checkstate: partially-checked
                elements:
                  - constructor: QGridLayout[p:QWidget *]
                  - constructor: QGridLayout
                  - destructor: ~QGridLayout
                  - function: setHorizontalSpacing[r:void][p:int]
                  - function: horizontalSpacing[r:int][specs:const]
                  - function: setVerticalSpacing[r:void][p:int]
                  - function: verticalSpacing[r:int][specs:const]
                  - function: setSpacing[r:void][p:int]
                  - function: spacing[r:int][specs:const]
                  - function: setRowStretch[r:void][p:int;int]
                  - function: setColumnStretch[r:void][p:int;int]
                  - function: rowStretch[r:int][p:int][specs:const]
                  - function: columnStretch[r:int][p:int][specs:const]
                  - function: setRowMinimumHeight[r:void][p:int;int]
                  - function: setColumnMinimumWidth[r:void][p:int;int]
                  - function: rowMinimumHeight[r:int][p:int][specs:const]
                  - function: columnMinimumWidth[r:int][p:int][specs:const]
                  - function: columnCount[r:int][specs:const]
                  - function: rowCount[r:int][specs:const]
                  - function: cellRect[r:QRect][p:int;int][specs:const]
                  - function: addWidget[r:void][p:QWidget *]
                  - function: addWidget[r:void][p:QWidget *;int;int;Qt::Alignment=Qt::Alignment()]
                  - function: addWidget[r:void][p:QWidget *;int;int;int;int;Qt::Alignment][unchecked]
                  - function: addLayout[r:void][p:QLayout *;int;int;Qt::Alignment=Qt::Alignment()]
                  - function: addLayout[r:void][p:QLayout *;int;int;int;int;Qt::Alignment][unchecked]
                  - function: setOriginCorner[r:void][p:Qt::Corner]
                  - function: originCorner[r:Qt::Corner][specs:const]
                  - function: itemAtPosition[r:QLayoutItem *][p:int;int][specs:const]
                  - function: setGeometry[r:void][p:const QRect &]
                  - function: addItem[r:void][p:QLayoutItem *;int;int;int;int;Qt::Alignment]
                  - function: setDefaultPositioning[r:void][p:int;Qt::Orientation]
                  - function: getItemPosition[r:void][p:int;int *;int *;int *;int *][specs:const]
            - function: newGridLayout[r:QGridLayout&][p:QWidget*][binding:newfunction]
            - function: newGridLayout[r:QGridLayout&][binding:newfunction]
          hincludes: <QGridLayout>
      - file:
          name: stackedlayout
          elements:
            - class:
                name: QStackedLayout
                base: QLayout
                elements:
                  - enum:
                      name: StackingMode
                      enumerators:
                        - StackOne
                        - StackAll
                  - constructor: QStackedLayout
                  - constructor: QStackedLayout[p:QWidget *]
                  - constructor: QStackedLayout[p:QLayout *]
                  - destructor: ~QStackedLayout
                  - function: addWidget[r:int][p:QWidget *]
                  - function: insertWidget[r:int][p:int;QWidget *]
                  - function: currentWidget[r:QWidget *][specs:const]
                  - function: currentIndex[r:int][specs:const]
                  - function: widget[r:QWidget *][p:int][specs:const]
                  - function: count[r:int][specs:const]
                  - function: stackingMode[r:QStackedLayout::StackingMode][specs:const]
                  - function: setStackingMode[r:void][p:QStackedLayout::StackingMode]
                  - function: addItem[r:void][p:QLayoutItem *]
                  - function: sizeHint[r:QSize][specs:const]
                  - function: minimumSize[r:QSize][specs:const]
                  - function: itemAt[r:QLayoutItem *][p:int][specs:const]
                  - function: takeAt[r:QLayoutItem *][p:int]
                  - function: setGeometry[r:void][p:const QRect &]
                  - function: hasHeightForWidth[r:bool][specs:const]
                  - function: heightForWidth[r:int][p:int][specs:const]
                  - function: widgetRemoved[r:void][p:int]
                  - function: currentChanged[r:void][p:int]
                  - function: setCurrentIndex[r:void][p:int]
                  - function: setCurrentWidget[r:void][p:QWidget *]
            - function: newStackedLayout[r:QStackedLayout&][binding:newfunction]
            - function: newStackedLayout[r:QStackedLayout&][p:QWidget*][binding:newfunction]
            - function: newStackedLayout[r:QStackedLayout&][p:QLayout*][binding:newfunction]
          hincludes: <QStackedLayout>
      - file:
          name: dialog
          elements:
            - class:
                name: QDialog
                base: QWidget
                elements:
                  - constructor: QDialog[p:QWidget *=(QWidget*)nullptr;Qt::WindowFlags=Qt::WindowFlags()]
                  - destructor: ~QDialog
                  - enum:
                      name: DialogCode
                      enumerators:
                        - Rejected
                        - Accepted
                  - function: result[r:int][specs:const]
                  - function: setVisible[r:void][p:bool]
                  - function: setOrientation[r:void][p:Qt::Orientation]
                  - function: orientation[r:Qt::Orientation][specs:const]
                  - function: setExtension[r:void][p:QWidget *]
                  - function: extension[r:QWidget *][specs:const]
                  - function: sizeHint[r:QSize][specs:const]
                  - function: minimumSizeHint[r:QSize][specs:const]
                  - function: setSizeGripEnabled[r:void][p:bool]
                  - function: isSizeGripEnabled[r:bool][specs:const]
                  - function: setModal[r:void][p:bool]
                  - function: setResult[r:void][p:int]
                  - function: finished[r:void][p:int][binding:signals]
                  - function: accepted[r:void][binding:signals]
                  - function: rejected[r:void][binding:signals]
                  - function: open[r:void]
                  - function: exec[r:int]
                  - function: done[r:void][p:int]
                  - function: accept[r:void]
                  - function: reject[r:void]
                  - function: showExtension[r:void][p:bool]
          hincludes: <QDialog>
      - file:
          name: messagebox
          checkstate: partially-checked
          elements:
            - class:
                name: QMessageBox
                base: QDialog
                checkstate: partially-checked
                elements:
                  - enum:
                      name: Icon
                      enumerators:
                        - NoIcon
                        - Information
                        - Warning
                        - Critical
                        - Question
                  - enum:
                      name: ButtonRole
                      enumerators:
                        - InvalidRole
                        - AcceptRole
                        - RejectRole
                        - DestructiveRole
                        - ActionRole
                        - HelpRole
                        - YesRole
                        - NoRole
                        - ResetRole
                        - ApplyRole
                        - NRoles
                  - enum:
                      name: StandardButton
                      enumerators:
                        - NoButton
                        - Ok
                        - Save
                        - SaveAll
                        - Open
                        - Yes
                        - YesToAll
                        - No
                        - NoToAll
                        - Abort
                        - Retry
                        - Ignore
                        - Close
                        - Cancel
                        - Discard
                        - Help
                        - Apply
                        - Reset
                        - RestoreDefaults
                        - FirstButton
                        - LastButton
                        - YesAll
                        - NoAll
                        - Default
                        - Escape
                        - FlagMask
                        - ButtonMask
                  - constructor: QMessageBox[p:QWidget *=(QWidget*)nullptr]
                  - constructor: QMessageBox[p:QMessageBox::Icon;const QString &;const QString &;QMessageBox::StandardButtons=QMessageBox::StandardButtons(QMessageBox::NoButton);QWidget *=(QWidget*)nullptr;Qt::WindowFlags=Qt::WindowFlags(Qt::Dialog | Qt::MSWindowsFixedSizeDialogHint)]
                  - destructor: ~QMessageBox
                  - function: addButton[r:void][p:QAbstractButton *;QMessageBox::ButtonRole]
                  - function: addButton[r:QPushButton *][p:const QString &;QMessageBox::ButtonRole]
                  - function: addButton[r:QPushButton *][p:QMessageBox::StandardButton]
                  - function: removeButton[r:void][p:QAbstractButton *]
                  - function: open[r:void][p:QObject *;const char *]
                  - function: buttons[r:QList<QAbstractButton *>][specs:const]
                  - function: buttonRole[r:QMessageBox::ButtonRole][p:QAbstractButton *][specs:const]
                  - function: setStandardButtons[r:void][p:QMessageBox::StandardButtons]
                  - function: standardButtons[r:QMessageBox::StandardButtons][specs:const]
                  - function: standardButton[r:QMessageBox::StandardButton][p:QAbstractButton *][specs:const]
                  - function: button[r:QAbstractButton *][p:QMessageBox::StandardButton][specs:const]
                  - function: defaultButton[r:QPushButton *][specs:const]
                  - function: setDefaultButton[r:void][p:QPushButton *]
                  - function: setDefaultButton[r:void][p:QMessageBox::StandardButton]
                  - function: escapeButton[r:QAbstractButton *][specs:const]
                  - function: setEscapeButton[r:void][p:QAbstractButton *]
                  - function: setEscapeButton[r:void][p:QMessageBox::StandardButton]
                  - function: clickedButton[r:QAbstractButton *][specs:const]
                  - function: text[r:QString][specs:const]
                  - function: setText[r:void][p:const QString &]
                  - function: icon[r:QMessageBox::Icon][specs:const]
                  - function: setIcon[r:void][p:QMessageBox::Icon]
                  - function: iconPixmap[r:QPixmap][specs:const]
                  - function: setIconPixmap[r:void][p:const QPixmap &]
                  - function: textFormat[r:Qt::TextFormat][specs:const]
                  - function: setTextFormat[r:void][p:Qt::TextFormat]
                  - function: setTextInteractionFlags[r:void][p:Qt::TextInteractionFlags][v:5.1.0]
                  - function: textInteractionFlags[r:Qt::TextInteractionFlags][specs:const][v:5.1.0]
                  - function: setCheckBox[r:void][p:QCheckBox *][v:5.2.0]
                  - function: checkBox[r:QCheckBox *][specs:const][v:5.2.0]
                  - function: information[r:QMessageBox::StandardButton][p:QWidget *;const QString &;const QString &;QMessageBox::StandardButtons;QMessageBox::StandardButton][specs:static]
                  - function: question[r:QMessageBox::StandardButton][p:QWidget *;const QString &;const QString &;QMessageBox::StandardButtons;QMessageBox::StandardButton][specs:static]
                  - function: warning[r:QMessageBox::StandardButton][p:QWidget *;const QString &;const QString &;QMessageBox::StandardButtons;QMessageBox::StandardButton][specs:static]
                  - function: critical[r:QMessageBox::StandardButton][p:QWidget *;const QString &;const QString &;QMessageBox::StandardButtons;QMessageBox::StandardButton][specs:static]
                  - function: about[r:void][p:QWidget *;const QString &;const QString &][specs:static]
                  - function: aboutQt[r:void][p:QWidget *;const QString &][specs:static]
                  - constructor: QMessageBox[p:const QString &;const QString &;QMessageBox::Icon;int;int;int;QWidget *;Qt::WindowFlags]
                  - function: information[r:int][p:QWidget *;const QString &;const QString &;int;int;int][specs:static][unchecked]
                  - function: information[r:int][p:QWidget *;const QString &;const QString &;const QString &;const QString &;const QString &;int;int][specs:static][unchecked]
                  - function: information[r:QMessageBox::StandardButton][p:QWidget *;const QString &;const QString &;QMessageBox::StandardButton;QMessageBox::StandardButton][specs:static]
                  - function: question[r:int][p:QWidget *;const QString &;const QString &;int;int;int][specs:static][unchecked]
                  - function: question[r:int][p:QWidget *;const QString &;const QString &;const QString &;const QString &;const QString &;int;int][specs:static][unchecked]
                  - function: question[r:int][p:QWidget *;const QString &;const QString &;QMessageBox::StandardButton;QMessageBox::StandardButton][specs:static]
                  - function: warning[r:int][p:QWidget *;const QString &;const QString &;int;int;int][specs:static][unchecked]
                  - function: warning[r:int][p:QWidget *;const QString &;const QString &;const QString &;const QString &;const QString &;int;int][specs:static][unchecked]
                  - function: warning[r:int][p:QWidget *;const QString &;const QString &;QMessageBox::StandardButton;QMessageBox::StandardButton][specs:static]
                  - function: critical[r:int][p:QWidget *;const QString &;const QString &;int;int;int][specs:static][unchecked]
                  - function: critical[r:int][p:QWidget *;const QString &;const QString &;const QString &;const QString &;const QString &;int;int][specs:static][unchecked]
                  - function: critical[r:int][p:QWidget *;const QString &;const QString &;QMessageBox::StandardButton;QMessageBox::StandardButton][specs:static]
                  - function: buttonText[r:QString][p:int][specs:const]
                  - function: setButtonText[r:void][p:int;const QString &]
                  - function: informativeText[r:QString][specs:const]
                  - function: setInformativeText[r:void][p:const QString &]
                  - function: detailedText[r:QString][specs:const]
                  - function: setDetailedText[r:void][p:const QString &]
                  - function: setWindowTitle[r:void][p:const QString &]
                  - function: setWindowModality[r:void][p:Qt::WindowModality]
                  - function: standardIcon[r:QPixmap][p:QMessageBox::Icon][specs:static]
                  - function: buttonClicked[r:void][p:QAbstractButton *]
            - function: operator|[r:QFlags<QMessageBox::StandardButtons::enum_type>][p:QMessageBox::StandardButtons::enum_type;QMessageBox::StandardButtons::enum_type]
            - function: operator|[r:QFlags<QMessageBox::StandardButtons::enum_type>][p:QMessageBox::StandardButtons::enum_type;QFlags<QMessageBox::StandardButtons::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:QMessageBox::StandardButtons::enum_type;int]
          hincludes: <QMessageBox>
      - file:
          name: filedialog
          checkstate: partially-checked
          elements:
            - class:
                name: QFileDialog
                base: QDialog
                checkstate: partially-checked
                elements:
                  - enum:
                      name: ViewMode
                      enumerators:
                        - Detail
                        - List
                  - enum:
                      name: FileMode
                      enumerators:
                        - AnyFile
                        - ExistingFile
                        - Directory
                        - ExistingFiles
                        - DirectoryOnly
                  - enum:
                      name: AcceptMode
                      enumerators:
                        - AcceptOpen
                        - AcceptSave
                  - enum:
                      name: DialogLabel
                      enumerators:
                        - LookIn
                        - FileName
                        - FileType
                        - Accept
                        - Reject
                  - enum:
                      name: Option
                      enumerators:
                        - ShowDirsOnly
                        - DontResolveSymlinks
                        - DontConfirmOverwrite
                        - DontUseSheet
                        - DontUseNativeDialog
                        - ReadOnly
                        - HideNameFilterDetails
                        - DontUseCustomDirectoryIcons[v:5.2.0]
                  - constructor: QFileDialog[p:QWidget *;Qt::WindowFlags]
                  - constructor: QFileDialog[p:QWidget *;const QString &;const QString &;const QString &]
                  - destructor: ~QFileDialog
                  - function: setDirectory[r:void][p:const QString &]
                  - function: setDirectory[r:void][p:const QDir &]
                  - function: directory[r:QDir][specs:const]
                  - function: setDirectoryUrl[r:void][p:const QUrl &][v:5.2.0]
                  - function: directoryUrl[r:QUrl][specs:const][v:5.2.0]
                  - function: selectFile[r:void][p:const QString &]
                  - function: selectedFiles[r:QStringList][specs:const]
                  - function: selectUrl[r:void][p:const QUrl &][v:5.2.0]
                  - function: selectedUrls[r:QList<QUrl>][specs:const][v:5.2.0]
                  - function: setNameFilterDetailsVisible[r:void][p:bool]
                  - function: isNameFilterDetailsVisible[r:bool][specs:const]
                  - function: setNameFilter[r:void][p:const QString &]
                  - function: setNameFilters[r:void][p:const QStringList &]
                  - function: nameFilters[r:QStringList][specs:const]
                  - function: selectNameFilter[r:void][p:const QString &]
                  - function: selectedMimeTypeFilter[r:QString][specs:const][v:5.9.0]
                  - function: selectedNameFilter[r:QString][specs:const]
                  - function: setMimeTypeFilters[r:void][p:const QStringList &][v:5.2.0]
                  - function: mimeTypeFilters[r:QStringList][specs:const][v:5.2.0]
                  - function: selectMimeTypeFilter[r:void][p:const QString &][v:5.2.0]
                  - function: filter[r:QDir::Filters][specs:const]
                  - function: setFilter[r:void][p:QDir::Filters]
                  - function: setViewMode[r:void][p:QFileDialog::ViewMode]
                  - function: viewMode[r:QFileDialog::ViewMode][specs:const]
                  - function: setFileMode[r:void][p:QFileDialog::FileMode]
                  - function: fileMode[r:QFileDialog::FileMode][specs:const]
                  - function: setAcceptMode[r:void][p:QFileDialog::AcceptMode]
                  - function: acceptMode[r:QFileDialog::AcceptMode][specs:const]
                  - function: setReadOnly[r:void][p:bool]
                  - function: isReadOnly[r:bool][specs:const]
                  - function: setResolveSymlinks[r:void][p:bool]
                  - function: resolveSymlinks[r:bool][specs:const]
                  - function: setSidebarUrls[r:void][p:const QList<QUrl> &]
                  - function: sidebarUrls[r:QList<QUrl>][specs:const]
                  - function: saveState[r:QByteArray][specs:const]
                  - function: restoreState[r:bool][p:const QByteArray &]
                  - function: setConfirmOverwrite[r:void][p:bool]
                  - function: confirmOverwrite[r:bool][specs:const]
                  - function: setDefaultSuffix[r:void][p:const QString &]
                  - function: defaultSuffix[r:QString][specs:const]
                  - function: setHistory[r:void][p:const QStringList &]
                  - function: history[r:QStringList][specs:const]
                  - function: setItemDelegate[r:void][p:QAbstractItemDelegate *]
                  - function: itemDelegate[r:QAbstractItemDelegate *][specs:const]
                  - function: setIconProvider[r:void][p:QFileIconProvider *]
                  - function: iconProvider[r:QFileIconProvider *][specs:const]
                  - function: setLabelText[r:void][p:QFileDialog::DialogLabel;const QString &]
                  - function: labelText[r:QString][p:QFileDialog::DialogLabel][specs:const]
                  - function: setSupportedSchemes[r:void][p:const QStringList &][v:5.6.0]
                  - function: supportedSchemes[r:QStringList][specs:const][v:5.6.0]
                  - function: setProxyModel[r:void][p:QAbstractProxyModel *]
                  - function: proxyModel[r:QAbstractProxyModel *][specs:const]
                  - function: setOption[r:void][p:QFileDialog::Option;bool]
                  - function: testOption[r:bool][p:QFileDialog::Option][specs:const]
                  - function: setOptions[r:void][p:QFileDialog::Options]
                  - function: options[r:QFileDialog::Options][specs:const]
                  - function: open[r:void][p:QObject *;const char *]
                  - function: setVisible[r:void][p:bool]
                  - function: fileSelected[r:void][p:const QString &][binding:signals]
                  - function: filesSelected[r:void][p:const QStringList &][binding:signals][unchecked]
                  - function: currentChanged[r:void][p:const QString &][binding:signals]
                  - function: directoryEntered[r:void][p:const QString &][binding:signals]
                  - function: urlSelected[r:void][p:const QUrl &][binding:signals][v:5.2.0][unchecked]
                  - function: urlsSelected[r:void][p:const QList<QUrl> &][binding:signals][v:5.2.0][unchecked]
                  - function: currentUrlChanged[r:void][p:const QUrl &][binding:signals][v:5.2.0][unchecked]
                  - function: directoryUrlEntered[r:void][p:const QUrl &][binding:signals][v:5.2.0][unchecked]
                  - function: filterSelected[r:void][p:const QString &][binding:signals]
                  - function: getOpenFileName[r:QString][p:QWidget *;const QString &;const QString &;const QString &;QString *;QFileDialog::Options][specs:static]
                  - function: getOpenFileUrl[r:QUrl][p:QWidget *;const QString &;const QUrl &;const QString &;QString *;QFileDialog::Options;const QStringList &][specs:static][v:5.2.0]
                  - function: getSaveFileName[r:QString][p:QWidget *;const QString &;const QString &;const QString &;QString *;QFileDialog::Options][specs:static]
                  - function: getSaveFileUrl[r:QUrl][p:QWidget *;const QString &;const QUrl &;const QString &;QString *;QFileDialog::Options;const QStringList &][specs:static][v:5.2.0]
                  - function: getExistingDirectory[r:QString][p:QWidget *;const QString &;const QString &;QFileDialog::Options][specs:static]
                  - function: getExistingDirectoryUrl[r:QUrl][p:QWidget *;const QString &;const QUrl &;QFileDialog::Options;const QStringList &][specs:static][v:5.2.0]
                  - function: getOpenFileNames[r:QStringList][p:QWidget *;const QString &;const QString &;const QString &;QString *;QFileDialog::Options][specs:static]
                  - function: getOpenFileUrls[r:QList<QUrl>][p:QWidget *;const QString &;const QUrl &;const QString &;QString *;QFileDialog::Options;const QStringList &][specs:static][v:5.2.0]
            - function: operator|[r:QFlags<QFileDialog::Options::enum_type>][p:QFileDialog::Options::enum_type;QFileDialog::Options::enum_type]
            - function: operator|[r:QFlags<QFileDialog::Options::enum_type>][p:QFileDialog::Options::enum_type;QFlags<QFileDialog::Options::enum_type>]
            - function: operator|[r:QIncompatibleFlag][p:QFileDialog::Options::enum_type;int]
          hincludes: <QFileDialog>
      - file:
          name: errormessage
          elements:
            - class:
                name: QErrorMessage
                base: QDialog
                elements:
                  - constructor: QErrorMessage[p:QWidget *=(QWidget*)nullptr]
                  - destructor: ~QErrorMessage
                  - function: showMessage[r:void][p:const QString &]
                  - function: showMessage[r:void][p:const QString &;const QString &]
          hincludes: <QErrorMessage>
      - file:
          name: colordialog
          elements:
            - class:
                name: QColorDialog
                base: QDialog
                elements:
                  - enum:
                      name: ColorDialogOption
                      enumerators:
                        - ShowAlphaChannel
                        - NoButtons
                        - DontUseNativeDialog
                  - constructor: QColorDialog[p:QWidget *=(QWidget*)nullptr]
                  - constructor: QColorDialog[p:const QColor &;QWidget *=(QWidget*)nullptr]
                  - destructor: ~QColorDialog
                  - function: setCurrentColor[r:void][p:const QColor &]
                  - function: currentColor[r:QColor][specs:const]
                  - function: selectedColor[r:QColor][specs:const]
                  - function: setOption[r:void][p:QColorDialog::ColorDialogOption;bool=true]
                  - function: testOption[r:bool][p:QColorDialog::ColorDialogOption][specs:const]
                  - function: setOptions[r:void][p:QColorDialog::ColorDialogOptions]
                  - function: options[r:QColorDialog::ColorDialogOptions][specs:const]
                  - function: open[r:void][p:QObject *;const char *]
                  - function: setVisible[r:void][p:bool]
                  - function: getColor[r:QColor][p:const QColor &;QWidget *;const QString &;QColorDialog::ColorDialogOptions][specs:static]
                  - function: getRgba[r:QRgb][p:QRgb;bool *;QWidget *][specs:static]
                  - function: customCount[r:int][specs:static]
                  - function: customColor[r:QColor][p:int][specs:static]
                  - function: setCustomColor[r:void][p:int;QColor][specs:static]
                  - function: standardColor[r:QColor][p:int][specs:static]
                  - function: setStandardColor[r:void][p:int;QColor][specs:static]
                  - function: currentColorChanged[r:void][p:const QColor &][binding:signals]
                  - function: colorSelected[r:void][p:const QColor &][binding:signals]
            - function: operator|[r:QColorDialog::ColorDialogOptions][p:QColorDialog::ColorDialogOption;QColorDialog::ColorDialogOption]
            - function: operator|[r:QColorDialog::ColorDialogOptions][p:QColorDialog::ColorDialogOption;QColorDialog::ColorDialogOptions]
            - function: operator|[r:QIncompatibleFlag][p:QColorDialog::ColorDialogOptions::enum_type;int]
          hincludes: <QColorDialog>
      - file:
          name: fontdialog
          elements:
            - class:
                name: QFontDialog
                base: QDialog
                elements:
                  - enum:
                      name: FontDialogOption
                      enumerators:
                        - NoButtons
                        - DontUseNativeDialog
                        - ScalableFonts
                        - NonScalableFonts
                        - MonospacedFonts
                        - ProportionalFonts
                  - constructor: QFontDialog[p:QWidget *=(QWidget*)nullptr]
                  - constructor: QFontDialog[p:const QFont &;QWidget *=(QWidget*)nullptr]
                  - destructor: ~QFontDialog
                  - function: setCurrentFont[r:void][p:const QFont &]
                  - function: currentFont[r:QFont][specs:const]
                  - function: selectedFont[r:QFont][specs:const]
                  - function: setOption[r:void][p:QFontDialog::FontDialogOption;bool=true]
                  - function: testOption[r:bool][p:QFontDialog::FontDialogOption][specs:const]
                  - function: setOptions[r:void][p:QFontDialog::FontDialogOptions]
                  - function: options[r:QFontDialog::FontDialogOptions][specs:const]
                  - function: open[r:void][p:QObject *;const char *]
                  - function: setVisible[r:void][p:bool]
                  - function: getFont[r:QFont][p:bool *;QWidget *][specs:static]
                  - function: getFont[r:QFont][p:bool *;const QFont &;QWidget *;const QString &;QFontDialog::FontDialogOptions][specs:static]
                  - function: currentFontChanged[r:void][p:const QFont &][binding:signals]
                  - function: fontSelected[r:void][p:const QFont &][binding:signals]
            - function: operator|[r:QFontDialog::FontDialogOptions][p:QFontDialog::FontDialogOption;QFontDialog::FontDialogOption]
            - function: operator|[r:QFontDialog::FontDialogOptions][p:QFontDialog::FontDialogOption;QFontDialog::FontDialogOptions]
            - function: operator|[r:QIncompatibleFlag][p:QFontDialog::FontDialogOptions::enum_type;int]
          hincludes: <QFontDialog>
      - file:
          name: inputdialog
          checkstate: partially-checked
          elements:
            - class:
                name: QInputDialog
                base: QDialog
                checkstate: partially-checked
                elements:
                  - enum:
                      name: InputDialogOption
                      enumerators:
                        - NoButtons
                        - UseListViewForComboBoxItems
                        - UsePlainTextEditForTextInput[v:5.2.0]
                  - enum:
                      name: InputMode
                      enumerators:
                        - TextInput
                        - IntInput
                        - DoubleInput
                  - constructor: QInputDialog[p:QWidget *=(QWidget*)nullptr;Qt::WindowFlags=Qt::WindowFlags()]
                  - destructor: ~QInputDialog
                  - function: setInputMode[r:void][p:QInputDialog::InputMode]
                  - function: inputMode[r:QInputDialog::InputMode][specs:const]
                  - function: setLabelText[r:void][p:const QString &]
                  - function: labelText[r:QString][specs:const]
                  - function: setOption[r:void][p:QInputDialog::InputDialogOption;bool=true]
                  - function: testOption[r:bool][p:QInputDialog::InputDialogOption][specs:const]
                  - function: setOptions[r:void][p:QInputDialog::InputDialogOptions]
                  - function: options[r:QInputDialog::InputDialogOptions][specs:const]
                  - function: setTextValue[r:void][p:const QString &]
                  - function: textValue[r:QString][specs:const]
                  - function: setTextEchoMode[r:void][p:QLineEdit::EchoMode]
                  - function: textEchoMode[r:QLineEdit::EchoMode][specs:const]
                  - function: setComboBoxEditable[r:void][p:bool]
                  - function: isComboBoxEditable[r:bool][specs:const]
                  - function: setComboBoxItems[r:void][p:const QStringList &]
                  - function: comboBoxItems[r:QStringList][specs:const]
                  - function: setIntValue[r:void][p:int]
                  - function: intValue[r:int][specs:const]
                  - function: setIntMinimum[r:void][p:int]
                  - function: intMinimum[r:int][specs:const]
                  - function: setIntMaximum[r:void][p:int]
                  - function: intMaximum[r:int][specs:const]
                  - function: setIntRange[r:void][p:int;int]
                  - function: setIntStep[r:void][p:int]
                  - function: intStep[r:int][specs:const]
                  - function: setDoubleValue[r:void][p:double]
                  - function: doubleValue[r:double][specs:const]
                  - function: setDoubleMinimum[r:void][p:double]
                  - function: doubleMinimum[r:double][specs:const]
                  - function: setDoubleMaximum[r:void][p:double]
                  - function: doubleMaximum[r:double][specs:const]
                  - function: setDoubleRange[r:void][p:double;double]
                  - function: setDoubleDecimals[r:void][p:int]
                  - function: doubleDecimals[r:int][specs:const]
                  - function: setOkButtonText[r:void][p:const QString &]
                  - function: okButtonText[r:QString][specs:const]
                  - function: setCancelButtonText[r:void][p:const QString &]
                  - function: cancelButtonText[r:QString][specs:const]
                  - function: open[r:void][p:QObject *;const char *]
                  - function: minimumSizeHint[r:QSize][specs:const]
                  - function: sizeHint[r:QSize][specs:const]
                  - function: setVisible[r:void][p:bool]
                  - function: getText[r:QString][p:QWidget *;const QString &;const QString &;QLineEdit::EchoMode;const QString &;bool *;Qt::WindowFlags;Qt::InputMethodHints][specs:static]
                  - function: getMultiLineText[r:QString][p:QWidget *;const QString &;const QString &;const QString &;bool *;Qt::WindowFlags;Qt::InputMethodHints][specs:static][v:5.2.0]
                  - function: getItem[r:QString][p:QWidget *;const QString &;const QString &;const QStringList &;int;bool;bool *;Qt::WindowFlags;Qt::InputMethodHints][specs:static]
                  - function: getInt[r:int][p:QWidget *;const QString &;const QString &;int;int;int;int;bool *;Qt::WindowFlags][specs:static]
                  - function: getDouble[r:double][p:QWidget *;const QString &;const QString &;double;double;double;int;bool *;Qt::WindowFlags][specs:static]
                  - function: getDouble[r:double][p:QWidget *;const QString &;const QString &;double;double;double;int;bool *;Qt::WindowFlags;double][specs:static]
                  - function: setDoubleStep[r:void][p:double][v:5.10.0]
                  - function: doubleStep[r:double][specs:const][v:5.10.0]
                  - function: textValueChanged[r:void][p:const QString &][binding:signals]
                  - function: textValueSelected[r:void][p:const QString &][binding:signals]
                  - function: intValueChanged[r:void][p:int][binding:signals]
                  - function: intValueSelected[r:void][p:int][binding:signals]
                  - function: doubleValueChanged[r:void][p:double][binding:signals]
                  - function: doubleValueSelected[r:void][p:double][binding:signals]
                  - function: done[r:void][p:int]
            - function: operator|[r:QInputDialog::InputDialogOptions][p:QInputDialog::InputDialogOption;QInputDialog::InputDialogOption]
            - function: operator|[r:QInputDialog::InputDialogOptions][p:QInputDialog::InputDialogOption;QInputDialog::InputDialogOptions]
            - function: operator|[r:QIncompatibleFlag][p:QInputDialog::InputDialogOptions::enum_type;int]
          hincludes: <QInputDialog>
      - file:
          name: progressdialog
          elements:
            - class:
                name: QProgressDialog
                base: QDialog
                elements:
                  - constructor: QProgressDialog[p:QWidget *=(QWidget*)nullptr;Qt::WindowFlags=Qt::WindowFlags()]
                  - constructor: QProgressDialog[p:const QString &;const QString &;int;int;QWidget *=(QWidget*)nullptr;Qt::WindowFlags=Qt::WindowFlags()]
                  - destructor: ~QProgressDialog
                  - function: setLabel[r:void][p:QLabel *]
                  - function: setCancelButton[r:void][p:QPushButton *]
                  - function: setBar[r:void][p:QProgressBar *]
                  - function: wasCanceled[r:bool][specs:const]
                  - function: minimum[r:int][specs:const]
                  - function: maximum[r:int][specs:const]
                  - function: value[r:int][specs:const]
                  - function: sizeHint[r:QSize][specs:const]
                  - function: labelText[r:QString][specs:const]
                  - function: minimumDuration[r:int][specs:const]
                  - function: setAutoReset[r:void][p:bool]
                  - function: autoReset[r:bool][specs:const]
                  - function: setAutoClose[r:void][p:bool]
                  - function: autoClose[r:bool][specs:const]
                  - function: open[r:void][p:QObject *;const char *]
                  - function: cancel[r:void]
                  - function: reset[r:void]
                  - function: setMaximum[r:void][p:int]
                  - function: setMinimum[r:void][p:int]
                  - function: setRange[r:void][p:int;int]
                  - function: setValue[r:void][p:int]
                  - function: setLabelText[r:void][p:const QString &]
                  - function: setCancelButtonText[r:void][p:const QString &]
                  - function: setMinimumDuration[r:void][p:int]
                  - function: canceled[r:void][binding:signals]
          hincludes: <QProgressDialog>
      - file:
          name: wizard
          elements:
            - class:
                name: QWizard
                base: QDialog
                elements:
                  - enum:
                      name: WizardButton
                      enumerators:
                        - BackButton
                        - NextButton
                        - CommitButton
                        - FinishButton
                        - CancelButton
                        - HelpButton
                        - CustomButton1
                        - CustomButton2
                        - CustomButton3
                        - Stretch
                        - NoButton
                        - NStandardButtons
                        - NButtons
                  - enum:
                      name: WizardPixmap
                      enumerators:
                        - WatermarkPixmap
                        - LogoPixmap
                        - BannerPixmap
                        - BackgroundPixmap
                        - NPixmaps
                  - enum:
                      name: WizardStyle
                      enumerators:
                        - ClassicStyle
                        - ModernStyle
                        - MacStyle
                        - AeroStyle
                        - NStyles
                  - enum:
                      name: WizardOption
                      enumerators:
                        - IndependentPages
                        - IgnoreSubTitles
                        - ExtendedWatermarkPixmap
                        - NoDefaultButton
                        - NoBackButtonOnStartPage
                        - NoBackButtonOnLastPage
                        - DisabledBackButtonOnLastPage
                        - HaveNextButtonOnLastPage
                        - HaveFinishButtonOnEarlyPages
                        - NoCancelButton
                        - CancelButtonOnLeft
                        - HaveHelpButton
                        - HelpButtonOnRight
                        - HaveCustomButton1
                        - HaveCustomButton2
                        - HaveCustomButton3
                        - NoCancelButtonOnLastPage
                  - constructor: QWizard[p:QWidget *=(QWidget*)nullptr;Qt::WindowFlags=Qt::WindowFlags()]
                  - destructor: ~QWizard
                  - function: addPage[r:int][p:QWizardPage *]
                  - function: setPage[r:void][p:int;QWizardPage *]
                  - function: removePage[r:void][p:int]
                  - function: page[r:QWizardPage *][p:int][specs:const]
                  - function: hasVisitedPage[r:bool][p:int][specs:const]
                  - function: visitedPages[r:QList<int>][specs:const]
                  - function: pageIds[r:QList<int>][specs:const]
                  - function: setStartId[r:void][p:int]
                  - function: startId[r:int][specs:const]
                  - function: currentPage[r:QWizardPage *][specs:const]
                  - function: currentId[r:int][specs:const]
                  - function: validateCurrentPage[r:bool]
                  - function: nextId[r:int][specs:const]
                  - function: setField[r:void][p:const QString &;const QVariant &]
                  - function: field[r:QVariant][p:const QString &][specs:const]
                  - function: setWizardStyle[r:void][p:QWizard::WizardStyle]
                  - function: wizardStyle[r:QWizard::WizardStyle][specs:const]
                  - function: setOption[r:void][p:QWizard::WizardOption;bool]
                  - function: testOption[r:bool][p:QWizard::WizardOption][specs:const]
                  - function: setOptions[r:void][p:QWizard::WizardOptions]
                  - function: options[r:QWizard::WizardOptions][specs:const]
                  - function: setButtonText[r:void][p:QWizard::WizardButton;const QString &]
                  - function: buttonText[r:QString][p:QWizard::WizardButton][specs:const]
                  - function: setButtonLayout[r:void][p:const QList<QWizard::WizardButton> &]
                  - function: setButton[r:void][p:QWizard::WizardButton;QAbstractButton *]
                  - function: button[r:QAbstractButton *][p:QWizard::WizardButton][specs:const]
                  - function: setTitleFormat[r:void][p:Qt::TextFormat]
                  - function: titleFormat[r:Qt::TextFormat][specs:const]
                  - function: setSubTitleFormat[r:void][p:Qt::TextFormat]
                  - function: subTitleFormat[r:Qt::TextFormat][specs:const]
                  - function: setPixmap[r:void][p:QWizard::WizardPixmap;const QPixmap &]
                  - function: pixmap[r:QPixmap][p:QWizard::WizardPixmap][specs:const]
                  - function: setSideWidget[r:void][p:QWidget *]
                  - function: sideWidget[r:QWidget *][specs:const]
                  - function: setDefaultProperty[r:void][p:const char *;const char *;const char *]
                  - function: setVisible[r:void][p:bool]
                  - function: sizeHint[r:QSize][specs:const]
                  - function: currentIdChanged[r:void][p:int][binding:signals]
                  - function: helpRequested[r:void][binding:signals]
                  - function: customButtonClicked[r:void][p:int][binding:signals]
                  - function: pageAdded[r:void][p:int][binding:signals]
                  - function: pageRemoved[r:void][p:int][binding:signals]
                  - function: back[r:void]
                  - function: next[r:void]
                  - function: restart[r:void]
            - function: operator|[r:QWizard::WizardOptions][p:QWizard::WizardOption;QWizard::WizardOption]
            - function: operator|[r:QWizard::WizardOptions][p:QWizard::WizardOption;QWizard::WizardOptions]
            - function: operator|[r:QIncompatibleFlag][p:QWizard::WizardOptions::enum_type;int]
            - class:
                name: QWizardPage
                base: QWidget
                elements:
                  - constructor: QWizardPage[p:QWidget *=(QWidget*)nullptr]
                  - destructor: ~QWizardPage
                  - function: setTitle[r:void][p:const QString &]
                  - function: title[r:QString][specs:const]
                  - function: setSubTitle[r:void][p:const QString &]
                  - function: subTitle[r:QString][specs:const]
                  - function: setPixmap[r:void][p:QWizard::WizardPixmap;const QPixmap &]
                  - function: pixmap[r:QPixmap][p:QWizard::WizardPixmap][specs:const]
                  - function: setFinalPage[r:void][p:bool]
                  - function: isFinalPage[r:bool][specs:const]
                  - function: setCommitPage[r:void][p:bool]
                  - function: isCommitPage[r:bool][specs:const]
                  - function: setButtonText[r:void][p:QWizard::WizardButton;const QString &]
                  - function: buttonText[r:QString][p:QWizard::WizardButton][specs:const]
                  - function: initializePage[r:void]
                  - function: cleanupPage[r:void]
                  - function: validatePage[r:bool]
                  - function: isComplete[r:bool][specs:const]
                  - function: nextId[r:int][specs:const]
                  - function: completeChanged[r:void][binding:signals]
          hincludes: <QWizard>
      - file:
          name: toolbar
          elements:
            - class:
                name: QToolBar
                base: QWidget
                elements:
                  - constructor: QToolBar[p:const QString &;QWidget *=(QWidget*)nullptr]
                  - constructor: QToolBar[p:QWidget *=(QWidget*)nullptr]
                  - destructor: ~QToolBar
                  - function: setMovable[r:void][p:bool]
                  - function: isMovable[r:bool][specs:const]
                  - function: setAllowedAreas[r:void][p:Qt::ToolBarAreas]
                  - function: allowedAreas[r:Qt::ToolBarAreas][specs:const]
                  - function: isAreaAllowed[r:bool][p:Qt::ToolBarArea][specs:const]
                  - function: setOrientation[r:void][p:Qt::Orientation]
                  - function: orientation[r:Qt::Orientation][specs:const]
                  - function: clear[r:void]
                  - function: addAction[r:QAction *][p:const QString &]
                  - function: addAction[r:QAction *][p:const QIcon &;const QString &]
                  - function: addAction[r:QAction *][p:const QString &;const QObject *;const char *]
                  - function: addAction[r:QAction *][p:const QIcon &;const QString &;const QObject *;const char *]
                  - function: addSeparator[r:QAction *]
                  - function: insertSeparator[r:QAction *][p:QAction *]
                  - function: addWidget[r:QAction *][p:QWidget *]
                  - function: insertWidget[r:QAction *][p:QAction *;QWidget *]
                  - function: actionGeometry[r:QRect][p:QAction *][specs:const]
                  - function: actionAt[r:QAction *][p:const QPoint &][specs:const]
                  - function: actionAt[r:QAction *][p:int;int][specs:const]
                  - function: toggleViewAction[r:QAction *][specs:const]
                  - function: iconSize[r:QSize][specs:const]
                  - function: toolButtonStyle[r:Qt::ToolButtonStyle][specs:const]
                  - function: widgetForAction[r:QWidget *][p:QAction *][specs:const]
                  - function: isFloatable[r:bool][specs:const]
                  - function: setFloatable[r:void][p:bool]
                  - function: isFloating[r:bool][specs:const]
                  - function: setIconSize[r:void][p:const QSize &]
                  - function: setToolButtonStyle[r:void][p:Qt::ToolButtonStyle]
                  - function: actionTriggered[r:void][p:QAction *][binding:signals]
                  - function: movableChanged[r:void][p:bool][binding:signals]
                  - function: allowedAreasChanged[r:void][p:Qt::ToolBarAreas][binding:signals]
                  - function: orientationChanged[r:void][p:Qt::Orientation][binding:signals]
                  - function: iconSizeChanged[r:void][p:const QSize &][binding:signals]
                  - function: toolButtonStyleChanged[r:void][p:Qt::ToolButtonStyle][binding:signals]
                  - function: topLevelChanged[r:void][p:bool][binding:signals]
                  - function: visibilityChanged[r:void][p:bool][binding:signals]
            - function: newToolBar[r:QToolBar&][p:const QString&;QWidget*][binding:newfunction]
            - function: newToolBar[r:QToolBar&][p:QWidget*][binding:newfunction]
          hincludes: <QToolBar>
      - file:
          name: progressbar
          elements:
            - class:
                name: QProgressBar
                base: QWidget
                elements:
                  - enum:
                      name: Direction
                      enumerators:
                        - TopToBottom
                        - BottomToTop
                  - constructor: QProgressBar[p:QWidget *=(QWidget*)nullptr]
                  - destructor: ~QProgressBar
                  - function: minimum[r:int][specs:const]
                  - function: maximum[r:int][specs:const]
                  - function: value[r:int][specs:const]
                  - function: text[r:QString][specs:const]
                  - function: setTextVisible[r:void][p:bool]
                  - function: isTextVisible[r:bool][specs:const]
                  - function: alignment[r:Qt::Alignment][specs:const]
                  - function: setAlignment[r:void][p:Qt::Alignment]
                  - function: sizeHint[r:QSize][specs:const]
                  - function: minimumSizeHint[r:QSize][specs:const]
                  - function: orientation[r:Qt::Orientation][specs:const]
                  - function: setInvertedAppearance[r:void][p:bool]
                  - function: invertedAppearance[r:bool][specs:const]
                  - function: setTextDirection[r:void][p:QProgressBar::Direction]
                  - function: textDirection[r:QProgressBar::Direction][specs:const]
                  - function: setFormat[r:void][p:const QString &]
                  - function: resetFormat[r:void]
                  - function: format[r:QString][specs:const]
                  - function: reset[r:void]
                  - function: setRange[r:void][p:int;int]
                  - function: setMinimum[r:void][p:int]
                  - function: setMaximum[r:void][p:int]
                  - function: setValue[r:void][p:int]
                  - function: setOrientation[r:void][p:Qt::Orientation]
                  - function: valueChanged[r:void][p:int][binding:signals]
            - function: newProgressBar[r:QProgressBar&][p:QWidget*=(QWidget*)nullptr][binding:newfunction]
          hincludes: <QProgressBar>