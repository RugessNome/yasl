{
    "modules": [
        {
            "checked": 1,
            "elements": [
                {
                    "checked": 1,
                    "cppincludes": "yasl/core/bytearray-functions.h",
                    "elements": [
                        {
                            "name": "qstrcmp",
                            "parameters": [
                                "const QByteArray &",
                                "const QByteArray &"
                            ],
                            "rename": "strcmp",
                            "returns": "int",
                            "type": "function"
                        },
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Base64Encoding"
                                        },
                                        {
                                            "name": "Base64UrlEncoding"
                                        },
                                        {
                                            "name": "KeepTrailingEquals"
                                        },
                                        {
                                            "name": "OmitTrailingEquals"
                                        }
                                    ],
                                    "name": "Base64Option",
                                    "type": "enum"
                                },
                                {
                                    "name": "QByteArray",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QByteArray",
                                    "parameters": [
                                        "int",
                                        "char"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QByteArray",
                                    "parameters": [
                                        "int",
                                        "Qt::Initialization"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QByteArray",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QByteArray",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "QByteArray",
                                    "parameters": [
                                        "QByteArray &&"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QByteArray &&"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QByteArray &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "resize",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fill",
                                    "parameters": [
                                        "char",
                                        "int"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capacity",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "reserve",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "squeeze",
                                    "type": "function"
                                },
                                {
                                    "name": "detach",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSharedWith",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "at",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "char",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "char",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "operator[]",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "char",
                                    "type": "function"
                                },
                                {
                                    "name": "operator[]",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QByteRef",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "operator[]",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "QByteRef",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "front",
                                    "returns": "char",
                                    "type": "function"
                                },
                                {
                                    "name": "front",
                                    "returns": "QByteRef",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "back",
                                    "returns": "char",
                                    "type": "function"
                                },
                                {
                                    "name": "back",
                                    "returns": "QByteRef",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "indexOf",
                                    "parameters": [
                                        "char",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "indexOf",
                                    "parameters": [
                                        "const QByteArray &",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastIndexOf",
                                    "parameters": [
                                        "char",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastIndexOf",
                                    "parameters": [
                                        "const QByteArray &",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "left",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "right",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mid",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "chopped",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "startsWith",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "startsWith",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "endsWith",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "endsWith",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "truncate",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "chop",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toLower",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "toLower",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "ba_toLower",
                                    "rename": "toLower",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toUpper",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "toUpper",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "ba_toUpper",
                                    "rename": "toUpper",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "trimmed",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "trimmed",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "ba_trimmed",
                                    "rename": "trimmed",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "simplified",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "ba_simplified",
                                    "rename": "simplified",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "leftJustified",
                                    "parameters": [
                                        "int",
                                        "char",
                                        "bool"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rightJustified",
                                    "parameters": [
                                        "int",
                                        "char",
                                        "bool"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "prepend",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "prepend",
                                    "parameters": [
                                        "int",
                                        "char"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "prepend",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "append",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "append",
                                    "parameters": [
                                        "int",
                                        "char"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "append",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "parameters": [
                                        "int",
                                        "char"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "char"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "parameters": [
                                        "int",
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "remove",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "replace",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "replace",
                                    "parameters": [
                                        "char",
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "replace",
                                    "parameters": [
                                        "const QByteArray &",
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "replace",
                                    "parameters": [
                                        "char",
                                        "char"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "split",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "QList<QByteArray>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "repeated",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "append",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "parameters": [
                                        "int",
                                        "const QString &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "replace",
                                    "parameters": [
                                        "char",
                                        "const QString &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "replace",
                                    "parameters": [
                                        "const QString &",
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "indexOf",
                                    "parameters": [
                                        "const QString &",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastIndexOf",
                                    "parameters": [
                                        "const QString &",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<=",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>=",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toShort",
                                    "parameters": [
                                        "bool *",
                                        "int"
                                    ],
                                    "returns": "short",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUShort",
                                    "parameters": [
                                        "bool *",
                                        "int"
                                    ],
                                    "returns": "ushort",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toInt",
                                    "parameters": [
                                        "bool *",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUInt",
                                    "parameters": [
                                        "bool *",
                                        "int"
                                    ],
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLong",
                                    "parameters": [
                                        "bool *",
                                        "int"
                                    ],
                                    "returns": "long",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toULong",
                                    "parameters": [
                                        "bool *",
                                        "int"
                                    ],
                                    "returns": "ulong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLongLong",
                                    "parameters": [
                                        "bool *",
                                        "int"
                                    ],
                                    "returns": "qlonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toULongLong",
                                    "parameters": [
                                        "bool *",
                                        "int"
                                    ],
                                    "returns": "qulonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toFloat",
                                    "parameters": [
                                        "bool *"
                                    ],
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDouble",
                                    "parameters": [
                                        "bool *"
                                    ],
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toBase64",
                                    "parameters": [
                                        "QByteArray::Base64Options"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toBase64",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toHex",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toHex",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPercentEncoding",
                                    "parameters": [
                                        "const QByteArray &",
                                        "const QByteArray &",
                                        "char"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "parameters": [
                                        "short",
                                        "int"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "parameters": [
                                        "ushort",
                                        "int"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "setNum",
                                    "parameters": [
                                        "uint",
                                        "int"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "parameters": [
                                        "qlonglong",
                                        "int"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "parameters": [
                                        "qulonglong",
                                        "int"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "parameters": [
                                        "float",
                                        "char",
                                        "int"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "parameters": [
                                        "double",
                                        "char",
                                        "int"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "setRawData",
                                    "parameters": [
                                        "const char *",
                                        "uint"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "number",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "number",
                                    "parameters": [
                                        "uint",
                                        "int"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "number",
                                    "parameters": [
                                        "qlonglong",
                                        "int"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "number",
                                    "parameters": [
                                        "qulonglong",
                                        "int"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "number",
                                    "parameters": [
                                        "double",
                                        "char",
                                        "int"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromBase64",
                                    "parameters": [
                                        "const QByteArray &",
                                        "QByteArray::Base64Options"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromBase64",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromHex",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromPercentEncoding",
                                    "parameters": [
                                        "const QByteArray &",
                                        "char"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "begin",
                                    "returns": "QByteArray::iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "begin",
                                    "returns": "QByteArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cbegin",
                                    "returns": "QByteArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constBegin",
                                    "returns": "QByteArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "end",
                                    "returns": "QByteArray::iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "end",
                                    "returns": "QByteArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cend",
                                    "returns": "QByteArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constEnd",
                                    "returns": "QByteArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "rbegin",
                                    "returns": "QByteArray::reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "rend",
                                    "returns": "QByteArray::reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rbegin",
                                    "returns": "QByteArray::const_reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rend",
                                    "returns": "QByteArray::const_reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "crbegin",
                                    "returns": "QByteArray::const_reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "crend",
                                    "returns": "QByteArray::const_reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "push_back",
                                    "parameters": [
                                        "char"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "push_back",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "push_front",
                                    "parameters": [
                                        "char"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "push_front",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "shrink_to_fit",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "length",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QByteArray",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QByteArray::Base64Option",
                                "QByteArray::Base64Option"
                            ],
                            "returns": "QByteArray::Base64Options",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QByteArray::Base64Option",
                                "QByteArray::Base64Options"
                            ],
                            "returns": "QByteArray::Base64Options",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QByteArray::Base64Options::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QByteArray &",
                                "const QByteArray &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QByteArray &",
                                "const QByteArray &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<",
                            "parameters": [
                                "const QByteArray &",
                                "const QByteArray &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<=",
                            "parameters": [
                                "const QByteArray &",
                                "const QByteArray &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>",
                            "parameters": [
                                "const QByteArray &",
                                "const QByteArray &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>=",
                            "parameters": [
                                "const QByteArray &",
                                "const QByteArray &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QByteArray &",
                                "const QByteArray &"
                            ],
                            "returns": "const QByteArray",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QByteArray &",
                                "char"
                            ],
                            "returns": "const QByteArray",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "char",
                                "const QByteArray &"
                            ],
                            "returns": "const QByteArray",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QByteArray &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QByteArray &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "qCompress",
                            "parameters": [
                                "const QByteArray &",
                                "int"
                            ],
                            "returns": "QByteArray",
                            "type": "function"
                        },
                        {
                            "name": "qUncompress",
                            "parameters": [
                                "const QByteArray &"
                            ],
                            "returns": "QByteArray",
                            "type": "function"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QByteArray &",
                                "QByteArray &"
                            ],
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "QByteRef &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QByteRef &"
                                    ],
                                    "returns": "QByteRef &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>=",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<=",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QByteRef",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QByteArray>",
                    "name": "bytearray",
                    "type": "file"
                },
                {
                    "cppincludes": "yasl/core/char-functions.h",
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "~QChar",
                                    "type": "destructor"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Null"
                                        },
                                        {
                                            "name": "Tabulation"
                                        },
                                        {
                                            "name": "LineFeed"
                                        },
                                        {
                                            "name": "CarriageReturn"
                                        },
                                        {
                                            "name": "Space"
                                        },
                                        {
                                            "name": "Nbsp"
                                        },
                                        {
                                            "name": "SoftHyphen"
                                        },
                                        {
                                            "name": "ReplacementCharacter"
                                        },
                                        {
                                            "name": "ObjectReplacementCharacter"
                                        },
                                        {
                                            "name": "ByteOrderMark"
                                        },
                                        {
                                            "name": "ByteOrderSwapped"
                                        },
                                        {
                                            "name": "ParagraphSeparator"
                                        },
                                        {
                                            "name": "LineSeparator"
                                        },
                                        {
                                            "name": "LastValidCodePoint"
                                        }
                                    ],
                                    "name": "SpecialCharacter",
                                    "type": "enum"
                                },
                                {
                                    "name": "QChar",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "ushort"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "uchar",
                                        "uchar"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "short"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "QChar::SpecialCharacter"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "QLatin1Char"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "char16_t"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "wchar_t"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "char"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "uchar"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Mark_NonSpacing"
                                        },
                                        {
                                            "name": "Mark_SpacingCombining"
                                        },
                                        {
                                            "name": "Mark_Enclosing"
                                        },
                                        {
                                            "name": "Number_DecimalDigit"
                                        },
                                        {
                                            "name": "Number_Letter"
                                        },
                                        {
                                            "name": "Number_Other"
                                        },
                                        {
                                            "name": "Separator_Space"
                                        },
                                        {
                                            "name": "Separator_Line"
                                        },
                                        {
                                            "name": "Separator_Paragraph"
                                        },
                                        {
                                            "name": "Other_Control"
                                        },
                                        {
                                            "name": "Other_Format"
                                        },
                                        {
                                            "name": "Other_Surrogate"
                                        },
                                        {
                                            "name": "Other_PrivateUse"
                                        },
                                        {
                                            "name": "Other_NotAssigned"
                                        },
                                        {
                                            "name": "Letter_Uppercase"
                                        },
                                        {
                                            "name": "Letter_Lowercase"
                                        },
                                        {
                                            "name": "Letter_Titlecase"
                                        },
                                        {
                                            "name": "Letter_Modifier"
                                        },
                                        {
                                            "name": "Letter_Other"
                                        },
                                        {
                                            "name": "Punctuation_Connector"
                                        },
                                        {
                                            "name": "Punctuation_Dash"
                                        },
                                        {
                                            "name": "Punctuation_Open"
                                        },
                                        {
                                            "name": "Punctuation_Close"
                                        },
                                        {
                                            "name": "Punctuation_InitialQuote"
                                        },
                                        {
                                            "name": "Punctuation_FinalQuote"
                                        },
                                        {
                                            "name": "Punctuation_Other"
                                        },
                                        {
                                            "name": "Symbol_Math"
                                        },
                                        {
                                            "name": "Symbol_Currency"
                                        },
                                        {
                                            "name": "Symbol_Modifier"
                                        },
                                        {
                                            "name": "Symbol_Other"
                                        }
                                    ],
                                    "name": "Category",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Script_Unknown"
                                        },
                                        {
                                            "name": "Script_Inherited"
                                        },
                                        {
                                            "name": "Script_Common"
                                        },
                                        {
                                            "name": "Script_Latin"
                                        },
                                        {
                                            "name": "Script_Greek"
                                        },
                                        {
                                            "name": "Script_Cyrillic"
                                        },
                                        {
                                            "name": "Script_Armenian"
                                        },
                                        {
                                            "name": "Script_Hebrew"
                                        },
                                        {
                                            "name": "Script_Arabic"
                                        },
                                        {
                                            "name": "Script_Syriac"
                                        },
                                        {
                                            "name": "Script_Thaana"
                                        },
                                        {
                                            "name": "Script_Devanagari"
                                        },
                                        {
                                            "name": "Script_Bengali"
                                        },
                                        {
                                            "name": "Script_Gurmukhi"
                                        },
                                        {
                                            "name": "Script_Gujarati"
                                        },
                                        {
                                            "name": "Script_Oriya"
                                        },
                                        {
                                            "name": "Script_Tamil"
                                        },
                                        {
                                            "name": "Script_Telugu"
                                        },
                                        {
                                            "name": "Script_Kannada"
                                        },
                                        {
                                            "name": "Script_Malayalam"
                                        },
                                        {
                                            "name": "Script_Sinhala"
                                        },
                                        {
                                            "name": "Script_Thai"
                                        },
                                        {
                                            "name": "Script_Lao"
                                        },
                                        {
                                            "name": "Script_Tibetan"
                                        },
                                        {
                                            "name": "Script_Myanmar"
                                        },
                                        {
                                            "name": "Script_Georgian"
                                        },
                                        {
                                            "name": "Script_Hangul"
                                        },
                                        {
                                            "name": "Script_Ethiopic"
                                        },
                                        {
                                            "name": "Script_Cherokee"
                                        },
                                        {
                                            "name": "Script_CanadianAboriginal"
                                        },
                                        {
                                            "name": "Script_Ogham"
                                        },
                                        {
                                            "name": "Script_Runic"
                                        },
                                        {
                                            "name": "Script_Khmer"
                                        },
                                        {
                                            "name": "Script_Mongolian"
                                        },
                                        {
                                            "name": "Script_Hiragana"
                                        },
                                        {
                                            "name": "Script_Katakana"
                                        },
                                        {
                                            "name": "Script_Bopomofo"
                                        },
                                        {
                                            "name": "Script_Han"
                                        },
                                        {
                                            "name": "Script_Yi"
                                        },
                                        {
                                            "name": "Script_OldItalic"
                                        },
                                        {
                                            "name": "Script_Gothic"
                                        },
                                        {
                                            "name": "Script_Deseret"
                                        },
                                        {
                                            "name": "Script_Tagalog"
                                        },
                                        {
                                            "name": "Script_Hanunoo"
                                        },
                                        {
                                            "name": "Script_Buhid"
                                        },
                                        {
                                            "name": "Script_Tagbanwa"
                                        },
                                        {
                                            "name": "Script_Coptic"
                                        },
                                        {
                                            "name": "Script_Limbu"
                                        },
                                        {
                                            "name": "Script_TaiLe"
                                        },
                                        {
                                            "name": "Script_LinearB"
                                        },
                                        {
                                            "name": "Script_Ugaritic"
                                        },
                                        {
                                            "name": "Script_Shavian"
                                        },
                                        {
                                            "name": "Script_Osmanya"
                                        },
                                        {
                                            "name": "Script_Cypriot"
                                        },
                                        {
                                            "name": "Script_Braille"
                                        },
                                        {
                                            "name": "Script_Buginese"
                                        },
                                        {
                                            "name": "Script_NewTaiLue"
                                        },
                                        {
                                            "name": "Script_Glagolitic"
                                        },
                                        {
                                            "name": "Script_Tifinagh"
                                        },
                                        {
                                            "name": "Script_SylotiNagri"
                                        },
                                        {
                                            "name": "Script_OldPersian"
                                        },
                                        {
                                            "name": "Script_Kharoshthi"
                                        },
                                        {
                                            "name": "Script_Balinese"
                                        },
                                        {
                                            "name": "Script_Cuneiform"
                                        },
                                        {
                                            "name": "Script_Phoenician"
                                        },
                                        {
                                            "name": "Script_PhagsPa"
                                        },
                                        {
                                            "name": "Script_Nko"
                                        },
                                        {
                                            "name": "Script_Sundanese"
                                        },
                                        {
                                            "name": "Script_Lepcha"
                                        },
                                        {
                                            "name": "Script_OlChiki"
                                        },
                                        {
                                            "name": "Script_Vai"
                                        },
                                        {
                                            "name": "Script_Saurashtra"
                                        },
                                        {
                                            "name": "Script_KayahLi"
                                        },
                                        {
                                            "name": "Script_Rejang"
                                        },
                                        {
                                            "name": "Script_Lycian"
                                        },
                                        {
                                            "name": "Script_Carian"
                                        },
                                        {
                                            "name": "Script_Lydian"
                                        },
                                        {
                                            "name": "Script_Cham"
                                        },
                                        {
                                            "name": "Script_TaiTham"
                                        },
                                        {
                                            "name": "Script_TaiViet"
                                        },
                                        {
                                            "name": "Script_Avestan"
                                        },
                                        {
                                            "name": "Script_EgyptianHieroglyphs"
                                        },
                                        {
                                            "name": "Script_Samaritan"
                                        },
                                        {
                                            "name": "Script_Lisu"
                                        },
                                        {
                                            "name": "Script_Bamum"
                                        },
                                        {
                                            "name": "Script_Javanese"
                                        },
                                        {
                                            "name": "Script_MeeteiMayek"
                                        },
                                        {
                                            "name": "Script_ImperialAramaic"
                                        },
                                        {
                                            "name": "Script_OldSouthArabian"
                                        },
                                        {
                                            "name": "Script_InscriptionalParthian"
                                        },
                                        {
                                            "name": "Script_InscriptionalPahlavi"
                                        },
                                        {
                                            "name": "Script_OldTurkic"
                                        },
                                        {
                                            "name": "Script_Kaithi"
                                        },
                                        {
                                            "name": "Script_Batak"
                                        },
                                        {
                                            "name": "Script_Brahmi"
                                        },
                                        {
                                            "name": "Script_Mandaic"
                                        },
                                        {
                                            "name": "Script_Chakma"
                                        },
                                        {
                                            "name": "Script_MeroiticCursive"
                                        },
                                        {
                                            "name": "Script_MeroiticHieroglyphs"
                                        },
                                        {
                                            "name": "Script_Miao"
                                        },
                                        {
                                            "name": "Script_Sharada"
                                        },
                                        {
                                            "name": "Script_SoraSompeng"
                                        },
                                        {
                                            "name": "Script_Takri"
                                        },
                                        {
                                            "name": "Script_CaucasianAlbanian"
                                        },
                                        {
                                            "name": "Script_BassaVah"
                                        },
                                        {
                                            "name": "Script_Duployan"
                                        },
                                        {
                                            "name": "Script_Elbasan"
                                        },
                                        {
                                            "name": "Script_Grantha"
                                        },
                                        {
                                            "name": "Script_PahawhHmong"
                                        },
                                        {
                                            "name": "Script_Khojki"
                                        },
                                        {
                                            "name": "Script_LinearA"
                                        },
                                        {
                                            "name": "Script_Mahajani"
                                        },
                                        {
                                            "name": "Script_Manichaean"
                                        },
                                        {
                                            "name": "Script_MendeKikakui"
                                        },
                                        {
                                            "name": "Script_Modi"
                                        },
                                        {
                                            "name": "Script_Mro"
                                        },
                                        {
                                            "name": "Script_OldNorthArabian"
                                        },
                                        {
                                            "name": "Script_Nabataean"
                                        },
                                        {
                                            "name": "Script_Palmyrene"
                                        },
                                        {
                                            "name": "Script_PauCinHau"
                                        },
                                        {
                                            "name": "Script_OldPermic"
                                        },
                                        {
                                            "name": "Script_PsalterPahlavi"
                                        },
                                        {
                                            "name": "Script_Siddham"
                                        },
                                        {
                                            "name": "Script_Khudawadi"
                                        },
                                        {
                                            "name": "Script_Tirhuta"
                                        },
                                        {
                                            "name": "Script_WarangCiti"
                                        },
                                        {
                                            "name": "Script_Ahom"
                                        },
                                        {
                                            "name": "Script_AnatolianHieroglyphs"
                                        },
                                        {
                                            "name": "Script_Hatran"
                                        },
                                        {
                                            "name": "Script_Multani"
                                        },
                                        {
                                            "name": "Script_OldHungarian"
                                        },
                                        {
                                            "name": "Script_SignWriting"
                                        },
                                        {
                                            "name": "ScriptCount"
                                        }
                                    ],
                                    "name": "Script",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "DirL"
                                        },
                                        {
                                            "name": "DirR"
                                        },
                                        {
                                            "name": "DirEN"
                                        },
                                        {
                                            "name": "DirES"
                                        },
                                        {
                                            "name": "DirET"
                                        },
                                        {
                                            "name": "DirAN"
                                        },
                                        {
                                            "name": "DirCS"
                                        },
                                        {
                                            "name": "DirB"
                                        },
                                        {
                                            "name": "DirS"
                                        },
                                        {
                                            "name": "DirWS"
                                        },
                                        {
                                            "name": "DirON"
                                        },
                                        {
                                            "name": "DirLRE"
                                        },
                                        {
                                            "name": "DirLRO"
                                        },
                                        {
                                            "name": "DirAL"
                                        },
                                        {
                                            "name": "DirRLE"
                                        },
                                        {
                                            "name": "DirRLO"
                                        },
                                        {
                                            "name": "DirPDF"
                                        },
                                        {
                                            "name": "DirNSM"
                                        },
                                        {
                                            "name": "DirBN"
                                        },
                                        {
                                            "name": "DirLRI"
                                        },
                                        {
                                            "name": "DirRLI"
                                        },
                                        {
                                            "name": "DirFSI"
                                        },
                                        {
                                            "name": "DirPDI"
                                        }
                                    ],
                                    "name": "Direction",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoDecomposition"
                                        },
                                        {
                                            "name": "Canonical"
                                        },
                                        {
                                            "name": "Font"
                                        },
                                        {
                                            "name": "NoBreak"
                                        },
                                        {
                                            "name": "Initial"
                                        },
                                        {
                                            "name": "Medial"
                                        },
                                        {
                                            "name": "Final"
                                        },
                                        {
                                            "name": "Isolated"
                                        },
                                        {
                                            "name": "Circle"
                                        },
                                        {
                                            "name": "Super"
                                        },
                                        {
                                            "name": "Sub"
                                        },
                                        {
                                            "name": "Vertical"
                                        },
                                        {
                                            "name": "Wide"
                                        },
                                        {
                                            "name": "Narrow"
                                        },
                                        {
                                            "name": "Small"
                                        },
                                        {
                                            "name": "Square"
                                        },
                                        {
                                            "name": "Compat"
                                        },
                                        {
                                            "name": "Fraction"
                                        }
                                    ],
                                    "name": "Decomposition",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Joining_None"
                                        },
                                        {
                                            "name": "Joining_Causing"
                                        },
                                        {
                                            "name": "Joining_Dual"
                                        },
                                        {
                                            "name": "Joining_Right"
                                        },
                                        {
                                            "name": "Joining_Left"
                                        },
                                        {
                                            "name": "Joining_Transparent"
                                        }
                                    ],
                                    "name": "JoiningType",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "OtherJoining"
                                        },
                                        {
                                            "name": "Dual"
                                        },
                                        {
                                            "name": "Right"
                                        },
                                        {
                                            "name": "Center"
                                        }
                                    ],
                                    "name": "Joining",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Combining_BelowLeftAttached"
                                        },
                                        {
                                            "name": "Combining_BelowAttached"
                                        },
                                        {
                                            "name": "Combining_BelowRightAttached"
                                        },
                                        {
                                            "name": "Combining_LeftAttached"
                                        },
                                        {
                                            "name": "Combining_RightAttached"
                                        },
                                        {
                                            "name": "Combining_AboveLeftAttached"
                                        },
                                        {
                                            "name": "Combining_AboveAttached"
                                        },
                                        {
                                            "name": "Combining_AboveRightAttached"
                                        },
                                        {
                                            "name": "Combining_BelowLeft"
                                        },
                                        {
                                            "name": "Combining_Below"
                                        },
                                        {
                                            "name": "Combining_BelowRight"
                                        },
                                        {
                                            "name": "Combining_Left"
                                        },
                                        {
                                            "name": "Combining_Right"
                                        },
                                        {
                                            "name": "Combining_AboveLeft"
                                        },
                                        {
                                            "name": "Combining_Above"
                                        },
                                        {
                                            "name": "Combining_AboveRight"
                                        },
                                        {
                                            "name": "Combining_DoubleBelow"
                                        },
                                        {
                                            "name": "Combining_DoubleAbove"
                                        },
                                        {
                                            "name": "Combining_IotaSubscript"
                                        }
                                    ],
                                    "name": "CombiningClass",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Unicode_Unassigned"
                                        },
                                        {
                                            "name": "Unicode_1_1"
                                        },
                                        {
                                            "name": "Unicode_2_0"
                                        },
                                        {
                                            "name": "Unicode_2_1_2"
                                        },
                                        {
                                            "name": "Unicode_3_0"
                                        },
                                        {
                                            "name": "Unicode_3_1"
                                        },
                                        {
                                            "name": "Unicode_3_2"
                                        },
                                        {
                                            "name": "Unicode_4_0"
                                        },
                                        {
                                            "name": "Unicode_4_1"
                                        },
                                        {
                                            "name": "Unicode_5_0"
                                        },
                                        {
                                            "name": "Unicode_5_1"
                                        },
                                        {
                                            "name": "Unicode_5_2"
                                        },
                                        {
                                            "name": "Unicode_6_0"
                                        },
                                        {
                                            "name": "Unicode_6_1"
                                        },
                                        {
                                            "name": "Unicode_6_2"
                                        },
                                        {
                                            "name": "Unicode_6_3"
                                        },
                                        {
                                            "name": "Unicode_7_0"
                                        },
                                        {
                                            "name": "Unicode_8_0"
                                        }
                                    ],
                                    "name": "UnicodeVersion",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "category",
                                    "returns": "QChar::Category",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "direction",
                                    "returns": "QChar::Direction",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "joiningType",
                                    "returns": "QChar::JoiningType",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "joining",
                                    "returns": "QChar::Joining",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "combiningClass",
                                    "returns": "unsigned char",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mirroredChar",
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasMirrored",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "decomposition",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "decompositionTag",
                                    "returns": "QChar::Decomposition",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "digitValue",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLower",
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUpper",
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toTitleCase",
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCaseFolded",
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "script",
                                    "returns": "QChar::Script",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "unicodeVersion",
                                    "returns": "QChar::UnicodeVersion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLatin1",
                                    "returns": "char",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "unicode",
                                    "returns": "ushort",
                                    "type": "function"
                                },
                                {
                                    "name": "unicode",
                                    "returns": "ushort &",
                                    "type": "function"
                                },
                                {
                                    "name": "fromLatin1",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "QChar",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isPrint",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSpace",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isMark",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isPunct",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSymbol",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isLetter",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNumber",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isLetterOrNumber",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDigit",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isLower",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isUpper",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTitleCase",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNonCharacter",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isHighSurrogate",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isLowSurrogate",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSurrogate",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cell",
                                    "returns": "uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "row",
                                    "returns": "uchar",
                                    "type": "function"
                                },
                                {
                                    "name": "setCell",
                                    "parameters": [
                                        "uchar"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setRow",
                                    "parameters": [
                                        "uchar"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "isNonCharacter",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isHighSurrogate",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isLowSurrogate",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isSurrogate",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "requiresSurrogates",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "surrogateToUcs4",
                                    "parameters": [
                                        "ushort",
                                        "ushort"
                                    ],
                                    "returns": "uint",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "surrogateToUcs4",
                                    "parameters": [
                                        "QChar",
                                        "QChar"
                                    ],
                                    "returns": "uint",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "highSurrogate",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "ushort",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "lowSurrogate",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "ushort",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_category",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "category",
                                    "returns": "QChar::Category",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_direction",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "direction",
                                    "returns": "QChar::Direction",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_joiningType",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "joiningType",
                                    "returns": "QChar::JoiningType",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_joining",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "joining",
                                    "returns": "QChar::Joining",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_combiningClass",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "combiningClass",
                                    "returns": "unsigned char",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_mirroredChar",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "mirroredChar",
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_hasMirrored",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "hasMirrored",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_decomposition",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "decomposition",
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_decompositionTag",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "decompositionTag",
                                    "returns": "QChar::Decomposition",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_digitValue",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "digitValue",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_toLower",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "toLower",
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_toUpper",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "toUpper",
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_toTitleCase",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "toTitleCase",
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_toCaseFolded",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "toCaseFolded",
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_script",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "script",
                                    "returns": "QChar::Script",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_unicodeVersion",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "unicodeVersion",
                                    "returns": "QChar::UnicodeVersion",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_currentUnicodeVersion",
                                    "rename": "currentUnicodeVersion",
                                    "returns": "QChar::UnicodeVersion",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_isPrint",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "isPrint",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "isSpace",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_isMark",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "isMark",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_isPunct",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "isPunct",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_isSymbol",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "isSymbol",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "isLetter",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isNumber",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isLetterOrNumber",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isDigit",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isLower",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isUpper",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isTitleCase",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QChar",
                            "type": "class"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "QChar",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<",
                            "parameters": [
                                "QChar",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "QChar",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>=",
                            "parameters": [
                                "QChar",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>",
                            "parameters": [
                                "QChar",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<=",
                            "parameters": [
                                "QChar",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "QChar",
                                "std::nullptr_t"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<",
                            "parameters": [
                                "QChar",
                                "std::nullptr_t"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "std::nullptr_t",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<",
                            "parameters": [
                                "std::nullptr_t",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "QChar",
                                "std::nullptr_t"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>=",
                            "parameters": [
                                "QChar",
                                "std::nullptr_t"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>",
                            "parameters": [
                                "QChar",
                                "std::nullptr_t"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<=",
                            "parameters": [
                                "QChar",
                                "std::nullptr_t"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "std::nullptr_t",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>=",
                            "parameters": [
                                "std::nullptr_t",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>",
                            "parameters": [
                                "std::nullptr_t",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<=",
                            "parameters": [
                                "std::nullptr_t",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "QChar"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QChar &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QChar>",
                    "name": "char",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "name": "qt_getQtMetaObject",
                            "returns": "const QMetaObject *",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "color0"
                                        },
                                        {
                                            "name": "color1"
                                        },
                                        {
                                            "name": "black"
                                        },
                                        {
                                            "name": "white"
                                        },
                                        {
                                            "name": "darkGray"
                                        },
                                        {
                                            "name": "gray"
                                        },
                                        {
                                            "name": "lightGray"
                                        },
                                        {
                                            "name": "red"
                                        },
                                        {
                                            "name": "green"
                                        },
                                        {
                                            "name": "blue"
                                        },
                                        {
                                            "name": "cyan"
                                        },
                                        {
                                            "name": "magenta"
                                        },
                                        {
                                            "name": "yellow"
                                        },
                                        {
                                            "name": "darkRed"
                                        },
                                        {
                                            "name": "darkGreen"
                                        },
                                        {
                                            "name": "darkBlue"
                                        },
                                        {
                                            "name": "darkCyan"
                                        },
                                        {
                                            "name": "darkMagenta"
                                        },
                                        {
                                            "name": "darkYellow"
                                        },
                                        {
                                            "name": "transparent"
                                        }
                                    ],
                                    "name": "GlobalColor",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoModifier"
                                        },
                                        {
                                            "name": "ShiftModifier"
                                        },
                                        {
                                            "name": "ControlModifier"
                                        },
                                        {
                                            "name": "AltModifier"
                                        },
                                        {
                                            "name": "MetaModifier"
                                        },
                                        {
                                            "name": "KeypadModifier"
                                        },
                                        {
                                            "name": "GroupSwitchModifier"
                                        },
                                        {
                                            "name": "KeyboardModifierMask"
                                        }
                                    ],
                                    "name": "KeyboardModifier",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "META"
                                        },
                                        {
                                            "name": "SHIFT"
                                        },
                                        {
                                            "name": "CTRL"
                                        },
                                        {
                                            "name": "ALT"
                                        },
                                        {
                                            "name": "MODIFIER_MASK"
                                        },
                                        {
                                            "name": "UNICODE_ACCEL"
                                        }
                                    ],
                                    "name": "Modifier",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoButton"
                                        },
                                        {
                                            "name": "LeftButton"
                                        },
                                        {
                                            "name": "RightButton"
                                        },
                                        {
                                            "name": "MidButton"
                                        },
                                        {
                                            "name": "MiddleButton"
                                        },
                                        {
                                            "name": "BackButton"
                                        },
                                        {
                                            "name": "XButton1"
                                        },
                                        {
                                            "name": "ExtraButton1"
                                        },
                                        {
                                            "name": "ForwardButton"
                                        },
                                        {
                                            "name": "XButton2"
                                        },
                                        {
                                            "name": "ExtraButton2"
                                        },
                                        {
                                            "name": "TaskButton"
                                        },
                                        {
                                            "name": "ExtraButton3"
                                        },
                                        {
                                            "name": "ExtraButton4"
                                        },
                                        {
                                            "name": "ExtraButton5"
                                        },
                                        {
                                            "name": "ExtraButton6"
                                        },
                                        {
                                            "name": "ExtraButton7"
                                        },
                                        {
                                            "name": "ExtraButton8"
                                        },
                                        {
                                            "name": "ExtraButton9"
                                        },
                                        {
                                            "name": "ExtraButton10"
                                        },
                                        {
                                            "name": "ExtraButton11"
                                        },
                                        {
                                            "name": "ExtraButton12"
                                        },
                                        {
                                            "name": "ExtraButton13"
                                        },
                                        {
                                            "name": "ExtraButton14"
                                        },
                                        {
                                            "name": "ExtraButton15"
                                        },
                                        {
                                            "name": "ExtraButton16"
                                        },
                                        {
                                            "name": "ExtraButton17"
                                        },
                                        {
                                            "name": "ExtraButton18"
                                        },
                                        {
                                            "name": "ExtraButton19"
                                        },
                                        {
                                            "name": "ExtraButton20"
                                        },
                                        {
                                            "name": "ExtraButton21"
                                        },
                                        {
                                            "name": "ExtraButton22"
                                        },
                                        {
                                            "name": "ExtraButton23"
                                        },
                                        {
                                            "name": "ExtraButton24"
                                        },
                                        {
                                            "name": "AllButtons"
                                        },
                                        {
                                            "name": "MaxMouseButton"
                                        },
                                        {
                                            "name": "MouseButtonMask"
                                        }
                                    ],
                                    "name": "MouseButton",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "Horizontal"
                                        },
                                        {
                                            "name": "Vertical"
                                        }
                                    ],
                                    "name": "Orientation",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoFocus"
                                        },
                                        {
                                            "name": "TabFocus"
                                        },
                                        {
                                            "name": "ClickFocus"
                                        },
                                        {
                                            "name": "StrongFocus"
                                        },
                                        {
                                            "name": "WheelFocus"
                                        }
                                    ],
                                    "name": "FocusPolicy",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoTabFocus"
                                        },
                                        {
                                            "name": "TabFocusTextControls"
                                        },
                                        {
                                            "name": "TabFocusListControls"
                                        },
                                        {
                                            "name": "TabFocusAllControls"
                                        }
                                    ],
                                    "name": "TabFocusBehavior",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "AscendingOrder"
                                        },
                                        {
                                            "name": "DescendingOrder"
                                        }
                                    ],
                                    "name": "SortOrder",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "StretchTile"
                                        },
                                        {
                                            "name": "RepeatTile"
                                        },
                                        {
                                            "name": "RoundTile"
                                        }
                                    ],
                                    "name": "TileRule",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "AlignLeft"
                                        },
                                        {
                                            "name": "AlignLeading"
                                        },
                                        {
                                            "name": "AlignRight"
                                        },
                                        {
                                            "name": "AlignTrailing"
                                        },
                                        {
                                            "name": "AlignHCenter"
                                        },
                                        {
                                            "name": "AlignJustify"
                                        },
                                        {
                                            "name": "AlignAbsolute"
                                        },
                                        {
                                            "name": "AlignHorizontal_Mask"
                                        },
                                        {
                                            "name": "AlignTop"
                                        },
                                        {
                                            "name": "AlignBottom"
                                        },
                                        {
                                            "name": "AlignVCenter"
                                        },
                                        {
                                            "name": "AlignBaseline"
                                        },
                                        {
                                            "name": "AlignVertical_Mask"
                                        },
                                        {
                                            "name": "AlignCenter"
                                        }
                                    ],
                                    "name": "AlignmentFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "TextSingleLine"
                                        },
                                        {
                                            "name": "TextDontClip"
                                        },
                                        {
                                            "name": "TextExpandTabs"
                                        },
                                        {
                                            "name": "TextShowMnemonic"
                                        },
                                        {
                                            "name": "TextWordWrap"
                                        },
                                        {
                                            "name": "TextWrapAnywhere"
                                        },
                                        {
                                            "name": "TextDontPrint"
                                        },
                                        {
                                            "name": "TextIncludeTrailingSpaces"
                                        },
                                        {
                                            "name": "TextHideMnemonic"
                                        },
                                        {
                                            "name": "TextJustificationForced"
                                        },
                                        {
                                            "name": "TextForceLeftToRight"
                                        },
                                        {
                                            "name": "TextForceRightToLeft"
                                        },
                                        {
                                            "name": "TextLongestVariant"
                                        },
                                        {
                                            "name": "TextBypassShaping"
                                        }
                                    ],
                                    "name": "TextFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ElideLeft"
                                        },
                                        {
                                            "name": "ElideRight"
                                        },
                                        {
                                            "name": "ElideMiddle"
                                        },
                                        {
                                            "name": "ElideNone"
                                        }
                                    ],
                                    "name": "TextElideMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "WhiteSpaceNormal"
                                        },
                                        {
                                            "name": "WhiteSpacePre"
                                        },
                                        {
                                            "name": "WhiteSpaceNoWrap"
                                        },
                                        {
                                            "name": "WhiteSpaceModeUndefined"
                                        }
                                    ],
                                    "name": "WhiteSpaceMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ExactHit"
                                        },
                                        {
                                            "name": "FuzzyHit"
                                        }
                                    ],
                                    "name": "HitTestAccuracy",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "Widget"
                                        },
                                        {
                                            "name": "Window"
                                        },
                                        {
                                            "name": "Dialog"
                                        },
                                        {
                                            "name": "Sheet"
                                        },
                                        {
                                            "name": "Drawer"
                                        },
                                        {
                                            "name": "Popup"
                                        },
                                        {
                                            "name": "Tool"
                                        },
                                        {
                                            "name": "ToolTip"
                                        },
                                        {
                                            "name": "SplashScreen"
                                        },
                                        {
                                            "name": "Desktop"
                                        },
                                        {
                                            "name": "SubWindow"
                                        },
                                        {
                                            "name": "ForeignWindow"
                                        },
                                        {
                                            "name": "CoverWindow"
                                        },
                                        {
                                            "name": "WindowType_Mask"
                                        },
                                        {
                                            "name": "MSWindowsFixedSizeDialogHint"
                                        },
                                        {
                                            "name": "MSWindowsOwnDC"
                                        },
                                        {
                                            "name": "BypassWindowManagerHint"
                                        },
                                        {
                                            "name": "X11BypassWindowManagerHint"
                                        },
                                        {
                                            "name": "FramelessWindowHint"
                                        },
                                        {
                                            "name": "WindowTitleHint"
                                        },
                                        {
                                            "name": "WindowSystemMenuHint"
                                        },
                                        {
                                            "name": "WindowMinimizeButtonHint"
                                        },
                                        {
                                            "name": "WindowMaximizeButtonHint"
                                        },
                                        {
                                            "name": "WindowMinMaxButtonsHint"
                                        },
                                        {
                                            "name": "WindowContextHelpButtonHint"
                                        },
                                        {
                                            "name": "WindowShadeButtonHint"
                                        },
                                        {
                                            "name": "WindowStaysOnTopHint"
                                        },
                                        {
                                            "name": "WindowTransparentForInput"
                                        },
                                        {
                                            "name": "WindowOverridesSystemGestures"
                                        },
                                        {
                                            "name": "WindowDoesNotAcceptFocus"
                                        },
                                        {
                                            "name": "MaximizeUsingFullscreenGeometryHint"
                                        },
                                        {
                                            "name": "CustomizeWindowHint"
                                        },
                                        {
                                            "name": "WindowStaysOnBottomHint"
                                        },
                                        {
                                            "name": "WindowCloseButtonHint"
                                        },
                                        {
                                            "name": "MacWindowToolBarButtonHint"
                                        },
                                        {
                                            "name": "BypassGraphicsProxyWidget"
                                        },
                                        {
                                            "name": "NoDropShadowWindowHint"
                                        },
                                        {
                                            "name": "WindowFullscreenButtonHint"
                                        }
                                    ],
                                    "name": "WindowType",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "WindowNoState"
                                        },
                                        {
                                            "name": "WindowMinimized"
                                        },
                                        {
                                            "name": "WindowMaximized"
                                        },
                                        {
                                            "name": "WindowFullScreen"
                                        },
                                        {
                                            "name": "WindowActive"
                                        }
                                    ],
                                    "name": "WindowState",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ApplicationSuspended"
                                        },
                                        {
                                            "name": "ApplicationHidden"
                                        },
                                        {
                                            "name": "ApplicationInactive"
                                        },
                                        {
                                            "name": "ApplicationActive"
                                        }
                                    ],
                                    "name": "ApplicationState",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "PrimaryOrientation"
                                        },
                                        {
                                            "name": "PortraitOrientation"
                                        },
                                        {
                                            "name": "LandscapeOrientation"
                                        },
                                        {
                                            "name": "InvertedPortraitOrientation"
                                        },
                                        {
                                            "name": "InvertedLandscapeOrientation"
                                        }
                                    ],
                                    "name": "ScreenOrientation",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "WA_Disabled"
                                        },
                                        {
                                            "name": "WA_UnderMouse"
                                        },
                                        {
                                            "name": "WA_MouseTracking"
                                        },
                                        {
                                            "name": "WA_ContentsPropagated"
                                        },
                                        {
                                            "name": "WA_OpaquePaintEvent"
                                        },
                                        {
                                            "name": "WA_NoBackground"
                                        },
                                        {
                                            "name": "WA_StaticContents"
                                        },
                                        {
                                            "name": "WA_LaidOut"
                                        },
                                        {
                                            "name": "WA_PaintOnScreen"
                                        },
                                        {
                                            "name": "WA_NoSystemBackground"
                                        },
                                        {
                                            "name": "WA_UpdatesDisabled"
                                        },
                                        {
                                            "name": "WA_Mapped"
                                        },
                                        {
                                            "name": "WA_MacNoClickThrough"
                                        },
                                        {
                                            "name": "WA_InputMethodEnabled"
                                        },
                                        {
                                            "name": "WA_WState_Visible"
                                        },
                                        {
                                            "name": "WA_WState_Hidden"
                                        },
                                        {
                                            "name": "WA_ForceDisabled"
                                        },
                                        {
                                            "name": "WA_KeyCompression"
                                        },
                                        {
                                            "name": "WA_PendingMoveEvent"
                                        },
                                        {
                                            "name": "WA_PendingResizeEvent"
                                        },
                                        {
                                            "name": "WA_SetPalette"
                                        },
                                        {
                                            "name": "WA_SetFont"
                                        },
                                        {
                                            "name": "WA_SetCursor"
                                        },
                                        {
                                            "name": "WA_NoChildEventsFromChildren"
                                        },
                                        {
                                            "name": "WA_WindowModified"
                                        },
                                        {
                                            "name": "WA_Resized"
                                        },
                                        {
                                            "name": "WA_Moved"
                                        },
                                        {
                                            "name": "WA_PendingUpdate"
                                        },
                                        {
                                            "name": "WA_InvalidSize"
                                        },
                                        {
                                            "name": "WA_MacBrushedMetal"
                                        },
                                        {
                                            "name": "WA_MacMetalStyle"
                                        },
                                        {
                                            "name": "WA_CustomWhatsThis"
                                        },
                                        {
                                            "name": "WA_LayoutOnEntireRect"
                                        },
                                        {
                                            "name": "WA_OutsideWSRange"
                                        },
                                        {
                                            "name": "WA_GrabbedShortcut"
                                        },
                                        {
                                            "name": "WA_TransparentForMouseEvents"
                                        },
                                        {
                                            "name": "WA_PaintUnclipped"
                                        },
                                        {
                                            "name": "WA_SetWindowIcon"
                                        },
                                        {
                                            "name": "WA_NoMouseReplay"
                                        },
                                        {
                                            "name": "WA_DeleteOnClose"
                                        },
                                        {
                                            "name": "WA_RightToLeft"
                                        },
                                        {
                                            "name": "WA_SetLayoutDirection"
                                        },
                                        {
                                            "name": "WA_NoChildEventsForParent"
                                        },
                                        {
                                            "name": "WA_ForceUpdatesDisabled"
                                        },
                                        {
                                            "name": "WA_WState_Created"
                                        },
                                        {
                                            "name": "WA_WState_CompressKeys"
                                        },
                                        {
                                            "name": "WA_WState_InPaintEvent"
                                        },
                                        {
                                            "name": "WA_WState_Reparented"
                                        },
                                        {
                                            "name": "WA_WState_ConfigPending"
                                        },
                                        {
                                            "name": "WA_WState_Polished"
                                        },
                                        {
                                            "name": "WA_WState_DND"
                                        },
                                        {
                                            "name": "WA_WState_OwnSizePolicy"
                                        },
                                        {
                                            "name": "WA_WState_ExplicitShowHide"
                                        },
                                        {
                                            "name": "WA_ShowModal"
                                        },
                                        {
                                            "name": "WA_MouseNoMask"
                                        },
                                        {
                                            "name": "WA_GroupLeader"
                                        },
                                        {
                                            "name": "WA_NoMousePropagation"
                                        },
                                        {
                                            "name": "WA_Hover"
                                        },
                                        {
                                            "name": "WA_InputMethodTransparent"
                                        },
                                        {
                                            "name": "WA_QuitOnClose"
                                        },
                                        {
                                            "name": "WA_KeyboardFocusChange"
                                        },
                                        {
                                            "name": "WA_AcceptDrops"
                                        },
                                        {
                                            "name": "WA_DropSiteRegistered"
                                        },
                                        {
                                            "name": "WA_ForceAcceptDrops"
                                        },
                                        {
                                            "name": "WA_WindowPropagation"
                                        },
                                        {
                                            "name": "WA_NoX11EventCompression"
                                        },
                                        {
                                            "name": "WA_TintedBackground"
                                        },
                                        {
                                            "name": "WA_X11OpenGLOverlay"
                                        },
                                        {
                                            "name": "WA_AlwaysShowToolTips"
                                        },
                                        {
                                            "name": "WA_MacOpaqueSizeGrip"
                                        },
                                        {
                                            "name": "WA_SetStyle"
                                        },
                                        {
                                            "name": "WA_SetLocale"
                                        },
                                        {
                                            "name": "WA_MacShowFocusRect"
                                        },
                                        {
                                            "name": "WA_MacNormalSize"
                                        },
                                        {
                                            "name": "WA_MacSmallSize"
                                        },
                                        {
                                            "name": "WA_MacMiniSize"
                                        },
                                        {
                                            "name": "WA_LayoutUsesWidgetRect"
                                        },
                                        {
                                            "name": "WA_StyledBackground"
                                        },
                                        {
                                            "name": "WA_MSWindowsUseDirect3D"
                                        },
                                        {
                                            "name": "WA_CanHostQMdiSubWindowTitleBar"
                                        },
                                        {
                                            "name": "WA_MacAlwaysShowToolWindow"
                                        },
                                        {
                                            "name": "WA_StyleSheet"
                                        },
                                        {
                                            "name": "WA_ShowWithoutActivating"
                                        },
                                        {
                                            "name": "WA_X11BypassTransientForHint"
                                        },
                                        {
                                            "name": "WA_NativeWindow"
                                        },
                                        {
                                            "name": "WA_DontCreateNativeAncestors"
                                        },
                                        {
                                            "name": "WA_MacVariableSize"
                                        },
                                        {
                                            "name": "WA_DontShowOnScreen"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeDesktop"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeDock"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeToolBar"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeMenu"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeUtility"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeSplash"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeDialog"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeDropDownMenu"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypePopupMenu"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeToolTip"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeNotification"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeCombo"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeDND"
                                        },
                                        {
                                            "name": "WA_MacFrameworkScaled"
                                        },
                                        {
                                            "name": "WA_SetWindowModality"
                                        },
                                        {
                                            "name": "WA_WState_WindowOpacitySet"
                                        },
                                        {
                                            "name": "WA_TranslucentBackground"
                                        },
                                        {
                                            "name": "WA_AcceptTouchEvents"
                                        },
                                        {
                                            "name": "WA_WState_AcceptedTouchBeginEvent"
                                        },
                                        {
                                            "name": "WA_TouchPadAcceptSingleTouchEvents"
                                        },
                                        {
                                            "name": "WA_X11DoNotAcceptFocus"
                                        },
                                        {
                                            "name": "WA_MacNoShadow"
                                        },
                                        {
                                            "name": "WA_AlwaysStackOnTop"
                                        },
                                        {
                                            "name": "WA_TabletTracking"
                                        },
                                        {
                                            "name": "WA_AttributeCount"
                                        }
                                    ],
                                    "name": "WidgetAttribute",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "AA_ImmediateWidgetCreation"
                                        },
                                        {
                                            "name": "AA_MSWindowsUseDirect3DByDefault"
                                        },
                                        {
                                            "name": "AA_DontShowIconsInMenus"
                                        },
                                        {
                                            "name": "AA_NativeWindows"
                                        },
                                        {
                                            "name": "AA_DontCreateNativeWidgetSiblings"
                                        },
                                        {
                                            "name": "AA_PluginApplication"
                                        },
                                        {
                                            "name": "AA_MacPluginApplication"
                                        },
                                        {
                                            "name": "AA_DontUseNativeMenuBar"
                                        },
                                        {
                                            "name": "AA_MacDontSwapCtrlAndMeta"
                                        },
                                        {
                                            "name": "AA_Use96Dpi"
                                        },
                                        {
                                            "name": "AA_X11InitThreads"
                                        },
                                        {
                                            "name": "AA_SynthesizeTouchForUnhandledMouseEvents"
                                        },
                                        {
                                            "name": "AA_SynthesizeMouseForUnhandledTouchEvents"
                                        },
                                        {
                                            "name": "AA_UseHighDpiPixmaps"
                                        },
                                        {
                                            "name": "AA_ForceRasterWidgets"
                                        },
                                        {
                                            "name": "AA_UseDesktopOpenGL"
                                        },
                                        {
                                            "name": "AA_UseOpenGLES"
                                        },
                                        {
                                            "name": "AA_UseSoftwareOpenGL"
                                        },
                                        {
                                            "name": "AA_ShareOpenGLContexts"
                                        },
                                        {
                                            "name": "AA_SetPalette"
                                        },
                                        {
                                            "name": "AA_EnableHighDpiScaling"
                                        },
                                        {
                                            "name": "AA_DisableHighDpiScaling"
                                        },
                                        {
                                            "name": "AA_UseStyleSheetPropagationInWidgetStyles"
                                        },
                                        {
                                            "name": "AA_DontUseNativeDialogs"
                                        },
                                        {
                                            "name": "AA_SynthesizeMouseForUnhandledTabletEvents"
                                        },
                                        {
                                            "name": "AA_CompressHighFrequencyEvents"
                                        },
                                        {
                                            "name": "AA_DontCheckOpenGLContextThreadAffinity"
                                        },
                                        {
                                            "name": "AA_DisableShaderDiskCache"
                                        },
                                        {
                                            "name": "AA_DontShowShortcutsInContextMenus"
                                        },
                                        {
                                            "name": "AA_CompressTabletEvents"
                                        },
                                        {
                                            "name": "AA_DisableWindowContextHelpButton"
                                        },
                                        {
                                            "name": "AA_AttributeCount"
                                        }
                                    ],
                                    "name": "ApplicationAttribute",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ColorMode_Mask"
                                        },
                                        {
                                            "name": "AutoColor"
                                        },
                                        {
                                            "name": "ColorOnly"
                                        },
                                        {
                                            "name": "MonoOnly"
                                        },
                                        {
                                            "name": "AlphaDither_Mask"
                                        },
                                        {
                                            "name": "ThresholdAlphaDither"
                                        },
                                        {
                                            "name": "OrderedAlphaDither"
                                        },
                                        {
                                            "name": "DiffuseAlphaDither"
                                        },
                                        {
                                            "name": "NoAlpha"
                                        },
                                        {
                                            "name": "Dither_Mask"
                                        },
                                        {
                                            "name": "DiffuseDither"
                                        },
                                        {
                                            "name": "OrderedDither"
                                        },
                                        {
                                            "name": "ThresholdDither"
                                        },
                                        {
                                            "name": "DitherMode_Mask"
                                        },
                                        {
                                            "name": "AutoDither"
                                        },
                                        {
                                            "name": "PreferDither"
                                        },
                                        {
                                            "name": "AvoidDither"
                                        },
                                        {
                                            "name": "NoOpaqueDetection"
                                        },
                                        {
                                            "name": "NoFormatConversion"
                                        }
                                    ],
                                    "name": "ImageConversionFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "TransparentMode"
                                        },
                                        {
                                            "name": "OpaqueMode"
                                        }
                                    ],
                                    "name": "BGMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "Key_Escape"
                                        },
                                        {
                                            "name": "Key_Tab"
                                        },
                                        {
                                            "name": "Key_Backtab"
                                        },
                                        {
                                            "name": "Key_Backspace"
                                        },
                                        {
                                            "name": "Key_Return"
                                        },
                                        {
                                            "name": "Key_Enter"
                                        },
                                        {
                                            "name": "Key_Insert"
                                        },
                                        {
                                            "name": "Key_Delete"
                                        },
                                        {
                                            "name": "Key_Pause"
                                        },
                                        {
                                            "name": "Key_Print"
                                        },
                                        {
                                            "name": "Key_SysReq"
                                        },
                                        {
                                            "name": "Key_Clear"
                                        },
                                        {
                                            "name": "Key_Home"
                                        },
                                        {
                                            "name": "Key_End"
                                        },
                                        {
                                            "name": "Key_Left"
                                        },
                                        {
                                            "name": "Key_Up"
                                        },
                                        {
                                            "name": "Key_Right"
                                        },
                                        {
                                            "name": "Key_Down"
                                        },
                                        {
                                            "name": "Key_PageUp"
                                        },
                                        {
                                            "name": "Key_PageDown"
                                        },
                                        {
                                            "name": "Key_Shift"
                                        },
                                        {
                                            "name": "Key_Control"
                                        },
                                        {
                                            "name": "Key_Meta"
                                        },
                                        {
                                            "name": "Key_Alt"
                                        },
                                        {
                                            "name": "Key_CapsLock"
                                        },
                                        {
                                            "name": "Key_NumLock"
                                        },
                                        {
                                            "name": "Key_ScrollLock"
                                        },
                                        {
                                            "name": "Key_F1"
                                        },
                                        {
                                            "name": "Key_F2"
                                        },
                                        {
                                            "name": "Key_F3"
                                        },
                                        {
                                            "name": "Key_F4"
                                        },
                                        {
                                            "name": "Key_F5"
                                        },
                                        {
                                            "name": "Key_F6"
                                        },
                                        {
                                            "name": "Key_F7"
                                        },
                                        {
                                            "name": "Key_F8"
                                        },
                                        {
                                            "name": "Key_F9"
                                        },
                                        {
                                            "name": "Key_F10"
                                        },
                                        {
                                            "name": "Key_F11"
                                        },
                                        {
                                            "name": "Key_F12"
                                        },
                                        {
                                            "name": "Key_F13"
                                        },
                                        {
                                            "name": "Key_F14"
                                        },
                                        {
                                            "name": "Key_F15"
                                        },
                                        {
                                            "name": "Key_F16"
                                        },
                                        {
                                            "name": "Key_F17"
                                        },
                                        {
                                            "name": "Key_F18"
                                        },
                                        {
                                            "name": "Key_F19"
                                        },
                                        {
                                            "name": "Key_F20"
                                        },
                                        {
                                            "name": "Key_F21"
                                        },
                                        {
                                            "name": "Key_F22"
                                        },
                                        {
                                            "name": "Key_F23"
                                        },
                                        {
                                            "name": "Key_F24"
                                        },
                                        {
                                            "name": "Key_F25"
                                        },
                                        {
                                            "name": "Key_F26"
                                        },
                                        {
                                            "name": "Key_F27"
                                        },
                                        {
                                            "name": "Key_F28"
                                        },
                                        {
                                            "name": "Key_F29"
                                        },
                                        {
                                            "name": "Key_F30"
                                        },
                                        {
                                            "name": "Key_F31"
                                        },
                                        {
                                            "name": "Key_F32"
                                        },
                                        {
                                            "name": "Key_F33"
                                        },
                                        {
                                            "name": "Key_F34"
                                        },
                                        {
                                            "name": "Key_F35"
                                        },
                                        {
                                            "name": "Key_Super_L"
                                        },
                                        {
                                            "name": "Key_Super_R"
                                        },
                                        {
                                            "name": "Key_Menu"
                                        },
                                        {
                                            "name": "Key_Hyper_L"
                                        },
                                        {
                                            "name": "Key_Hyper_R"
                                        },
                                        {
                                            "name": "Key_Help"
                                        },
                                        {
                                            "name": "Key_Direction_L"
                                        },
                                        {
                                            "name": "Key_Direction_R"
                                        },
                                        {
                                            "name": "Key_Space"
                                        },
                                        {
                                            "name": "Key_Any"
                                        },
                                        {
                                            "name": "Key_Exclam"
                                        },
                                        {
                                            "name": "Key_QuoteDbl"
                                        },
                                        {
                                            "name": "Key_NumberSign"
                                        },
                                        {
                                            "name": "Key_Dollar"
                                        },
                                        {
                                            "name": "Key_Percent"
                                        },
                                        {
                                            "name": "Key_Ampersand"
                                        },
                                        {
                                            "name": "Key_Apostrophe"
                                        },
                                        {
                                            "name": "Key_ParenLeft"
                                        },
                                        {
                                            "name": "Key_ParenRight"
                                        },
                                        {
                                            "name": "Key_Asterisk"
                                        },
                                        {
                                            "name": "Key_Plus"
                                        },
                                        {
                                            "name": "Key_Comma"
                                        },
                                        {
                                            "name": "Key_Minus"
                                        },
                                        {
                                            "name": "Key_Period"
                                        },
                                        {
                                            "name": "Key_Slash"
                                        },
                                        {
                                            "name": "Key_0"
                                        },
                                        {
                                            "name": "Key_1"
                                        },
                                        {
                                            "name": "Key_2"
                                        },
                                        {
                                            "name": "Key_3"
                                        },
                                        {
                                            "name": "Key_4"
                                        },
                                        {
                                            "name": "Key_5"
                                        },
                                        {
                                            "name": "Key_6"
                                        },
                                        {
                                            "name": "Key_7"
                                        },
                                        {
                                            "name": "Key_8"
                                        },
                                        {
                                            "name": "Key_9"
                                        },
                                        {
                                            "name": "Key_Colon"
                                        },
                                        {
                                            "name": "Key_Semicolon"
                                        },
                                        {
                                            "name": "Key_Less"
                                        },
                                        {
                                            "name": "Key_Equal"
                                        },
                                        {
                                            "name": "Key_Greater"
                                        },
                                        {
                                            "name": "Key_Question"
                                        },
                                        {
                                            "name": "Key_At"
                                        },
                                        {
                                            "name": "Key_A"
                                        },
                                        {
                                            "name": "Key_B"
                                        },
                                        {
                                            "name": "Key_C"
                                        },
                                        {
                                            "name": "Key_D"
                                        },
                                        {
                                            "name": "Key_E"
                                        },
                                        {
                                            "name": "Key_F"
                                        },
                                        {
                                            "name": "Key_G"
                                        },
                                        {
                                            "name": "Key_H"
                                        },
                                        {
                                            "name": "Key_I"
                                        },
                                        {
                                            "name": "Key_J"
                                        },
                                        {
                                            "name": "Key_K"
                                        },
                                        {
                                            "name": "Key_L"
                                        },
                                        {
                                            "name": "Key_M"
                                        },
                                        {
                                            "name": "Key_N"
                                        },
                                        {
                                            "name": "Key_O"
                                        },
                                        {
                                            "name": "Key_P"
                                        },
                                        {
                                            "name": "Key_Q"
                                        },
                                        {
                                            "name": "Key_R"
                                        },
                                        {
                                            "name": "Key_S"
                                        },
                                        {
                                            "name": "Key_T"
                                        },
                                        {
                                            "name": "Key_U"
                                        },
                                        {
                                            "name": "Key_V"
                                        },
                                        {
                                            "name": "Key_W"
                                        },
                                        {
                                            "name": "Key_X"
                                        },
                                        {
                                            "name": "Key_Y"
                                        },
                                        {
                                            "name": "Key_Z"
                                        },
                                        {
                                            "name": "Key_BracketLeft"
                                        },
                                        {
                                            "name": "Key_Backslash"
                                        },
                                        {
                                            "name": "Key_BracketRight"
                                        },
                                        {
                                            "name": "Key_AsciiCircum"
                                        },
                                        {
                                            "name": "Key_Underscore"
                                        },
                                        {
                                            "name": "Key_QuoteLeft"
                                        },
                                        {
                                            "name": "Key_BraceLeft"
                                        },
                                        {
                                            "name": "Key_Bar"
                                        },
                                        {
                                            "name": "Key_BraceRight"
                                        },
                                        {
                                            "name": "Key_AsciiTilde"
                                        },
                                        {
                                            "name": "Key_nobreakspace"
                                        },
                                        {
                                            "name": "Key_exclamdown"
                                        },
                                        {
                                            "name": "Key_cent"
                                        },
                                        {
                                            "name": "Key_sterling"
                                        },
                                        {
                                            "name": "Key_currency"
                                        },
                                        {
                                            "name": "Key_yen"
                                        },
                                        {
                                            "name": "Key_brokenbar"
                                        },
                                        {
                                            "name": "Key_section"
                                        },
                                        {
                                            "name": "Key_diaeresis"
                                        },
                                        {
                                            "name": "Key_copyright"
                                        },
                                        {
                                            "name": "Key_ordfeminine"
                                        },
                                        {
                                            "name": "Key_guillemotleft"
                                        },
                                        {
                                            "name": "Key_notsign"
                                        },
                                        {
                                            "name": "Key_hyphen"
                                        },
                                        {
                                            "name": "Key_registered"
                                        },
                                        {
                                            "name": "Key_macron"
                                        },
                                        {
                                            "name": "Key_degree"
                                        },
                                        {
                                            "name": "Key_plusminus"
                                        },
                                        {
                                            "name": "Key_twosuperior"
                                        },
                                        {
                                            "name": "Key_threesuperior"
                                        },
                                        {
                                            "name": "Key_acute"
                                        },
                                        {
                                            "name": "Key_mu"
                                        },
                                        {
                                            "name": "Key_paragraph"
                                        },
                                        {
                                            "name": "Key_periodcentered"
                                        },
                                        {
                                            "name": "Key_cedilla"
                                        },
                                        {
                                            "name": "Key_onesuperior"
                                        },
                                        {
                                            "name": "Key_masculine"
                                        },
                                        {
                                            "name": "Key_guillemotright"
                                        },
                                        {
                                            "name": "Key_onequarter"
                                        },
                                        {
                                            "name": "Key_onehalf"
                                        },
                                        {
                                            "name": "Key_threequarters"
                                        },
                                        {
                                            "name": "Key_questiondown"
                                        },
                                        {
                                            "name": "Key_Agrave"
                                        },
                                        {
                                            "name": "Key_Aacute"
                                        },
                                        {
                                            "name": "Key_Acircumflex"
                                        },
                                        {
                                            "name": "Key_Atilde"
                                        },
                                        {
                                            "name": "Key_Adiaeresis"
                                        },
                                        {
                                            "name": "Key_Aring"
                                        },
                                        {
                                            "name": "Key_AE"
                                        },
                                        {
                                            "name": "Key_Ccedilla"
                                        },
                                        {
                                            "name": "Key_Egrave"
                                        },
                                        {
                                            "name": "Key_Eacute"
                                        },
                                        {
                                            "name": "Key_Ecircumflex"
                                        },
                                        {
                                            "name": "Key_Ediaeresis"
                                        },
                                        {
                                            "name": "Key_Igrave"
                                        },
                                        {
                                            "name": "Key_Iacute"
                                        },
                                        {
                                            "name": "Key_Icircumflex"
                                        },
                                        {
                                            "name": "Key_Idiaeresis"
                                        },
                                        {
                                            "name": "Key_ETH"
                                        },
                                        {
                                            "name": "Key_Ntilde"
                                        },
                                        {
                                            "name": "Key_Ograve"
                                        },
                                        {
                                            "name": "Key_Oacute"
                                        },
                                        {
                                            "name": "Key_Ocircumflex"
                                        },
                                        {
                                            "name": "Key_Otilde"
                                        },
                                        {
                                            "name": "Key_Odiaeresis"
                                        },
                                        {
                                            "name": "Key_multiply"
                                        },
                                        {
                                            "name": "Key_Ooblique"
                                        },
                                        {
                                            "name": "Key_Ugrave"
                                        },
                                        {
                                            "name": "Key_Uacute"
                                        },
                                        {
                                            "name": "Key_Ucircumflex"
                                        },
                                        {
                                            "name": "Key_Udiaeresis"
                                        },
                                        {
                                            "name": "Key_Yacute"
                                        },
                                        {
                                            "name": "Key_THORN"
                                        },
                                        {
                                            "name": "Key_ssharp"
                                        },
                                        {
                                            "name": "Key_division"
                                        },
                                        {
                                            "name": "Key_ydiaeresis"
                                        },
                                        {
                                            "name": "Key_AltGr"
                                        },
                                        {
                                            "name": "Key_Multi_key"
                                        },
                                        {
                                            "name": "Key_Codeinput"
                                        },
                                        {
                                            "name": "Key_SingleCandidate"
                                        },
                                        {
                                            "name": "Key_MultipleCandidate"
                                        },
                                        {
                                            "name": "Key_PreviousCandidate"
                                        },
                                        {
                                            "name": "Key_Mode_switch"
                                        },
                                        {
                                            "name": "Key_Kanji"
                                        },
                                        {
                                            "name": "Key_Muhenkan"
                                        },
                                        {
                                            "name": "Key_Henkan"
                                        },
                                        {
                                            "name": "Key_Romaji"
                                        },
                                        {
                                            "name": "Key_Hiragana"
                                        },
                                        {
                                            "name": "Key_Katakana"
                                        },
                                        {
                                            "name": "Key_Hiragana_Katakana"
                                        },
                                        {
                                            "name": "Key_Zenkaku"
                                        },
                                        {
                                            "name": "Key_Hankaku"
                                        },
                                        {
                                            "name": "Key_Zenkaku_Hankaku"
                                        },
                                        {
                                            "name": "Key_Touroku"
                                        },
                                        {
                                            "name": "Key_Massyo"
                                        },
                                        {
                                            "name": "Key_Kana_Lock"
                                        },
                                        {
                                            "name": "Key_Kana_Shift"
                                        },
                                        {
                                            "name": "Key_Eisu_Shift"
                                        },
                                        {
                                            "name": "Key_Eisu_toggle"
                                        },
                                        {
                                            "name": "Key_Hangul"
                                        },
                                        {
                                            "name": "Key_Hangul_Start"
                                        },
                                        {
                                            "name": "Key_Hangul_End"
                                        },
                                        {
                                            "name": "Key_Hangul_Hanja"
                                        },
                                        {
                                            "name": "Key_Hangul_Jamo"
                                        },
                                        {
                                            "name": "Key_Hangul_Romaja"
                                        },
                                        {
                                            "name": "Key_Hangul_Jeonja"
                                        },
                                        {
                                            "name": "Key_Hangul_Banja"
                                        },
                                        {
                                            "name": "Key_Hangul_PreHanja"
                                        },
                                        {
                                            "name": "Key_Hangul_PostHanja"
                                        },
                                        {
                                            "name": "Key_Hangul_Special"
                                        },
                                        {
                                            "name": "Key_Dead_Grave"
                                        },
                                        {
                                            "name": "Key_Dead_Acute"
                                        },
                                        {
                                            "name": "Key_Dead_Circumflex"
                                        },
                                        {
                                            "name": "Key_Dead_Tilde"
                                        },
                                        {
                                            "name": "Key_Dead_Macron"
                                        },
                                        {
                                            "name": "Key_Dead_Breve"
                                        },
                                        {
                                            "name": "Key_Dead_Abovedot"
                                        },
                                        {
                                            "name": "Key_Dead_Diaeresis"
                                        },
                                        {
                                            "name": "Key_Dead_Abovering"
                                        },
                                        {
                                            "name": "Key_Dead_Doubleacute"
                                        },
                                        {
                                            "name": "Key_Dead_Caron"
                                        },
                                        {
                                            "name": "Key_Dead_Cedilla"
                                        },
                                        {
                                            "name": "Key_Dead_Ogonek"
                                        },
                                        {
                                            "name": "Key_Dead_Iota"
                                        },
                                        {
                                            "name": "Key_Dead_Voiced_Sound"
                                        },
                                        {
                                            "name": "Key_Dead_Semivoiced_Sound"
                                        },
                                        {
                                            "name": "Key_Dead_Belowdot"
                                        },
                                        {
                                            "name": "Key_Dead_Hook"
                                        },
                                        {
                                            "name": "Key_Dead_Horn"
                                        },
                                        {
                                            "name": "Key_Back"
                                        },
                                        {
                                            "name": "Key_Forward"
                                        },
                                        {
                                            "name": "Key_Stop"
                                        },
                                        {
                                            "name": "Key_Refresh"
                                        },
                                        {
                                            "name": "Key_VolumeDown"
                                        },
                                        {
                                            "name": "Key_VolumeMute"
                                        },
                                        {
                                            "name": "Key_VolumeUp"
                                        },
                                        {
                                            "name": "Key_BassBoost"
                                        },
                                        {
                                            "name": "Key_BassUp"
                                        },
                                        {
                                            "name": "Key_BassDown"
                                        },
                                        {
                                            "name": "Key_TrebleUp"
                                        },
                                        {
                                            "name": "Key_TrebleDown"
                                        },
                                        {
                                            "name": "Key_MediaPlay"
                                        },
                                        {
                                            "name": "Key_MediaStop"
                                        },
                                        {
                                            "name": "Key_MediaPrevious"
                                        },
                                        {
                                            "name": "Key_MediaNext"
                                        },
                                        {
                                            "name": "Key_MediaRecord"
                                        },
                                        {
                                            "name": "Key_MediaPause"
                                        },
                                        {
                                            "name": "Key_MediaTogglePlayPause"
                                        },
                                        {
                                            "name": "Key_HomePage"
                                        },
                                        {
                                            "name": "Key_Favorites"
                                        },
                                        {
                                            "name": "Key_Search"
                                        },
                                        {
                                            "name": "Key_Standby"
                                        },
                                        {
                                            "name": "Key_OpenUrl"
                                        },
                                        {
                                            "name": "Key_LaunchMail"
                                        },
                                        {
                                            "name": "Key_LaunchMedia"
                                        },
                                        {
                                            "name": "Key_Launch0"
                                        },
                                        {
                                            "name": "Key_Launch1"
                                        },
                                        {
                                            "name": "Key_Launch2"
                                        },
                                        {
                                            "name": "Key_Launch3"
                                        },
                                        {
                                            "name": "Key_Launch4"
                                        },
                                        {
                                            "name": "Key_Launch5"
                                        },
                                        {
                                            "name": "Key_Launch6"
                                        },
                                        {
                                            "name": "Key_Launch7"
                                        },
                                        {
                                            "name": "Key_Launch8"
                                        },
                                        {
                                            "name": "Key_Launch9"
                                        },
                                        {
                                            "name": "Key_LaunchA"
                                        },
                                        {
                                            "name": "Key_LaunchB"
                                        },
                                        {
                                            "name": "Key_LaunchC"
                                        },
                                        {
                                            "name": "Key_LaunchD"
                                        },
                                        {
                                            "name": "Key_LaunchE"
                                        },
                                        {
                                            "name": "Key_LaunchF"
                                        },
                                        {
                                            "name": "Key_MonBrightnessUp"
                                        },
                                        {
                                            "name": "Key_MonBrightnessDown"
                                        },
                                        {
                                            "name": "Key_KeyboardLightOnOff"
                                        },
                                        {
                                            "name": "Key_KeyboardBrightnessUp"
                                        },
                                        {
                                            "name": "Key_KeyboardBrightnessDown"
                                        },
                                        {
                                            "name": "Key_PowerOff"
                                        },
                                        {
                                            "name": "Key_WakeUp"
                                        },
                                        {
                                            "name": "Key_Eject"
                                        },
                                        {
                                            "name": "Key_ScreenSaver"
                                        },
                                        {
                                            "name": "Key_WWW"
                                        },
                                        {
                                            "name": "Key_Memo"
                                        },
                                        {
                                            "name": "Key_LightBulb"
                                        },
                                        {
                                            "name": "Key_Shop"
                                        },
                                        {
                                            "name": "Key_History"
                                        },
                                        {
                                            "name": "Key_AddFavorite"
                                        },
                                        {
                                            "name": "Key_HotLinks"
                                        },
                                        {
                                            "name": "Key_BrightnessAdjust"
                                        },
                                        {
                                            "name": "Key_Finance"
                                        },
                                        {
                                            "name": "Key_Community"
                                        },
                                        {
                                            "name": "Key_AudioRewind"
                                        },
                                        {
                                            "name": "Key_BackForward"
                                        },
                                        {
                                            "name": "Key_ApplicationLeft"
                                        },
                                        {
                                            "name": "Key_ApplicationRight"
                                        },
                                        {
                                            "name": "Key_Book"
                                        },
                                        {
                                            "name": "Key_CD"
                                        },
                                        {
                                            "name": "Key_Calculator"
                                        },
                                        {
                                            "name": "Key_ToDoList"
                                        },
                                        {
                                            "name": "Key_ClearGrab"
                                        },
                                        {
                                            "name": "Key_Close"
                                        },
                                        {
                                            "name": "Key_Copy"
                                        },
                                        {
                                            "name": "Key_Cut"
                                        },
                                        {
                                            "name": "Key_Display"
                                        },
                                        {
                                            "name": "Key_DOS"
                                        },
                                        {
                                            "name": "Key_Documents"
                                        },
                                        {
                                            "name": "Key_Excel"
                                        },
                                        {
                                            "name": "Key_Explorer"
                                        },
                                        {
                                            "name": "Key_Game"
                                        },
                                        {
                                            "name": "Key_Go"
                                        },
                                        {
                                            "name": "Key_iTouch"
                                        },
                                        {
                                            "name": "Key_LogOff"
                                        },
                                        {
                                            "name": "Key_Market"
                                        },
                                        {
                                            "name": "Key_Meeting"
                                        },
                                        {
                                            "name": "Key_MenuKB"
                                        },
                                        {
                                            "name": "Key_MenuPB"
                                        },
                                        {
                                            "name": "Key_MySites"
                                        },
                                        {
                                            "name": "Key_News"
                                        },
                                        {
                                            "name": "Key_OfficeHome"
                                        },
                                        {
                                            "name": "Key_Option"
                                        },
                                        {
                                            "name": "Key_Paste"
                                        },
                                        {
                                            "name": "Key_Phone"
                                        },
                                        {
                                            "name": "Key_Calendar"
                                        },
                                        {
                                            "name": "Key_Reply"
                                        },
                                        {
                                            "name": "Key_Reload"
                                        },
                                        {
                                            "name": "Key_RotateWindows"
                                        },
                                        {
                                            "name": "Key_RotationPB"
                                        },
                                        {
                                            "name": "Key_RotationKB"
                                        },
                                        {
                                            "name": "Key_Save"
                                        },
                                        {
                                            "name": "Key_Send"
                                        },
                                        {
                                            "name": "Key_Spell"
                                        },
                                        {
                                            "name": "Key_SplitScreen"
                                        },
                                        {
                                            "name": "Key_Support"
                                        },
                                        {
                                            "name": "Key_TaskPane"
                                        },
                                        {
                                            "name": "Key_Terminal"
                                        },
                                        {
                                            "name": "Key_Tools"
                                        },
                                        {
                                            "name": "Key_Travel"
                                        },
                                        {
                                            "name": "Key_Video"
                                        },
                                        {
                                            "name": "Key_Word"
                                        },
                                        {
                                            "name": "Key_Xfer"
                                        },
                                        {
                                            "name": "Key_ZoomIn"
                                        },
                                        {
                                            "name": "Key_ZoomOut"
                                        },
                                        {
                                            "name": "Key_Away"
                                        },
                                        {
                                            "name": "Key_Messenger"
                                        },
                                        {
                                            "name": "Key_WebCam"
                                        },
                                        {
                                            "name": "Key_MailForward"
                                        },
                                        {
                                            "name": "Key_Pictures"
                                        },
                                        {
                                            "name": "Key_Music"
                                        },
                                        {
                                            "name": "Key_Battery"
                                        },
                                        {
                                            "name": "Key_Bluetooth"
                                        },
                                        {
                                            "name": "Key_WLAN"
                                        },
                                        {
                                            "name": "Key_UWB"
                                        },
                                        {
                                            "name": "Key_AudioForward"
                                        },
                                        {
                                            "name": "Key_AudioRepeat"
                                        },
                                        {
                                            "name": "Key_AudioRandomPlay"
                                        },
                                        {
                                            "name": "Key_Subtitle"
                                        },
                                        {
                                            "name": "Key_AudioCycleTrack"
                                        },
                                        {
                                            "name": "Key_Time"
                                        },
                                        {
                                            "name": "Key_Hibernate"
                                        },
                                        {
                                            "name": "Key_View"
                                        },
                                        {
                                            "name": "Key_TopMenu"
                                        },
                                        {
                                            "name": "Key_PowerDown"
                                        },
                                        {
                                            "name": "Key_Suspend"
                                        },
                                        {
                                            "name": "Key_ContrastAdjust"
                                        },
                                        {
                                            "name": "Key_LaunchG"
                                        },
                                        {
                                            "name": "Key_LaunchH"
                                        },
                                        {
                                            "name": "Key_TouchpadToggle"
                                        },
                                        {
                                            "name": "Key_TouchpadOn"
                                        },
                                        {
                                            "name": "Key_TouchpadOff"
                                        },
                                        {
                                            "name": "Key_MicMute"
                                        },
                                        {
                                            "name": "Key_Red"
                                        },
                                        {
                                            "name": "Key_Green"
                                        },
                                        {
                                            "name": "Key_Yellow"
                                        },
                                        {
                                            "name": "Key_Blue"
                                        },
                                        {
                                            "name": "Key_ChannelUp"
                                        },
                                        {
                                            "name": "Key_ChannelDown"
                                        },
                                        {
                                            "name": "Key_Guide"
                                        },
                                        {
                                            "name": "Key_Info"
                                        },
                                        {
                                            "name": "Key_Settings"
                                        },
                                        {
                                            "name": "Key_MicVolumeUp"
                                        },
                                        {
                                            "name": "Key_MicVolumeDown"
                                        },
                                        {
                                            "name": "Key_New"
                                        },
                                        {
                                            "name": "Key_Open"
                                        },
                                        {
                                            "name": "Key_Find"
                                        },
                                        {
                                            "name": "Key_Undo"
                                        },
                                        {
                                            "name": "Key_Redo"
                                        },
                                        {
                                            "name": "Key_MediaLast"
                                        },
                                        {
                                            "name": "Key_Select"
                                        },
                                        {
                                            "name": "Key_Yes"
                                        },
                                        {
                                            "name": "Key_No"
                                        },
                                        {
                                            "name": "Key_Cancel"
                                        },
                                        {
                                            "name": "Key_Printer"
                                        },
                                        {
                                            "name": "Key_Execute"
                                        },
                                        {
                                            "name": "Key_Sleep"
                                        },
                                        {
                                            "name": "Key_Play"
                                        },
                                        {
                                            "name": "Key_Zoom"
                                        },
                                        {
                                            "name": "Key_Exit"
                                        },
                                        {
                                            "name": "Key_Context1"
                                        },
                                        {
                                            "name": "Key_Context2"
                                        },
                                        {
                                            "name": "Key_Context3"
                                        },
                                        {
                                            "name": "Key_Context4"
                                        },
                                        {
                                            "name": "Key_Call"
                                        },
                                        {
                                            "name": "Key_Hangup"
                                        },
                                        {
                                            "name": "Key_Flip"
                                        },
                                        {
                                            "name": "Key_ToggleCallHangup"
                                        },
                                        {
                                            "name": "Key_VoiceDial"
                                        },
                                        {
                                            "name": "Key_LastNumberRedial"
                                        },
                                        {
                                            "name": "Key_Camera"
                                        },
                                        {
                                            "name": "Key_CameraFocus"
                                        },
                                        {
                                            "name": "Key_unknown"
                                        }
                                    ],
                                    "name": "Key",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoArrow"
                                        },
                                        {
                                            "name": "UpArrow"
                                        },
                                        {
                                            "name": "DownArrow"
                                        },
                                        {
                                            "name": "LeftArrow"
                                        },
                                        {
                                            "name": "RightArrow"
                                        }
                                    ],
                                    "name": "ArrowType",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoPen"
                                        },
                                        {
                                            "name": "SolidLine"
                                        },
                                        {
                                            "name": "DashLine"
                                        },
                                        {
                                            "name": "DotLine"
                                        },
                                        {
                                            "name": "DashDotLine"
                                        },
                                        {
                                            "name": "DashDotDotLine"
                                        },
                                        {
                                            "name": "CustomDashLine"
                                        },
                                        {
                                            "name": "MPenStyle"
                                        }
                                    ],
                                    "name": "PenStyle",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "FlatCap"
                                        },
                                        {
                                            "name": "SquareCap"
                                        },
                                        {
                                            "name": "RoundCap"
                                        },
                                        {
                                            "name": "MPenCapStyle"
                                        }
                                    ],
                                    "name": "PenCapStyle",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "MiterJoin"
                                        },
                                        {
                                            "name": "BevelJoin"
                                        },
                                        {
                                            "name": "RoundJoin"
                                        },
                                        {
                                            "name": "SvgMiterJoin"
                                        },
                                        {
                                            "name": "MPenJoinStyle"
                                        }
                                    ],
                                    "name": "PenJoinStyle",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoBrush"
                                        },
                                        {
                                            "name": "SolidPattern"
                                        },
                                        {
                                            "name": "Dense1Pattern"
                                        },
                                        {
                                            "name": "Dense2Pattern"
                                        },
                                        {
                                            "name": "Dense3Pattern"
                                        },
                                        {
                                            "name": "Dense4Pattern"
                                        },
                                        {
                                            "name": "Dense5Pattern"
                                        },
                                        {
                                            "name": "Dense6Pattern"
                                        },
                                        {
                                            "name": "Dense7Pattern"
                                        },
                                        {
                                            "name": "HorPattern"
                                        },
                                        {
                                            "name": "VerPattern"
                                        },
                                        {
                                            "name": "CrossPattern"
                                        },
                                        {
                                            "name": "BDiagPattern"
                                        },
                                        {
                                            "name": "FDiagPattern"
                                        },
                                        {
                                            "name": "DiagCrossPattern"
                                        },
                                        {
                                            "name": "LinearGradientPattern"
                                        },
                                        {
                                            "name": "RadialGradientPattern"
                                        },
                                        {
                                            "name": "ConicalGradientPattern"
                                        },
                                        {
                                            "name": "TexturePattern"
                                        }
                                    ],
                                    "name": "BrushStyle",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "AbsoluteSize"
                                        },
                                        {
                                            "name": "RelativeSize"
                                        }
                                    ],
                                    "name": "SizeMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "UI_General"
                                        },
                                        {
                                            "name": "UI_AnimateMenu"
                                        },
                                        {
                                            "name": "UI_FadeMenu"
                                        },
                                        {
                                            "name": "UI_AnimateCombo"
                                        },
                                        {
                                            "name": "UI_AnimateTooltip"
                                        },
                                        {
                                            "name": "UI_FadeTooltip"
                                        },
                                        {
                                            "name": "UI_AnimateToolBox"
                                        }
                                    ],
                                    "name": "UIEffect",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ArrowCursor"
                                        },
                                        {
                                            "name": "UpArrowCursor"
                                        },
                                        {
                                            "name": "CrossCursor"
                                        },
                                        {
                                            "name": "WaitCursor"
                                        },
                                        {
                                            "name": "IBeamCursor"
                                        },
                                        {
                                            "name": "SizeVerCursor"
                                        },
                                        {
                                            "name": "SizeHorCursor"
                                        },
                                        {
                                            "name": "SizeBDiagCursor"
                                        },
                                        {
                                            "name": "SizeFDiagCursor"
                                        },
                                        {
                                            "name": "SizeAllCursor"
                                        },
                                        {
                                            "name": "BlankCursor"
                                        },
                                        {
                                            "name": "SplitVCursor"
                                        },
                                        {
                                            "name": "SplitHCursor"
                                        },
                                        {
                                            "name": "PointingHandCursor"
                                        },
                                        {
                                            "name": "ForbiddenCursor"
                                        },
                                        {
                                            "name": "WhatsThisCursor"
                                        },
                                        {
                                            "name": "BusyCursor"
                                        },
                                        {
                                            "name": "OpenHandCursor"
                                        },
                                        {
                                            "name": "ClosedHandCursor"
                                        },
                                        {
                                            "name": "DragCopyCursor"
                                        },
                                        {
                                            "name": "DragMoveCursor"
                                        },
                                        {
                                            "name": "DragLinkCursor"
                                        },
                                        {
                                            "name": "LastCursor"
                                        },
                                        {
                                            "name": "BitmapCursor"
                                        },
                                        {
                                            "name": "CustomCursor"
                                        }
                                    ],
                                    "name": "CursorShape",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "PlainText"
                                        },
                                        {
                                            "name": "RichText"
                                        },
                                        {
                                            "name": "AutoText"
                                        }
                                    ],
                                    "name": "TextFormat",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "IgnoreAspectRatio"
                                        },
                                        {
                                            "name": "KeepAspectRatio"
                                        },
                                        {
                                            "name": "KeepAspectRatioByExpanding"
                                        }
                                    ],
                                    "name": "AspectRatioMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "LeftDockWidgetArea"
                                        },
                                        {
                                            "name": "RightDockWidgetArea"
                                        },
                                        {
                                            "name": "TopDockWidgetArea"
                                        },
                                        {
                                            "name": "BottomDockWidgetArea"
                                        },
                                        {
                                            "name": "DockWidgetArea_Mask"
                                        },
                                        {
                                            "name": "AllDockWidgetAreas"
                                        },
                                        {
                                            "name": "NoDockWidgetArea"
                                        }
                                    ],
                                    "name": "DockWidgetArea",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NDockWidgetAreas"
                                        }
                                    ],
                                    "name": "DockWidgetAreaSizes",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "LeftToolBarArea"
                                        },
                                        {
                                            "name": "RightToolBarArea"
                                        },
                                        {
                                            "name": "TopToolBarArea"
                                        },
                                        {
                                            "name": "BottomToolBarArea"
                                        },
                                        {
                                            "name": "ToolBarArea_Mask"
                                        },
                                        {
                                            "name": "AllToolBarAreas"
                                        },
                                        {
                                            "name": "NoToolBarArea"
                                        }
                                    ],
                                    "name": "ToolBarArea",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NToolBarAreas"
                                        }
                                    ],
                                    "name": "ToolBarAreaSizes",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "TextDate"
                                        },
                                        {
                                            "name": "ISODate"
                                        },
                                        {
                                            "name": "SystemLocaleDate"
                                        },
                                        {
                                            "name": "LocalDate"
                                        },
                                        {
                                            "name": "LocaleDate"
                                        },
                                        {
                                            "name": "SystemLocaleShortDate"
                                        },
                                        {
                                            "name": "SystemLocaleLongDate"
                                        },
                                        {
                                            "name": "DefaultLocaleShortDate"
                                        },
                                        {
                                            "name": "DefaultLocaleLongDate"
                                        },
                                        {
                                            "name": "RFC2822Date"
                                        },
                                        {
                                            "name": "ISODateWithMs"
                                        }
                                    ],
                                    "name": "DateFormat",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "LocalTime"
                                        },
                                        {
                                            "name": "UTC"
                                        },
                                        {
                                            "name": "OffsetFromUTC"
                                        },
                                        {
                                            "name": "TimeZone"
                                        }
                                    ],
                                    "name": "TimeSpec",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "Monday"
                                        },
                                        {
                                            "name": "Tuesday"
                                        },
                                        {
                                            "name": "Wednesday"
                                        },
                                        {
                                            "name": "Thursday"
                                        },
                                        {
                                            "name": "Friday"
                                        },
                                        {
                                            "name": "Saturday"
                                        },
                                        {
                                            "name": "Sunday"
                                        }
                                    ],
                                    "name": "DayOfWeek",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ScrollBarAsNeeded"
                                        },
                                        {
                                            "name": "ScrollBarAlwaysOff"
                                        },
                                        {
                                            "name": "ScrollBarAlwaysOn"
                                        }
                                    ],
                                    "name": "ScrollBarPolicy",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "CaseInsensitive"
                                        },
                                        {
                                            "name": "CaseSensitive"
                                        }
                                    ],
                                    "name": "CaseSensitivity",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "TopLeftCorner"
                                        },
                                        {
                                            "name": "TopRightCorner"
                                        },
                                        {
                                            "name": "BottomLeftCorner"
                                        },
                                        {
                                            "name": "BottomRightCorner"
                                        }
                                    ],
                                    "name": "Corner",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "TopEdge"
                                        },
                                        {
                                            "name": "LeftEdge"
                                        },
                                        {
                                            "name": "RightEdge"
                                        },
                                        {
                                            "name": "BottomEdge"
                                        }
                                    ],
                                    "name": "Edge",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "AutoConnection"
                                        },
                                        {
                                            "name": "DirectConnection"
                                        },
                                        {
                                            "name": "QueuedConnection"
                                        },
                                        {
                                            "name": "BlockingQueuedConnection"
                                        },
                                        {
                                            "name": "UniqueConnection"
                                        }
                                    ],
                                    "name": "ConnectionType",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "WidgetShortcut"
                                        },
                                        {
                                            "name": "WindowShortcut"
                                        },
                                        {
                                            "name": "ApplicationShortcut"
                                        },
                                        {
                                            "name": "WidgetWithChildrenShortcut"
                                        }
                                    ],
                                    "name": "ShortcutContext",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "OddEvenFill"
                                        },
                                        {
                                            "name": "WindingFill"
                                        }
                                    ],
                                    "name": "FillRule",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "MaskInColor"
                                        },
                                        {
                                            "name": "MaskOutColor"
                                        }
                                    ],
                                    "name": "MaskMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoClip"
                                        },
                                        {
                                            "name": "ReplaceClip"
                                        },
                                        {
                                            "name": "IntersectClip"
                                        }
                                    ],
                                    "name": "ClipOperation",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ContainsItemShape"
                                        },
                                        {
                                            "name": "IntersectsItemShape"
                                        },
                                        {
                                            "name": "ContainsItemBoundingRect"
                                        },
                                        {
                                            "name": "IntersectsItemBoundingRect"
                                        }
                                    ],
                                    "name": "ItemSelectionMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ReplaceSelection"
                                        },
                                        {
                                            "name": "AddToSelection"
                                        }
                                    ],
                                    "name": "ItemSelectionOperation",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "FastTransformation"
                                        },
                                        {
                                            "name": "SmoothTransformation"
                                        }
                                    ],
                                    "name": "TransformationMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "XAxis"
                                        },
                                        {
                                            "name": "YAxis"
                                        },
                                        {
                                            "name": "ZAxis"
                                        }
                                    ],
                                    "name": "Axis",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "MouseFocusReason"
                                        },
                                        {
                                            "name": "TabFocusReason"
                                        },
                                        {
                                            "name": "BacktabFocusReason"
                                        },
                                        {
                                            "name": "ActiveWindowFocusReason"
                                        },
                                        {
                                            "name": "PopupFocusReason"
                                        },
                                        {
                                            "name": "ShortcutFocusReason"
                                        },
                                        {
                                            "name": "MenuBarFocusReason"
                                        },
                                        {
                                            "name": "OtherFocusReason"
                                        },
                                        {
                                            "name": "NoFocusReason"
                                        }
                                    ],
                                    "name": "FocusReason",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoContextMenu"
                                        },
                                        {
                                            "name": "DefaultContextMenu"
                                        },
                                        {
                                            "name": "ActionsContextMenu"
                                        },
                                        {
                                            "name": "CustomContextMenu"
                                        },
                                        {
                                            "name": "PreventContextMenu"
                                        }
                                    ],
                                    "name": "ContextMenuPolicy",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ImEnabled"
                                        },
                                        {
                                            "name": "ImCursorRectangle"
                                        },
                                        {
                                            "name": "ImMicroFocus"
                                        },
                                        {
                                            "name": "ImFont"
                                        },
                                        {
                                            "name": "ImCursorPosition"
                                        },
                                        {
                                            "name": "ImSurroundingText"
                                        },
                                        {
                                            "name": "ImCurrentSelection"
                                        },
                                        {
                                            "name": "ImMaximumTextLength"
                                        },
                                        {
                                            "name": "ImAnchorPosition"
                                        },
                                        {
                                            "name": "ImHints"
                                        },
                                        {
                                            "name": "ImPreferredLanguage"
                                        },
                                        {
                                            "name": "ImAbsolutePosition"
                                        },
                                        {
                                            "name": "ImTextBeforeCursor"
                                        },
                                        {
                                            "name": "ImTextAfterCursor"
                                        },
                                        {
                                            "name": "ImEnterKeyType"
                                        },
                                        {
                                            "name": "ImAnchorRectangle"
                                        },
                                        {
                                            "name": "ImInputItemClipRectangle"
                                        },
                                        {
                                            "name": "ImPlatformData"
                                        },
                                        {
                                            "name": "ImQueryInput"
                                        },
                                        {
                                            "name": "ImQueryAll"
                                        }
                                    ],
                                    "name": "InputMethodQuery",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ImhNone"
                                        },
                                        {
                                            "name": "ImhHiddenText"
                                        },
                                        {
                                            "name": "ImhSensitiveData"
                                        },
                                        {
                                            "name": "ImhNoAutoUppercase"
                                        },
                                        {
                                            "name": "ImhPreferNumbers"
                                        },
                                        {
                                            "name": "ImhPreferUppercase"
                                        },
                                        {
                                            "name": "ImhPreferLowercase"
                                        },
                                        {
                                            "name": "ImhNoPredictiveText"
                                        },
                                        {
                                            "name": "ImhDate"
                                        },
                                        {
                                            "name": "ImhTime"
                                        },
                                        {
                                            "name": "ImhPreferLatin"
                                        },
                                        {
                                            "name": "ImhMultiLine"
                                        },
                                        {
                                            "name": "ImhDigitsOnly"
                                        },
                                        {
                                            "name": "ImhFormattedNumbersOnly"
                                        },
                                        {
                                            "name": "ImhUppercaseOnly"
                                        },
                                        {
                                            "name": "ImhLowercaseOnly"
                                        },
                                        {
                                            "name": "ImhDialableCharactersOnly"
                                        },
                                        {
                                            "name": "ImhEmailCharactersOnly"
                                        },
                                        {
                                            "name": "ImhUrlCharactersOnly"
                                        },
                                        {
                                            "name": "ImhLatinOnly"
                                        },
                                        {
                                            "name": "ImhExclusiveInputMask"
                                        }
                                    ],
                                    "name": "InputMethodHint",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "EnterKeyDefault"
                                        },
                                        {
                                            "name": "EnterKeyReturn"
                                        },
                                        {
                                            "name": "EnterKeyDone"
                                        },
                                        {
                                            "name": "EnterKeyGo"
                                        },
                                        {
                                            "name": "EnterKeySend"
                                        },
                                        {
                                            "name": "EnterKeySearch"
                                        },
                                        {
                                            "name": "EnterKeyNext"
                                        },
                                        {
                                            "name": "EnterKeyPrevious"
                                        }
                                    ],
                                    "name": "EnterKeyType",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ToolButtonIconOnly"
                                        },
                                        {
                                            "name": "ToolButtonTextOnly"
                                        },
                                        {
                                            "name": "ToolButtonTextBesideIcon"
                                        },
                                        {
                                            "name": "ToolButtonTextUnderIcon"
                                        },
                                        {
                                            "name": "ToolButtonFollowStyle"
                                        }
                                    ],
                                    "name": "ToolButtonStyle",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "LeftToRight"
                                        },
                                        {
                                            "name": "RightToLeft"
                                        },
                                        {
                                            "name": "LayoutDirectionAuto"
                                        }
                                    ],
                                    "name": "LayoutDirection",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "AnchorLeft"
                                        },
                                        {
                                            "name": "AnchorHorizontalCenter"
                                        },
                                        {
                                            "name": "AnchorRight"
                                        },
                                        {
                                            "name": "AnchorTop"
                                        },
                                        {
                                            "name": "AnchorVerticalCenter"
                                        },
                                        {
                                            "name": "AnchorBottom"
                                        }
                                    ],
                                    "name": "AnchorPoint",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "FindDirectChildrenOnly"
                                        },
                                        {
                                            "name": "FindChildrenRecursively"
                                        }
                                    ],
                                    "name": "FindChildOption",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "CopyAction"
                                        },
                                        {
                                            "name": "MoveAction"
                                        },
                                        {
                                            "name": "LinkAction"
                                        },
                                        {
                                            "name": "ActionMask"
                                        },
                                        {
                                            "name": "TargetMoveAction"
                                        },
                                        {
                                            "name": "IgnoreAction"
                                        }
                                    ],
                                    "name": "DropAction",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "Unchecked"
                                        },
                                        {
                                            "name": "PartiallyChecked"
                                        },
                                        {
                                            "name": "Checked"
                                        }
                                    ],
                                    "name": "CheckState",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "DisplayRole"
                                        },
                                        {
                                            "name": "DecorationRole"
                                        },
                                        {
                                            "name": "EditRole"
                                        },
                                        {
                                            "name": "ToolTipRole"
                                        },
                                        {
                                            "name": "StatusTipRole"
                                        },
                                        {
                                            "name": "WhatsThisRole"
                                        },
                                        {
                                            "name": "FontRole"
                                        },
                                        {
                                            "name": "TextAlignmentRole"
                                        },
                                        {
                                            "name": "BackgroundColorRole"
                                        },
                                        {
                                            "name": "BackgroundRole"
                                        },
                                        {
                                            "name": "TextColorRole"
                                        },
                                        {
                                            "name": "ForegroundRole"
                                        },
                                        {
                                            "name": "CheckStateRole"
                                        },
                                        {
                                            "name": "AccessibleTextRole"
                                        },
                                        {
                                            "name": "AccessibleDescriptionRole"
                                        },
                                        {
                                            "name": "SizeHintRole"
                                        },
                                        {
                                            "name": "InitialSortOrderRole"
                                        },
                                        {
                                            "name": "DisplayPropertyRole"
                                        },
                                        {
                                            "name": "DecorationPropertyRole"
                                        },
                                        {
                                            "name": "ToolTipPropertyRole"
                                        },
                                        {
                                            "name": "StatusTipPropertyRole"
                                        },
                                        {
                                            "name": "WhatsThisPropertyRole"
                                        },
                                        {
                                            "name": "UserRole"
                                        }
                                    ],
                                    "name": "ItemDataRole",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoItemFlags"
                                        },
                                        {
                                            "name": "ItemIsSelectable"
                                        },
                                        {
                                            "name": "ItemIsEditable"
                                        },
                                        {
                                            "name": "ItemIsDragEnabled"
                                        },
                                        {
                                            "name": "ItemIsDropEnabled"
                                        },
                                        {
                                            "name": "ItemIsUserCheckable"
                                        },
                                        {
                                            "name": "ItemIsEnabled"
                                        },
                                        {
                                            "name": "ItemIsAutoTristate"
                                        },
                                        {
                                            "name": "ItemIsTristate"
                                        },
                                        {
                                            "name": "ItemNeverHasChildren"
                                        },
                                        {
                                            "name": "ItemIsUserTristate"
                                        }
                                    ],
                                    "name": "ItemFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "MatchExactly"
                                        },
                                        {
                                            "name": "MatchContains"
                                        },
                                        {
                                            "name": "MatchStartsWith"
                                        },
                                        {
                                            "name": "MatchEndsWith"
                                        },
                                        {
                                            "name": "MatchRegExp"
                                        },
                                        {
                                            "name": "MatchWildcard"
                                        },
                                        {
                                            "name": "MatchFixedString"
                                        },
                                        {
                                            "name": "MatchCaseSensitive"
                                        },
                                        {
                                            "name": "MatchWrap"
                                        },
                                        {
                                            "name": "MatchRecursive"
                                        }
                                    ],
                                    "name": "MatchFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NonModal"
                                        },
                                        {
                                            "name": "WindowModal"
                                        },
                                        {
                                            "name": "ApplicationModal"
                                        }
                                    ],
                                    "name": "WindowModality",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoTextInteraction"
                                        },
                                        {
                                            "name": "TextSelectableByMouse"
                                        },
                                        {
                                            "name": "TextSelectableByKeyboard"
                                        },
                                        {
                                            "name": "LinksAccessibleByMouse"
                                        },
                                        {
                                            "name": "LinksAccessibleByKeyboard"
                                        },
                                        {
                                            "name": "TextEditable"
                                        },
                                        {
                                            "name": "TextEditorInteraction"
                                        },
                                        {
                                            "name": "TextBrowserInteraction"
                                        }
                                    ],
                                    "name": "TextInteractionFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "HighEventPriority"
                                        },
                                        {
                                            "name": "NormalEventPriority"
                                        },
                                        {
                                            "name": "LowEventPriority"
                                        }
                                    ],
                                    "name": "EventPriority",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "MinimumSize"
                                        },
                                        {
                                            "name": "PreferredSize"
                                        },
                                        {
                                            "name": "MaximumSize"
                                        },
                                        {
                                            "name": "MinimumDescent"
                                        },
                                        {
                                            "name": "NSizeHints"
                                        }
                                    ],
                                    "name": "SizeHint",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoSection"
                                        },
                                        {
                                            "name": "LeftSection"
                                        },
                                        {
                                            "name": "TopLeftSection"
                                        },
                                        {
                                            "name": "TopSection"
                                        },
                                        {
                                            "name": "TopRightSection"
                                        },
                                        {
                                            "name": "RightSection"
                                        },
                                        {
                                            "name": "BottomRightSection"
                                        },
                                        {
                                            "name": "BottomSection"
                                        },
                                        {
                                            "name": "BottomLeftSection"
                                        },
                                        {
                                            "name": "TitleBarArea"
                                        }
                                    ],
                                    "name": "WindowFrameSection",
                                    "type": "enum"
                                },
                                {
                                    "cppenumclass": true,
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "Uninitialized"
                                        }
                                    ],
                                    "name": "Initialization",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "DeviceCoordinates"
                                        },
                                        {
                                            "name": "LogicalCoordinates"
                                        }
                                    ],
                                    "name": "CoordinateSystem",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "TouchPointPressed"
                                        },
                                        {
                                            "name": "TouchPointMoved"
                                        },
                                        {
                                            "name": "TouchPointStationary"
                                        },
                                        {
                                            "name": "TouchPointReleased"
                                        }
                                    ],
                                    "name": "TouchPointState",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoGesture"
                                        },
                                        {
                                            "name": "GestureStarted"
                                        },
                                        {
                                            "name": "GestureUpdated"
                                        },
                                        {
                                            "name": "GestureFinished"
                                        },
                                        {
                                            "name": "GestureCanceled"
                                        }
                                    ],
                                    "name": "GestureState",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "TapGesture"
                                        },
                                        {
                                            "name": "TapAndHoldGesture"
                                        },
                                        {
                                            "name": "PanGesture"
                                        },
                                        {
                                            "name": "PinchGesture"
                                        },
                                        {
                                            "name": "SwipeGesture"
                                        },
                                        {
                                            "name": "CustomGesture"
                                        },
                                        {
                                            "name": "LastGestureType"
                                        }
                                    ],
                                    "name": "GestureType",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "DontStartGestureOnChildren"
                                        },
                                        {
                                            "name": "ReceivePartialGestures"
                                        },
                                        {
                                            "name": "IgnoredGesturesPropagateToParent"
                                        }
                                    ],
                                    "name": "GestureFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "BeginNativeGesture"
                                        },
                                        {
                                            "name": "EndNativeGesture"
                                        },
                                        {
                                            "name": "PanNativeGesture"
                                        },
                                        {
                                            "name": "ZoomNativeGesture"
                                        },
                                        {
                                            "name": "SmartZoomNativeGesture"
                                        },
                                        {
                                            "name": "RotateNativeGesture"
                                        },
                                        {
                                            "name": "SwipeNativeGesture"
                                        }
                                    ],
                                    "name": "NativeGestureType",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NavigationModeNone"
                                        },
                                        {
                                            "name": "NavigationModeKeypadTabOrder"
                                        },
                                        {
                                            "name": "NavigationModeKeypadDirectional"
                                        },
                                        {
                                            "name": "NavigationModeCursorAuto"
                                        },
                                        {
                                            "name": "NavigationModeCursorForceVisible"
                                        }
                                    ],
                                    "name": "NavigationMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "LogicalMoveStyle"
                                        },
                                        {
                                            "name": "VisualMoveStyle"
                                        }
                                    ],
                                    "name": "CursorMoveStyle",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "PreciseTimer"
                                        },
                                        {
                                            "name": "CoarseTimer"
                                        },
                                        {
                                            "name": "VeryCoarseTimer"
                                        }
                                    ],
                                    "name": "TimerType",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoScrollPhase"
                                        },
                                        {
                                            "name": "ScrollBegin"
                                        },
                                        {
                                            "name": "ScrollUpdate"
                                        },
                                        {
                                            "name": "ScrollEnd"
                                        }
                                    ],
                                    "name": "ScrollPhase",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "MouseEventNotSynthesized"
                                        },
                                        {
                                            "name": "MouseEventSynthesizedBySystem"
                                        },
                                        {
                                            "name": "MouseEventSynthesizedByQt"
                                        },
                                        {
                                            "name": "MouseEventSynthesizedByApplication"
                                        }
                                    ],
                                    "name": "MouseEventSource",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "MouseEventCreatedDoubleClick"
                                        },
                                        {
                                            "name": "MouseEventFlagMask"
                                        }
                                    ],
                                    "name": "MouseEventFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ChecksumIso3309"
                                        },
                                        {
                                            "name": "ChecksumItuV41"
                                        }
                                    ],
                                    "name": "ChecksumType",
                                    "type": "enum"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ScrollBarPolicy"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ScrollBarPolicy"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::FocusPolicy"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::FocusPolicy"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ContextMenuPolicy"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ContextMenuPolicy"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ArrowType"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ArrowType"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ToolButtonStyle"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ToolButtonStyle"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::PenStyle"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::PenStyle"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::PenCapStyle"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::PenCapStyle"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::PenJoinStyle"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::PenJoinStyle"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::BrushStyle"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::BrushStyle"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::FillRule"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::FillRule"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::MaskMode"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::MaskMode"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::BGMode"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::BGMode"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ClipOperation"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ClipOperation"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::SizeMode"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::SizeMode"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::Axis"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::Axis"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::Corner"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::Corner"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::Edge"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::Edge"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::LayoutDirection"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::LayoutDirection"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::SizeHint"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::SizeHint"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::Orientation"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::Orientation"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::DropAction"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::DropAction"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::Alignment"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::Alignment"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::TextFlag"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::TextFlag"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::Orientations"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::Orientations"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::DropActions"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::DropActions"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::Edges"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::Edges"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::DockWidgetAreas"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::DockWidgetAreas"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ToolBarAreas"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ToolBarAreas"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::DockWidgetArea"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::DockWidgetArea"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ToolBarArea"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ToolBarArea"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::TextFormat"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::TextFormat"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::TextElideMode"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::TextElideMode"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::DateFormat"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::DateFormat"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::TimeSpec"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::TimeSpec"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::DayOfWeek"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::DayOfWeek"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::CursorShape"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::CursorShape"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::GlobalColor"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::GlobalColor"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::AspectRatioMode"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::AspectRatioMode"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::Key"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::Key"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ShortcutContext"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ShortcutContext"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::TextInteractionFlag"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::TextInteractionFlag"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::TextInteractionFlags"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::TextInteractionFlags"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ItemSelectionMode"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ItemSelectionMode"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ItemSelectionOperation"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ItemSelectionOperation"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ItemFlags"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ItemFlags"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::CheckState"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::CheckState"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ItemDataRole"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ItemDataRole"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::SortOrder"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::SortOrder"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::CaseSensitivity"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::CaseSensitivity"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::MatchFlags"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::MatchFlags"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::KeyboardModifiers"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::KeyboardModifiers"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::MouseButtons"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::MouseButtons"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::WindowType"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::WindowType"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::WindowState"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::WindowState"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::WindowModality"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::WindowModality"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::WidgetAttribute"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::WidgetAttribute"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ApplicationAttribute"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ApplicationAttribute"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::WindowFlags"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::WindowFlags"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::WindowStates"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::WindowStates"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::FocusReason"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::FocusReason"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::InputMethodHint"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::InputMethodHint"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::InputMethodQuery"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::InputMethodQuery"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::InputMethodHints"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::InputMethodHints"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::EnterKeyType"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::EnterKeyType"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::InputMethodQueries"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::InputMethodQueries"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::TouchPointStates"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::TouchPointStates"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ScreenOrientation"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ScreenOrientation"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ScreenOrientations"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ScreenOrientations"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ConnectionType"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ConnectionType"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ApplicationState"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ApplicationState"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::GestureState"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::GestureState"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::GestureType"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::GestureType"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::NativeGestureType"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::NativeGestureType"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::CursorMoveStyle"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::CursorMoveStyle"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::TimerType"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::TimerType"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ScrollPhase"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ScrollPhase"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::MouseEventSource"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::MouseEventSource"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::MouseEventFlag"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::MouseEventFlag"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ChecksumType"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ChecksumType"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::TabFocusBehavior"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::TabFocusBehavior"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                }
                            ],
                            "name": "Qt",
                            "rename": "@",
                            "type": "namespace"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::MouseButtons::enum_type",
                                "Qt::MouseButtons::enum_type"
                            ],
                            "returns": "QFlags<Qt::MouseButtons::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::MouseButtons::enum_type",
                                "QFlags<Qt::MouseButtons::enum_type>"
                            ],
                            "returns": "QFlags<Qt::MouseButtons::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::MouseButtons::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::Orientations::enum_type",
                                "Qt::Orientations::enum_type"
                            ],
                            "returns": "QFlags<Qt::Orientations::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::Orientations::enum_type",
                                "QFlags<Qt::Orientations::enum_type>"
                            ],
                            "returns": "QFlags<Qt::Orientations::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::Orientations::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::KeyboardModifiers::enum_type",
                                "Qt::KeyboardModifiers::enum_type"
                            ],
                            "returns": "QFlags<Qt::KeyboardModifiers::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::KeyboardModifiers::enum_type",
                                "QFlags<Qt::KeyboardModifiers::enum_type>"
                            ],
                            "returns": "QFlags<Qt::KeyboardModifiers::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::KeyboardModifiers::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::WindowFlags::enum_type",
                                "Qt::WindowFlags::enum_type"
                            ],
                            "returns": "QFlags<Qt::WindowFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::WindowFlags::enum_type",
                                "QFlags<Qt::WindowFlags::enum_type>"
                            ],
                            "returns": "QFlags<Qt::WindowFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::WindowFlags::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::Alignment::enum_type",
                                "Qt::Alignment::enum_type"
                            ],
                            "returns": "QFlags<Qt::Alignment::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::Alignment::enum_type",
                                "QFlags<Qt::Alignment::enum_type>"
                            ],
                            "returns": "QFlags<Qt::Alignment::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::Alignment::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::Edges::enum_type",
                                "Qt::Edges::enum_type"
                            ],
                            "returns": "QFlags<Qt::Edges::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::Edges::enum_type",
                                "QFlags<Qt::Edges::enum_type>"
                            ],
                            "returns": "QFlags<Qt::Edges::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::Edges::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ImageConversionFlags::enum_type",
                                "Qt::ImageConversionFlags::enum_type"
                            ],
                            "returns": "QFlags<Qt::ImageConversionFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ImageConversionFlags::enum_type",
                                "QFlags<Qt::ImageConversionFlags::enum_type>"
                            ],
                            "returns": "QFlags<Qt::ImageConversionFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ImageConversionFlags::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::DockWidgetAreas::enum_type",
                                "Qt::DockWidgetAreas::enum_type"
                            ],
                            "returns": "QFlags<Qt::DockWidgetAreas::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::DockWidgetAreas::enum_type",
                                "QFlags<Qt::DockWidgetAreas::enum_type>"
                            ],
                            "returns": "QFlags<Qt::DockWidgetAreas::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::DockWidgetAreas::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ToolBarAreas::enum_type",
                                "Qt::ToolBarAreas::enum_type"
                            ],
                            "returns": "QFlags<Qt::ToolBarAreas::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ToolBarAreas::enum_type",
                                "QFlags<Qt::ToolBarAreas::enum_type>"
                            ],
                            "returns": "QFlags<Qt::ToolBarAreas::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ToolBarAreas::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::WindowStates::enum_type",
                                "Qt::WindowStates::enum_type"
                            ],
                            "returns": "QFlags<Qt::WindowStates::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::WindowStates::enum_type",
                                "QFlags<Qt::WindowStates::enum_type>"
                            ],
                            "returns": "QFlags<Qt::WindowStates::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::WindowStates::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ScreenOrientations::enum_type",
                                "Qt::ScreenOrientations::enum_type"
                            ],
                            "returns": "QFlags<Qt::ScreenOrientations::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ScreenOrientations::enum_type",
                                "QFlags<Qt::ScreenOrientations::enum_type>"
                            ],
                            "returns": "QFlags<Qt::ScreenOrientations::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ScreenOrientations::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::DropActions::enum_type",
                                "Qt::DropActions::enum_type"
                            ],
                            "returns": "QFlags<Qt::DropActions::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::DropActions::enum_type",
                                "QFlags<Qt::DropActions::enum_type>"
                            ],
                            "returns": "QFlags<Qt::DropActions::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::DropActions::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ItemFlags::enum_type",
                                "Qt::ItemFlags::enum_type"
                            ],
                            "returns": "QFlags<Qt::ItemFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ItemFlags::enum_type",
                                "QFlags<Qt::ItemFlags::enum_type>"
                            ],
                            "returns": "QFlags<Qt::ItemFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ItemFlags::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::MatchFlags::enum_type",
                                "Qt::MatchFlags::enum_type"
                            ],
                            "returns": "QFlags<Qt::MatchFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::MatchFlags::enum_type",
                                "QFlags<Qt::MatchFlags::enum_type>"
                            ],
                            "returns": "QFlags<Qt::MatchFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::MatchFlags::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::TextInteractionFlags::enum_type",
                                "Qt::TextInteractionFlags::enum_type"
                            ],
                            "returns": "QFlags<Qt::TextInteractionFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::TextInteractionFlags::enum_type",
                                "QFlags<Qt::TextInteractionFlags::enum_type>"
                            ],
                            "returns": "QFlags<Qt::TextInteractionFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::TextInteractionFlags::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::InputMethodQueries::enum_type",
                                "Qt::InputMethodQueries::enum_type"
                            ],
                            "returns": "QFlags<Qt::InputMethodQueries::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::InputMethodQueries::enum_type",
                                "QFlags<Qt::InputMethodQueries::enum_type>"
                            ],
                            "returns": "QFlags<Qt::InputMethodQueries::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::InputMethodQueries::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::InputMethodHints::enum_type",
                                "Qt::InputMethodHints::enum_type"
                            ],
                            "returns": "QFlags<Qt::InputMethodHints::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::InputMethodHints::enum_type",
                                "QFlags<Qt::InputMethodHints::enum_type>"
                            ],
                            "returns": "QFlags<Qt::InputMethodHints::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::InputMethodHints::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::TouchPointStates::enum_type",
                                "Qt::TouchPointStates::enum_type"
                            ],
                            "returns": "QFlags<Qt::TouchPointStates::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::TouchPointStates::enum_type",
                                "QFlags<Qt::TouchPointStates::enum_type>"
                            ],
                            "returns": "QFlags<Qt::TouchPointStates::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::TouchPointStates::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::MouseEventFlags::enum_type",
                                "Qt::MouseEventFlags::enum_type"
                            ],
                            "returns": "QFlags<Qt::MouseEventFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::MouseEventFlags::enum_type",
                                "QFlags<Qt::MouseEventFlags::enum_type>"
                            ],
                            "returns": "QFlags<Qt::MouseEventFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::MouseEventFlags::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::GestureFlags::enum_type",
                                "Qt::GestureFlags::enum_type"
                            ],
                            "returns": "QFlags<Qt::GestureFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::GestureFlags::enum_type",
                                "QFlags<Qt::GestureFlags::enum_type>"
                            ],
                            "returns": "QFlags<Qt::GestureFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::GestureFlags::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<Qt>",
                    "name": "enums",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QPoint",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPoint",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPoint",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "manhattanLength",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "rx",
                                    "returns": "int &",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "ry",
                                    "returns": "int &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "QPoint &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "QPoint &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "float"
                                    ],
                                    "returns": "QPoint &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "double"
                                    ],
                                    "returns": "QPoint &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QPoint &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QPoint &",
                                    "type": "function"
                                },
                                {
                                    "name": "dotProduct",
                                    "parameters": [
                                        "const QPoint &",
                                        "const QPoint &"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QPoint",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QPoint &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QPoint &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QPoint &",
                                "const QPoint &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QPoint &",
                                "const QPoint &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QPoint &",
                                "const QPoint &"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QPoint &",
                                "const QPoint &"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QPoint &",
                                "float"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QPoint &",
                                "double"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QPoint &",
                                "int"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "float",
                                "const QPoint &"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "double",
                                "const QPoint &"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "int",
                                "const QPoint &"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QPoint &"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QPoint &"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QPoint &",
                                "qreal"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QPoint &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QPointF",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPointF",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPointF",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPointF",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "manhattanLength",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "rx",
                                    "returns": "qreal &",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "ry",
                                    "returns": "qreal &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "QPointF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "QPointF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QPointF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QPointF &",
                                    "type": "function"
                                },
                                {
                                    "name": "dotProduct",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QPointF &"
                                    ],
                                    "returns": "qreal",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPoint",
                                    "returns": "QPoint",
                                    "type": "function"
                                }
                            ],
                            "name": "QPointF",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QPointF &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QPointF &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QPointF &",
                                "const QPointF &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QPointF &",
                                "const QPointF &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QPointF &",
                                "const QPointF &"
                            ],
                            "returns": "const QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QPointF &",
                                "const QPointF &"
                            ],
                            "returns": "const QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QPointF &",
                                "qreal"
                            ],
                            "returns": "const QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "qreal",
                                "const QPointF &"
                            ],
                            "returns": "const QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QPointF &"
                            ],
                            "returns": "const QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QPointF &"
                            ],
                            "returns": "const QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QPointF &",
                                "qreal"
                            ],
                            "returns": "const QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QPointF &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QPoint>",
                    "name": "point",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QSize",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSize",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QSize",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QSize",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setWidth",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setHeight",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "transpose",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transposed",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "scale",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "Qt::AspectRatioMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "scale",
                                    "parameters": [
                                        "const QSize &",
                                        "Qt::AspectRatioMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaled",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "Qt::AspectRatioMode"
                                    ],
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaled",
                                    "parameters": [
                                        "const QSize &",
                                        "Qt::AspectRatioMode"
                                    ],
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "expandedTo",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundedTo",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "rwidth",
                                    "returns": "int &",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "rheight",
                                    "returns": "int &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "returns": "QSize &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "returns": "QSize &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QSize &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QSize &",
                                    "type": "function"
                                }
                            ],
                            "name": "QSize",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QSize &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QSize &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QSize &",
                                "const QSize &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QSize &",
                                "const QSize &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QSize &",
                                "const QSize &"
                            ],
                            "returns": "const QSize",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QSize &",
                                "const QSize &"
                            ],
                            "returns": "const QSize",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QSize &",
                                "qreal"
                            ],
                            "returns": "const QSize",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "qreal",
                                "const QSize &"
                            ],
                            "returns": "const QSize",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QSize &",
                                "qreal"
                            ],
                            "returns": "const QSize",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QSize &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QSizeF",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSizeF",
                                    "parameters": [
                                        "const QSizeF &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSizeF",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSizeF",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QSizeF",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setWidth",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setHeight",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "transpose",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transposed",
                                    "returns": "QSizeF",
                                    "type": "function"
                                },
                                {
                                    "name": "scale",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "Qt::AspectRatioMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "scale",
                                    "parameters": [
                                        "const QSizeF &",
                                        "Qt::AspectRatioMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaled",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "Qt::AspectRatioMode"
                                    ],
                                    "returns": "QSizeF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaled",
                                    "parameters": [
                                        "const QSizeF &",
                                        "Qt::AspectRatioMode"
                                    ],
                                    "returns": "QSizeF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "expandedTo",
                                    "parameters": [
                                        "const QSizeF &"
                                    ],
                                    "returns": "QSizeF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundedTo",
                                    "parameters": [
                                        "const QSizeF &"
                                    ],
                                    "returns": "QSizeF",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "rwidth",
                                    "returns": "qreal &",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "rheight",
                                    "returns": "qreal &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QSizeF &"
                                    ],
                                    "returns": "QSizeF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QSizeF &"
                                    ],
                                    "returns": "QSizeF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QSizeF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QSizeF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toSize",
                                    "returns": "QSize",
                                    "type": "function"
                                }
                            ],
                            "name": "QSizeF",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QSizeF &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QSizeF &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QSizeF &",
                                "const QSizeF &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QSizeF &",
                                "const QSizeF &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QSizeF &",
                                "const QSizeF &"
                            ],
                            "returns": "const QSizeF",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QSizeF &",
                                "const QSizeF &"
                            ],
                            "returns": "const QSizeF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QSizeF &",
                                "qreal"
                            ],
                            "returns": "const QSizeF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "qreal",
                                "const QSizeF &"
                            ],
                            "returns": "const QSizeF",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QSizeF &",
                                "qreal"
                            ],
                            "returns": "const QSizeF",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QSizeF &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QSize>",
                    "name": "size",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QRect",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRect",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QRect",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QRect",
                                    "parameters": [
                                        "const QPoint &",
                                        "const QPoint &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRect",
                                    "parameters": [
                                        "const QPoint &",
                                        "const QSize &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRect",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "left",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "top",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "right",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottom",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "normalized",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setLeft",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setTop",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setRight",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setBottom",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setTopLeft",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setBottomRight",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setTopRight",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setBottomLeft",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "topLeft",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottomRight",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "topRight",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottomLeft",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "center",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "name": "moveLeft",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "moveTop",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "moveRight",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "moveBottom",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "moveTopLeft",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "moveBottomRight",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "moveTopRight",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "moveBottomLeft",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "moveCenter",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transposed",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTo",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "moveTo",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setRect",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getRect",
                                    "parameters": [
                                        "int *",
                                        "int *",
                                        "int *",
                                        "int *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setCoords",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getCoords",
                                    "parameters": [
                                        "int *",
                                        "int *",
                                        "int *",
                                        "int *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "adjust",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "adjusted",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setWidth",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setHeight",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setSize",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator|",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator&",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "operator|=",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QRect &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator&=",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QRect &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "const QRect &",
                                        "bool"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "const QPoint &",
                                        "bool"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "bool"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "united",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersected",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersects",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "marginsAdded",
                                    "parameters": [
                                        "const QMargins &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "marginsRemoved",
                                    "parameters": [
                                        "const QMargins &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QMargins &"
                                    ],
                                    "returns": "QRect &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QMargins &"
                                    ],
                                    "returns": "QRect &",
                                    "type": "function"
                                }
                            ],
                            "name": "QRect",
                            "type": "class"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QRect &",
                                "const QRect &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QRect &",
                                "const QRect &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QRect &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QRect &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QRect &",
                                "const QRect &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QRect &",
                                "const QRect &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QRect &",
                                "const QMargins &"
                            ],
                            "returns": "QRect",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QMargins &",
                                "const QRect &"
                            ],
                            "returns": "QRect",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QRect &",
                                "const QMargins &"
                            ],
                            "returns": "QRect",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QRect &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QRectF",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRectF",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QRectF",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QRectF",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QSizeF &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRectF",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QPointF &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRectF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRectF",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "normalized",
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "left",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "top",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "right",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottom",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setLeft",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setTop",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setRight",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setBottom",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "topLeft",
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottomRight",
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "topRight",
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottomLeft",
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "center",
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "name": "setTopLeft",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setBottomRight",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setTopRight",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setBottomLeft",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "moveLeft",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "moveTop",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "moveRight",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "moveBottom",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "moveTopLeft",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "moveBottomRight",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "moveTopRight",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "moveBottomLeft",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "moveCenter",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transposed",
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTo",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "moveTo",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setRect",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getRect",
                                    "parameters": [
                                        "qreal *",
                                        "qreal *",
                                        "qreal *",
                                        "qreal *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setCoords",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getCoords",
                                    "parameters": [
                                        "qreal *",
                                        "qreal *",
                                        "qreal *",
                                        "qreal *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "adjust",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "adjusted",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "returns": "QSizeF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setWidth",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setHeight",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setSize",
                                    "parameters": [
                                        "const QSizeF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator|",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator&",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "name": "operator|=",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "returns": "QRectF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator&=",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "returns": "QRectF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "united",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersected",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersects",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "marginsAdded",
                                    "parameters": [
                                        "const QMarginsF &"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "marginsRemoved",
                                    "parameters": [
                                        "const QMarginsF &"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QMarginsF &"
                                    ],
                                    "returns": "QRectF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QMarginsF &"
                                    ],
                                    "returns": "QRectF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRect",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toAlignedRect",
                                    "returns": "QRect",
                                    "type": "function"
                                }
                            ],
                            "name": "QRectF",
                            "type": "class"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QRectF &",
                                "const QRectF &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QRectF &",
                                "const QRectF &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QRectF &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QRectF &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QRectF &",
                                "const QRectF &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QRectF &",
                                "const QRectF &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QRectF &",
                                "const QMarginsF &"
                            ],
                            "returns": "QRectF",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QMarginsF &",
                                "const QRectF &"
                            ],
                            "returns": "QRectF",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QRectF &",
                                "const QMarginsF &"
                            ],
                            "returns": "QRectF",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QRectF &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QRect>",
                    "name": "rect",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QMargins",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QMargins",
                                    "parameters": [
                                        "const QMargins &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QMargins",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QMargins",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "left",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "top",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "right",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottom",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setLeft",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setTop",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setRight",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setBottom",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QMargins &"
                                    ],
                                    "returns": "QMargins &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QMargins &"
                                    ],
                                    "returns": "QMargins &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QMargins &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QMargins &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QMargins &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QMargins &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QMargins &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QMargins &",
                                    "type": "function"
                                }
                            ],
                            "name": "QMargins",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QMargins &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QMargins &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QMargins &",
                                "const QMargins &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QMargins &",
                                "const QMargins &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QMargins &",
                                "const QMargins &"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QMargins &",
                                "const QMargins &"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QMargins &",
                                "int"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "int",
                                "const QMargins &"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QMargins &",
                                "int"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QMargins &",
                                "int"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "int",
                                "const QMargins &"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QMargins &",
                                "qreal"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "qreal",
                                "const QMargins &"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QMargins &",
                                "int"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QMargins &",
                                "qreal"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QMargins &"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QMargins &"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QMargins &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QMarginsF",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QMargins",
                                    "parameters": [
                                        "const QMargins &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QMarginsF",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QMarginsF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QMarginsF",
                                    "parameters": [
                                        "const QMargins &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "left",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "top",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "right",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottom",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setLeft",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setTop",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setRight",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setBottom",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QMarginsF &"
                                    ],
                                    "returns": "QMarginsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QMarginsF &"
                                    ],
                                    "returns": "QMarginsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QMarginsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QMarginsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QMarginsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QMarginsF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toMargins",
                                    "returns": "QMargins",
                                    "type": "function"
                                }
                            ],
                            "name": "QMarginsF",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QMarginsF &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QMarginsF &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QMarginsF &",
                                "const QMarginsF &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QMarginsF &",
                                "const QMarginsF &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QMarginsF &",
                                "const QMarginsF &"
                            ],
                            "returns": "QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QMarginsF &",
                                "const QMarginsF &"
                            ],
                            "returns": "QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QMarginsF &",
                                "qreal"
                            ],
                            "returns": "QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "qreal",
                                "const QMarginsF &"
                            ],
                            "returns": "QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QMarginsF &",
                                "qreal"
                            ],
                            "returns": "QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QMarginsF &",
                                "qreal"
                            ],
                            "returns": "QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "qreal",
                                "const QMarginsF &"
                            ],
                            "returns": "QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QMarginsF &",
                                "qreal"
                            ],
                            "returns": "QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QMarginsF &"
                            ],
                            "returns": "QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QMarginsF &"
                            ],
                            "returns": "QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QMarginsF &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QMargins>",
                    "name": "margins",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "DateFormat"
                                        },
                                        {
                                            "name": "StandaloneFormat"
                                        }
                                    ],
                                    "name": "MonthNameType",
                                    "type": "enum"
                                },
                                {
                                    "name": "QDate",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDate",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDate",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QDate",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "year",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "month",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "day",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dayOfWeek",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dayOfYear",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "daysInMonth",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "daysInYear",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "weekNumber",
                                    "parameters": [
                                        "int *"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "shortMonthName",
                                    "parameters": [
                                        "int",
                                        "QDate::MonthNameType"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "shortDayName",
                                    "parameters": [
                                        "int",
                                        "QDate::MonthNameType"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "longMonthName",
                                    "parameters": [
                                        "int",
                                        "QDate::MonthNameType"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "longDayName",
                                    "parameters": [
                                        "int",
                                        "QDate::MonthNameType"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "Qt::DateFormat"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setDate",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "getDate",
                                    "parameters": [
                                        "int *",
                                        "int *",
                                        "int *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getDate",
                                    "parameters": [
                                        "int *",
                                        "int *",
                                        "int *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addDays",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addMonths",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addYears",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "daysTo",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "returns": "QDate &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<=",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>=",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "currentDate",
                                    "returns": "QDate",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromString",
                                    "parameters": [
                                        "const QString &",
                                        "Qt::DateFormat"
                                    ],
                                    "returns": "QDate",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromString",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "QDate",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isValid",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isLeapYear",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromJulianDay",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "QDate",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toJulianDay",
                                    "returns": "qint64",
                                    "type": "function"
                                }
                            ],
                            "name": "QDate",
                            "type": "class"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QTime",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTime",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QTime",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QTime",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hour",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minute",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "second",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "msec",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "Qt::DateFormat"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setHMS",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addSecs",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "secsTo",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addMSecs",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "msecsTo",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "returns": "QTime &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<=",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>=",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "fromMSecsSinceStartOfDay",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "msecsSinceStartOfDay",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "currentTime",
                                    "returns": "QTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromString",
                                    "parameters": [
                                        "const QString &",
                                        "Qt::DateFormat"
                                    ],
                                    "returns": "QTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromString",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "QTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isValid",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "start",
                                    "type": "function"
                                },
                                {
                                    "name": "restart",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "elapsed",
                                    "returns": "int",
                                    "type": "function"
                                }
                            ],
                            "name": "QTime",
                            "type": "class"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QDateTime",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateTime",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateTime",
                                    "parameters": [
                                        "const QDate &",
                                        "const QTime &",
                                        "Qt::TimeSpec"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateTime",
                                    "parameters": [
                                        "const QDate &",
                                        "const QTime &",
                                        "Qt::TimeSpec",
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateTime",
                                    "parameters": [
                                        "const QDate &",
                                        "const QTime &",
                                        "const QTimeZone &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateTime",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateTime",
                                    "parameters": [
                                        "QDateTime &&"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDateTime",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QDateTime &&"
                                    ],
                                    "returns": "QDateTime &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "QDateTime &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QDateTime &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "date",
                                    "returns": "QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "time",
                                    "returns": "QTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "timeSpec",
                                    "returns": "Qt::TimeSpec",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "offsetFromUtc",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "timeZone",
                                    "returns": "QTimeZone",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "timeZoneAbbreviation",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDaylightTime",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toMSecsSinceEpoch",
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toSecsSinceEpoch",
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "setDate",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setTime",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setTimeSpec",
                                    "parameters": [
                                        "Qt::TimeSpec"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setOffsetFromUtc",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setTimeZone",
                                    "parameters": [
                                        "const QTimeZone &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setMSecsSinceEpoch",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setSecsSinceEpoch",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "Qt::DateFormat"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addDays",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addMonths",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addYears",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addSecs",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addMSecs",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toTimeSpec",
                                    "parameters": [
                                        "Qt::TimeSpec"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLocalTime",
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUTC",
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toOffsetFromUtc",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toTimeZone",
                                    "parameters": [
                                        "const QTimeZone &"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "daysTo",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "secsTo",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "msecsTo",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<=",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>=",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setUtcOffset",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "utcOffset",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "currentDateTime",
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "currentDateTimeUtc",
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromString",
                                    "parameters": [
                                        "const QString &",
                                        "Qt::DateFormat"
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromString",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toTime_t",
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "name": "setTime_t",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fromTime_t",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromTime_t",
                                    "parameters": [
                                        "uint",
                                        "Qt::TimeSpec",
                                        "int"
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromTime_t",
                                    "parameters": [
                                        "uint",
                                        "const QTimeZone &"
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromMSecsSinceEpoch",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromMSecsSinceEpoch",
                                    "parameters": [
                                        "qint64",
                                        "Qt::TimeSpec",
                                        "int"
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromSecsSinceEpoch",
                                    "parameters": [
                                        "qint64",
                                        "Qt::TimeSpec",
                                        "int"
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromMSecsSinceEpoch",
                                    "parameters": [
                                        "qint64",
                                        "const QTimeZone &"
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromSecsSinceEpoch",
                                    "parameters": [
                                        "qint64",
                                        "const QTimeZone &"
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "currentMSecsSinceEpoch",
                                    "returns": "qint64",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "currentSecsSinceEpoch",
                                    "returns": "qint64",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QDateTime",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QDateTime &",
                                "QDateTime &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QDate &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QDate &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QTime &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QTime &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QDateTime &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QDateTime &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QDate &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QTime &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QDateTime &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "qHash",
                            "parameters": [
                                "const QDateTime &",
                                "uint"
                            ],
                            "returns": "uint",
                            "type": "function"
                        },
                        {
                            "name": "qHash",
                            "parameters": [
                                "const QDate &",
                                "uint"
                            ],
                            "returns": "uint",
                            "type": "function"
                        },
                        {
                            "name": "qHash",
                            "parameters": [
                                "const QTime &",
                                "uint"
                            ],
                            "returns": "uint",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QDateTime>",
                    "name": "datetime",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Dirs"
                                        },
                                        {
                                            "name": "Files"
                                        },
                                        {
                                            "name": "Drives"
                                        },
                                        {
                                            "name": "NoSymLinks"
                                        },
                                        {
                                            "name": "AllEntries"
                                        },
                                        {
                                            "name": "TypeMask"
                                        },
                                        {
                                            "name": "Readable"
                                        },
                                        {
                                            "name": "Writable"
                                        },
                                        {
                                            "name": "Executable"
                                        },
                                        {
                                            "name": "PermissionMask"
                                        },
                                        {
                                            "name": "Modified"
                                        },
                                        {
                                            "name": "Hidden"
                                        },
                                        {
                                            "name": "System"
                                        },
                                        {
                                            "name": "AccessMask"
                                        },
                                        {
                                            "name": "AllDirs"
                                        },
                                        {
                                            "name": "CaseSensitive"
                                        },
                                        {
                                            "name": "NoDot"
                                        },
                                        {
                                            "name": "NoDotDot"
                                        },
                                        {
                                            "name": "NoDotAndDotDot"
                                        },
                                        {
                                            "name": "NoFilter"
                                        }
                                    ],
                                    "name": "Filter",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Name"
                                        },
                                        {
                                            "name": "Time"
                                        },
                                        {
                                            "name": "Size"
                                        },
                                        {
                                            "name": "Unsorted"
                                        },
                                        {
                                            "name": "SortByMask"
                                        },
                                        {
                                            "name": "DirsFirst"
                                        },
                                        {
                                            "name": "Reversed"
                                        },
                                        {
                                            "name": "IgnoreCase"
                                        },
                                        {
                                            "name": "DirsLast"
                                        },
                                        {
                                            "name": "LocaleAware"
                                        },
                                        {
                                            "name": "Type"
                                        },
                                        {
                                            "name": "NoSort"
                                        }
                                    ],
                                    "name": "SortFlag",
                                    "type": "enum"
                                },
                                {
                                    "name": "QDir",
                                    "parameters": [
                                        "const QDir &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDir",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDir",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &",
                                        "QDir::SortFlags",
                                        "QDir::Filters"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDir",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QDir &"
                                    ],
                                    "returns": "QDir &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QDir &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QDir &&"
                                    ],
                                    "returns": "QDir &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QDir &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setPath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "path",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "absolutePath",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "canonicalPath",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "addResourceSearchPath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setSearchPaths",
                                    "parameters": [
                                        "const QString &",
                                        "const QStringList &"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "addSearchPath",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "searchPaths",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dirName",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "filePath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "absoluteFilePath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "relativeFilePath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "toNativeSeparators",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromNativeSeparators",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "cd",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "cdUp",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nameFilters",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "setNameFilters",
                                    "parameters": [
                                        "const QStringList &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "filter",
                                    "returns": "QDir::Filters",
                                    "type": "function"
                                },
                                {
                                    "name": "setFilter",
                                    "parameters": [
                                        "QDir::Filters"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sorting",
                                    "returns": "QDir::SortFlags",
                                    "type": "function"
                                },
                                {
                                    "name": "setSorting",
                                    "parameters": [
                                        "QDir::SortFlags"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "parameters": [
                                        "QDir::Filters"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "nameFiltersFromString",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "entryList",
                                    "parameters": [
                                        "QDir::Filters",
                                        "QDir::SortFlags"
                                    ],
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "entryList",
                                    "parameters": [
                                        "const QStringList &",
                                        "QDir::Filters",
                                        "QDir::SortFlags"
                                    ],
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "entryInfoList",
                                    "parameters": [
                                        "QDir::Filters",
                                        "QDir::SortFlags"
                                    ],
                                    "returns": "QFileInfoList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "entryInfoList",
                                    "parameters": [
                                        "const QStringList &",
                                        "QDir::Filters",
                                        "QDir::SortFlags"
                                    ],
                                    "returns": "QFileInfoList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mkdir",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rmdir",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mkpath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rmpath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "removeRecursively",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isReadable",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exists",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRoot",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "isRelativePath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isAbsolutePath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRelative",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isAbsolute",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "makeAbsolute",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QDir &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QDir &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "remove",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "rename",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exists",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "drives",
                                    "returns": "QFileInfoList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "listSeparator",
                                    "returns": "QChar",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "separator",
                                    "returns": "QChar",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrent",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "current",
                                    "returns": "QDir",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "currentPath",
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "home",
                                    "returns": "QDir",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "homePath",
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "root",
                                    "returns": "QDir",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "rootPath",
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "temp",
                                    "returns": "QDir",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "tempPath",
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "match",
                                    "parameters": [
                                        "const QStringList &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "match",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "cleanPath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "refresh",
                                    "type": "function"
                                }
                            ],
                            "name": "QDir",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QDir &",
                                "QDir &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QDir::Filter",
                                "QDir::Filter"
                            ],
                            "returns": "QDir::Filters",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QDir::Filter",
                                "QDir::Filters"
                            ],
                            "returns": "QDir::Filters",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QDir::Filters::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QDir::SortFlag",
                                "QDir::SortFlag"
                            ],
                            "returns": "QDir::SortFlags",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QDir::SortFlag",
                                "QDir::SortFlags"
                            ],
                            "returns": "QDir::SortFlags",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QDir::SortFlags::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "QDir::Filters"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QDir &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QDir>",
                    "name": "dir",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QFileInfo",
                                    "parameters": [
                                        "QFileInfoPrivate *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFileInfo",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFileInfo",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFileInfo",
                                    "parameters": [
                                        "const QFile &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFileInfo",
                                    "parameters": [
                                        "const QDir &",
                                        "const QString &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFileInfo",
                                    "parameters": [
                                        "const QFileInfo &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFileInfo",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QFileInfo &"
                                    ],
                                    "returns": "QFileInfo &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QFileInfo &&"
                                    ],
                                    "returns": "QFileInfo &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QFileInfo &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QFileInfo &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QFileInfo &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setFile",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setFile",
                                    "parameters": [
                                        "const QFile &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setFile",
                                    "parameters": [
                                        "const QDir &",
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exists",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "exists",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "refresh",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "filePath",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "absoluteFilePath",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "canonicalFilePath",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fileName",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "baseName",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "completeBaseName",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "suffix",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bundleName",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "completeSuffix",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "path",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "absolutePath",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "canonicalPath",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dir",
                                    "returns": "QDir",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "absoluteDir",
                                    "returns": "QDir",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isReadable",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isWritable",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isExecutable",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isHidden",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNativePath",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRelative",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isAbsolute",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "makeAbsolute",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isFile",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDir",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSymLink",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRoot",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isBundle",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "readLink",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "symLinkTarget",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "owner",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "ownerId",
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "group",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "groupId",
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "permission",
                                    "parameters": [
                                        "QFile::Permissions"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "permissions",
                                    "returns": "QFile::Permissions",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "created",
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "birthTime",
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "metadataChangeTime",
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastModified",
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastRead",
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fileTime",
                                    "parameters": [
                                        "QFile::FileTime"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "caching",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setCaching",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QFileInfo",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QFileInfo &",
                                "QFileInfo &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QFileInfo &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QFileInfo>",
                    "name": "fileinfo",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QLine",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLine",
                                    "parameters": [
                                        "const QLine &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QLine",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QLine",
                                    "parameters": [
                                        "const QPoint &",
                                        "const QPoint &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLine",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "p1",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "p2",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x1",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y1",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x2",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y2",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dx",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dy",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "QLine",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QLine",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "center",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "name": "setP1",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setP2",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setPoints",
                                    "parameters": [
                                        "const QPoint &",
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setLine",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QLine &"
                                    ],
                                    "returns": "QLine &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QLine &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QLine &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QLine",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QLine &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QLine &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QLine &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoIntersection"
                                        },
                                        {
                                            "name": "BoundedIntersection"
                                        },
                                        {
                                            "name": "UnboundedIntersection"
                                        }
                                    ],
                                    "name": "IntersectType",
                                    "type": "enum"
                                },
                                {
                                    "name": "QLineF",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLineF",
                                    "parameters": [
                                        "const QLineF &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QLineF",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QLineF",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QPointF &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLineF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLineF",
                                    "parameters": [
                                        "const QLine &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "fromPolar",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QLineF",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "p1",
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "p2",
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x1",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y1",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x2",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y2",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dx",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dy",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "length",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setLength",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "angle",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setAngle",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "angleTo",
                                    "parameters": [
                                        "const QLineF &"
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "unitVector",
                                    "returns": "QLineF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "normalVector",
                                    "returns": "QLineF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersect",
                                    "parameters": [
                                        "const QLineF &",
                                        "QPointF *"
                                    ],
                                    "returns": "QLineF::IntersectType",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "angle",
                                    "parameters": [
                                        "const QLineF &"
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pointAt",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "QLineF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QLineF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "center",
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "name": "setP1",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setP2",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setPoints",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setLine",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QLineF &"
                                    ],
                                    "returns": "QLineF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QLineF &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QLineF &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLine",
                                    "returns": "QLine",
                                    "type": "function"
                                }
                            ],
                            "name": "QLineF",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QLineF &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QLineF &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QLineF &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QLine>",
                    "name": "line",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "name": "qHash",
                            "parameters": [
                                "const QUrl &",
                                "uint"
                            ],
                            "returns": "uint",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "TolerantMode"
                                        },
                                        {
                                            "name": "StrictMode"
                                        },
                                        {
                                            "name": "DecodedMode"
                                        }
                                    ],
                                    "name": "ParsingMode",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "None"
                                        },
                                        {
                                            "name": "RemoveScheme"
                                        },
                                        {
                                            "name": "RemovePassword"
                                        },
                                        {
                                            "name": "RemoveUserInfo"
                                        },
                                        {
                                            "name": "RemovePort"
                                        },
                                        {
                                            "name": "RemoveAuthority"
                                        },
                                        {
                                            "name": "RemovePath"
                                        },
                                        {
                                            "name": "RemoveQuery"
                                        },
                                        {
                                            "name": "RemoveFragment"
                                        },
                                        {
                                            "name": "PreferLocalFile"
                                        },
                                        {
                                            "name": "StripTrailingSlash"
                                        },
                                        {
                                            "name": "RemoveFilename"
                                        },
                                        {
                                            "name": "NormalizePathSegments"
                                        }
                                    ],
                                    "name": "UrlFormattingOption",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "PrettyDecoded"
                                        },
                                        {
                                            "name": "EncodeSpaces"
                                        },
                                        {
                                            "name": "EncodeUnicode"
                                        },
                                        {
                                            "name": "EncodeDelimiters"
                                        },
                                        {
                                            "name": "EncodeReserved"
                                        },
                                        {
                                            "name": "DecodeReserved"
                                        },
                                        {
                                            "name": "FullyEncoded"
                                        },
                                        {
                                            "name": "FullyDecoded"
                                        }
                                    ],
                                    "name": "ComponentFormattingOption",
                                    "type": "enum"
                                },
                                {
                                    "name": "QUrl",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QUrl",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "returns": "QUrl &",
                                    "type": "function"
                                },
                                {
                                    "name": "QUrl",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QUrl &",
                                    "type": "function"
                                },
                                {
                                    "name": "QUrl",
                                    "parameters": [
                                        "QUrl &&"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QUrl &&"
                                    ],
                                    "returns": "QUrl &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QUrl",
                                    "type": "destructor"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QUrl &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setUrl",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "url",
                                    "parameters": [
                                        "QUrl::FormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "QUrl::FormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDisplayString",
                                    "parameters": [
                                        "QUrl::FormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "adjusted",
                                    "parameters": [
                                        "QUrl::FormattingOptions"
                                    ],
                                    "returns": "QUrl",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toEncoded",
                                    "parameters": [
                                        "QUrl::FormattingOptions"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "fromEncoded",
                                    "parameters": [
                                        "const QByteArray &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "returns": "QUrl",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "DefaultResolution"
                                        },
                                        {
                                            "name": "AssumeLocalFile"
                                        }
                                    ],
                                    "name": "UserInputResolutionOption",
                                    "type": "enum"
                                },
                                {
                                    "name": "fromUserInput",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QUrl",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromUserInput",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &",
                                        "QUrl::UserInputResolutionOptions"
                                    ],
                                    "returns": "QUrl",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "errorString",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "type": "function"
                                },
                                {
                                    "name": "setScheme",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scheme",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setAuthority",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "authority",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setUserInfo",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "userInfo",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setUserName",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "userName",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setPassword",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "password",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setHost",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "host",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "topLevelDomain",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setPort",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "port",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setPath",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "path",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fileName",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasQuery",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setQuery",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setQuery",
                                    "parameters": [
                                        "const QUrlQuery &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "query",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasFragment",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fragment",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setFragment",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "resolved",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "returns": "QUrl",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRelative",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isParentOf",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isLocalFile",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "fromLocalFile",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QUrl",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLocalFile",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "detach",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matches",
                                    "parameters": [
                                        "const QUrl &",
                                        "QUrl::FormattingOptions"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "fromPercentEncoding",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "toPercentEncoding",
                                    "parameters": [
                                        "const QString &",
                                        "const QByteArray &",
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromAce",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "toAce",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "idnWhitelist",
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "toStringList",
                                    "parameters": [
                                        "const QList<QUrl> &",
                                        "QUrl::FormattingOptions"
                                    ],
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromStringList",
                                    "parameters": [
                                        "const QStringList &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "returns": "QList<QUrl>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setIdnWhitelist",
                                    "parameters": [
                                        "const QStringList &"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "returns": "QUrl::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QUrl",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QUrl &",
                                "QUrl &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::ComponentFormattingOption",
                                "QUrl::ComponentFormattingOption"
                            ],
                            "returns": "QUrl::ComponentFormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::ComponentFormattingOption",
                                "QUrl::ComponentFormattingOptions"
                            ],
                            "returns": "QUrl::ComponentFormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::ComponentFormattingOptions::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::UrlFormattingOption",
                                "QUrl::UrlFormattingOption"
                            ],
                            "returns": "QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::UrlFormattingOption",
                                "QUrl::FormattingOptions"
                            ],
                            "returns": "QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::UrlFormattingOption",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|=",
                            "parameters": [
                                "QUrl::FormattingOptions &",
                                "QUrl::ComponentFormattingOptions"
                            ],
                            "returns": "QUrl::FormattingOptions &",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::UrlFormattingOption",
                                "QUrl::ComponentFormattingOption"
                            ],
                            "returns": "QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::UrlFormattingOption",
                                "QUrl::ComponentFormattingOptions"
                            ],
                            "returns": "QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::ComponentFormattingOption",
                                "QUrl::UrlFormattingOption"
                            ],
                            "returns": "QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::ComponentFormattingOptions",
                                "QUrl::UrlFormattingOption"
                            ],
                            "returns": "QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::FormattingOptions",
                                "QUrl::ComponentFormattingOptions"
                            ],
                            "returns": "QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::ComponentFormattingOption",
                                "QUrl::FormattingOptions"
                            ],
                            "returns": "QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::ComponentFormattingOptions",
                                "QUrl::FormattingOptions"
                            ],
                            "returns": "QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QUrl &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QUrl &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QUrl &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QUrl>",
                    "name": "url",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "name": "qHash",
                            "parameters": [
                                "const QUrlQuery &",
                                "uint"
                            ],
                            "returns": "uint",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QUrlQuery",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QUrlQuery",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QUrlQuery",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QUrlQuery",
                                    "parameters": [
                                        "const QUrlQuery &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QUrlQuery &"
                                    ],
                                    "returns": "QUrlQuery &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QUrlQuery &&"
                                    ],
                                    "returns": "QUrlQuery &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QUrlQuery",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QUrlQuery &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QUrlQuery &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QUrlQuery &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "query",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setQuery",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setQueryDelimiters",
                                    "parameters": [
                                        "QChar",
                                        "QChar"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "queryValueDelimiter",
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "queryPairDelimiter",
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "name": "setQueryItems",
                                    "parameters": [
                                        "const QList<QPair<QString, QString> > &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "queryItems",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QList<QPair<QString, QString> >",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasQueryItem",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "addQueryItem",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "removeQueryItem",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "queryItemValue",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "allQueryItemValues",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "removeAllQueryItems",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "defaultQueryValueDelimiter",
                                    "returns": "QChar",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "defaultQueryPairDelimiter",
                                    "returns": "QChar",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "returns": "QUrlQuery::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QUrlQuery",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QUrlQuery &",
                                "QUrlQuery &"
                            ],
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QUrlQuery>",
                    "name": "urlquery",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "checked": 0,
                                    "enumerators": [
                                        {
                                            "checked": 0,
                                            "name": "MinUtcOffsetSecs"
                                        },
                                        {
                                            "checked": 0,
                                            "name": "MaxUtcOffsetSecs"
                                        }
                                    ],
                                    "name": "",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "StandardTime"
                                        },
                                        {
                                            "name": "DaylightTime"
                                        },
                                        {
                                            "name": "GenericTime"
                                        }
                                    ],
                                    "name": "TimeType",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "DefaultName"
                                        },
                                        {
                                            "name": "LongName"
                                        },
                                        {
                                            "name": "ShortName"
                                        },
                                        {
                                            "name": "OffsetName"
                                        }
                                    ],
                                    "name": "NameType",
                                    "type": "enum"
                                },
                                {
                                    "name": "QTimeZone",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTimeZone",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTimeZone",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTimeZone",
                                    "parameters": [
                                        "const QByteArray &",
                                        "int",
                                        "const QString &",
                                        "const QString &",
                                        "QLocale::Country",
                                        "const QString &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTimeZone",
                                    "parameters": [
                                        "const QTimeZone &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QTimeZone",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QTimeZone &"
                                    ],
                                    "returns": "QTimeZone &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QTimeZone &&"
                                    ],
                                    "returns": "QTimeZone &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QTimeZone &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QTimeZone &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QTimeZone &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "id",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "country",
                                    "returns": "QLocale::Country",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "comment",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "displayName",
                                    "parameters": [
                                        "const QDateTime &",
                                        "QTimeZone::NameType",
                                        "const QLocale &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "displayName",
                                    "parameters": [
                                        "QTimeZone::TimeType",
                                        "QTimeZone::NameType",
                                        "const QLocale &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "abbreviation",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "offsetFromUtc",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "standardTimeOffset",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "daylightTimeOffset",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasDaylightTime",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDaylightTime",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "offsetData",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "QTimeZone::OffsetData",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasTransitions",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nextTransition",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "QTimeZone::OffsetData",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "previousTransition",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "QTimeZone::OffsetData",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transitions",
                                    "parameters": [
                                        "const QDateTime &",
                                        "const QDateTime &"
                                    ],
                                    "returns": "QTimeZone::OffsetDataList",
                                    "type": "function"
                                },
                                {
                                    "name": "systemTimeZoneId",
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "systemTimeZone",
                                    "returns": "QTimeZone",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "utc",
                                    "returns": "QTimeZone",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isTimeZoneIdAvailable",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "availableTimeZoneIds",
                                    "returns": "QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "availableTimeZoneIds",
                                    "parameters": [
                                        "QLocale::Country"
                                    ],
                                    "returns": "QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "availableTimeZoneIds",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "ianaIdToWindowsId",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "windowsIdToDefaultIanaId",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "windowsIdToDefaultIanaId",
                                    "parameters": [
                                        "const QByteArray &",
                                        "QLocale::Country"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "windowsIdToIanaIds",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "windowsIdToIanaIds",
                                    "parameters": [
                                        "const QByteArray &",
                                        "QLocale::Country"
                                    ],
                                    "returns": "QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QTimeZone",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QTimeZone &",
                                "QTimeZone &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QTimeZone &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QTimeZone &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QTimeZone &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QTimeZone>",
                    "name": "timezone",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "name": "qHash",
                            "parameters": [
                                "const QLocale &",
                                "uint"
                            ],
                            "returns": "uint",
                            "type": "function"
                        },
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "checked": 0,
                                    "name": "qt_check_for_QGADGET_macro",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "AnyLanguage"
                                        },
                                        {
                                            "name": "C"
                                        },
                                        {
                                            "name": "Abkhazian"
                                        },
                                        {
                                            "name": "Oromo"
                                        },
                                        {
                                            "name": "Afar"
                                        },
                                        {
                                            "name": "Afrikaans"
                                        },
                                        {
                                            "name": "Albanian"
                                        },
                                        {
                                            "name": "Amharic"
                                        },
                                        {
                                            "name": "Arabic"
                                        },
                                        {
                                            "name": "Armenian"
                                        },
                                        {
                                            "name": "Assamese"
                                        },
                                        {
                                            "name": "Aymara"
                                        },
                                        {
                                            "name": "Azerbaijani"
                                        },
                                        {
                                            "name": "Bashkir"
                                        },
                                        {
                                            "name": "Basque"
                                        },
                                        {
                                            "name": "Bengali"
                                        },
                                        {
                                            "name": "Dzongkha"
                                        },
                                        {
                                            "name": "Bihari"
                                        },
                                        {
                                            "name": "Bislama"
                                        },
                                        {
                                            "name": "Breton"
                                        },
                                        {
                                            "name": "Bulgarian"
                                        },
                                        {
                                            "name": "Burmese"
                                        },
                                        {
                                            "name": "Belarusian"
                                        },
                                        {
                                            "name": "Khmer"
                                        },
                                        {
                                            "name": "Catalan"
                                        },
                                        {
                                            "name": "Chinese"
                                        },
                                        {
                                            "name": "Corsican"
                                        },
                                        {
                                            "name": "Croatian"
                                        },
                                        {
                                            "name": "Czech"
                                        },
                                        {
                                            "name": "Danish"
                                        },
                                        {
                                            "name": "Dutch"
                                        },
                                        {
                                            "name": "English"
                                        },
                                        {
                                            "name": "Esperanto"
                                        },
                                        {
                                            "name": "Estonian"
                                        },
                                        {
                                            "name": "Faroese"
                                        },
                                        {
                                            "name": "Fijian"
                                        },
                                        {
                                            "name": "Finnish"
                                        },
                                        {
                                            "name": "French"
                                        },
                                        {
                                            "name": "WesternFrisian"
                                        },
                                        {
                                            "name": "Gaelic"
                                        },
                                        {
                                            "name": "Galician"
                                        },
                                        {
                                            "name": "Georgian"
                                        },
                                        {
                                            "name": "German"
                                        },
                                        {
                                            "name": "Greek"
                                        },
                                        {
                                            "name": "Greenlandic"
                                        },
                                        {
                                            "name": "Guarani"
                                        },
                                        {
                                            "name": "Gujarati"
                                        },
                                        {
                                            "name": "Hausa"
                                        },
                                        {
                                            "name": "Hebrew"
                                        },
                                        {
                                            "name": "Hindi"
                                        },
                                        {
                                            "name": "Hungarian"
                                        },
                                        {
                                            "name": "Icelandic"
                                        },
                                        {
                                            "name": "Indonesian"
                                        },
                                        {
                                            "name": "Interlingua"
                                        },
                                        {
                                            "name": "Interlingue"
                                        },
                                        {
                                            "name": "Inuktitut"
                                        },
                                        {
                                            "name": "Inupiak"
                                        },
                                        {
                                            "name": "Irish"
                                        },
                                        {
                                            "name": "Italian"
                                        },
                                        {
                                            "name": "Japanese"
                                        },
                                        {
                                            "name": "Javanese"
                                        },
                                        {
                                            "name": "Kannada"
                                        },
                                        {
                                            "name": "Kashmiri"
                                        },
                                        {
                                            "name": "Kazakh"
                                        },
                                        {
                                            "name": "Kinyarwanda"
                                        },
                                        {
                                            "name": "Kirghiz"
                                        },
                                        {
                                            "name": "Korean"
                                        },
                                        {
                                            "name": "Kurdish"
                                        },
                                        {
                                            "name": "Rundi"
                                        },
                                        {
                                            "name": "Lao"
                                        },
                                        {
                                            "name": "Latin"
                                        },
                                        {
                                            "name": "Latvian"
                                        },
                                        {
                                            "name": "Lingala"
                                        },
                                        {
                                            "name": "Lithuanian"
                                        },
                                        {
                                            "name": "Macedonian"
                                        },
                                        {
                                            "name": "Malagasy"
                                        },
                                        {
                                            "name": "Malay"
                                        },
                                        {
                                            "name": "Malayalam"
                                        },
                                        {
                                            "name": "Maltese"
                                        },
                                        {
                                            "name": "Maori"
                                        },
                                        {
                                            "name": "Marathi"
                                        },
                                        {
                                            "name": "Marshallese"
                                        },
                                        {
                                            "name": "Mongolian"
                                        },
                                        {
                                            "name": "NauruLanguage"
                                        },
                                        {
                                            "name": "Nepali"
                                        },
                                        {
                                            "name": "NorwegianBokmal"
                                        },
                                        {
                                            "name": "Occitan"
                                        },
                                        {
                                            "name": "Oriya"
                                        },
                                        {
                                            "name": "Pashto"
                                        },
                                        {
                                            "name": "Persian"
                                        },
                                        {
                                            "name": "Polish"
                                        },
                                        {
                                            "name": "Portuguese"
                                        },
                                        {
                                            "name": "Punjabi"
                                        },
                                        {
                                            "name": "Quechua"
                                        },
                                        {
                                            "name": "Romansh"
                                        },
                                        {
                                            "name": "Romanian"
                                        },
                                        {
                                            "name": "Russian"
                                        },
                                        {
                                            "name": "Samoan"
                                        },
                                        {
                                            "name": "Sango"
                                        },
                                        {
                                            "name": "Sanskrit"
                                        },
                                        {
                                            "name": "Serbian"
                                        },
                                        {
                                            "name": "Ossetic"
                                        },
                                        {
                                            "name": "SouthernSotho"
                                        },
                                        {
                                            "name": "Tswana"
                                        },
                                        {
                                            "name": "Shona"
                                        },
                                        {
                                            "name": "Sindhi"
                                        },
                                        {
                                            "name": "Sinhala"
                                        },
                                        {
                                            "name": "Swati"
                                        },
                                        {
                                            "name": "Slovak"
                                        },
                                        {
                                            "name": "Slovenian"
                                        },
                                        {
                                            "name": "Somali"
                                        },
                                        {
                                            "name": "Spanish"
                                        },
                                        {
                                            "name": "Sundanese"
                                        },
                                        {
                                            "name": "Swahili"
                                        },
                                        {
                                            "name": "Swedish"
                                        },
                                        {
                                            "name": "Sardinian"
                                        },
                                        {
                                            "name": "Tajik"
                                        },
                                        {
                                            "name": "Tamil"
                                        },
                                        {
                                            "name": "Tatar"
                                        },
                                        {
                                            "name": "Telugu"
                                        },
                                        {
                                            "name": "Thai"
                                        },
                                        {
                                            "name": "Tibetan"
                                        },
                                        {
                                            "name": "Tigrinya"
                                        },
                                        {
                                            "name": "Tongan"
                                        },
                                        {
                                            "name": "Tsonga"
                                        },
                                        {
                                            "name": "Turkish"
                                        },
                                        {
                                            "name": "Turkmen"
                                        },
                                        {
                                            "name": "Tahitian"
                                        },
                                        {
                                            "name": "Uighur"
                                        },
                                        {
                                            "name": "Ukrainian"
                                        },
                                        {
                                            "name": "Urdu"
                                        },
                                        {
                                            "name": "Uzbek"
                                        },
                                        {
                                            "name": "Vietnamese"
                                        },
                                        {
                                            "name": "Volapuk"
                                        },
                                        {
                                            "name": "Welsh"
                                        },
                                        {
                                            "name": "Wolof"
                                        },
                                        {
                                            "name": "Xhosa"
                                        },
                                        {
                                            "name": "Yiddish"
                                        },
                                        {
                                            "name": "Yoruba"
                                        },
                                        {
                                            "name": "Zhuang"
                                        },
                                        {
                                            "name": "Zulu"
                                        },
                                        {
                                            "name": "NorwegianNynorsk"
                                        },
                                        {
                                            "name": "Bosnian"
                                        },
                                        {
                                            "name": "Divehi"
                                        },
                                        {
                                            "name": "Manx"
                                        },
                                        {
                                            "name": "Cornish"
                                        },
                                        {
                                            "name": "Akan"
                                        },
                                        {
                                            "name": "Konkani"
                                        },
                                        {
                                            "name": "Ga"
                                        },
                                        {
                                            "name": "Igbo"
                                        },
                                        {
                                            "name": "Kamba"
                                        },
                                        {
                                            "name": "Syriac"
                                        },
                                        {
                                            "name": "Blin"
                                        },
                                        {
                                            "name": "Geez"
                                        },
                                        {
                                            "name": "Koro"
                                        },
                                        {
                                            "name": "Sidamo"
                                        },
                                        {
                                            "name": "Atsam"
                                        },
                                        {
                                            "name": "Tigre"
                                        },
                                        {
                                            "name": "Jju"
                                        },
                                        {
                                            "name": "Friulian"
                                        },
                                        {
                                            "name": "Venda"
                                        },
                                        {
                                            "name": "Ewe"
                                        },
                                        {
                                            "name": "Walamo"
                                        },
                                        {
                                            "name": "Hawaiian"
                                        },
                                        {
                                            "name": "Tyap"
                                        },
                                        {
                                            "name": "Nyanja"
                                        },
                                        {
                                            "name": "Filipino"
                                        },
                                        {
                                            "name": "SwissGerman"
                                        },
                                        {
                                            "name": "SichuanYi"
                                        },
                                        {
                                            "name": "Kpelle"
                                        },
                                        {
                                            "name": "LowGerman"
                                        },
                                        {
                                            "name": "SouthNdebele"
                                        },
                                        {
                                            "name": "NorthernSotho"
                                        },
                                        {
                                            "name": "NorthernSami"
                                        },
                                        {
                                            "name": "Taroko"
                                        },
                                        {
                                            "name": "Gusii"
                                        },
                                        {
                                            "name": "Taita"
                                        },
                                        {
                                            "name": "Fulah"
                                        },
                                        {
                                            "name": "Kikuyu"
                                        },
                                        {
                                            "name": "Samburu"
                                        },
                                        {
                                            "name": "Sena"
                                        },
                                        {
                                            "name": "NorthNdebele"
                                        },
                                        {
                                            "name": "Rombo"
                                        },
                                        {
                                            "name": "Tachelhit"
                                        },
                                        {
                                            "name": "Kabyle"
                                        },
                                        {
                                            "name": "Nyankole"
                                        },
                                        {
                                            "name": "Bena"
                                        },
                                        {
                                            "name": "Vunjo"
                                        },
                                        {
                                            "name": "Bambara"
                                        },
                                        {
                                            "name": "Embu"
                                        },
                                        {
                                            "name": "Cherokee"
                                        },
                                        {
                                            "name": "Morisyen"
                                        },
                                        {
                                            "name": "Makonde"
                                        },
                                        {
                                            "name": "Langi"
                                        },
                                        {
                                            "name": "Ganda"
                                        },
                                        {
                                            "name": "Bemba"
                                        },
                                        {
                                            "name": "Kabuverdianu"
                                        },
                                        {
                                            "name": "Meru"
                                        },
                                        {
                                            "name": "Kalenjin"
                                        },
                                        {
                                            "name": "Nama"
                                        },
                                        {
                                            "name": "Machame"
                                        },
                                        {
                                            "name": "Colognian"
                                        },
                                        {
                                            "name": "Masai"
                                        },
                                        {
                                            "name": "Soga"
                                        },
                                        {
                                            "name": "Luyia"
                                        },
                                        {
                                            "name": "Asu"
                                        },
                                        {
                                            "name": "Teso"
                                        },
                                        {
                                            "name": "Saho"
                                        },
                                        {
                                            "name": "KoyraChiini"
                                        },
                                        {
                                            "name": "Rwa"
                                        },
                                        {
                                            "name": "Luo"
                                        },
                                        {
                                            "name": "Chiga"
                                        },
                                        {
                                            "name": "CentralMoroccoTamazight"
                                        },
                                        {
                                            "name": "KoyraboroSenni"
                                        },
                                        {
                                            "name": "Shambala"
                                        },
                                        {
                                            "name": "Bodo"
                                        },
                                        {
                                            "name": "Avaric"
                                        },
                                        {
                                            "name": "Chamorro"
                                        },
                                        {
                                            "name": "Chechen"
                                        },
                                        {
                                            "name": "Church"
                                        },
                                        {
                                            "name": "Chuvash"
                                        },
                                        {
                                            "name": "Cree"
                                        },
                                        {
                                            "name": "Haitian"
                                        },
                                        {
                                            "name": "Herero"
                                        },
                                        {
                                            "name": "HiriMotu"
                                        },
                                        {
                                            "name": "Kanuri"
                                        },
                                        {
                                            "name": "Komi"
                                        },
                                        {
                                            "name": "Kongo"
                                        },
                                        {
                                            "name": "Kwanyama"
                                        },
                                        {
                                            "name": "Limburgish"
                                        },
                                        {
                                            "name": "LubaKatanga"
                                        },
                                        {
                                            "name": "Luxembourgish"
                                        },
                                        {
                                            "name": "Navaho"
                                        },
                                        {
                                            "name": "Ndonga"
                                        },
                                        {
                                            "name": "Ojibwa"
                                        },
                                        {
                                            "name": "Pali"
                                        },
                                        {
                                            "name": "Walloon"
                                        },
                                        {
                                            "name": "Aghem"
                                        },
                                        {
                                            "name": "Basaa"
                                        },
                                        {
                                            "name": "Zarma"
                                        },
                                        {
                                            "name": "Duala"
                                        },
                                        {
                                            "name": "JolaFonyi"
                                        },
                                        {
                                            "name": "Ewondo"
                                        },
                                        {
                                            "name": "Bafia"
                                        },
                                        {
                                            "name": "MakhuwaMeetto"
                                        },
                                        {
                                            "name": "Mundang"
                                        },
                                        {
                                            "name": "Kwasio"
                                        },
                                        {
                                            "name": "Nuer"
                                        },
                                        {
                                            "name": "Sakha"
                                        },
                                        {
                                            "name": "Sangu"
                                        },
                                        {
                                            "name": "CongoSwahili"
                                        },
                                        {
                                            "name": "Tasawaq"
                                        },
                                        {
                                            "name": "Vai"
                                        },
                                        {
                                            "name": "Walser"
                                        },
                                        {
                                            "name": "Yangben"
                                        },
                                        {
                                            "name": "Avestan"
                                        },
                                        {
                                            "name": "Asturian"
                                        },
                                        {
                                            "name": "Ngomba"
                                        },
                                        {
                                            "name": "Kako"
                                        },
                                        {
                                            "name": "Meta"
                                        },
                                        {
                                            "name": "Ngiemboon"
                                        },
                                        {
                                            "name": "Aragonese"
                                        },
                                        {
                                            "name": "Akkadian"
                                        },
                                        {
                                            "name": "AncientEgyptian"
                                        },
                                        {
                                            "name": "AncientGreek"
                                        },
                                        {
                                            "name": "Aramaic"
                                        },
                                        {
                                            "name": "Balinese"
                                        },
                                        {
                                            "name": "Bamun"
                                        },
                                        {
                                            "name": "BatakToba"
                                        },
                                        {
                                            "name": "Buginese"
                                        },
                                        {
                                            "name": "Buhid"
                                        },
                                        {
                                            "name": "Carian"
                                        },
                                        {
                                            "name": "Chakma"
                                        },
                                        {
                                            "name": "ClassicalMandaic"
                                        },
                                        {
                                            "name": "Coptic"
                                        },
                                        {
                                            "name": "Dogri"
                                        },
                                        {
                                            "name": "EasternCham"
                                        },
                                        {
                                            "name": "EasternKayah"
                                        },
                                        {
                                            "name": "Etruscan"
                                        },
                                        {
                                            "name": "Gothic"
                                        },
                                        {
                                            "name": "Hanunoo"
                                        },
                                        {
                                            "name": "Ingush"
                                        },
                                        {
                                            "name": "LargeFloweryMiao"
                                        },
                                        {
                                            "name": "Lepcha"
                                        },
                                        {
                                            "name": "Limbu"
                                        },
                                        {
                                            "name": "Lisu"
                                        },
                                        {
                                            "name": "Lu"
                                        },
                                        {
                                            "name": "Lycian"
                                        },
                                        {
                                            "name": "Lydian"
                                        },
                                        {
                                            "name": "Mandingo"
                                        },
                                        {
                                            "name": "Manipuri"
                                        },
                                        {
                                            "name": "Meroitic"
                                        },
                                        {
                                            "name": "NorthernThai"
                                        },
                                        {
                                            "name": "OldIrish"
                                        },
                                        {
                                            "name": "OldNorse"
                                        },
                                        {
                                            "name": "OldPersian"
                                        },
                                        {
                                            "name": "OldTurkish"
                                        },
                                        {
                                            "name": "Pahlavi"
                                        },
                                        {
                                            "name": "Parthian"
                                        },
                                        {
                                            "name": "Phoenician"
                                        },
                                        {
                                            "name": "PrakritLanguage"
                                        },
                                        {
                                            "name": "Rejang"
                                        },
                                        {
                                            "name": "Sabaean"
                                        },
                                        {
                                            "name": "Samaritan"
                                        },
                                        {
                                            "name": "Santali"
                                        },
                                        {
                                            "name": "Saurashtra"
                                        },
                                        {
                                            "name": "Sora"
                                        },
                                        {
                                            "name": "Sylheti"
                                        },
                                        {
                                            "name": "Tagbanwa"
                                        },
                                        {
                                            "name": "TaiDam"
                                        },
                                        {
                                            "name": "TaiNua"
                                        },
                                        {
                                            "name": "Ugaritic"
                                        },
                                        {
                                            "name": "Akoose"
                                        },
                                        {
                                            "name": "Lakota"
                                        },
                                        {
                                            "name": "StandardMoroccanTamazight"
                                        },
                                        {
                                            "name": "Mapuche"
                                        },
                                        {
                                            "name": "CentralKurdish"
                                        },
                                        {
                                            "name": "LowerSorbian"
                                        },
                                        {
                                            "name": "UpperSorbian"
                                        },
                                        {
                                            "name": "Kenyang"
                                        },
                                        {
                                            "name": "Mohawk"
                                        },
                                        {
                                            "name": "Nko"
                                        },
                                        {
                                            "name": "Prussian"
                                        },
                                        {
                                            "name": "Kiche"
                                        },
                                        {
                                            "name": "SouthernSami"
                                        },
                                        {
                                            "name": "LuleSami"
                                        },
                                        {
                                            "name": "InariSami"
                                        },
                                        {
                                            "name": "SkoltSami"
                                        },
                                        {
                                            "name": "Warlpiri"
                                        },
                                        {
                                            "name": "ManichaeanMiddlePersian"
                                        },
                                        {
                                            "name": "Mende"
                                        },
                                        {
                                            "name": "AncientNorthArabian"
                                        },
                                        {
                                            "name": "LinearA"
                                        },
                                        {
                                            "name": "HmongNjua"
                                        },
                                        {
                                            "name": "Ho"
                                        },
                                        {
                                            "name": "Lezghian"
                                        },
                                        {
                                            "name": "Bassa"
                                        },
                                        {
                                            "name": "Mono"
                                        },
                                        {
                                            "name": "TedimChin"
                                        },
                                        {
                                            "name": "Maithili"
                                        },
                                        {
                                            "name": "Ahom"
                                        },
                                        {
                                            "name": "AmericanSignLanguage"
                                        },
                                        {
                                            "name": "ArdhamagadhiPrakrit"
                                        },
                                        {
                                            "name": "Bhojpuri"
                                        },
                                        {
                                            "name": "HieroglyphicLuwian"
                                        },
                                        {
                                            "name": "LiteraryChinese"
                                        },
                                        {
                                            "name": "Mazanderani"
                                        },
                                        {
                                            "name": "Mru"
                                        },
                                        {
                                            "name": "Newari"
                                        },
                                        {
                                            "name": "NorthernLuri"
                                        },
                                        {
                                            "name": "Palauan"
                                        },
                                        {
                                            "name": "Papiamento"
                                        },
                                        {
                                            "name": "Saraiki"
                                        },
                                        {
                                            "name": "TokelauLanguage"
                                        },
                                        {
                                            "name": "TokPisin"
                                        },
                                        {
                                            "name": "TuvaluLanguage"
                                        },
                                        {
                                            "name": "UncodedLanguages"
                                        },
                                        {
                                            "name": "Cantonese"
                                        },
                                        {
                                            "name": "Osage"
                                        },
                                        {
                                            "name": "Tangut"
                                        },
                                        {
                                            "name": "Norwegian"
                                        },
                                        {
                                            "name": "Moldavian"
                                        },
                                        {
                                            "name": "SerboCroatian"
                                        },
                                        {
                                            "name": "Tagalog"
                                        },
                                        {
                                            "name": "Twi"
                                        },
                                        {
                                            "name": "Afan"
                                        },
                                        {
                                            "name": "Byelorussian"
                                        },
                                        {
                                            "name": "Bhutani"
                                        },
                                        {
                                            "name": "Cambodian"
                                        },
                                        {
                                            "name": "Kurundi"
                                        },
                                        {
                                            "name": "RhaetoRomance"
                                        },
                                        {
                                            "name": "Chewa"
                                        },
                                        {
                                            "name": "Frisian"
                                        },
                                        {
                                            "name": "Uigur"
                                        },
                                        {
                                            "name": "LastLanguage"
                                        }
                                    ],
                                    "name": "Language",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "AnyScript"
                                        },
                                        {
                                            "name": "ArabicScript"
                                        },
                                        {
                                            "name": "CyrillicScript"
                                        },
                                        {
                                            "name": "DeseretScript"
                                        },
                                        {
                                            "name": "GurmukhiScript"
                                        },
                                        {
                                            "name": "SimplifiedHanScript"
                                        },
                                        {
                                            "name": "TraditionalHanScript"
                                        },
                                        {
                                            "name": "LatinScript"
                                        },
                                        {
                                            "name": "MongolianScript"
                                        },
                                        {
                                            "name": "TifinaghScript"
                                        },
                                        {
                                            "name": "ArmenianScript"
                                        },
                                        {
                                            "name": "BengaliScript"
                                        },
                                        {
                                            "name": "CherokeeScript"
                                        },
                                        {
                                            "name": "DevanagariScript"
                                        },
                                        {
                                            "name": "EthiopicScript"
                                        },
                                        {
                                            "name": "GeorgianScript"
                                        },
                                        {
                                            "name": "GreekScript"
                                        },
                                        {
                                            "name": "GujaratiScript"
                                        },
                                        {
                                            "name": "HebrewScript"
                                        },
                                        {
                                            "name": "JapaneseScript"
                                        },
                                        {
                                            "name": "KhmerScript"
                                        },
                                        {
                                            "name": "KannadaScript"
                                        },
                                        {
                                            "name": "KoreanScript"
                                        },
                                        {
                                            "name": "LaoScript"
                                        },
                                        {
                                            "name": "MalayalamScript"
                                        },
                                        {
                                            "name": "MyanmarScript"
                                        },
                                        {
                                            "name": "OriyaScript"
                                        },
                                        {
                                            "name": "TamilScript"
                                        },
                                        {
                                            "name": "TeluguScript"
                                        },
                                        {
                                            "name": "ThaanaScript"
                                        },
                                        {
                                            "name": "ThaiScript"
                                        },
                                        {
                                            "name": "TibetanScript"
                                        },
                                        {
                                            "name": "SinhalaScript"
                                        },
                                        {
                                            "name": "SyriacScript"
                                        },
                                        {
                                            "name": "YiScript"
                                        },
                                        {
                                            "name": "VaiScript"
                                        },
                                        {
                                            "name": "AvestanScript"
                                        },
                                        {
                                            "name": "BalineseScript"
                                        },
                                        {
                                            "name": "BamumScript"
                                        },
                                        {
                                            "name": "BatakScript"
                                        },
                                        {
                                            "name": "BopomofoScript"
                                        },
                                        {
                                            "name": "BrahmiScript"
                                        },
                                        {
                                            "name": "BugineseScript"
                                        },
                                        {
                                            "name": "BuhidScript"
                                        },
                                        {
                                            "name": "CanadianAboriginalScript"
                                        },
                                        {
                                            "name": "CarianScript"
                                        },
                                        {
                                            "name": "ChakmaScript"
                                        },
                                        {
                                            "name": "ChamScript"
                                        },
                                        {
                                            "name": "CopticScript"
                                        },
                                        {
                                            "name": "CypriotScript"
                                        },
                                        {
                                            "name": "EgyptianHieroglyphsScript"
                                        },
                                        {
                                            "name": "FraserScript"
                                        },
                                        {
                                            "name": "GlagoliticScript"
                                        },
                                        {
                                            "name": "GothicScript"
                                        },
                                        {
                                            "name": "HanScript"
                                        },
                                        {
                                            "name": "HangulScript"
                                        },
                                        {
                                            "name": "HanunooScript"
                                        },
                                        {
                                            "name": "ImperialAramaicScript"
                                        },
                                        {
                                            "name": "InscriptionalPahlaviScript"
                                        },
                                        {
                                            "name": "InscriptionalParthianScript"
                                        },
                                        {
                                            "name": "JavaneseScript"
                                        },
                                        {
                                            "name": "KaithiScript"
                                        },
                                        {
                                            "name": "KatakanaScript"
                                        },
                                        {
                                            "name": "KayahLiScript"
                                        },
                                        {
                                            "name": "KharoshthiScript"
                                        },
                                        {
                                            "name": "LannaScript"
                                        },
                                        {
                                            "name": "LepchaScript"
                                        },
                                        {
                                            "name": "LimbuScript"
                                        },
                                        {
                                            "name": "LinearBScript"
                                        },
                                        {
                                            "name": "LycianScript"
                                        },
                                        {
                                            "name": "LydianScript"
                                        },
                                        {
                                            "name": "MandaeanScript"
                                        },
                                        {
                                            "name": "MeiteiMayekScript"
                                        },
                                        {
                                            "name": "MeroiticScript"
                                        },
                                        {
                                            "name": "MeroiticCursiveScript"
                                        },
                                        {
                                            "name": "NkoScript"
                                        },
                                        {
                                            "name": "NewTaiLueScript"
                                        },
                                        {
                                            "name": "OghamScript"
                                        },
                                        {
                                            "name": "OlChikiScript"
                                        },
                                        {
                                            "name": "OldItalicScript"
                                        },
                                        {
                                            "name": "OldPersianScript"
                                        },
                                        {
                                            "name": "OldSouthArabianScript"
                                        },
                                        {
                                            "name": "OrkhonScript"
                                        },
                                        {
                                            "name": "OsmanyaScript"
                                        },
                                        {
                                            "name": "PhagsPaScript"
                                        },
                                        {
                                            "name": "PhoenicianScript"
                                        },
                                        {
                                            "name": "PollardPhoneticScript"
                                        },
                                        {
                                            "name": "RejangScript"
                                        },
                                        {
                                            "name": "RunicScript"
                                        },
                                        {
                                            "name": "SamaritanScript"
                                        },
                                        {
                                            "name": "SaurashtraScript"
                                        },
                                        {
                                            "name": "SharadaScript"
                                        },
                                        {
                                            "name": "ShavianScript"
                                        },
                                        {
                                            "name": "SoraSompengScript"
                                        },
                                        {
                                            "name": "CuneiformScript"
                                        },
                                        {
                                            "name": "SundaneseScript"
                                        },
                                        {
                                            "name": "SylotiNagriScript"
                                        },
                                        {
                                            "name": "TagalogScript"
                                        },
                                        {
                                            "name": "TagbanwaScript"
                                        },
                                        {
                                            "name": "TaiLeScript"
                                        },
                                        {
                                            "name": "TaiVietScript"
                                        },
                                        {
                                            "name": "TakriScript"
                                        },
                                        {
                                            "name": "UgariticScript"
                                        },
                                        {
                                            "name": "BrailleScript"
                                        },
                                        {
                                            "name": "HiraganaScript"
                                        },
                                        {
                                            "name": "CaucasianAlbanianScript"
                                        },
                                        {
                                            "name": "BassaVahScript"
                                        },
                                        {
                                            "name": "DuployanScript"
                                        },
                                        {
                                            "name": "ElbasanScript"
                                        },
                                        {
                                            "name": "GranthaScript"
                                        },
                                        {
                                            "name": "PahawhHmongScript"
                                        },
                                        {
                                            "name": "KhojkiScript"
                                        },
                                        {
                                            "name": "LinearAScript"
                                        },
                                        {
                                            "name": "MahajaniScript"
                                        },
                                        {
                                            "name": "ManichaeanScript"
                                        },
                                        {
                                            "name": "MendeKikakuiScript"
                                        },
                                        {
                                            "name": "ModiScript"
                                        },
                                        {
                                            "name": "MroScript"
                                        },
                                        {
                                            "name": "OldNorthArabianScript"
                                        },
                                        {
                                            "name": "NabataeanScript"
                                        },
                                        {
                                            "name": "PalmyreneScript"
                                        },
                                        {
                                            "name": "PauCinHauScript"
                                        },
                                        {
                                            "name": "OldPermicScript"
                                        },
                                        {
                                            "name": "PsalterPahlaviScript"
                                        },
                                        {
                                            "name": "SiddhamScript"
                                        },
                                        {
                                            "name": "KhudawadiScript"
                                        },
                                        {
                                            "name": "TirhutaScript"
                                        },
                                        {
                                            "name": "VarangKshitiScript"
                                        },
                                        {
                                            "name": "AhomScript"
                                        },
                                        {
                                            "name": "AnatolianHieroglyphsScript"
                                        },
                                        {
                                            "name": "HatranScript"
                                        },
                                        {
                                            "name": "MultaniScript"
                                        },
                                        {
                                            "name": "OldHungarianScript"
                                        },
                                        {
                                            "name": "SignWritingScript"
                                        },
                                        {
                                            "name": "AdlamScript"
                                        },
                                        {
                                            "name": "BhaiksukiScript"
                                        },
                                        {
                                            "name": "MarchenScript"
                                        },
                                        {
                                            "name": "NewaScript"
                                        },
                                        {
                                            "name": "OsageScript"
                                        },
                                        {
                                            "name": "TangutScript"
                                        },
                                        {
                                            "name": "HanWithBopomofoScript"
                                        },
                                        {
                                            "name": "JamoScript"
                                        },
                                        {
                                            "name": "SimplifiedChineseScript"
                                        },
                                        {
                                            "name": "TraditionalChineseScript"
                                        },
                                        {
                                            "name": "LastScript"
                                        }
                                    ],
                                    "name": "Script",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "AnyCountry"
                                        },
                                        {
                                            "name": "Afghanistan"
                                        },
                                        {
                                            "name": "Albania"
                                        },
                                        {
                                            "name": "Algeria"
                                        },
                                        {
                                            "name": "AmericanSamoa"
                                        },
                                        {
                                            "name": "Andorra"
                                        },
                                        {
                                            "name": "Angola"
                                        },
                                        {
                                            "name": "Anguilla"
                                        },
                                        {
                                            "name": "Antarctica"
                                        },
                                        {
                                            "name": "AntiguaAndBarbuda"
                                        },
                                        {
                                            "name": "Argentina"
                                        },
                                        {
                                            "name": "Armenia"
                                        },
                                        {
                                            "name": "Aruba"
                                        },
                                        {
                                            "name": "Australia"
                                        },
                                        {
                                            "name": "Austria"
                                        },
                                        {
                                            "name": "Azerbaijan"
                                        },
                                        {
                                            "name": "Bahamas"
                                        },
                                        {
                                            "name": "Bahrain"
                                        },
                                        {
                                            "name": "Bangladesh"
                                        },
                                        {
                                            "name": "Barbados"
                                        },
                                        {
                                            "name": "Belarus"
                                        },
                                        {
                                            "name": "Belgium"
                                        },
                                        {
                                            "name": "Belize"
                                        },
                                        {
                                            "name": "Benin"
                                        },
                                        {
                                            "name": "Bermuda"
                                        },
                                        {
                                            "name": "Bhutan"
                                        },
                                        {
                                            "name": "Bolivia"
                                        },
                                        {
                                            "name": "BosniaAndHerzegowina"
                                        },
                                        {
                                            "name": "Botswana"
                                        },
                                        {
                                            "name": "BouvetIsland"
                                        },
                                        {
                                            "name": "Brazil"
                                        },
                                        {
                                            "name": "BritishIndianOceanTerritory"
                                        },
                                        {
                                            "name": "Brunei"
                                        },
                                        {
                                            "name": "Bulgaria"
                                        },
                                        {
                                            "name": "BurkinaFaso"
                                        },
                                        {
                                            "name": "Burundi"
                                        },
                                        {
                                            "name": "Cambodia"
                                        },
                                        {
                                            "name": "Cameroon"
                                        },
                                        {
                                            "name": "Canada"
                                        },
                                        {
                                            "name": "CapeVerde"
                                        },
                                        {
                                            "name": "CaymanIslands"
                                        },
                                        {
                                            "name": "CentralAfricanRepublic"
                                        },
                                        {
                                            "name": "Chad"
                                        },
                                        {
                                            "name": "Chile"
                                        },
                                        {
                                            "name": "China"
                                        },
                                        {
                                            "name": "ChristmasIsland"
                                        },
                                        {
                                            "name": "CocosIslands"
                                        },
                                        {
                                            "name": "Colombia"
                                        },
                                        {
                                            "name": "Comoros"
                                        },
                                        {
                                            "name": "CongoKinshasa"
                                        },
                                        {
                                            "name": "CongoBrazzaville"
                                        },
                                        {
                                            "name": "CookIslands"
                                        },
                                        {
                                            "name": "CostaRica"
                                        },
                                        {
                                            "name": "IvoryCoast"
                                        },
                                        {
                                            "name": "Croatia"
                                        },
                                        {
                                            "name": "Cuba"
                                        },
                                        {
                                            "name": "Cyprus"
                                        },
                                        {
                                            "name": "CzechRepublic"
                                        },
                                        {
                                            "name": "Denmark"
                                        },
                                        {
                                            "name": "Djibouti"
                                        },
                                        {
                                            "name": "Dominica"
                                        },
                                        {
                                            "name": "DominicanRepublic"
                                        },
                                        {
                                            "name": "EastTimor"
                                        },
                                        {
                                            "name": "Ecuador"
                                        },
                                        {
                                            "name": "Egypt"
                                        },
                                        {
                                            "name": "ElSalvador"
                                        },
                                        {
                                            "name": "EquatorialGuinea"
                                        },
                                        {
                                            "name": "Eritrea"
                                        },
                                        {
                                            "name": "Estonia"
                                        },
                                        {
                                            "name": "Ethiopia"
                                        },
                                        {
                                            "name": "FalklandIslands"
                                        },
                                        {
                                            "name": "FaroeIslands"
                                        },
                                        {
                                            "name": "Fiji"
                                        },
                                        {
                                            "name": "Finland"
                                        },
                                        {
                                            "name": "France"
                                        },
                                        {
                                            "name": "Guernsey"
                                        },
                                        {
                                            "name": "FrenchGuiana"
                                        },
                                        {
                                            "name": "FrenchPolynesia"
                                        },
                                        {
                                            "name": "FrenchSouthernTerritories"
                                        },
                                        {
                                            "name": "Gabon"
                                        },
                                        {
                                            "name": "Gambia"
                                        },
                                        {
                                            "name": "Georgia"
                                        },
                                        {
                                            "name": "Germany"
                                        },
                                        {
                                            "name": "Ghana"
                                        },
                                        {
                                            "name": "Gibraltar"
                                        },
                                        {
                                            "name": "Greece"
                                        },
                                        {
                                            "name": "Greenland"
                                        },
                                        {
                                            "name": "Grenada"
                                        },
                                        {
                                            "name": "Guadeloupe"
                                        },
                                        {
                                            "name": "Guam"
                                        },
                                        {
                                            "name": "Guatemala"
                                        },
                                        {
                                            "name": "Guinea"
                                        },
                                        {
                                            "name": "GuineaBissau"
                                        },
                                        {
                                            "name": "Guyana"
                                        },
                                        {
                                            "name": "Haiti"
                                        },
                                        {
                                            "name": "HeardAndMcDonaldIslands"
                                        },
                                        {
                                            "name": "Honduras"
                                        },
                                        {
                                            "name": "HongKong"
                                        },
                                        {
                                            "name": "Hungary"
                                        },
                                        {
                                            "name": "Iceland"
                                        },
                                        {
                                            "name": "India"
                                        },
                                        {
                                            "name": "Indonesia"
                                        },
                                        {
                                            "name": "Iran"
                                        },
                                        {
                                            "name": "Iraq"
                                        },
                                        {
                                            "name": "Ireland"
                                        },
                                        {
                                            "name": "Israel"
                                        },
                                        {
                                            "name": "Italy"
                                        },
                                        {
                                            "name": "Jamaica"
                                        },
                                        {
                                            "name": "Japan"
                                        },
                                        {
                                            "name": "Jordan"
                                        },
                                        {
                                            "name": "Kazakhstan"
                                        },
                                        {
                                            "name": "Kenya"
                                        },
                                        {
                                            "name": "Kiribati"
                                        },
                                        {
                                            "name": "NorthKorea"
                                        },
                                        {
                                            "name": "SouthKorea"
                                        },
                                        {
                                            "name": "Kuwait"
                                        },
                                        {
                                            "name": "Kyrgyzstan"
                                        },
                                        {
                                            "name": "Laos"
                                        },
                                        {
                                            "name": "Latvia"
                                        },
                                        {
                                            "name": "Lebanon"
                                        },
                                        {
                                            "name": "Lesotho"
                                        },
                                        {
                                            "name": "Liberia"
                                        },
                                        {
                                            "name": "Libya"
                                        },
                                        {
                                            "name": "Liechtenstein"
                                        },
                                        {
                                            "name": "Lithuania"
                                        },
                                        {
                                            "name": "Luxembourg"
                                        },
                                        {
                                            "name": "Macau"
                                        },
                                        {
                                            "name": "Macedonia"
                                        },
                                        {
                                            "name": "Madagascar"
                                        },
                                        {
                                            "name": "Malawi"
                                        },
                                        {
                                            "name": "Malaysia"
                                        },
                                        {
                                            "name": "Maldives"
                                        },
                                        {
                                            "name": "Mali"
                                        },
                                        {
                                            "name": "Malta"
                                        },
                                        {
                                            "name": "MarshallIslands"
                                        },
                                        {
                                            "name": "Martinique"
                                        },
                                        {
                                            "name": "Mauritania"
                                        },
                                        {
                                            "name": "Mauritius"
                                        },
                                        {
                                            "name": "Mayotte"
                                        },
                                        {
                                            "name": "Mexico"
                                        },
                                        {
                                            "name": "Micronesia"
                                        },
                                        {
                                            "name": "Moldova"
                                        },
                                        {
                                            "name": "Monaco"
                                        },
                                        {
                                            "name": "Mongolia"
                                        },
                                        {
                                            "name": "Montserrat"
                                        },
                                        {
                                            "name": "Morocco"
                                        },
                                        {
                                            "name": "Mozambique"
                                        },
                                        {
                                            "name": "Myanmar"
                                        },
                                        {
                                            "name": "Namibia"
                                        },
                                        {
                                            "name": "NauruCountry"
                                        },
                                        {
                                            "name": "Nepal"
                                        },
                                        {
                                            "name": "Netherlands"
                                        },
                                        {
                                            "name": "CuraSao"
                                        },
                                        {
                                            "name": "NewCaledonia"
                                        },
                                        {
                                            "name": "NewZealand"
                                        },
                                        {
                                            "name": "Nicaragua"
                                        },
                                        {
                                            "name": "Niger"
                                        },
                                        {
                                            "name": "Nigeria"
                                        },
                                        {
                                            "name": "Niue"
                                        },
                                        {
                                            "name": "NorfolkIsland"
                                        },
                                        {
                                            "name": "NorthernMarianaIslands"
                                        },
                                        {
                                            "name": "Norway"
                                        },
                                        {
                                            "name": "Oman"
                                        },
                                        {
                                            "name": "Pakistan"
                                        },
                                        {
                                            "name": "Palau"
                                        },
                                        {
                                            "name": "PalestinianTerritories"
                                        },
                                        {
                                            "name": "Panama"
                                        },
                                        {
                                            "name": "PapuaNewGuinea"
                                        },
                                        {
                                            "name": "Paraguay"
                                        },
                                        {
                                            "name": "Peru"
                                        },
                                        {
                                            "name": "Philippines"
                                        },
                                        {
                                            "name": "Pitcairn"
                                        },
                                        {
                                            "name": "Poland"
                                        },
                                        {
                                            "name": "Portugal"
                                        },
                                        {
                                            "name": "PuertoRico"
                                        },
                                        {
                                            "name": "Qatar"
                                        },
                                        {
                                            "name": "Reunion"
                                        },
                                        {
                                            "name": "Romania"
                                        },
                                        {
                                            "name": "Russia"
                                        },
                                        {
                                            "name": "Rwanda"
                                        },
                                        {
                                            "name": "SaintKittsAndNevis"
                                        },
                                        {
                                            "name": "SaintLucia"
                                        },
                                        {
                                            "name": "SaintVincentAndTheGrenadines"
                                        },
                                        {
                                            "name": "Samoa"
                                        },
                                        {
                                            "name": "SanMarino"
                                        },
                                        {
                                            "name": "SaoTomeAndPrincipe"
                                        },
                                        {
                                            "name": "SaudiArabia"
                                        },
                                        {
                                            "name": "Senegal"
                                        },
                                        {
                                            "name": "Seychelles"
                                        },
                                        {
                                            "name": "SierraLeone"
                                        },
                                        {
                                            "name": "Singapore"
                                        },
                                        {
                                            "name": "Slovakia"
                                        },
                                        {
                                            "name": "Slovenia"
                                        },
                                        {
                                            "name": "SolomonIslands"
                                        },
                                        {
                                            "name": "Somalia"
                                        },
                                        {
                                            "name": "SouthAfrica"
                                        },
                                        {
                                            "name": "SouthGeorgiaAndTheSouthSandwichIslands"
                                        },
                                        {
                                            "name": "Spain"
                                        },
                                        {
                                            "name": "SriLanka"
                                        },
                                        {
                                            "name": "SaintHelena"
                                        },
                                        {
                                            "name": "SaintPierreAndMiquelon"
                                        },
                                        {
                                            "name": "Sudan"
                                        },
                                        {
                                            "name": "Suriname"
                                        },
                                        {
                                            "name": "SvalbardAndJanMayenIslands"
                                        },
                                        {
                                            "name": "Swaziland"
                                        },
                                        {
                                            "name": "Sweden"
                                        },
                                        {
                                            "name": "Switzerland"
                                        },
                                        {
                                            "name": "Syria"
                                        },
                                        {
                                            "name": "Taiwan"
                                        },
                                        {
                                            "name": "Tajikistan"
                                        },
                                        {
                                            "name": "Tanzania"
                                        },
                                        {
                                            "name": "Thailand"
                                        },
                                        {
                                            "name": "Togo"
                                        },
                                        {
                                            "name": "TokelauCountry"
                                        },
                                        {
                                            "name": "Tonga"
                                        },
                                        {
                                            "name": "TrinidadAndTobago"
                                        },
                                        {
                                            "name": "Tunisia"
                                        },
                                        {
                                            "name": "Turkey"
                                        },
                                        {
                                            "name": "Turkmenistan"
                                        },
                                        {
                                            "name": "TurksAndCaicosIslands"
                                        },
                                        {
                                            "name": "TuvaluCountry"
                                        },
                                        {
                                            "name": "Uganda"
                                        },
                                        {
                                            "name": "Ukraine"
                                        },
                                        {
                                            "name": "UnitedArabEmirates"
                                        },
                                        {
                                            "name": "UnitedKingdom"
                                        },
                                        {
                                            "name": "UnitedStates"
                                        },
                                        {
                                            "name": "UnitedStatesMinorOutlyingIslands"
                                        },
                                        {
                                            "name": "Uruguay"
                                        },
                                        {
                                            "name": "Uzbekistan"
                                        },
                                        {
                                            "name": "Vanuatu"
                                        },
                                        {
                                            "name": "VaticanCityState"
                                        },
                                        {
                                            "name": "Venezuela"
                                        },
                                        {
                                            "name": "Vietnam"
                                        },
                                        {
                                            "name": "BritishVirginIslands"
                                        },
                                        {
                                            "name": "UnitedStatesVirginIslands"
                                        },
                                        {
                                            "name": "WallisAndFutunaIslands"
                                        },
                                        {
                                            "name": "WesternSahara"
                                        },
                                        {
                                            "name": "Yemen"
                                        },
                                        {
                                            "name": "CanaryIslands"
                                        },
                                        {
                                            "name": "Zambia"
                                        },
                                        {
                                            "name": "Zimbabwe"
                                        },
                                        {
                                            "name": "ClippertonIsland"
                                        },
                                        {
                                            "name": "Montenegro"
                                        },
                                        {
                                            "name": "Serbia"
                                        },
                                        {
                                            "name": "SaintBarthelemy"
                                        },
                                        {
                                            "name": "SaintMartin"
                                        },
                                        {
                                            "name": "LatinAmericaAndTheCaribbean"
                                        },
                                        {
                                            "name": "AscensionIsland"
                                        },
                                        {
                                            "name": "AlandIslands"
                                        },
                                        {
                                            "name": "DiegoGarcia"
                                        },
                                        {
                                            "name": "CeutaAndMelilla"
                                        },
                                        {
                                            "name": "IsleOfMan"
                                        },
                                        {
                                            "name": "Jersey"
                                        },
                                        {
                                            "name": "TristanDaCunha"
                                        },
                                        {
                                            "name": "SouthSudan"
                                        },
                                        {
                                            "name": "Bonaire"
                                        },
                                        {
                                            "name": "SintMaarten"
                                        },
                                        {
                                            "name": "Kosovo"
                                        },
                                        {
                                            "name": "EuropeanUnion"
                                        },
                                        {
                                            "name": "OutlyingOceania"
                                        },
                                        {
                                            "name": "Tokelau"
                                        },
                                        {
                                            "name": "Tuvalu"
                                        },
                                        {
                                            "name": "DemocraticRepublicOfCongo"
                                        },
                                        {
                                            "name": "PeoplesRepublicOfCongo"
                                        },
                                        {
                                            "name": "DemocraticRepublicOfKorea"
                                        },
                                        {
                                            "name": "RepublicOfKorea"
                                        },
                                        {
                                            "name": "RussianFederation"
                                        },
                                        {
                                            "name": "SyrianArabRepublic"
                                        },
                                        {
                                            "name": "LastCountry"
                                        }
                                    ],
                                    "name": "Country",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "MetricSystem"
                                        },
                                        {
                                            "name": "ImperialUSSystem"
                                        },
                                        {
                                            "name": "ImperialUKSystem"
                                        },
                                        {
                                            "name": "ImperialSystem"
                                        }
                                    ],
                                    "name": "MeasurementSystem",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "LongFormat"
                                        },
                                        {
                                            "name": "ShortFormat"
                                        },
                                        {
                                            "name": "NarrowFormat"
                                        }
                                    ],
                                    "name": "FormatType",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "DefaultNumberOptions"
                                        },
                                        {
                                            "name": "OmitGroupSeparator"
                                        },
                                        {
                                            "name": "RejectGroupSeparator"
                                        },
                                        {
                                            "name": "OmitLeadingZeroInExponent"
                                        },
                                        {
                                            "name": "RejectLeadingZeroInExponent"
                                        },
                                        {
                                            "name": "IncludeTrailingZeroesAfterDot"
                                        },
                                        {
                                            "name": "RejectTrailingZeroesAfterDot"
                                        }
                                    ],
                                    "name": "NumberOption",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "FloatingPointShortest"
                                        }
                                    ],
                                    "name": "FloatingPointPrecisionOption",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "CurrencyIsoCode"
                                        },
                                        {
                                            "name": "CurrencySymbol"
                                        },
                                        {
                                            "name": "CurrencyDisplayName"
                                        }
                                    ],
                                    "name": "CurrencySymbolFormat",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "DataSizeBase1000"
                                        },
                                        {
                                            "name": "DataSizeSIQuantifiers"
                                        },
                                        {
                                            "name": "DataSizeIecFormat"
                                        },
                                        {
                                            "name": "DataSizeTraditionalFormat"
                                        },
                                        {
                                            "name": "DataSizeSIFormat"
                                        }
                                    ],
                                    "name": "DataSizeFormat",
                                    "type": "enum"
                                },
                                {
                                    "name": "QLocale",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLocale",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLocale",
                                    "parameters": [
                                        "QLocale::Language",
                                        "QLocale::Country"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLocale",
                                    "parameters": [
                                        "QLocale::Language",
                                        "QLocale::Script",
                                        "QLocale::Country"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLocale",
                                    "parameters": [
                                        "const QLocale &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QLocale &&"
                                    ],
                                    "returns": "QLocale &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QLocale &"
                                    ],
                                    "returns": "QLocale &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QLocale",
                                    "type": "destructor"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QLocale &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "language",
                                    "returns": "QLocale::Language",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "script",
                                    "returns": "QLocale::Script",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "country",
                                    "returns": "QLocale::Country",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "name",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bcp47Name",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nativeLanguageName",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nativeCountryName",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toShort",
                                    "parameters": [
                                        "const QString &",
                                        "bool *"
                                    ],
                                    "returns": "short",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUShort",
                                    "parameters": [
                                        "const QString &",
                                        "bool *"
                                    ],
                                    "returns": "ushort",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toInt",
                                    "parameters": [
                                        "const QString &",
                                        "bool *"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUInt",
                                    "parameters": [
                                        "const QString &",
                                        "bool *"
                                    ],
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLongLong",
                                    "parameters": [
                                        "const QString &",
                                        "bool *"
                                    ],
                                    "returns": "qlonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toULongLong",
                                    "parameters": [
                                        "const QString &",
                                        "bool *"
                                    ],
                                    "returns": "qulonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toFloat",
                                    "parameters": [
                                        "const QString &",
                                        "bool *"
                                    ],
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDouble",
                                    "parameters": [
                                        "const QString &",
                                        "bool *"
                                    ],
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toShort",
                                    "parameters": [
                                        "const QStringRef &",
                                        "bool *"
                                    ],
                                    "returns": "short",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUShort",
                                    "parameters": [
                                        "const QStringRef &",
                                        "bool *"
                                    ],
                                    "returns": "ushort",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toInt",
                                    "parameters": [
                                        "const QStringRef &",
                                        "bool *"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUInt",
                                    "parameters": [
                                        "const QStringRef &",
                                        "bool *"
                                    ],
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLongLong",
                                    "parameters": [
                                        "const QStringRef &",
                                        "bool *"
                                    ],
                                    "returns": "qlonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toULongLong",
                                    "parameters": [
                                        "const QStringRef &",
                                        "bool *"
                                    ],
                                    "returns": "qulonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toFloat",
                                    "parameters": [
                                        "const QStringRef &",
                                        "bool *"
                                    ],
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDouble",
                                    "parameters": [
                                        "const QStringRef &",
                                        "bool *"
                                    ],
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toShort",
                                    "parameters": [
                                        "QStringView",
                                        "bool *"
                                    ],
                                    "returns": "short",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUShort",
                                    "parameters": [
                                        "QStringView",
                                        "bool *"
                                    ],
                                    "returns": "ushort",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toInt",
                                    "parameters": [
                                        "QStringView",
                                        "bool *"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUInt",
                                    "parameters": [
                                        "QStringView",
                                        "bool *"
                                    ],
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLongLong",
                                    "parameters": [
                                        "QStringView",
                                        "bool *"
                                    ],
                                    "returns": "qlonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toULongLong",
                                    "parameters": [
                                        "QStringView",
                                        "bool *"
                                    ],
                                    "returns": "qulonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toFloat",
                                    "parameters": [
                                        "QStringView",
                                        "bool *"
                                    ],
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDouble",
                                    "parameters": [
                                        "QStringView",
                                        "bool *"
                                    ],
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "qlonglong"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "qulonglong"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "short"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "ushort"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "double",
                                        "char",
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "float",
                                        "char",
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QDate &",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QTime &",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QDateTime &",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QDate &",
                                        "QStringView"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QTime &",
                                        "QStringView"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QDateTime &",
                                        "QStringView"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QDate &",
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QTime &",
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QDateTime &",
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dateFormat",
                                    "parameters": [
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "timeFormat",
                                    "parameters": [
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dateTimeFormat",
                                    "parameters": [
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDate",
                                    "parameters": [
                                        "const QString &",
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toTime",
                                    "parameters": [
                                        "const QString &",
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDateTime",
                                    "parameters": [
                                        "const QString &",
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDate",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toTime",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "QTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDateTime",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "decimalPoint",
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "groupSeparator",
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "percent",
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "zeroDigit",
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "negativeSign",
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "positiveSign",
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exponential",
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "monthName",
                                    "parameters": [
                                        "int",
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "standaloneMonthName",
                                    "parameters": [
                                        "int",
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dayName",
                                    "parameters": [
                                        "int",
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "standaloneDayName",
                                    "parameters": [
                                        "int",
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "firstDayOfWeek",
                                    "returns": "Qt::DayOfWeek",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "weekdays",
                                    "returns": "QList<Qt::DayOfWeek>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "amText",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pmText",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "measurementSystem",
                                    "returns": "QLocale::MeasurementSystem",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textDirection",
                                    "returns": "Qt::LayoutDirection",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUpper",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLower",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currencySymbol",
                                    "parameters": [
                                        "QLocale::CurrencySymbolFormat"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "parameters": [
                                        "qlonglong",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "parameters": [
                                        "qulonglong",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "parameters": [
                                        "short",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "parameters": [
                                        "ushort",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "parameters": [
                                        "int",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "parameters": [
                                        "uint",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "parameters": [
                                        "double",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "parameters": [
                                        "double",
                                        "const QString &",
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "parameters": [
                                        "float",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "parameters": [
                                        "float",
                                        "const QString &",
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "formattedDataSize",
                                    "parameters": [
                                        "qint64",
                                        "int",
                                        "QLocale::DataSizeFormats"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "uiLanguages",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QLocale &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QLocale &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "languageToString",
                                    "parameters": [
                                        "QLocale::Language"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "countryToString",
                                    "parameters": [
                                        "QLocale::Country"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "scriptToString",
                                    "parameters": [
                                        "QLocale::Script"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setDefault",
                                    "parameters": [
                                        "const QLocale &"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "c",
                                    "returns": "QLocale",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "system",
                                    "returns": "QLocale",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "matchingLocales",
                                    "parameters": [
                                        "QLocale::Language",
                                        "QLocale::Script",
                                        "QLocale::Country"
                                    ],
                                    "returns": "QList<QLocale>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "countriesForLanguage",
                                    "parameters": [
                                        "QLocale::Language"
                                    ],
                                    "returns": "QList<QLocale::Country>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setNumberOptions",
                                    "parameters": [
                                        "QLocale::NumberOptions"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "numberOptions",
                                    "returns": "QLocale::NumberOptions",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "StandardQuotation"
                                        },
                                        {
                                            "name": "AlternateQuotation"
                                        }
                                    ],
                                    "name": "QuotationStyle",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "quoteString",
                                    "parameters": [
                                        "const QString &",
                                        "QLocale::QuotationStyle"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "quoteString",
                                    "parameters": [
                                        "const QStringRef &",
                                        "QLocale::QuotationStyle"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "createSeparatedList",
                                    "parameters": [
                                        "const QStringList &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                }
                            ],
                            "name": "QLocale",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QLocale &",
                                "QLocale &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QLocale::NumberOption",
                                "QLocale::NumberOption"
                            ],
                            "returns": "QLocale::NumberOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QLocale::NumberOption",
                                "QLocale::NumberOptions"
                            ],
                            "returns": "QLocale::NumberOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QLocale::NumberOptions::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QLocale &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QLocale &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QLocale &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QLocale>",
                    "name": "locale",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "const": true,
                                    "name": "metaObject",
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "tr",
                                    "parameters": [
                                        "const char *",
                                        "const char *",
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "trUtf8",
                                    "parameters": [
                                        "const char *",
                                        "const char *",
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "QObject",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QObject",
                                    "type": "destructor"
                                },
                                {
                                    "name": "event",
                                    "parameters": [
                                        "QEvent *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "eventFilter",
                                    "parameters": [
                                        "QObject *",
                                        "QEvent *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "objectName",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setObjectName",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isWidgetType",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isWindowType",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "signalsBlocked",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "blockSignals",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "thread",
                                    "returns": "QThread *",
                                    "type": "function"
                                },
                                {
                                    "name": "moveToThread",
                                    "parameters": [
                                        "QThread *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "startTimer",
                                    "parameters": [
                                        "int",
                                        "Qt::TimerType"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "startTimer",
                                    "parameters": [
                                        "std::chrono::milliseconds",
                                        "Qt::TimerType"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "killTimer",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "children",
                                    "returns": "const QObjectList &",
                                    "type": "function"
                                },
                                {
                                    "name": "setParent",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "installEventFilter",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "removeEventFilter",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "connect",
                                    "parameters": [
                                        "const QObject *",
                                        "const char *",
                                        "const QObject *",
                                        "const char *",
                                        "Qt::ConnectionType"
                                    ],
                                    "returns": "QMetaObject::Connection",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "connect",
                                    "parameters": [
                                        "const QObject *",
                                        "const QMetaMethod &",
                                        "const QObject *",
                                        "const QMetaMethod &",
                                        "Qt::ConnectionType"
                                    ],
                                    "returns": "QMetaObject::Connection",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "connect",
                                    "parameters": [
                                        "const QObject *",
                                        "const char *",
                                        "const char *",
                                        "Qt::ConnectionType"
                                    ],
                                    "returns": "QMetaObject::Connection",
                                    "type": "function"
                                },
                                {
                                    "name": "disconnect",
                                    "parameters": [
                                        "const QObject *",
                                        "const char *",
                                        "const QObject *",
                                        "const char *"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "disconnect",
                                    "parameters": [
                                        "const QObject *",
                                        "const QMetaMethod &",
                                        "const QObject *",
                                        "const QMetaMethod &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "disconnect",
                                    "parameters": [
                                        "const char *",
                                        "const QObject *",
                                        "const char *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "disconnect",
                                    "parameters": [
                                        "const QObject *",
                                        "const char *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "disconnect",
                                    "parameters": [
                                        "const QMetaObject::Connection &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dumpObjectTree",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dumpObjectInfo",
                                    "type": "function"
                                },
                                {
                                    "name": "setProperty",
                                    "parameters": [
                                        "const char *",
                                        "const QVariant &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "property",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "returns": "QVariant",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dynamicPropertyNames",
                                    "returns": "QList<QByteArray>",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "registerUserData",
                                    "returns": "uint",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "setUserData",
                                    "parameters": [
                                        "uint",
                                        "QObjectUserData *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "userData",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "QObjectUserData *",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "destroyed",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "objectNameChanged",
                                    "parameters": [
                                        "const QString &",
                                        "QObject::QPrivateSignal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "parent",
                                    "returns": "QObject *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inherits",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "deleteLater",
                                    "type": "function"
                                }
                            ],
                            "name": "QObject",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QObject *"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QSignalBlocker",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSignalBlocker",
                                    "parameters": [
                                        "QObject &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QSignalBlocker",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QSignalBlocker",
                                    "parameters": [
                                        "QSignalBlocker &&"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QSignalBlocker &&"
                                    ],
                                    "returns": "QSignalBlocker &",
                                    "type": "function"
                                },
                                {
                                    "name": "reblock",
                                    "type": "function"
                                },
                                {
                                    "name": "unblock",
                                    "type": "function"
                                }
                            ],
                            "name": "QSignalBlocker",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QObject>",
                    "name": "object",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "VarUnknown"
                                        },
                                        {
                                            "name": "NCS"
                                        },
                                        {
                                            "name": "DCE"
                                        },
                                        {
                                            "name": "Microsoft"
                                        },
                                        {
                                            "name": "Reserved"
                                        }
                                    ],
                                    "name": "Variant",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "VerUnknown"
                                        },
                                        {
                                            "name": "Time"
                                        },
                                        {
                                            "name": "EmbeddedPOSIX"
                                        },
                                        {
                                            "name": "Md5"
                                        },
                                        {
                                            "name": "Name"
                                        },
                                        {
                                            "name": "Random"
                                        },
                                        {
                                            "name": "Sha1"
                                        }
                                    ],
                                    "name": "Version",
                                    "type": "enum"
                                },
                                {
                                    "name": "QUuid",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QUuid",
                                    "parameters": [
                                        "const QUuid &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QUuid",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QUuid",
                                    "parameters": [
                                        "uint",
                                        "ushort",
                                        "ushort",
                                        "uchar",
                                        "uchar",
                                        "uchar",
                                        "uchar",
                                        "uchar",
                                        "uchar",
                                        "uchar",
                                        "uchar"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QUuid",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "fromString",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromString",
                                    "parameters": [
                                        "QLatin1String"
                                    ],
                                    "returns": "QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "QUuid",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "QUuid",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "toByteArray",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRfc4122",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "fromRfc4122",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QUuid &"
                                    ],
                                    "returns": "QUuid &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QUuid &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QUuid &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "parameters": [
                                        "const QUuid &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "parameters": [
                                        "const QUuid &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "QUuid",
                                    "parameters": [
                                        "const GUID &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const GUID &"
                                    ],
                                    "returns": "QUuid &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const GUID &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const GUID &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "createUuid",
                                    "returns": "QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "createUuidV3",
                                    "parameters": [
                                        "const QUuid &",
                                        "const QByteArray &"
                                    ],
                                    "returns": "QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "createUuidV5",
                                    "parameters": [
                                        "const QUuid &",
                                        "const QByteArray &"
                                    ],
                                    "returns": "QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "createUuidV3",
                                    "parameters": [
                                        "const QUuid &",
                                        "const QString &"
                                    ],
                                    "returns": "QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "createUuidV5",
                                    "parameters": [
                                        "const QUuid &",
                                        "const QString &"
                                    ],
                                    "returns": "QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "variant",
                                    "returns": "QUuid::Variant",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "version",
                                    "returns": "QUuid::Version",
                                    "type": "function"
                                }
                            ],
                            "name": "QUuid",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QUuid &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QUuid &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QUuid &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "qHash",
                            "parameters": [
                                "const QUuid &",
                                "uint"
                            ],
                            "returns": "uint",
                            "type": "function"
                        },
                        {
                            "name": "operator<=",
                            "parameters": [
                                "const QUuid &",
                                "const QUuid &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>=",
                            "parameters": [
                                "const QUuid &",
                                "const QUuid &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QUuid>",
                    "name": "uuid",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "cppincludes": "yasl/core/variant-functions.h",
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Invalid"
                                        },
                                        {
                                            "name": "Bool"
                                        },
                                        {
                                            "name": "Int"
                                        },
                                        {
                                            "name": "UInt"
                                        },
                                        {
                                            "name": "LongLong"
                                        },
                                        {
                                            "name": "ULongLong"
                                        },
                                        {
                                            "name": "Double"
                                        },
                                        {
                                            "name": "Char"
                                        },
                                        {
                                            "name": "Map"
                                        },
                                        {
                                            "name": "List"
                                        },
                                        {
                                            "name": "String"
                                        },
                                        {
                                            "name": "StringList"
                                        },
                                        {
                                            "name": "ByteArray"
                                        },
                                        {
                                            "name": "BitArray"
                                        },
                                        {
                                            "name": "Date"
                                        },
                                        {
                                            "name": "Time"
                                        },
                                        {
                                            "name": "DateTime"
                                        },
                                        {
                                            "name": "Url"
                                        },
                                        {
                                            "name": "Locale"
                                        },
                                        {
                                            "name": "Rect"
                                        },
                                        {
                                            "name": "RectF"
                                        },
                                        {
                                            "name": "Size"
                                        },
                                        {
                                            "name": "SizeF"
                                        },
                                        {
                                            "name": "Line"
                                        },
                                        {
                                            "name": "LineF"
                                        },
                                        {
                                            "name": "Point"
                                        },
                                        {
                                            "name": "PointF"
                                        },
                                        {
                                            "name": "RegExp"
                                        },
                                        {
                                            "name": "RegularExpression"
                                        },
                                        {
                                            "name": "Hash"
                                        },
                                        {
                                            "name": "EasingCurve"
                                        },
                                        {
                                            "name": "Uuid"
                                        },
                                        {
                                            "name": "ModelIndex"
                                        },
                                        {
                                            "name": "PersistentModelIndex"
                                        },
                                        {
                                            "name": "LastCoreType"
                                        },
                                        {
                                            "name": "Font"
                                        },
                                        {
                                            "name": "Pixmap"
                                        },
                                        {
                                            "name": "Brush"
                                        },
                                        {
                                            "name": "Color"
                                        },
                                        {
                                            "name": "Palette"
                                        },
                                        {
                                            "name": "Image"
                                        },
                                        {
                                            "name": "Polygon"
                                        },
                                        {
                                            "name": "Region"
                                        },
                                        {
                                            "name": "Bitmap"
                                        },
                                        {
                                            "name": "Cursor"
                                        },
                                        {
                                            "name": "KeySequence"
                                        },
                                        {
                                            "name": "Pen"
                                        },
                                        {
                                            "name": "TextLength"
                                        },
                                        {
                                            "name": "TextFormat"
                                        },
                                        {
                                            "name": "Matrix"
                                        },
                                        {
                                            "name": "Transform"
                                        },
                                        {
                                            "name": "Matrix4x4"
                                        },
                                        {
                                            "name": "Vector2D"
                                        },
                                        {
                                            "name": "Vector3D"
                                        },
                                        {
                                            "name": "Vector4D"
                                        },
                                        {
                                            "name": "Quaternion"
                                        },
                                        {
                                            "name": "PolygonF"
                                        },
                                        {
                                            "name": "Icon"
                                        },
                                        {
                                            "name": "LastGuiType"
                                        },
                                        {
                                            "name": "SizePolicy"
                                        },
                                        {
                                            "name": "UserType"
                                        },
                                        {
                                            "name": "LastType"
                                        }
                                    ],
                                    "name": "Type",
                                    "type": "enum"
                                },
                                {
                                    "name": "QVariant",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QVariant",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "QVariant::Type"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "int",
                                        "const void *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "int",
                                        "const void *",
                                        "uint"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "QDataStream &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "checked": 0,
                                    "name": "QVariant",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "qlonglong"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "qulonglong"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "double"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "float"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QBitArray &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "QLatin1String"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QStringList &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QList<QVariant> &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QMap<QString, QVariant> &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QHash<QString, QVariant> &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QSizeF &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QLine &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QLineF &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QLocale &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QRegExp &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QRegularExpression &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QEasingCurve &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QUuid &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QModelIndex &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QPersistentModelIndex &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QJsonValue &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QJsonObject &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QJsonArray &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QJsonDocument &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "returns": "QVariant &",
                                    "type": "function"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "QVariant &&"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QVariant &&"
                                    ],
                                    "returns": "QVariant &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QVariant &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "type",
                                    "returns": "QVariant::Type",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "userType",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "typeName",
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "canConvert",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "convert",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "type": "function"
                                },
                                {
                                    "name": "detach",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toInt",
                                    "parameters": [
                                        "bool *"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "va_toInt",
                                    "rename": "toInt",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toUInt",
                                    "parameters": [
                                        "bool *"
                                    ],
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toLongLong",
                                    "parameters": [
                                        "bool *"
                                    ],
                                    "returns": "qlonglong",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toULongLong",
                                    "parameters": [
                                        "bool *"
                                    ],
                                    "returns": "qulonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toBool",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toDouble",
                                    "parameters": [
                                        "bool *"
                                    ],
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "va_toDouble",
                                    "rename": "toDouble",
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toFloat",
                                    "parameters": [
                                        "bool *"
                                    ],
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "va_toFloat",
                                    "rename": "toFloat",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toReal",
                                    "parameters": [
                                        "bool *"
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toByteArray",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toBitArray",
                                    "returns": "QBitArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toStringList",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toChar",
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDate",
                                    "returns": "QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toTime",
                                    "returns": "QTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDateTime",
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toList",
                                    "returns": "QList<QVariant>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toMap",
                                    "returns": "QMap<QString, QVariant>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toHash",
                                    "returns": "QHash<QString, QVariant>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPoint",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPointF",
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRect",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toSize",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toSizeF",
                                    "returns": "QSizeF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLine",
                                    "returns": "QLine",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLineF",
                                    "returns": "QLineF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRectF",
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLocale",
                                    "returns": "QLocale",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRegExp",
                                    "returns": "QRegExp",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRegularExpression",
                                    "returns": "QRegularExpression",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUrl",
                                    "returns": "QUrl",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toEasingCurve",
                                    "returns": "QEasingCurve",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUuid",
                                    "returns": "QUuid",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toModelIndex",
                                    "returns": "QModelIndex",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPersistentModelIndex",
                                    "returns": "QPersistentModelIndex",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toJsonValue",
                                    "returns": "QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toJsonObject",
                                    "returns": "QJsonObject",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toJsonArray",
                                    "returns": "QJsonArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toJsonDocument",
                                    "returns": "QJsonDocument",
                                    "type": "function"
                                },
                                {
                                    "name": "load",
                                    "parameters": [
                                        "QDataStream &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "save",
                                    "parameters": [
                                        "QDataStream &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "typeToName",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "const char *",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "nameToType",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "returns": "QVariant::Type",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "data",
                                    "returns": "void *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constData",
                                    "returns": "const void *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "data",
                                    "returns": "const void *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<=",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>=",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "create",
                                    "parameters": [
                                        "int",
                                        "const void *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cmp",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "compare",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "convert",
                                    "parameters": [
                                        "const int",
                                        "void *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "returns": "QVariant::DataPtr &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "data_ptr",
                                    "returns": "const QVariant::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QVariant",
                            "type": "class"
                        },
                        {
                            "checked": 0,
                            "name": "qVariantFromValue",
                            "parameters": [
                                "const QVariant &"
                            ],
                            "returns": "QVariant",
                            "type": "function"
                        },
                        {
                            "checked": 0,
                            "name": "qVariantSetValue",
                            "parameters": [
                                "QVariant &",
                                "const QVariant &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QVariant &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QVariant &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QVariant::Type &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QVariant::Type"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QVariant &",
                                "QVariant &"
                            ],
                            "type": "function"
                        },
                        {
                            "checked": 0,
                            "name": "qvariant_cast",
                            "parameters": [
                                "const QVariant &"
                            ],
                            "returns": "QVariant",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QVariant &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QVariant::Type"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QVariant>",
                    "name": "variant",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "name": "qHash",
                            "parameters": [
                                "const QRegularExpression &",
                                "uint"
                            ],
                            "returns": "uint",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoPatternOption"
                                        },
                                        {
                                            "name": "CaseInsensitiveOption"
                                        },
                                        {
                                            "name": "DotMatchesEverythingOption"
                                        },
                                        {
                                            "name": "MultilineOption"
                                        },
                                        {
                                            "name": "ExtendedPatternSyntaxOption"
                                        },
                                        {
                                            "name": "InvertedGreedinessOption"
                                        },
                                        {
                                            "name": "DontCaptureOption"
                                        },
                                        {
                                            "name": "UseUnicodePropertiesOption"
                                        },
                                        {
                                            "name": "OptimizeOnFirstUsageOption"
                                        },
                                        {
                                            "name": "DontAutomaticallyOptimizeOption"
                                        }
                                    ],
                                    "name": "PatternOption",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "patternOptions",
                                    "returns": "QRegularExpression::PatternOptions",
                                    "type": "function"
                                },
                                {
                                    "name": "setPatternOptions",
                                    "parameters": [
                                        "QRegularExpression::PatternOptions"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "QRegularExpression",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRegularExpression",
                                    "parameters": [
                                        "const QString &",
                                        "QRegularExpression::PatternOptions"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRegularExpression",
                                    "parameters": [
                                        "const QRegularExpression &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QRegularExpression",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QRegularExpression &"
                                    ],
                                    "returns": "QRegularExpression &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QRegularExpression &&"
                                    ],
                                    "returns": "QRegularExpression &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QRegularExpression &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pattern",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setPattern",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "patternErrorOffset",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "errorString",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "captureCount",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "namedCaptureGroups",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "NormalMatch"
                                        },
                                        {
                                            "name": "PartialPreferCompleteMatch"
                                        },
                                        {
                                            "name": "PartialPreferFirstMatch"
                                        },
                                        {
                                            "name": "NoMatch"
                                        }
                                    ],
                                    "name": "MatchType",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoMatchOption"
                                        },
                                        {
                                            "name": "AnchoredMatchOption"
                                        },
                                        {
                                            "name": "DontCheckSubjectStringMatchOption"
                                        }
                                    ],
                                    "name": "MatchOption",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "match",
                                    "parameters": [
                                        "const QString &",
                                        "int",
                                        "QRegularExpression::MatchType",
                                        "QRegularExpression::MatchOptions"
                                    ],
                                    "returns": "QRegularExpressionMatch",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "match",
                                    "parameters": [
                                        "const QStringRef &",
                                        "int",
                                        "QRegularExpression::MatchType",
                                        "QRegularExpression::MatchOptions"
                                    ],
                                    "returns": "QRegularExpressionMatch",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "globalMatch",
                                    "parameters": [
                                        "const QString &",
                                        "int",
                                        "QRegularExpression::MatchType",
                                        "QRegularExpression::MatchOptions"
                                    ],
                                    "returns": "QRegularExpressionMatchIterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "globalMatch",
                                    "parameters": [
                                        "const QStringRef &",
                                        "int",
                                        "QRegularExpression::MatchType",
                                        "QRegularExpression::MatchOptions"
                                    ],
                                    "returns": "QRegularExpressionMatchIterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "optimize",
                                    "type": "function"
                                },
                                {
                                    "name": "escape",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QRegularExpression &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QRegularExpression &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QRegularExpression",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QRegularExpression &",
                                "QRegularExpression &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QRegularExpression::PatternOption",
                                "QRegularExpression::PatternOption"
                            ],
                            "returns": "QRegularExpression::PatternOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QRegularExpression::PatternOption",
                                "QRegularExpression::PatternOptions"
                            ],
                            "returns": "QRegularExpression::PatternOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QRegularExpression::PatternOptions::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QRegularExpression::MatchOption",
                                "QRegularExpression::MatchOption"
                            ],
                            "returns": "QRegularExpression::MatchOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QRegularExpression::MatchOption",
                                "QRegularExpression::MatchOptions"
                            ],
                            "returns": "QRegularExpression::MatchOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QRegularExpression::MatchOptions::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QRegularExpression &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QRegularExpression &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QRegularExpression &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "QRegularExpression::PatternOptions"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QRegularExpressionMatch",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QRegularExpressionMatch",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QRegularExpressionMatch",
                                    "parameters": [
                                        "const QRegularExpressionMatch &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QRegularExpressionMatch &"
                                    ],
                                    "returns": "QRegularExpressionMatch &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QRegularExpressionMatch &&"
                                    ],
                                    "returns": "QRegularExpressionMatch &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QRegularExpressionMatch &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "regularExpression",
                                    "returns": "QRegularExpression",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matchType",
                                    "returns": "QRegularExpression::MatchType",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matchOptions",
                                    "returns": "QRegularExpression::MatchOptions",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasMatch",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasPartialMatch",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastCapturedIndex",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "captured",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedRef",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QStringRef",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedView",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QStringView",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "captured",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedRef",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QStringRef",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "captured",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedRef",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "QStringRef",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedView",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "QStringView",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedTexts",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedStart",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedLength",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedEnd",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedStart",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedLength",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedEnd",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedStart",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedLength",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedEnd",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                }
                            ],
                            "name": "QRegularExpressionMatch",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QRegularExpressionMatch &",
                                "QRegularExpressionMatch &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QRegularExpressionMatch &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QRegularExpressionMatchIterator",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QRegularExpressionMatchIterator",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QRegularExpressionMatchIterator",
                                    "parameters": [
                                        "const QRegularExpressionMatchIterator &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QRegularExpressionMatchIterator &"
                                    ],
                                    "returns": "QRegularExpressionMatchIterator &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QRegularExpressionMatchIterator &&"
                                    ],
                                    "returns": "QRegularExpressionMatchIterator &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QRegularExpressionMatchIterator &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasNext",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "next",
                                    "returns": "QRegularExpressionMatch",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "peekNext",
                                    "returns": "QRegularExpressionMatch",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "regularExpression",
                                    "returns": "QRegularExpression",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matchType",
                                    "returns": "QRegularExpression::MatchType",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matchOptions",
                                    "returns": "QRegularExpression::MatchOptions",
                                    "type": "function"
                                }
                            ],
                            "name": "QRegularExpressionMatchIterator",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QRegularExpressionMatchIterator &",
                                "QRegularExpressionMatchIterator &"
                            ],
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QRegularExpression>",
                    "name": "regularexpression",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QObject",
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoError"
                                        },
                                        {
                                            "name": "AccessError"
                                        },
                                        {
                                            "name": "FormatError"
                                        }
                                    ],
                                    "name": "Status",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "NativeFormat"
                                        },
                                        {
                                            "name": "IniFormat"
                                        },
                                        {
                                            "name": "Registry32Format"
                                        },
                                        {
                                            "name": "Registry64Format"
                                        },
                                        {
                                            "name": "InvalidFormat"
                                        },
                                        {
                                            "name": "CustomFormat1"
                                        },
                                        {
                                            "name": "CustomFormat2"
                                        },
                                        {
                                            "name": "CustomFormat3"
                                        },
                                        {
                                            "name": "CustomFormat4"
                                        },
                                        {
                                            "name": "CustomFormat5"
                                        },
                                        {
                                            "name": "CustomFormat6"
                                        },
                                        {
                                            "name": "CustomFormat7"
                                        },
                                        {
                                            "name": "CustomFormat8"
                                        },
                                        {
                                            "name": "CustomFormat9"
                                        },
                                        {
                                            "name": "CustomFormat10"
                                        },
                                        {
                                            "name": "CustomFormat11"
                                        },
                                        {
                                            "name": "CustomFormat12"
                                        },
                                        {
                                            "name": "CustomFormat13"
                                        },
                                        {
                                            "name": "CustomFormat14"
                                        },
                                        {
                                            "name": "CustomFormat15"
                                        },
                                        {
                                            "name": "CustomFormat16"
                                        }
                                    ],
                                    "name": "Format",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "UserScope"
                                        },
                                        {
                                            "name": "SystemScope"
                                        }
                                    ],
                                    "name": "Scope",
                                    "type": "enum"
                                },
                                {
                                    "name": "QSettings",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &",
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSettings",
                                    "parameters": [
                                        "QSettings::Scope",
                                        "const QString &",
                                        "const QString &",
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSettings",
                                    "parameters": [
                                        "QSettings::Format",
                                        "QSettings::Scope",
                                        "const QString &",
                                        "const QString &",
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSettings",
                                    "parameters": [
                                        "const QString &",
                                        "QSettings::Format",
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSettings",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QSettings",
                                    "type": "destructor"
                                },
                                {
                                    "name": "clear",
                                    "type": "function"
                                },
                                {
                                    "name": "sync",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "status",
                                    "returns": "QSettings::Status",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isAtomicSyncRequired",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAtomicSyncRequired",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "beginGroup",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "endGroup",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "group",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "beginReadArray",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "beginWriteArray",
                                    "parameters": [
                                        "const QString &",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "endArray",
                                    "type": "function"
                                },
                                {
                                    "name": "setArrayIndex",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "allKeys",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "childKeys",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "childGroups",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isWritable",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setValue",
                                    "parameters": [
                                        "const QString &",
                                        "const QVariant &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "value",
                                    "parameters": [
                                        "const QString &",
                                        "const QVariant &"
                                    ],
                                    "returns": "QVariant",
                                    "type": "function"
                                },
                                {
                                    "name": "remove",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setFallbacksEnabled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fallbacksEnabled",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fileName",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "format",
                                    "returns": "QSettings::Format",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scope",
                                    "returns": "QSettings::Scope",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "organizationName",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "applicationName",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setIniCodec",
                                    "parameters": [
                                        "QTextCodec *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setIniCodec",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "iniCodec",
                                    "returns": "QTextCodec *",
                                    "type": "function"
                                },
                                {
                                    "name": "setDefaultFormat",
                                    "parameters": [
                                        "QSettings::Format"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "defaultFormat",
                                    "returns": "QSettings::Format",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setSystemIniPath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setUserIniPath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setPath",
                                    "parameters": [
                                        "QSettings::Format",
                                        "QSettings::Scope",
                                        "const QString &"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "registerFormat",
                                    "parameters": [
                                        "const QString &",
                                        "QSettings::ReadFunc",
                                        "QSettings::WriteFunc",
                                        "Qt::CaseSensitivity"
                                    ],
                                    "returns": "QSettings::Format",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QSettings",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QSettings>",
                    "name": "settings",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QObject",
                            "elements": [
                                {
                                    "name": "QTimer",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QTimer",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "isActive",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "timerId",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setInterval",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "interval",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "remainingTime",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setTimerType",
                                    "parameters": [
                                        "Qt::TimerType"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "timerType",
                                    "returns": "Qt::TimerType",
                                    "type": "function"
                                },
                                {
                                    "name": "setSingleShot",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSingleShot",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "singleShot",
                                    "parameters": [
                                        "int",
                                        "const QObject *",
                                        "const char *"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "singleShot",
                                    "parameters": [
                                        "int",
                                        "Qt::TimerType",
                                        "const QObject *",
                                        "const char *"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "start",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "start",
                                    "type": "function"
                                },
                                {
                                    "name": "stop",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "timeout",
                                    "type": "function"
                                },
                                {
                                    "name": "setInterval",
                                    "parameters": [
                                        "std::chrono::milliseconds"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intervalAsDuration",
                                    "returns": "std::chrono::milliseconds",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "remainingTimeAsDuration",
                                    "returns": "std::chrono::milliseconds",
                                    "type": "function"
                                },
                                {
                                    "name": "singleShot",
                                    "parameters": [
                                        "std::chrono::milliseconds",
                                        "const QObject *",
                                        "const char *"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "singleShot",
                                    "parameters": [
                                        "std::chrono::milliseconds",
                                        "Qt::TimerType",
                                        "const QObject *",
                                        "const char *"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "start",
                                    "parameters": [
                                        "std::chrono::milliseconds"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QTimer",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QTimer>",
                    "name": "timer",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QObject",
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "NotOpen"
                                        },
                                        {
                                            "name": "ReadOnly"
                                        },
                                        {
                                            "name": "WriteOnly"
                                        },
                                        {
                                            "name": "ReadWrite"
                                        },
                                        {
                                            "name": "Append"
                                        },
                                        {
                                            "name": "Truncate"
                                        },
                                        {
                                            "name": "Text"
                                        },
                                        {
                                            "name": "Unbuffered"
                                        }
                                    ],
                                    "name": "OpenModeFlag",
                                    "type": "enum"
                                },
                                {
                                    "checked": 0,
                                    "name": "QIODevice",
                                    "type": "constructor"
                                },
                                {
                                    "checked": 0,
                                    "name": "QIODevice",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QIODevice",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "openMode",
                                    "returns": "QIODevice::OpenMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextModeEnabled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTextModeEnabled",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isOpen",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isReadable",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isWritable",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSequential",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "readChannelCount",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "writeChannelCount",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentReadChannel",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentReadChannel",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentWriteChannel",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentWriteChannel",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "parameters": [
                                        "QIODevice::OpenMode"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "close",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pos",
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "seek",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "atEnd",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "reset",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bytesAvailable",
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bytesToWrite",
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "read",
                                    "parameters": [
                                        "char *",
                                        "qint64"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "read",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "readAll",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "readLine",
                                    "parameters": [
                                        "char *",
                                        "qint64"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "readLine",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "canReadLine",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "startTransaction",
                                    "type": "function"
                                },
                                {
                                    "name": "commitTransaction",
                                    "type": "function"
                                },
                                {
                                    "name": "rollbackTransaction",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTransactionStarted",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "write",
                                    "parameters": [
                                        "const char *",
                                        "qint64"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "write",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "write",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "peek",
                                    "parameters": [
                                        "char *",
                                        "qint64"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "peek",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "skip",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "waitForReadyRead",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "waitForBytesWritten",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "ungetChar",
                                    "parameters": [
                                        "char"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "putChar",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "getChar",
                                    "parameters": [
                                        "char *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "errorString",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "readyRead",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "channelReadyRead",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "bytesWritten",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "channelBytesWritten",
                                    "parameters": [
                                        "int",
                                        "qint64"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "aboutToClose",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "readChannelFinished",
                                    "type": "function"
                                }
                            ],
                            "name": "QIODevice",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QIODevice::OpenModeFlag",
                                "QIODevice::OpenModeFlag"
                            ],
                            "returns": "QIODevice::OpenMode",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QIODevice::OpenModeFlag",
                                "QIODevice::OpenMode"
                            ],
                            "returns": "QIODevice::OpenMode",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QIODevice::OpenMode::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "QIODevice::OpenMode"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QIODevice>",
                    "name": "iodevice",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QIODevice",
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoError"
                                        },
                                        {
                                            "name": "ReadError"
                                        },
                                        {
                                            "name": "WriteError"
                                        },
                                        {
                                            "name": "FatalError"
                                        },
                                        {
                                            "name": "ResourceError"
                                        },
                                        {
                                            "name": "OpenError"
                                        },
                                        {
                                            "name": "AbortError"
                                        },
                                        {
                                            "name": "TimeOutError"
                                        },
                                        {
                                            "name": "UnspecifiedError"
                                        },
                                        {
                                            "name": "RemoveError"
                                        },
                                        {
                                            "name": "RenameError"
                                        },
                                        {
                                            "name": "PositionError"
                                        },
                                        {
                                            "name": "ResizeError"
                                        },
                                        {
                                            "name": "PermissionsError"
                                        },
                                        {
                                            "name": "CopyError"
                                        }
                                    ],
                                    "name": "FileError",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "FileAccessTime"
                                        },
                                        {
                                            "name": "FileBirthTime"
                                        },
                                        {
                                            "name": "FileMetadataChangeTime"
                                        },
                                        {
                                            "name": "FileModificationTime"
                                        }
                                    ],
                                    "name": "FileTime",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "ReadOwner"
                                        },
                                        {
                                            "name": "WriteOwner"
                                        },
                                        {
                                            "name": "ExeOwner"
                                        },
                                        {
                                            "name": "ReadUser"
                                        },
                                        {
                                            "name": "WriteUser"
                                        },
                                        {
                                            "name": "ExeUser"
                                        },
                                        {
                                            "name": "ReadGroup"
                                        },
                                        {
                                            "name": "WriteGroup"
                                        },
                                        {
                                            "name": "ExeGroup"
                                        },
                                        {
                                            "name": "ReadOther"
                                        },
                                        {
                                            "name": "WriteOther"
                                        },
                                        {
                                            "name": "ExeOther"
                                        }
                                    ],
                                    "name": "Permission",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "AutoCloseHandle"
                                        },
                                        {
                                            "name": "DontCloseHandle"
                                        }
                                    ],
                                    "name": "FileHandleFlag",
                                    "type": "enum"
                                },
                                {
                                    "name": "~QFileDevice",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "error",
                                    "returns": "QFileDevice::FileError",
                                    "type": "function"
                                },
                                {
                                    "name": "unsetError",
                                    "type": "function"
                                },
                                {
                                    "name": "close",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSequential",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "handle",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fileName",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pos",
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "seek",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "atEnd",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "flush",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "resize",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "permissions",
                                    "returns": "QFileDevice::Permissions",
                                    "type": "function"
                                },
                                {
                                    "name": "setPermissions",
                                    "parameters": [
                                        "QFileDevice::Permissions"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoOptions"
                                        },
                                        {
                                            "name": "MapPrivateOption"
                                        }
                                    ],
                                    "name": "MemoryMapFlags",
                                    "type": "enum"
                                },
                                {
                                    "checked": 0,
                                    "name": "map",
                                    "parameters": [
                                        "qint64",
                                        "qint64",
                                        "QFileDevice::MemoryMapFlags"
                                    ],
                                    "returns": "uchar *",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "unmap",
                                    "parameters": [
                                        "uchar *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fileTime",
                                    "parameters": [
                                        "QFileDevice::FileTime"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "name": "setFileTime",
                                    "parameters": [
                                        "const QDateTime &",
                                        "QFileDevice::FileTime"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QFileDevice",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QFileDevice::Permission",
                                "QFileDevice::Permission"
                            ],
                            "returns": "QFileDevice::Permissions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QFileDevice::Permission",
                                "QFileDevice::Permissions"
                            ],
                            "returns": "QFileDevice::Permissions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QFileDevice::Permissions::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "yasl/core/iodevice.h,<QFileDevice>",
                    "name": "filedevice",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QFileDevice",
                            "elements": [
                                {
                                    "name": "QFile",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFile",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFile",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFile",
                                    "parameters": [
                                        "const QString &",
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFile",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "fileName",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setFileName",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "encodeName",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "decodeName",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "decodeName",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exists",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "exists",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "readLink",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "readLink",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "symLinkTarget",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "symLinkTarget",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "remove",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "remove",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "rename",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "rename",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "link",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "link",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "copy",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "copy",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "parameters": [
                                        "QIODevice::OpenMode"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "parameters": [
                                        "FILE *",
                                        "QIODevice::OpenMode",
                                        "QFileDevice::FileHandleFlags"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "parameters": [
                                        "int",
                                        "QIODevice::OpenMode",
                                        "QFileDevice::FileHandleFlags"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "resize",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "resize",
                                    "parameters": [
                                        "const QString &",
                                        "qint64"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "permissions",
                                    "returns": "QFileDevice::Permissions",
                                    "type": "function"
                                },
                                {
                                    "name": "permissions",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QFileDevice::Permissions",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setPermissions",
                                    "parameters": [
                                        "QFileDevice::Permissions"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setPermissions",
                                    "parameters": [
                                        "const QString &",
                                        "QFileDevice::Permissions"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QFile",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QFile>",
                    "name": "file",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "None"
                                        },
                                        {
                                            "name": "Timer"
                                        },
                                        {
                                            "name": "MouseButtonPress"
                                        },
                                        {
                                            "name": "MouseButtonRelease"
                                        },
                                        {
                                            "name": "MouseButtonDblClick"
                                        },
                                        {
                                            "name": "MouseMove"
                                        },
                                        {
                                            "name": "KeyPress"
                                        },
                                        {
                                            "name": "KeyRelease"
                                        },
                                        {
                                            "name": "FocusIn"
                                        },
                                        {
                                            "name": "FocusOut"
                                        },
                                        {
                                            "name": "FocusAboutToChange"
                                        },
                                        {
                                            "name": "Enter"
                                        },
                                        {
                                            "name": "Leave"
                                        },
                                        {
                                            "name": "Paint"
                                        },
                                        {
                                            "name": "Move"
                                        },
                                        {
                                            "name": "Resize"
                                        },
                                        {
                                            "name": "Create"
                                        },
                                        {
                                            "name": "Destroy"
                                        },
                                        {
                                            "name": "Show"
                                        },
                                        {
                                            "name": "Hide"
                                        },
                                        {
                                            "name": "Close"
                                        },
                                        {
                                            "name": "Quit"
                                        },
                                        {
                                            "name": "ParentChange"
                                        },
                                        {
                                            "name": "ParentAboutToChange"
                                        },
                                        {
                                            "name": "ThreadChange"
                                        },
                                        {
                                            "name": "WindowActivate"
                                        },
                                        {
                                            "name": "WindowDeactivate"
                                        },
                                        {
                                            "name": "ShowToParent"
                                        },
                                        {
                                            "name": "HideToParent"
                                        },
                                        {
                                            "name": "Wheel"
                                        },
                                        {
                                            "name": "WindowTitleChange"
                                        },
                                        {
                                            "name": "WindowIconChange"
                                        },
                                        {
                                            "name": "ApplicationWindowIconChange"
                                        },
                                        {
                                            "name": "ApplicationFontChange"
                                        },
                                        {
                                            "name": "ApplicationLayoutDirectionChange"
                                        },
                                        {
                                            "name": "ApplicationPaletteChange"
                                        },
                                        {
                                            "name": "PaletteChange"
                                        },
                                        {
                                            "name": "Clipboard"
                                        },
                                        {
                                            "name": "Speech"
                                        },
                                        {
                                            "name": "MetaCall"
                                        },
                                        {
                                            "name": "SockAct"
                                        },
                                        {
                                            "name": "WinEventAct"
                                        },
                                        {
                                            "name": "DeferredDelete"
                                        },
                                        {
                                            "name": "DragEnter"
                                        },
                                        {
                                            "name": "DragMove"
                                        },
                                        {
                                            "name": "DragLeave"
                                        },
                                        {
                                            "name": "Drop"
                                        },
                                        {
                                            "name": "DragResponse"
                                        },
                                        {
                                            "name": "ChildAdded"
                                        },
                                        {
                                            "name": "ChildPolished"
                                        },
                                        {
                                            "name": "ChildRemoved"
                                        },
                                        {
                                            "name": "ShowWindowRequest"
                                        },
                                        {
                                            "name": "PolishRequest"
                                        },
                                        {
                                            "name": "Polish"
                                        },
                                        {
                                            "name": "LayoutRequest"
                                        },
                                        {
                                            "name": "UpdateRequest"
                                        },
                                        {
                                            "name": "UpdateLater"
                                        },
                                        {
                                            "name": "EmbeddingControl"
                                        },
                                        {
                                            "name": "ActivateControl"
                                        },
                                        {
                                            "name": "DeactivateControl"
                                        },
                                        {
                                            "name": "ContextMenu"
                                        },
                                        {
                                            "name": "InputMethod"
                                        },
                                        {
                                            "name": "TabletMove"
                                        },
                                        {
                                            "name": "LocaleChange"
                                        },
                                        {
                                            "name": "LanguageChange"
                                        },
                                        {
                                            "name": "LayoutDirectionChange"
                                        },
                                        {
                                            "name": "Style"
                                        },
                                        {
                                            "name": "TabletPress"
                                        },
                                        {
                                            "name": "TabletRelease"
                                        },
                                        {
                                            "name": "OkRequest"
                                        },
                                        {
                                            "name": "HelpRequest"
                                        },
                                        {
                                            "name": "IconDrag"
                                        },
                                        {
                                            "name": "FontChange"
                                        },
                                        {
                                            "name": "EnabledChange"
                                        },
                                        {
                                            "name": "ActivationChange"
                                        },
                                        {
                                            "name": "StyleChange"
                                        },
                                        {
                                            "name": "IconTextChange"
                                        },
                                        {
                                            "name": "ModifiedChange"
                                        },
                                        {
                                            "name": "MouseTrackingChange"
                                        },
                                        {
                                            "name": "WindowBlocked"
                                        },
                                        {
                                            "name": "WindowUnblocked"
                                        },
                                        {
                                            "name": "WindowStateChange"
                                        },
                                        {
                                            "name": "ReadOnlyChange"
                                        },
                                        {
                                            "name": "ToolTip"
                                        },
                                        {
                                            "name": "WhatsThis"
                                        },
                                        {
                                            "name": "StatusTip"
                                        },
                                        {
                                            "name": "ActionChanged"
                                        },
                                        {
                                            "name": "ActionAdded"
                                        },
                                        {
                                            "name": "ActionRemoved"
                                        },
                                        {
                                            "name": "FileOpen"
                                        },
                                        {
                                            "name": "Shortcut"
                                        },
                                        {
                                            "name": "ShortcutOverride"
                                        },
                                        {
                                            "name": "WhatsThisClicked"
                                        },
                                        {
                                            "name": "ToolBarChange"
                                        },
                                        {
                                            "name": "ApplicationActivate"
                                        },
                                        {
                                            "name": "ApplicationActivated"
                                        },
                                        {
                                            "name": "ApplicationDeactivate"
                                        },
                                        {
                                            "name": "ApplicationDeactivated"
                                        },
                                        {
                                            "name": "QueryWhatsThis"
                                        },
                                        {
                                            "name": "EnterWhatsThisMode"
                                        },
                                        {
                                            "name": "LeaveWhatsThisMode"
                                        },
                                        {
                                            "name": "ZOrderChange"
                                        },
                                        {
                                            "name": "HoverEnter"
                                        },
                                        {
                                            "name": "HoverLeave"
                                        },
                                        {
                                            "name": "HoverMove"
                                        },
                                        {
                                            "name": "AcceptDropsChange"
                                        },
                                        {
                                            "name": "ZeroTimerEvent"
                                        },
                                        {
                                            "name": "GraphicsSceneMouseMove"
                                        },
                                        {
                                            "name": "GraphicsSceneMousePress"
                                        },
                                        {
                                            "name": "GraphicsSceneMouseRelease"
                                        },
                                        {
                                            "name": "GraphicsSceneMouseDoubleClick"
                                        },
                                        {
                                            "name": "GraphicsSceneContextMenu"
                                        },
                                        {
                                            "name": "GraphicsSceneHoverEnter"
                                        },
                                        {
                                            "name": "GraphicsSceneHoverMove"
                                        },
                                        {
                                            "name": "GraphicsSceneHoverLeave"
                                        },
                                        {
                                            "name": "GraphicsSceneHelp"
                                        },
                                        {
                                            "name": "GraphicsSceneDragEnter"
                                        },
                                        {
                                            "name": "GraphicsSceneDragMove"
                                        },
                                        {
                                            "name": "GraphicsSceneDragLeave"
                                        },
                                        {
                                            "name": "GraphicsSceneDrop"
                                        },
                                        {
                                            "name": "GraphicsSceneWheel"
                                        },
                                        {
                                            "name": "KeyboardLayoutChange"
                                        },
                                        {
                                            "name": "DynamicPropertyChange"
                                        },
                                        {
                                            "name": "TabletEnterProximity"
                                        },
                                        {
                                            "name": "TabletLeaveProximity"
                                        },
                                        {
                                            "name": "NonClientAreaMouseMove"
                                        },
                                        {
                                            "name": "NonClientAreaMouseButtonPress"
                                        },
                                        {
                                            "name": "NonClientAreaMouseButtonRelease"
                                        },
                                        {
                                            "name": "NonClientAreaMouseButtonDblClick"
                                        },
                                        {
                                            "name": "MacSizeChange"
                                        },
                                        {
                                            "name": "ContentsRectChange"
                                        },
                                        {
                                            "name": "MacGLWindowChange"
                                        },
                                        {
                                            "name": "FutureCallOut"
                                        },
                                        {
                                            "name": "GraphicsSceneResize"
                                        },
                                        {
                                            "name": "GraphicsSceneMove"
                                        },
                                        {
                                            "name": "CursorChange"
                                        },
                                        {
                                            "name": "ToolTipChange"
                                        },
                                        {
                                            "name": "NetworkReplyUpdated"
                                        },
                                        {
                                            "name": "GrabMouse"
                                        },
                                        {
                                            "name": "UngrabMouse"
                                        },
                                        {
                                            "name": "GrabKeyboard"
                                        },
                                        {
                                            "name": "UngrabKeyboard"
                                        },
                                        {
                                            "name": "MacGLClearDrawable"
                                        },
                                        {
                                            "name": "StateMachineSignal"
                                        },
                                        {
                                            "name": "StateMachineWrapped"
                                        },
                                        {
                                            "name": "TouchBegin"
                                        },
                                        {
                                            "name": "TouchUpdate"
                                        },
                                        {
                                            "name": "TouchEnd"
                                        },
                                        {
                                            "name": "NativeGesture"
                                        },
                                        {
                                            "name": "RequestSoftwareInputPanel"
                                        },
                                        {
                                            "name": "CloseSoftwareInputPanel"
                                        },
                                        {
                                            "name": "WinIdChange"
                                        },
                                        {
                                            "name": "Gesture"
                                        },
                                        {
                                            "name": "GestureOverride"
                                        },
                                        {
                                            "name": "ScrollPrepare"
                                        },
                                        {
                                            "name": "Scroll"
                                        },
                                        {
                                            "name": "Expose"
                                        },
                                        {
                                            "name": "InputMethodQuery"
                                        },
                                        {
                                            "name": "OrientationChange"
                                        },
                                        {
                                            "name": "TouchCancel"
                                        },
                                        {
                                            "name": "ThemeChange"
                                        },
                                        {
                                            "name": "SockClose"
                                        },
                                        {
                                            "name": "PlatformPanel"
                                        },
                                        {
                                            "name": "StyleAnimationUpdate"
                                        },
                                        {
                                            "name": "ApplicationStateChange"
                                        },
                                        {
                                            "name": "WindowChangeInternal"
                                        },
                                        {
                                            "name": "ScreenChangeInternal"
                                        },
                                        {
                                            "name": "PlatformSurface"
                                        },
                                        {
                                            "name": "Pointer"
                                        },
                                        {
                                            "name": "TabletTrackingChange"
                                        },
                                        {
                                            "name": "User"
                                        },
                                        {
                                            "name": "MaxUser"
                                        }
                                    ],
                                    "name": "Type",
                                    "type": "enum"
                                },
                                {
                                    "name": "QEvent",
                                    "parameters": [
                                        "QEvent::Type"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QEvent",
                                    "parameters": [
                                        "const QEvent &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QEvent",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QEvent &"
                                    ],
                                    "returns": "QEvent &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "type",
                                    "returns": "QEvent::Type",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "spontaneous",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAccepted",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isAccepted",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "accept",
                                    "type": "function"
                                },
                                {
                                    "name": "ignore",
                                    "type": "function"
                                },
                                {
                                    "name": "registerEventType",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QEvent",
                            "type": "class"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QTimerEvent",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QTimerEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "timerId",
                                    "returns": "int",
                                    "type": "function"
                                }
                            ],
                            "name": "QTimerEvent",
                            "type": "class"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QChildEvent",
                                    "parameters": [
                                        "QEvent::Type",
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QChildEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "child",
                                    "returns": "QObject *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "added",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "polished",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "removed",
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QChildEvent",
                            "type": "class"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QDynamicPropertyChangeEvent",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDynamicPropertyChangeEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "propertyName",
                                    "returns": "QByteArray",
                                    "type": "function"
                                }
                            ],
                            "name": "QDynamicPropertyChangeEvent",
                            "type": "class"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QDeferredDeleteEvent",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDeferredDeleteEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "loopLevel",
                                    "returns": "int",
                                    "type": "function"
                                }
                            ],
                            "name": "QDeferredDeleteEvent",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QEvent>",
                    "name": "event",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Null"
                                        },
                                        {
                                            "name": "Bool"
                                        },
                                        {
                                            "name": "Double"
                                        },
                                        {
                                            "name": "String"
                                        },
                                        {
                                            "name": "Array"
                                        },
                                        {
                                            "name": "Object"
                                        },
                                        {
                                            "name": "Undefined"
                                        }
                                    ],
                                    "name": "Type",
                                    "type": "enum"
                                },
                                {
                                    "name": "QJsonValue",
                                    "parameters": [
                                        "QJsonValue::Type"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonValue",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonValue",
                                    "parameters": [
                                        "double"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonValue",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonValue",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonValue",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonValue",
                                    "parameters": [
                                        "QLatin1String"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonValue",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonValue",
                                    "parameters": [
                                        "const QJsonArray &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonValue",
                                    "parameters": [
                                        "const QJsonObject &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QJsonValue",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QJsonValue",
                                    "parameters": [
                                        "const QJsonValue &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QJsonValue &"
                                    ],
                                    "returns": "QJsonValue &",
                                    "type": "function"
                                },
                                {
                                    "name": "QJsonValue",
                                    "parameters": [
                                        "QJsonValue &&"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QJsonValue &&"
                                    ],
                                    "returns": "QJsonValue &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QJsonValue &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fromVariant",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "returns": "QJsonValue",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVariant",
                                    "returns": "QVariant",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "type",
                                    "returns": "QJsonValue::Type",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isBool",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDouble",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isString",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isArray",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isObject",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isUndefined",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toBool",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toInt",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDouble",
                                    "parameters": [
                                        "double"
                                    ],
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toArray",
                                    "returns": "QJsonArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toArray",
                                    "parameters": [
                                        "const QJsonArray &"
                                    ],
                                    "returns": "QJsonArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toObject",
                                    "returns": "QJsonObject",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toObject",
                                    "parameters": [
                                        "const QJsonObject &"
                                    ],
                                    "returns": "QJsonObject",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "const QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "parameters": [
                                        "QLatin1String"
                                    ],
                                    "returns": "const QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "const QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QJsonValue &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QJsonValue &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QJsonValue",
                            "type": "class"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QJsonValueRef",
                                    "parameters": [
                                        "QJsonArray *",
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonValueRef",
                                    "parameters": [
                                        "QJsonObject *",
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QJsonValue &"
                                    ],
                                    "returns": "QJsonValueRef &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QJsonValueRef &"
                                    ],
                                    "returns": "QJsonValueRef &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVariant",
                                    "returns": "QVariant",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "type",
                                    "returns": "QJsonValue::Type",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isBool",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDouble",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isString",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isArray",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isObject",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isUndefined",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toBool",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toInt",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDouble",
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toArray",
                                    "returns": "QJsonArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toObject",
                                    "returns": "QJsonObject",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toBool",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toInt",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDouble",
                                    "parameters": [
                                        "double"
                                    ],
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QJsonValue &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QJsonValue &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QJsonValueRef",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QJsonValue &",
                                "QJsonValue &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QJsonValue &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QJsonValue>",
                    "name": "jsonvalue",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "name": "QJsonArray",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonArray",
                                    "parameters": [
                                        "std::initializer_list<QJsonValue>"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QJsonArray",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QJsonArray",
                                    "parameters": [
                                        "const QJsonArray &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QJsonArray &"
                                    ],
                                    "returns": "QJsonArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "QJsonArray",
                                    "parameters": [
                                        "QJsonArray &&"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QJsonArray &&"
                                    ],
                                    "returns": "QJsonArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "fromStringList",
                                    "parameters": [
                                        "const QStringList &"
                                    ],
                                    "returns": "QJsonArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromVariantList",
                                    "parameters": [
                                        "const QVariantList &"
                                    ],
                                    "returns": "QJsonArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVariantList",
                                    "returns": "QVariantList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "at",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "first",
                                    "returns": "QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "last",
                                    "returns": "QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "name": "prepend",
                                    "parameters": [
                                        "const QJsonValue &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "append",
                                    "parameters": [
                                        "const QJsonValue &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "removeAt",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "takeAt",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "name": "removeFirst",
                                    "type": "function"
                                },
                                {
                                    "name": "removeLast",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "parameters": [
                                        "int",
                                        "const QJsonValue &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "replace",
                                    "parameters": [
                                        "int",
                                        "const QJsonValue &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "const QJsonValue &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "operator[]",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QJsonValueRef",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QJsonArray &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QJsonArray &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QJsonArray &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "begin",
                                    "returns": "QJsonArray::iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "begin",
                                    "returns": "QJsonArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constBegin",
                                    "returns": "QJsonArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "end",
                                    "returns": "QJsonArray::iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "end",
                                    "returns": "QJsonArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constEnd",
                                    "returns": "QJsonArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "parameters": [
                                        "QJsonArray::iterator",
                                        "const QJsonValue &"
                                    ],
                                    "returns": "QJsonArray::iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "erase",
                                    "parameters": [
                                        "QJsonArray::iterator"
                                    ],
                                    "returns": "QJsonArray::iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator+",
                                    "parameters": [
                                        "const QJsonValue &"
                                    ],
                                    "returns": "QJsonArray",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QJsonValue &"
                                    ],
                                    "returns": "QJsonArray &",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "operator<<",
                                    "parameters": [
                                        "const QJsonValue &"
                                    ],
                                    "returns": "QJsonArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "push_back",
                                    "parameters": [
                                        "const QJsonValue &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "push_front",
                                    "parameters": [
                                        "const QJsonValue &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "pop_front",
                                    "type": "function"
                                },
                                {
                                    "name": "pop_back",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "empty",
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QJsonArray",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QJsonArray &",
                                "QJsonArray &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QJsonArray &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QJsonArray>",
                    "name": "jsonarray",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QJsonObject",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonObject",
                                    "parameters": [
                                        "std::initializer_list<QPair<QString, QJsonValue> >"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QJsonObject",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QJsonObject",
                                    "parameters": [
                                        "const QJsonObject &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QJsonObject &"
                                    ],
                                    "returns": "QJsonObject &",
                                    "type": "function"
                                },
                                {
                                    "name": "QJsonObject",
                                    "parameters": [
                                        "QJsonObject &&"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QJsonObject &&"
                                    ],
                                    "returns": "QJsonObject &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QJsonObject &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fromVariantMap",
                                    "parameters": [
                                        "const QVariantMap &"
                                    ],
                                    "returns": "QJsonObject",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVariantMap",
                                    "returns": "QVariantMap",
                                    "type": "function"
                                },
                                {
                                    "name": "fromVariantHash",
                                    "parameters": [
                                        "const QVariantHash &"
                                    ],
                                    "returns": "QJsonObject",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVariantHash",
                                    "returns": "QVariantHash",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "keys",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "length",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "value",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "value",
                                    "parameters": [
                                        "QLatin1String"
                                    ],
                                    "returns": "QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "parameters": [
                                        "QLatin1String"
                                    ],
                                    "returns": "QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "name": "operator[]",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QJsonValueRef",
                                    "type": "function"
                                },
                                {
                                    "name": "operator[]",
                                    "parameters": [
                                        "QLatin1String"
                                    ],
                                    "returns": "QJsonValueRef",
                                    "type": "function"
                                },
                                {
                                    "name": "remove",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "take",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "QLatin1String"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QJsonObject &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QJsonObject &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "begin",
                                    "returns": "QJsonObject::iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "begin",
                                    "returns": "QJsonObject::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constBegin",
                                    "returns": "QJsonObject::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "end",
                                    "returns": "QJsonObject::iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "end",
                                    "returns": "QJsonObject::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constEnd",
                                    "returns": "QJsonObject::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "erase",
                                    "parameters": [
                                        "QJsonObject::iterator"
                                    ],
                                    "returns": "QJsonObject::iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "find",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QJsonObject::iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "find",
                                    "parameters": [
                                        "QLatin1String"
                                    ],
                                    "returns": "QJsonObject::iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "find",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QJsonObject::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "find",
                                    "parameters": [
                                        "QLatin1String"
                                    ],
                                    "returns": "QJsonObject::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constFind",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QJsonObject::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constFind",
                                    "parameters": [
                                        "QLatin1String"
                                    ],
                                    "returns": "QJsonObject::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "parameters": [
                                        "const QString &",
                                        "const QJsonValue &"
                                    ],
                                    "returns": "QJsonObject::iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "empty",
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QJsonObject",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QJsonObject &",
                                "QJsonObject &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QJsonObject &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QJsonObject>",
                    "name": "jsonobject",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QJsonDocument",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonDocument",
                                    "parameters": [
                                        "const QJsonObject &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonDocument",
                                    "parameters": [
                                        "const QJsonArray &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QJsonDocument",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QJsonDocument",
                                    "parameters": [
                                        "const QJsonDocument &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QJsonDocument &"
                                    ],
                                    "returns": "QJsonDocument &",
                                    "type": "function"
                                },
                                {
                                    "name": "QJsonDocument",
                                    "parameters": [
                                        "QJsonDocument &&"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QJsonDocument &&"
                                    ],
                                    "returns": "QJsonDocument &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QJsonDocument &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Validate"
                                        },
                                        {
                                            "name": "BypassValidation"
                                        }
                                    ],
                                    "name": "DataValidation",
                                    "type": "enum"
                                },
                                {
                                    "name": "fromRawData",
                                    "parameters": [
                                        "const char *",
                                        "int",
                                        "QJsonDocument::DataValidation"
                                    ],
                                    "returns": "QJsonDocument",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rawData",
                                    "parameters": [
                                        "int *"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "fromBinaryData",
                                    "parameters": [
                                        "const QByteArray &",
                                        "QJsonDocument::DataValidation"
                                    ],
                                    "returns": "QJsonDocument",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toBinaryData",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "fromVariant",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "returns": "QJsonDocument",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVariant",
                                    "returns": "QVariant",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Indented"
                                        },
                                        {
                                            "name": "Compact"
                                        }
                                    ],
                                    "name": "JsonFormat",
                                    "type": "enum"
                                },
                                {
                                    "name": "fromJson",
                                    "parameters": [
                                        "const QByteArray &",
                                        "QJsonParseError *"
                                    ],
                                    "returns": "QJsonDocument",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toJson",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toJson",
                                    "parameters": [
                                        "QJsonDocument::JsonFormat"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isArray",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isObject",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "object",
                                    "returns": "QJsonObject",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "array",
                                    "returns": "QJsonArray",
                                    "type": "function"
                                },
                                {
                                    "name": "setObject",
                                    "parameters": [
                                        "const QJsonObject &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setArray",
                                    "parameters": [
                                        "const QJsonArray &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "const QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "parameters": [
                                        "QLatin1String"
                                    ],
                                    "returns": "const QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "const QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QJsonDocument &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QJsonDocument &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QJsonDocument",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QJsonDocument &",
                                "QJsonDocument &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QJsonDocument &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QJsonDocument>",
                    "name": "jsondocument",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "SystemTime"
                                        },
                                        {
                                            "name": "MonotonicClock"
                                        },
                                        {
                                            "name": "TickCounter"
                                        },
                                        {
                                            "name": "MachAbsoluteTime"
                                        },
                                        {
                                            "name": "PerformanceCounter"
                                        }
                                    ],
                                    "name": "ClockType",
                                    "type": "enum"
                                },
                                {
                                    "name": "QElapsedTimer",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QElapsedTimer",
                                    "type": "destructor"
                                },
                                {
                                    "name": "clockType",
                                    "returns": "QElapsedTimer::ClockType",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isMonotonic",
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "start",
                                    "type": "function"
                                },
                                {
                                    "name": "restart",
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "invalidate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nsecsElapsed",
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "elapsed",
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasExpired",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "msecsSinceReference",
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "msecsTo",
                                    "parameters": [
                                        "const QElapsedTimer &"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "secsTo",
                                    "parameters": [
                                        "const QElapsedTimer &"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QElapsedTimer &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QElapsedTimer &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QElapsedTimer",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QElapsedTimer>",
                    "name": "elapsedtimer",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QProcessEnvironment",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QProcessEnvironment",
                                    "parameters": [
                                        "const QProcessEnvironment &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QProcessEnvironment",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QProcessEnvironment &&"
                                    ],
                                    "returns": "QProcessEnvironment &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QProcessEnvironment &"
                                    ],
                                    "returns": "QProcessEnvironment &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QProcessEnvironment &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QProcessEnvironment &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QProcessEnvironment &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "remove",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "value",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toStringList",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "keys",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "parameters": [
                                        "const QProcessEnvironment &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "systemEnvironment",
                                    "returns": "QProcessEnvironment",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QProcessEnvironment",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QProcessEnvironment &",
                                "QProcessEnvironment &"
                            ],
                            "type": "function"
                        },
                        {
                            "base": "QIODevice",
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "FailedToStart"
                                        },
                                        {
                                            "name": "Crashed"
                                        },
                                        {
                                            "name": "Timedout"
                                        },
                                        {
                                            "name": "ReadError"
                                        },
                                        {
                                            "name": "WriteError"
                                        },
                                        {
                                            "name": "UnknownError"
                                        }
                                    ],
                                    "name": "ProcessError",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "NotRunning"
                                        },
                                        {
                                            "name": "Starting"
                                        },
                                        {
                                            "name": "Running"
                                        }
                                    ],
                                    "name": "ProcessState",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "StandardOutput"
                                        },
                                        {
                                            "name": "StandardError"
                                        }
                                    ],
                                    "name": "ProcessChannel",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "SeparateChannels"
                                        },
                                        {
                                            "name": "MergedChannels"
                                        },
                                        {
                                            "name": "ForwardedChannels"
                                        },
                                        {
                                            "name": "ForwardedOutputChannel"
                                        },
                                        {
                                            "name": "ForwardedErrorChannel"
                                        }
                                    ],
                                    "name": "ProcessChannelMode",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "ManagedInputChannel"
                                        },
                                        {
                                            "name": "ForwardedInputChannel"
                                        }
                                    ],
                                    "name": "InputChannelMode",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "NormalExit"
                                        },
                                        {
                                            "name": "CrashExit"
                                        }
                                    ],
                                    "name": "ExitStatus",
                                    "type": "enum"
                                },
                                {
                                    "name": "QProcess",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QProcess",
                                    "type": "destructor"
                                },
                                {
                                    "name": "start",
                                    "parameters": [
                                        "const QString &",
                                        "const QStringList &",
                                        "QIODevice::OpenMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "start",
                                    "parameters": [
                                        "const QString &",
                                        "QIODevice::OpenMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "start",
                                    "parameters": [
                                        "QIODevice::OpenMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "startDetached",
                                    "parameters": [
                                        "qint64 *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "parameters": [
                                        "QIODevice::OpenMode"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "program",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setProgram",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "arguments",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "setArguments",
                                    "parameters": [
                                        "const QStringList &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "readChannelMode",
                                    "returns": "QProcess::ProcessChannelMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setReadChannelMode",
                                    "parameters": [
                                        "QProcess::ProcessChannelMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "processChannelMode",
                                    "returns": "QProcess::ProcessChannelMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setProcessChannelMode",
                                    "parameters": [
                                        "QProcess::ProcessChannelMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inputChannelMode",
                                    "returns": "QProcess::InputChannelMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setInputChannelMode",
                                    "parameters": [
                                        "QProcess::InputChannelMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "readChannel",
                                    "returns": "QProcess::ProcessChannel",
                                    "type": "function"
                                },
                                {
                                    "name": "setReadChannel",
                                    "parameters": [
                                        "QProcess::ProcessChannel"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "closeReadChannel",
                                    "parameters": [
                                        "QProcess::ProcessChannel"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "closeWriteChannel",
                                    "type": "function"
                                },
                                {
                                    "name": "setStandardInputFile",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setStandardOutputFile",
                                    "parameters": [
                                        "const QString &",
                                        "QIODevice::OpenMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setStandardErrorFile",
                                    "parameters": [
                                        "const QString &",
                                        "QIODevice::OpenMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setStandardOutputProcess",
                                    "parameters": [
                                        "QProcess *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nativeArguments",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setNativeArguments",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "createProcessArgumentsModifier",
                                    "returns": "QProcess::CreateProcessArgumentModifier",
                                    "type": "function"
                                },
                                {
                                    "name": "setCreateProcessArgumentsModifier",
                                    "parameters": [
                                        "QProcess::CreateProcessArgumentModifier"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "workingDirectory",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setWorkingDirectory",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setEnvironment",
                                    "parameters": [
                                        "const QStringList &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "environment",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "setProcessEnvironment",
                                    "parameters": [
                                        "const QProcessEnvironment &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "processEnvironment",
                                    "returns": "QProcessEnvironment",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "error",
                                    "returns": "QProcess::ProcessError",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "state",
                                    "returns": "QProcess::ProcessState",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pid",
                                    "returns": "Q_PID",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "processId",
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "waitForStarted",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "waitForReadyRead",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "waitForBytesWritten",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "waitForFinished",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "readAllStandardOutput",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "readAllStandardError",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exitCode",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exitStatus",
                                    "returns": "QProcess::ExitStatus",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bytesAvailable",
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bytesToWrite",
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSequential",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "canReadLine",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "close",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "atEnd",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "execute",
                                    "parameters": [
                                        "const QString &",
                                        "const QStringList &"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "execute",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "startDetached",
                                    "parameters": [
                                        "const QString &",
                                        "const QStringList &",
                                        "const QString &",
                                        "qint64 *"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "startDetached",
                                    "parameters": [
                                        "const QString &",
                                        "const QStringList &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "startDetached",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "systemEnvironment",
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "nullDevice",
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "terminate",
                                    "type": "function"
                                },
                                {
                                    "name": "kill",
                                    "type": "function"
                                },
                                {
                                    "name": "started",
                                    "parameters": [
                                        "QProcess::QPrivateSignal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "finished",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "finished",
                                    "parameters": [
                                        "int",
                                        "QProcess::ExitStatus"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "error",
                                    "parameters": [
                                        "QProcess::ProcessError"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "errorOccurred",
                                    "parameters": [
                                        "QProcess::ProcessError"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "stateChanged",
                                    "parameters": [
                                        "QProcess::ProcessState"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "readyReadStandardOutput",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "readyReadStandardError",
                                    "type": "function"
                                }
                            ],
                            "name": "QProcess",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QProcess>",
                    "name": "process",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "name": "qHash",
                            "parameters": [
                                "const QMimeType &",
                                "uint"
                            ],
                            "returns": "uint",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QMimeType",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QMimeType",
                                    "parameters": [
                                        "const QMimeType &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QMimeType &"
                                    ],
                                    "returns": "QMimeType &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QMimeType &&"
                                    ],
                                    "returns": "QMimeType &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QMimeType &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "QMimeType",
                                    "parameters": [
                                        "const QMimeTypePrivate &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QMimeType",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QMimeType &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QMimeType &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDefault",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "name",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "comment",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "genericIconName",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "iconName",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "globPatterns",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "parentMimeTypes",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "allAncestors",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "aliases",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "suffixes",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "preferredSuffix",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inherits",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "filterString",
                                    "returns": "QString",
                                    "type": "function"
                                }
                            ],
                            "name": "QMimeType",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QMimeType &",
                                "QMimeType &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QMimeType &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QMimeType>",
                    "name": "mimetype",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Qt_1_0"
                                        },
                                        {
                                            "name": "Qt_2_0"
                                        },
                                        {
                                            "name": "Qt_2_1"
                                        },
                                        {
                                            "name": "Qt_3_0"
                                        },
                                        {
                                            "name": "Qt_3_1"
                                        },
                                        {
                                            "name": "Qt_3_3"
                                        },
                                        {
                                            "name": "Qt_4_0"
                                        },
                                        {
                                            "name": "Qt_4_1"
                                        },
                                        {
                                            "name": "Qt_4_2"
                                        },
                                        {
                                            "name": "Qt_4_3"
                                        },
                                        {
                                            "name": "Qt_4_4"
                                        },
                                        {
                                            "name": "Qt_4_5"
                                        },
                                        {
                                            "name": "Qt_4_6"
                                        },
                                        {
                                            "name": "Qt_4_7"
                                        },
                                        {
                                            "name": "Qt_4_8"
                                        },
                                        {
                                            "name": "Qt_4_9"
                                        },
                                        {
                                            "name": "Qt_5_0"
                                        },
                                        {
                                            "name": "Qt_5_1"
                                        },
                                        {
                                            "name": "Qt_5_2"
                                        },
                                        {
                                            "name": "Qt_5_3"
                                        },
                                        {
                                            "name": "Qt_5_4"
                                        },
                                        {
                                            "name": "Qt_5_5"
                                        },
                                        {
                                            "name": "Qt_5_6"
                                        },
                                        {
                                            "name": "Qt_5_7"
                                        },
                                        {
                                            "name": "Qt_5_8"
                                        },
                                        {
                                            "name": "Qt_5_9"
                                        },
                                        {
                                            "name": "Qt_5_10"
                                        },
                                        {
                                            "name": "Qt_DefaultCompiledVersion"
                                        }
                                    ],
                                    "name": "Version",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "BigEndian"
                                        },
                                        {
                                            "name": "LittleEndian"
                                        }
                                    ],
                                    "name": "ByteOrder",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Ok"
                                        },
                                        {
                                            "name": "ReadPastEnd"
                                        },
                                        {
                                            "name": "ReadCorruptData"
                                        },
                                        {
                                            "name": "WriteFailed"
                                        }
                                    ],
                                    "name": "Status",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "SinglePrecision"
                                        },
                                        {
                                            "name": "DoublePrecision"
                                        }
                                    ],
                                    "name": "FloatingPointPrecision",
                                    "type": "enum"
                                },
                                {
                                    "name": "QDataStream",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDataStream",
                                    "parameters": [
                                        "QIODevice *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDataStream",
                                    "parameters": [
                                        "QByteArray *",
                                        "QIODevice::OpenMode"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDataStream",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDataStream",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "device",
                                    "returns": "QIODevice *",
                                    "type": "function"
                                },
                                {
                                    "name": "setDevice",
                                    "parameters": [
                                        "QIODevice *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "unsetDevice",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "atEnd",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "status",
                                    "returns": "QDataStream::Status",
                                    "type": "function"
                                },
                                {
                                    "name": "setStatus",
                                    "parameters": [
                                        "QDataStream::Status"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "resetStatus",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "floatingPointPrecision",
                                    "returns": "QDataStream::FloatingPointPrecision",
                                    "type": "function"
                                },
                                {
                                    "name": "setFloatingPointPrecision",
                                    "parameters": [
                                        "QDataStream::FloatingPointPrecision"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "byteOrder",
                                    "returns": "QDataStream::ByteOrder",
                                    "type": "function"
                                },
                                {
                                    "name": "setByteOrder",
                                    "parameters": [
                                        "QDataStream::ByteOrder"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "version",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setVersion",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "parameters": [
                                        "qint8 &"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "parameters": [
                                        "quint8 &"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "parameters": [
                                        "qint16 &"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "parameters": [
                                        "quint16 &"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "parameters": [
                                        "qint32 &"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "parameters": [
                                        "quint32 &"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "parameters": [
                                        "qint64 &"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "parameters": [
                                        "quint64 &"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "parameters": [
                                        "std::nullptr_t &"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "parameters": [
                                        "bool &"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "parameters": [
                                        "qfloat16 &"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "parameters": [
                                        "float &"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "parameters": [
                                        "double &"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "parameters": [
                                        "char *&"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "parameters": [
                                        "qint8"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "parameters": [
                                        "quint8"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "parameters": [
                                        "qint16"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "parameters": [
                                        "quint16"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "parameters": [
                                        "qint32"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "parameters": [
                                        "quint32"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "parameters": [
                                        "quint64"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "parameters": [
                                        "std::nullptr_t"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "parameters": [
                                        "qfloat16"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "parameters": [
                                        "float"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "parameters": [
                                        "double"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "readBytes",
                                    "parameters": [
                                        "char *&",
                                        "uint &"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "readRawData",
                                    "parameters": [
                                        "char *",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "writeBytes",
                                    "parameters": [
                                        "const char *",
                                        "uint"
                                    ],
                                    "returns": "QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "writeRawData",
                                    "parameters": [
                                        "const char *",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "skipRawData",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "startTransaction",
                                    "type": "function"
                                },
                                {
                                    "name": "commitTransaction",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "rollbackTransaction",
                                    "type": "function"
                                },
                                {
                                    "name": "abortTransaction",
                                    "type": "function"
                                }
                            ],
                            "name": "QDataStream",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QDataStream>",
                    "name": "datastream",
                    "type": "file"
                }
            ],
            "name": "core",
            "type": "module"
        },
        {
            "checked": 1,
            "elements": [
                {
                    "checked": 1,
                    "elements": [
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QColor &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QColor &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QColor &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Invalid"
                                        },
                                        {
                                            "name": "Rgb"
                                        },
                                        {
                                            "name": "Hsv"
                                        },
                                        {
                                            "name": "Cmyk"
                                        },
                                        {
                                            "name": "Hsl"
                                        }
                                    ],
                                    "name": "Spec",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "HexRgb"
                                        },
                                        {
                                            "name": "HexArgb"
                                        }
                                    ],
                                    "name": "NameFormat",
                                    "type": "enum"
                                },
                                {
                                    "name": "QColor",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QColor",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "Qt::GlobalColor"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "QRgb"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "QRgba64"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "QLatin1String"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "QColor::Spec"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "const QColor &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "QColor &&"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QColor &&"
                                    ],
                                    "returns": "QColor &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QColor &"
                                    ],
                                    "returns": "QColor &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "Qt::GlobalColor"
                                    ],
                                    "returns": "QColor &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "name",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "name",
                                    "parameters": [
                                        "QColor::NameFormat"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setNamedColor",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setNamedColor",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setNamedColor",
                                    "parameters": [
                                        "QLatin1String"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "colorNames",
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "spec",
                                    "returns": "QColor::Spec",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alpha",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlpha",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alphaF",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlphaF",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "red",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "green",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "blue",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setRed",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setGreen",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setBlue",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "redF",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "greenF",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "blueF",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setRedF",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setGreenF",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setBlueF",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getRgb",
                                    "parameters": [
                                        "int *",
                                        "int *",
                                        "int *",
                                        "int *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setRgb",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getRgbF",
                                    "parameters": [
                                        "qreal *",
                                        "qreal *",
                                        "qreal *",
                                        "qreal *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setRgbF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rgba64",
                                    "returns": "QRgba64",
                                    "type": "function"
                                },
                                {
                                    "name": "setRgba64",
                                    "parameters": [
                                        "QRgba64"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rgba",
                                    "returns": "QRgb",
                                    "type": "function"
                                },
                                {
                                    "name": "setRgba",
                                    "parameters": [
                                        "QRgb"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rgb",
                                    "returns": "QRgb",
                                    "type": "function"
                                },
                                {
                                    "name": "setRgb",
                                    "parameters": [
                                        "QRgb"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hue",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "saturation",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hsvHue",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hsvSaturation",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "value",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hueF",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "saturationF",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hsvHueF",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hsvSaturationF",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "valueF",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getHsv",
                                    "parameters": [
                                        "int *",
                                        "int *",
                                        "int *",
                                        "int *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setHsv",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getHsvF",
                                    "parameters": [
                                        "qreal *",
                                        "qreal *",
                                        "qreal *",
                                        "qreal *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setHsvF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cyan",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "magenta",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "yellow",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "black",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cyanF",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "magentaF",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "yellowF",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "blackF",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "getCmyk",
                                    "parameters": [
                                        "int *",
                                        "int *",
                                        "int *",
                                        "int *",
                                        "int *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setCmyk",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "getCmykF",
                                    "parameters": [
                                        "qreal *",
                                        "qreal *",
                                        "qreal *",
                                        "qreal *",
                                        "qreal *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setCmykF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hslHue",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hslSaturation",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lightness",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hslHueF",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hslSaturationF",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lightnessF",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getHsl",
                                    "parameters": [
                                        "int *",
                                        "int *",
                                        "int *",
                                        "int *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setHsl",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getHslF",
                                    "parameters": [
                                        "qreal *",
                                        "qreal *",
                                        "qreal *",
                                        "qreal *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setHslF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRgb",
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toHsv",
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCmyk",
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toHsl",
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "convertTo",
                                    "parameters": [
                                        "QColor::Spec"
                                    ],
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "name": "fromRgb",
                                    "parameters": [
                                        "QRgb"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromRgba",
                                    "parameters": [
                                        "QRgb"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromRgb",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromRgbF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromRgba64",
                                    "parameters": [
                                        "ushort",
                                        "ushort",
                                        "ushort",
                                        "ushort"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromRgba64",
                                    "parameters": [
                                        "QRgba64"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromHsv",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromHsvF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromCmyk",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromCmykF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromHsl",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromHslF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "light",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lighter",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dark",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "darker",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QColor &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QColor &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "isValidColor",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isValidColor",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isValidColor",
                                    "parameters": [
                                        "QLatin1String"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QColor",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QColor>",
                    "name": "color",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Helvetica"
                                        },
                                        {
                                            "name": "SansSerif"
                                        },
                                        {
                                            "name": "Times"
                                        },
                                        {
                                            "name": "Serif"
                                        },
                                        {
                                            "name": "Courier"
                                        },
                                        {
                                            "name": "TypeWriter"
                                        },
                                        {
                                            "name": "OldEnglish"
                                        },
                                        {
                                            "name": "Decorative"
                                        },
                                        {
                                            "name": "System"
                                        },
                                        {
                                            "name": "AnyStyle"
                                        },
                                        {
                                            "name": "Cursive"
                                        },
                                        {
                                            "name": "Monospace"
                                        },
                                        {
                                            "name": "Fantasy"
                                        }
                                    ],
                                    "name": "StyleHint",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "PreferDefault"
                                        },
                                        {
                                            "name": "PreferBitmap"
                                        },
                                        {
                                            "name": "PreferDevice"
                                        },
                                        {
                                            "name": "PreferOutline"
                                        },
                                        {
                                            "name": "ForceOutline"
                                        },
                                        {
                                            "name": "PreferMatch"
                                        },
                                        {
                                            "name": "PreferQuality"
                                        },
                                        {
                                            "name": "PreferAntialias"
                                        },
                                        {
                                            "name": "NoAntialias"
                                        },
                                        {
                                            "name": "OpenGLCompatible"
                                        },
                                        {
                                            "name": "ForceIntegerMetrics"
                                        },
                                        {
                                            "name": "NoSubpixelAntialias"
                                        },
                                        {
                                            "name": "PreferNoShaping"
                                        },
                                        {
                                            "name": "NoFontMerging"
                                        }
                                    ],
                                    "name": "StyleStrategy",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "PreferDefaultHinting"
                                        },
                                        {
                                            "name": "PreferNoHinting"
                                        },
                                        {
                                            "name": "PreferVerticalHinting"
                                        },
                                        {
                                            "name": "PreferFullHinting"
                                        }
                                    ],
                                    "name": "HintingPreference",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Thin"
                                        },
                                        {
                                            "name": "ExtraLight"
                                        },
                                        {
                                            "name": "Light"
                                        },
                                        {
                                            "name": "Normal"
                                        },
                                        {
                                            "name": "Medium"
                                        },
                                        {
                                            "name": "DemiBold"
                                        },
                                        {
                                            "name": "Bold"
                                        },
                                        {
                                            "name": "ExtraBold"
                                        },
                                        {
                                            "name": "Black"
                                        }
                                    ],
                                    "name": "Weight",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "StyleNormal"
                                        },
                                        {
                                            "name": "StyleItalic"
                                        },
                                        {
                                            "name": "StyleOblique"
                                        }
                                    ],
                                    "name": "Style",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "AnyStretch"
                                        },
                                        {
                                            "name": "UltraCondensed"
                                        },
                                        {
                                            "name": "ExtraCondensed"
                                        },
                                        {
                                            "name": "Condensed"
                                        },
                                        {
                                            "name": "SemiCondensed"
                                        },
                                        {
                                            "name": "Unstretched"
                                        },
                                        {
                                            "name": "SemiExpanded"
                                        },
                                        {
                                            "name": "Expanded"
                                        },
                                        {
                                            "name": "ExtraExpanded"
                                        },
                                        {
                                            "name": "UltraExpanded"
                                        }
                                    ],
                                    "name": "Stretch",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "MixedCase"
                                        },
                                        {
                                            "name": "AllUppercase"
                                        },
                                        {
                                            "name": "AllLowercase"
                                        },
                                        {
                                            "name": "SmallCaps"
                                        },
                                        {
                                            "name": "Capitalize"
                                        }
                                    ],
                                    "name": "Capitalization",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "PercentageSpacing"
                                        },
                                        {
                                            "name": "AbsoluteSpacing"
                                        }
                                    ],
                                    "name": "SpacingType",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "FamilyResolved"
                                        },
                                        {
                                            "name": "SizeResolved"
                                        },
                                        {
                                            "name": "StyleHintResolved"
                                        },
                                        {
                                            "name": "StyleStrategyResolved"
                                        },
                                        {
                                            "name": "WeightResolved"
                                        },
                                        {
                                            "name": "StyleResolved"
                                        },
                                        {
                                            "name": "UnderlineResolved"
                                        },
                                        {
                                            "name": "OverlineResolved"
                                        },
                                        {
                                            "name": "StrikeOutResolved"
                                        },
                                        {
                                            "name": "FixedPitchResolved"
                                        },
                                        {
                                            "name": "StretchResolved"
                                        },
                                        {
                                            "name": "KerningResolved"
                                        },
                                        {
                                            "name": "CapitalizationResolved"
                                        },
                                        {
                                            "name": "LetterSpacingResolved"
                                        },
                                        {
                                            "name": "WordSpacingResolved"
                                        },
                                        {
                                            "name": "HintingPreferenceResolved"
                                        },
                                        {
                                            "name": "StyleNameResolved"
                                        },
                                        {
                                            "name": "AllPropertiesResolved"
                                        }
                                    ],
                                    "name": "ResolveProperties",
                                    "type": "enum"
                                },
                                {
                                    "name": "QFont",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFont",
                                    "parameters": [
                                        "const QString &",
                                        "int",
                                        "int",
                                        "bool"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFont",
                                    "parameters": [
                                        "const QFont &",
                                        "QPaintDevice *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFont",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFont",
                                    "type": "destructor"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QFont &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "family",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setFamily",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "styleName",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setStyleName",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pointSize",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setPointSize",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pointSizeF",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setPointSizeF",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixelSize",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setPixelSize",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "weight",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setWeight",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bold",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setBold",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setStyle",
                                    "parameters": [
                                        "QFont::Style"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "style",
                                    "returns": "QFont::Style",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "italic",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setItalic",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "underline",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setUnderline",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "overline",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setOverline",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "strikeOut",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setStrikeOut",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fixedPitch",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setFixedPitch",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "kerning",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setKerning",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "styleHint",
                                    "returns": "QFont::StyleHint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "styleStrategy",
                                    "returns": "QFont::StyleStrategy",
                                    "type": "function"
                                },
                                {
                                    "name": "setStyleHint",
                                    "parameters": [
                                        "QFont::StyleHint",
                                        "QFont::StyleStrategy"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setStyleStrategy",
                                    "parameters": [
                                        "QFont::StyleStrategy"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "stretch",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setStretch",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "letterSpacing",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "letterSpacingType",
                                    "returns": "QFont::SpacingType",
                                    "type": "function"
                                },
                                {
                                    "name": "setLetterSpacing",
                                    "parameters": [
                                        "QFont::SpacingType",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "wordSpacing",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setWordSpacing",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setCapitalization",
                                    "parameters": [
                                        "QFont::Capitalization"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capitalization",
                                    "returns": "QFont::Capitalization",
                                    "type": "function"
                                },
                                {
                                    "name": "setHintingPreference",
                                    "parameters": [
                                        "QFont::HintingPreference"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hintingPreference",
                                    "returns": "QFont::HintingPreference",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rawMode",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setRawMode",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exactMatch",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "returns": "QFont &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isCopyOf",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QFont &&"
                                    ],
                                    "returns": "QFont &",
                                    "type": "function"
                                },
                                {
                                    "name": "setRawName",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rawName",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "key",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "fromString",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "substitute",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "substitutes",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "substitutions",
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "insertSubstitution",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "insertSubstitutions",
                                    "parameters": [
                                        "const QString &",
                                        "const QStringList &"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "removeSubstitutions",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "initialize",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "cleanup",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "cacheStatistics",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "defaultFamily",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastResortFamily",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastResortFont",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "resolve",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "returns": "QFont",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "resolve",
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "name": "resolve",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QFont",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QFont &",
                                "QFont &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "qHash",
                            "parameters": [
                                "const QFont &",
                                "uint"
                            ],
                            "returns": "uint",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QFont &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QFont &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QFont &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QFont>",
                    "name": "font",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Any"
                                        },
                                        {
                                            "name": "Latin"
                                        },
                                        {
                                            "name": "Greek"
                                        },
                                        {
                                            "name": "Cyrillic"
                                        },
                                        {
                                            "name": "Armenian"
                                        },
                                        {
                                            "name": "Hebrew"
                                        },
                                        {
                                            "name": "Arabic"
                                        },
                                        {
                                            "name": "Syriac"
                                        },
                                        {
                                            "name": "Thaana"
                                        },
                                        {
                                            "name": "Devanagari"
                                        },
                                        {
                                            "name": "Bengali"
                                        },
                                        {
                                            "name": "Gurmukhi"
                                        },
                                        {
                                            "name": "Gujarati"
                                        },
                                        {
                                            "name": "Oriya"
                                        },
                                        {
                                            "name": "Tamil"
                                        },
                                        {
                                            "name": "Telugu"
                                        },
                                        {
                                            "name": "Kannada"
                                        },
                                        {
                                            "name": "Malayalam"
                                        },
                                        {
                                            "name": "Sinhala"
                                        },
                                        {
                                            "name": "Thai"
                                        },
                                        {
                                            "name": "Lao"
                                        },
                                        {
                                            "name": "Tibetan"
                                        },
                                        {
                                            "name": "Myanmar"
                                        },
                                        {
                                            "name": "Georgian"
                                        },
                                        {
                                            "name": "Khmer"
                                        },
                                        {
                                            "name": "SimplifiedChinese"
                                        },
                                        {
                                            "name": "TraditionalChinese"
                                        },
                                        {
                                            "name": "Japanese"
                                        },
                                        {
                                            "name": "Korean"
                                        },
                                        {
                                            "name": "Vietnamese"
                                        },
                                        {
                                            "name": "Symbol"
                                        },
                                        {
                                            "name": "Other"
                                        },
                                        {
                                            "name": "Ogham"
                                        },
                                        {
                                            "name": "Runic"
                                        },
                                        {
                                            "name": "Nko"
                                        },
                                        {
                                            "name": "WritingSystemsCount"
                                        }
                                    ],
                                    "name": "WritingSystem",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "GeneralFont"
                                        },
                                        {
                                            "name": "FixedFont"
                                        },
                                        {
                                            "name": "TitleFont"
                                        },
                                        {
                                            "name": "SmallestReadableFont"
                                        }
                                    ],
                                    "name": "SystemFont",
                                    "type": "enum"
                                },
                                {
                                    "name": "standardSizes",
                                    "returns": "QList<int>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "QFontDatabase",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "writingSystems",
                                    "returns": "QList<QFontDatabase::WritingSystem>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "writingSystems",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QList<QFontDatabase::WritingSystem>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "families",
                                    "parameters": [
                                        "QFontDatabase::WritingSystem"
                                    ],
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "styles",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "pointSizes",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "QList<int>",
                                    "type": "function"
                                },
                                {
                                    "name": "smoothSizes",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "QList<int>",
                                    "type": "function"
                                },
                                {
                                    "name": "styleString",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "styleString",
                                    "parameters": [
                                        "const QFontInfo &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "font",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &",
                                        "int"
                                    ],
                                    "returns": "QFont",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isBitmapScalable",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSmoothlyScalable",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isScalable",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isFixedPitch",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "italic",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bold",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "weight",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasFamily",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isPrivateFamily",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "writingSystemName",
                                    "parameters": [
                                        "QFontDatabase::WritingSystem"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "writingSystemSample",
                                    "parameters": [
                                        "QFontDatabase::WritingSystem"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "addApplicationFont",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "addApplicationFontFromData",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "applicationFontFamilies",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "removeApplicationFont",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "removeAllApplicationFonts",
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "supportsThreadedFontRendering",
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "systemFont",
                                    "parameters": [
                                        "QFontDatabase::SystemFont"
                                    ],
                                    "returns": "QFont",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QFontDatabase",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QFontDatabase>",
                    "name": "fontdatabase",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QFontInfo",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFontInfo",
                                    "parameters": [
                                        "const QFontInfo &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFontInfo",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QFontInfo &"
                                    ],
                                    "returns": "QFontInfo &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QFontInfo &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "family",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "styleName",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixelSize",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pointSize",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pointSizeF",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "italic",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "style",
                                    "returns": "QFont::Style",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "weight",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bold",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "underline",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "overline",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "strikeOut",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fixedPitch",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "styleHint",
                                    "returns": "QFont::StyleHint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rawMode",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exactMatch",
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QFontInfo",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QFontInfo &",
                                "QFontInfo &"
                            ],
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QFontInfo>",
                    "name": "fontinfo",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QFontMetrics",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFontMetrics",
                                    "parameters": [
                                        "const QFont &",
                                        "QPaintDevice *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFontMetrics",
                                    "parameters": [
                                        "const QFontMetrics &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFontMetrics",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QFontMetrics &"
                                    ],
                                    "returns": "QFontMetrics &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QFontMetrics &&"
                                    ],
                                    "returns": "QFontMetrics &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QFontMetrics &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "ascent",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capHeight",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "descent",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "leading",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lineSpacing",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minLeftBearing",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minRightBearing",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maxWidth",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "xHeight",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "averageCharWidth",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inFont",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inFontUcs4",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "leftBearing",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rightBearing",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "parameters": [
                                        "const QString &",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "parameters": [
                                        "const QString &",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "charWidth",
                                    "parameters": [
                                        "const QString &",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "parameters": [
                                        "const QRect &",
                                        "int",
                                        "const QString &",
                                        "int",
                                        "int *"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "const QString &",
                                        "int",
                                        "int *"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "parameters": [
                                        "int",
                                        "const QString &",
                                        "int",
                                        "int *"
                                    ],
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tightBoundingRect",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "elidedText",
                                    "parameters": [
                                        "const QString &",
                                        "Qt::TextElideMode",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "underlinePos",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "overlinePos",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "strikeOutPos",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lineWidth",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QFontMetrics &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QFontMetrics &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QFontMetrics",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QFontMetrics &",
                                "QFontMetrics &"
                            ],
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QFontMetricsF",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFontMetricsF",
                                    "parameters": [
                                        "const QFont &",
                                        "QPaintDevice *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFontMetricsF",
                                    "parameters": [
                                        "const QFontMetrics &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFontMetricsF",
                                    "parameters": [
                                        "const QFontMetricsF &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFontMetricsF",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QFontMetricsF &"
                                    ],
                                    "returns": "QFontMetricsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QFontMetrics &"
                                    ],
                                    "returns": "QFontMetricsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QFontMetricsF &&"
                                    ],
                                    "returns": "QFontMetricsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QFontMetricsF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "ascent",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capHeight",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "descent",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "leading",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lineSpacing",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minLeftBearing",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minRightBearing",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maxWidth",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "xHeight",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "averageCharWidth",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inFont",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inFontUcs4",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "leftBearing",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rightBearing",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "parameters": [
                                        "const QRectF &",
                                        "int",
                                        "const QString &",
                                        "int",
                                        "int *"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "parameters": [
                                        "int",
                                        "const QString &",
                                        "int",
                                        "int *"
                                    ],
                                    "returns": "QSizeF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tightBoundingRect",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "elidedText",
                                    "parameters": [
                                        "const QString &",
                                        "Qt::TextElideMode",
                                        "qreal",
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "underlinePos",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "overlinePos",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "strikeOutPos",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lineWidth",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QFontMetricsF &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QFontMetricsF &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QFontMetricsF",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QFontMetricsF &",
                                "QFontMetricsF &"
                            ],
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QFontMetrics>",
                    "name": "fontmetrics",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QCursor",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QCursor",
                                    "parameters": [
                                        "Qt::CursorShape"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QCursor",
                                    "parameters": [
                                        "const QBitmap &",
                                        "const QBitmap &",
                                        "int",
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QCursor",
                                    "parameters": [
                                        "const QPixmap &",
                                        "int",
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QCursor",
                                    "parameters": [
                                        "const QCursor &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QCursor",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QCursor &"
                                    ],
                                    "returns": "QCursor &",
                                    "type": "function"
                                },
                                {
                                    "name": "QCursor",
                                    "parameters": [
                                        "QCursor &&"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QCursor &&"
                                    ],
                                    "returns": "QCursor &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QCursor &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "shape",
                                    "returns": "Qt::CursorShape",
                                    "type": "function"
                                },
                                {
                                    "name": "setShape",
                                    "parameters": [
                                        "Qt::CursorShape"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bitmap",
                                    "returns": "const QBitmap *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mask",
                                    "returns": "const QBitmap *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixmap",
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hotSpot",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "name": "pos",
                                    "returns": "QPoint",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "pos",
                                    "parameters": [
                                        "const QScreen *"
                                    ],
                                    "returns": "QPoint",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setPos",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setPos",
                                    "parameters": [
                                        "QScreen *",
                                        "int",
                                        "int"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setPos",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setPos",
                                    "parameters": [
                                        "QScreen *",
                                        "const QPoint &"
                                    ],
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QCursor",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QCursor &",
                                "QCursor &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QCursor &",
                                "const QCursor &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QCursor &",
                                "const QCursor &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QCursor &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QCursor &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QCursor &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QCursor>",
                    "name": "cursor",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QPixmap",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPixmap",
                                    "parameters": [
                                        "QPlatformPixmap *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPixmap",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPixmap",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPixmap",
                                    "parameters": [
                                        "const QString &",
                                        "const char *",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPixmap",
                                    "parameters": [
                                        "const char *const []"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPixmap",
                                    "parameters": [
                                        "const QPixmap &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPixmap",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QPixmap &"
                                    ],
                                    "returns": "QPixmap &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QPixmap &&"
                                    ],
                                    "returns": "QPixmap &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QPixmap &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "devType",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rect",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "depth",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "defaultDepth",
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fill",
                                    "parameters": [
                                        "const QColor &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fill",
                                    "parameters": [
                                        "const QPaintDevice *",
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fill",
                                    "parameters": [
                                        "const QPaintDevice *",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mask",
                                    "returns": "QBitmap",
                                    "type": "function"
                                },
                                {
                                    "name": "setMask",
                                    "parameters": [
                                        "const QBitmap &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "devicePixelRatio",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setDevicePixelRatio",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasAlpha",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasAlphaChannel",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "createHeuristicMask",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "QBitmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "createMaskFromColor",
                                    "parameters": [
                                        "const QColor &",
                                        "Qt::MaskMode"
                                    ],
                                    "returns": "QBitmap",
                                    "type": "function"
                                },
                                {
                                    "name": "grabWindow",
                                    "parameters": [
                                        "WId",
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QPixmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "grabWidget",
                                    "parameters": [
                                        "QObject *",
                                        "const QRect &"
                                    ],
                                    "returns": "QPixmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "grabWidget",
                                    "parameters": [
                                        "QObject *",
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QPixmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaled",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "Qt::AspectRatioMode",
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaled",
                                    "parameters": [
                                        "const QSize &",
                                        "Qt::AspectRatioMode",
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaledToWidth",
                                    "parameters": [
                                        "int",
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaledToHeight",
                                    "parameters": [
                                        "int",
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transformed",
                                    "parameters": [
                                        "const QMatrix &",
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "name": "trueMatrix",
                                    "parameters": [
                                        "const QMatrix &",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QMatrix",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transformed",
                                    "parameters": [
                                        "const QTransform &",
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "name": "trueMatrix",
                                    "parameters": [
                                        "const QTransform &",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QTransform",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toImage",
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "name": "fromImage",
                                    "parameters": [
                                        "const QImage &",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "QPixmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromImageReader",
                                    "parameters": [
                                        "QImageReader *",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "QPixmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromImage",
                                    "parameters": [
                                        "QImage &&",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "QPixmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "load",
                                    "parameters": [
                                        "const QString &",
                                        "const char *",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "loadFromData",
                                    "parameters": [
                                        "const uchar *",
                                        "uint",
                                        "const char *",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "loadFromData",
                                    "parameters": [
                                        "const QByteArray &",
                                        "const char *",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "save",
                                    "parameters": [
                                        "const QString &",
                                        "const char *",
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "save",
                                    "parameters": [
                                        "QIODevice *",
                                        "const char *",
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "convertFromImage",
                                    "parameters": [
                                        "const QImage &",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "copy",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "copy",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "name": "scroll",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "QRegion *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "scroll",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "const QRect &",
                                        "QRegion *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cacheKey",
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "detach",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isQBitmap",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "paintEngine",
                                    "returns": "QPaintEngine *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "handle",
                                    "returns": "QPlatformPixmap *",
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "returns": "QPixmap::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QPixmap",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QPixmap &",
                                "QPixmap &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QPixmap &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QPixmap &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QPixmap &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QPixmap>",
                    "name": "pixmap",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QPixmap",
                            "elements": [
                                {
                                    "name": "QBitmap",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBitmap",
                                    "parameters": [
                                        "const QPixmap &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBitmap",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBitmap",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBitmap",
                                    "parameters": [
                                        "const QString &",
                                        "const char *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBitmap",
                                    "parameters": [
                                        "const QBitmap &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QBitmap &"
                                    ],
                                    "returns": "QBitmap &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QBitmap &&"
                                    ],
                                    "returns": "QBitmap &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QBitmap",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QPixmap &"
                                    ],
                                    "returns": "QBitmap &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QBitmap &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "type": "function"
                                },
                                {
                                    "name": "fromImage",
                                    "parameters": [
                                        "const QImage &",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "QBitmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromData",
                                    "parameters": [
                                        "const QSize &",
                                        "const uchar *",
                                        "QImage::Format"
                                    ],
                                    "returns": "QBitmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transformed",
                                    "parameters": [
                                        "const QMatrix &"
                                    ],
                                    "returns": "QBitmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transformed",
                                    "parameters": [
                                        "const QTransform &"
                                    ],
                                    "returns": "QBitmap",
                                    "type": "function"
                                }
                            ],
                            "name": "QBitmap",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QBitmap &",
                                "QBitmap &"
                            ],
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QBitmap>",
                    "name": "bitmap",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Normal"
                                        },
                                        {
                                            "name": "Disabled"
                                        },
                                        {
                                            "name": "Active"
                                        },
                                        {
                                            "name": "Selected"
                                        }
                                    ],
                                    "name": "Mode",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "On"
                                        },
                                        {
                                            "name": "Off"
                                        }
                                    ],
                                    "name": "State",
                                    "type": "enum"
                                },
                                {
                                    "name": "QIcon",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QIcon",
                                    "parameters": [
                                        "const QPixmap &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QIcon",
                                    "parameters": [
                                        "const QIcon &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QIcon",
                                    "parameters": [
                                        "QIcon &&"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QIcon",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QIcon",
                                    "parameters": [
                                        "QIconEngine *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QIcon",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QIcon &"
                                    ],
                                    "returns": "QIcon &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QIcon &&"
                                    ],
                                    "returns": "QIcon &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QIcon &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixmap",
                                    "parameters": [
                                        "const QSize &",
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixmap",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixmap",
                                    "parameters": [
                                        "int",
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixmap",
                                    "parameters": [
                                        "QWindow *",
                                        "const QSize &",
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "actualSize",
                                    "parameters": [
                                        "const QSize &",
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "actualSize",
                                    "parameters": [
                                        "QWindow *",
                                        "const QSize &",
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "name",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "paint",
                                    "parameters": [
                                        "QPainter *",
                                        "const QRect &",
                                        "Qt::Alignment",
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "paint",
                                    "parameters": [
                                        "QPainter *",
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "Qt::Alignment",
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "detach",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cacheKey",
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "addPixmap",
                                    "parameters": [
                                        "const QPixmap &",
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addFile",
                                    "parameters": [
                                        "const QString &",
                                        "const QSize &",
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "availableSizes",
                                    "parameters": [
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "returns": "QList<QSize>",
                                    "type": "function"
                                },
                                {
                                    "name": "setIsMask",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isMask",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "fromTheme",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QIcon",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromTheme",
                                    "parameters": [
                                        "const QString &",
                                        "const QIcon &"
                                    ],
                                    "returns": "QIcon",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "hasThemeIcon",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "themeSearchPaths",
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setThemeSearchPaths",
                                    "parameters": [
                                        "const QStringList &"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "themeName",
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setThemeName",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "returns": "QIcon::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QIcon",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QIcon &",
                                "QIcon &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QIcon &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QIcon &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QIcon &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "qt_findAtNxFile",
                            "parameters": [
                                "const QString &",
                                "qreal",
                                "qreal *"
                            ],
                            "returns": "QString",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QIcon>",
                    "name": "icon",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "cppincludes": "yasl/gui/image-functions.h",
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "InvertRgb"
                                        },
                                        {
                                            "name": "InvertRgba"
                                        }
                                    ],
                                    "name": "InvertMode",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Format_Invalid"
                                        },
                                        {
                                            "name": "Format_Mono"
                                        },
                                        {
                                            "name": "Format_MonoLSB"
                                        },
                                        {
                                            "name": "Format_Indexed8"
                                        },
                                        {
                                            "name": "Format_RGB32"
                                        },
                                        {
                                            "name": "Format_ARGB32"
                                        },
                                        {
                                            "name": "Format_ARGB32_Premultiplied"
                                        },
                                        {
                                            "name": "Format_RGB16"
                                        },
                                        {
                                            "name": "Format_ARGB8565_Premultiplied"
                                        },
                                        {
                                            "name": "Format_RGB666"
                                        },
                                        {
                                            "name": "Format_ARGB6666_Premultiplied"
                                        },
                                        {
                                            "name": "Format_RGB555"
                                        },
                                        {
                                            "name": "Format_ARGB8555_Premultiplied"
                                        },
                                        {
                                            "name": "Format_RGB888"
                                        },
                                        {
                                            "name": "Format_RGB444"
                                        },
                                        {
                                            "name": "Format_ARGB4444_Premultiplied"
                                        },
                                        {
                                            "name": "Format_RGBX8888"
                                        },
                                        {
                                            "name": "Format_RGBA8888"
                                        },
                                        {
                                            "name": "Format_RGBA8888_Premultiplied"
                                        },
                                        {
                                            "name": "Format_BGR30"
                                        },
                                        {
                                            "name": "Format_A2BGR30_Premultiplied"
                                        },
                                        {
                                            "name": "Format_RGB30"
                                        },
                                        {
                                            "name": "Format_A2RGB30_Premultiplied"
                                        },
                                        {
                                            "name": "Format_Alpha8"
                                        },
                                        {
                                            "name": "Format_Grayscale8"
                                        },
                                        {
                                            "name": "NImageFormats"
                                        }
                                    ],
                                    "name": "Format",
                                    "type": "enum"
                                },
                                {
                                    "name": "QImage",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QImage",
                                    "parameters": [
                                        "const QSize &",
                                        "QImage::Format"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QImage",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "QImage::Format"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QImage",
                                    "parameters": [
                                        "uchar *",
                                        "int",
                                        "int",
                                        "QImage::Format",
                                        "QImageCleanupFunction",
                                        "void *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QImage",
                                    "parameters": [
                                        "const uchar *",
                                        "int",
                                        "int",
                                        "QImage::Format",
                                        "QImageCleanupFunction",
                                        "void *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QImage",
                                    "parameters": [
                                        "uchar *",
                                        "int",
                                        "int",
                                        "int",
                                        "QImage::Format",
                                        "QImageCleanupFunction",
                                        "void *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QImage",
                                    "parameters": [
                                        "const uchar *",
                                        "int",
                                        "int",
                                        "int",
                                        "QImage::Format",
                                        "QImageCleanupFunction",
                                        "void *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QImage",
                                    "parameters": [
                                        "const char *const []"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QImage",
                                    "parameters": [
                                        "const QString &",
                                        "const char *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QImage",
                                    "parameters": [
                                        "const QImage &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QImage",
                                    "parameters": [
                                        "QImage &&"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QImage",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QImage &"
                                    ],
                                    "returns": "QImage &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QImage &&"
                                    ],
                                    "returns": "QImage &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QImage &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "devType",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QImage &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QImage &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "detach",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "copy",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "copy",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "format",
                                    "returns": "QImage::Format",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "convertToFormat",
                                    "parameters": [
                                        "QImage::Format",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "img_convertToFormat",
                                    "parameters": [
                                        "QImage::Format",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "rename": "convertToFormat",
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "convertToFormat",
                                    "parameters": [
                                        "QImage::Format",
                                        "const QVector<QRgb> &",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "name": "reinterpretAsFormat",
                                    "parameters": [
                                        "QImage::Format"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rect",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "depth",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "colorCount",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bitPlaneCount",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "color",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QRgb",
                                    "type": "function"
                                },
                                {
                                    "name": "setColor",
                                    "parameters": [
                                        "int",
                                        "QRgb"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setColorCount",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "allGray",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isGrayscale",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "bits",
                                    "returns": "uchar *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bits",
                                    "returns": "const uchar *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constBits",
                                    "returns": "const uchar *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "byteCount",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeInBytes",
                                    "returns": "qsizetype",
                                    "type": "function"
                                },
                                {
                                    "name": "scanLine",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "uchar *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scanLine",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "const uchar *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constScanLine",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "const uchar *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bytesPerLine",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "valid",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "valid",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixelIndex",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixelIndex",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixel",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QRgb",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixel",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "QRgb",
                                    "type": "function"
                                },
                                {
                                    "name": "setPixel",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "uint"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setPixel",
                                    "parameters": [
                                        "const QPoint &",
                                        "uint"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixelColor",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixelColor",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "name": "setPixelColor",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "const QColor &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setPixelColor",
                                    "parameters": [
                                        "const QPoint &",
                                        "const QColor &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "colorTable",
                                    "returns": "QVector<QRgb>",
                                    "type": "function"
                                },
                                {
                                    "name": "setColorTable",
                                    "parameters": [
                                        "const QVector<QRgb>"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "devicePixelRatio",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setDevicePixelRatio",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fill",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fill",
                                    "parameters": [
                                        "const QColor &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fill",
                                    "parameters": [
                                        "Qt::GlobalColor"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasAlphaChannel",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlphaChannel",
                                    "parameters": [
                                        "const QImage &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alphaChannel",
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "createAlphaMask",
                                    "parameters": [
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "createHeuristicMask",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "createMaskFromColor",
                                    "parameters": [
                                        "QRgb",
                                        "Qt::MaskMode"
                                    ],
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaled",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "Qt::AspectRatioMode",
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaled",
                                    "parameters": [
                                        "const QSize &",
                                        "Qt::AspectRatioMode",
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaledToWidth",
                                    "parameters": [
                                        "int",
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaledToHeight",
                                    "parameters": [
                                        "int",
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transformed",
                                    "parameters": [
                                        "const QMatrix &",
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "name": "trueMatrix",
                                    "parameters": [
                                        "const QMatrix &",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QMatrix",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transformed",
                                    "parameters": [
                                        "const QTransform &",
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "name": "trueMatrix",
                                    "parameters": [
                                        "const QTransform &",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QTransform",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "mirrored",
                                    "parameters": [
                                        "bool",
                                        "bool"
                                    ],
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "img_mirrored",
                                    "parameters": [
                                        "bool",
                                        "bool"
                                    ],
                                    "rename": "mirrored",
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "rgbSwapped",
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "img_rgbSwapped",
                                    "rename": "rgbSwapped",
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "name": "invertPixels",
                                    "parameters": [
                                        "QImage::InvertMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "load",
                                    "parameters": [
                                        "QIODevice *",
                                        "const char *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "load",
                                    "parameters": [
                                        "const QString &",
                                        "const char *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "loadFromData",
                                    "parameters": [
                                        "const uchar *",
                                        "int",
                                        "const char *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "loadFromData",
                                    "parameters": [
                                        "const QByteArray &",
                                        "const char *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "save",
                                    "parameters": [
                                        "const QString &",
                                        "const char *",
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "save",
                                    "parameters": [
                                        "QIODevice *",
                                        "const char *",
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "fromData",
                                    "parameters": [
                                        "const uchar *",
                                        "int",
                                        "const char *"
                                    ],
                                    "returns": "QImage",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromData",
                                    "parameters": [
                                        "const QByteArray &",
                                        "const char *"
                                    ],
                                    "returns": "QImage",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cacheKey",
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "paintEngine",
                                    "returns": "QPaintEngine *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dotsPerMeterX",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dotsPerMeterY",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setDotsPerMeterX",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setDotsPerMeterY",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "offset",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "name": "setOffset",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textKeys",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setText",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixelFormat",
                                    "returns": "QPixelFormat",
                                    "type": "function"
                                },
                                {
                                    "name": "toPixelFormat",
                                    "parameters": [
                                        "QImage::Format"
                                    ],
                                    "returns": "QPixelFormat",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "toImageFormat",
                                    "parameters": [
                                        "QPixelFormat"
                                    ],
                                    "returns": "QImage::Format",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "returns": "QImage::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QImage",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QImage &",
                                "QImage &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QImage &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QImage &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QImage &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QImage>",
                    "name": "image",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "TxNone"
                                        },
                                        {
                                            "name": "TxTranslate"
                                        },
                                        {
                                            "name": "TxScale"
                                        },
                                        {
                                            "name": "TxRotate"
                                        },
                                        {
                                            "name": "TxShear"
                                        },
                                        {
                                            "name": "TxProject"
                                        }
                                    ],
                                    "name": "TransformationType",
                                    "type": "enum"
                                },
                                {
                                    "name": "QTransform",
                                    "parameters": [
                                        "Qt::Initialization"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTransform",
                                    "type": "constructor"
                                },
                                {
                                    "checked": 0,
                                    "name": "QTransform",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTransform",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTransform",
                                    "parameters": [
                                        "const QMatrix &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QTransform &&"
                                    ],
                                    "returns": "QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QTransform &"
                                    ],
                                    "returns": "QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "QTransform",
                                    "parameters": [
                                        "QTransform &&"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTransform",
                                    "parameters": [
                                        "const QTransform &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isAffine",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isIdentity",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isInvertible",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isScaling",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRotating",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTranslating",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "type",
                                    "returns": "QTransform::TransformationType",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "determinant",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "det",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "m11",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "m12",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "m13",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "m21",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "m22",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "m23",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "m31",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "m32",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "m33",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dx",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dy",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "setMatrix",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inverted",
                                    "parameters": [
                                        "bool *"
                                    ],
                                    "returns": "QTransform",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "adjoint",
                                    "returns": "QTransform",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transposed",
                                    "returns": "QTransform",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "scale",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "shear",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "rotate",
                                    "parameters": [
                                        "qreal",
                                        "Qt::Axis"
                                    ],
                                    "returns": "QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "rotateRadians",
                                    "parameters": [
                                        "qreal",
                                        "Qt::Axis"
                                    ],
                                    "returns": "QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "squareToQuad",
                                    "parameters": [
                                        "const QPolygonF &",
                                        "QTransform &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "quadToSquare",
                                    "parameters": [
                                        "const QPolygonF &",
                                        "QTransform &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "quadToQuad",
                                    "parameters": [
                                        "const QPolygonF &",
                                        "const QPolygonF &",
                                        "QTransform &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QTransform &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QTransform &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "const QTransform &"
                                    ],
                                    "returns": "QTransform &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator*",
                                    "parameters": [
                                        "const QTransform &"
                                    ],
                                    "returns": "QTransform",
                                    "type": "function"
                                },
                                {
                                    "name": "reset",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "map",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "map",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "map",
                                    "parameters": [
                                        "const QLine &"
                                    ],
                                    "returns": "QLine",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "map",
                                    "parameters": [
                                        "const QLineF &"
                                    ],
                                    "returns": "QLineF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "map",
                                    "parameters": [
                                        "const QPolygonF &"
                                    ],
                                    "returns": "QPolygonF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "map",
                                    "parameters": [
                                        "const QPolygon &"
                                    ],
                                    "returns": "QPolygon",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "map",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "returns": "QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "map",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "returns": "QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapToPolygon",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QPolygon",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapRect",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapRect",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "map",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int *",
                                        "int *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "map",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal *",
                                        "qreal *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toAffine",
                                    "returns": "const QMatrix &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "fromTranslate",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QTransform",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromScale",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QTransform",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QTransform",
                            "type": "class"
                        },
                        {
                            "name": "qHash",
                            "parameters": [
                                "const QTransform &",
                                "uint"
                            ],
                            "returns": "uint",
                            "type": "function"
                        },
                        {
                            "name": "qFuzzyCompare",
                            "parameters": [
                                "const QTransform &",
                                "const QTransform &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QTransform &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QTransform &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QTransform &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QPoint &",
                                "const QTransform &"
                            ],
                            "returns": "QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QPointF &",
                                "const QTransform &"
                            ],
                            "returns": "QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QLineF &",
                                "const QTransform &"
                            ],
                            "returns": "QLineF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QLine &",
                                "const QTransform &"
                            ],
                            "returns": "QLine",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QPolygon &",
                                "const QTransform &"
                            ],
                            "returns": "QPolygon",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QPolygonF &",
                                "const QTransform &"
                            ],
                            "returns": "QPolygonF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QRegion &",
                                "const QTransform &"
                            ],
                            "returns": "QRegion",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QPainterPath &",
                                "const QTransform &"
                            ],
                            "returns": "QPainterPath",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QTransform &",
                                "qreal"
                            ],
                            "returns": "QTransform",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QTransform &",
                                "qreal"
                            ],
                            "returns": "QTransform",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QTransform &",
                                "qreal"
                            ],
                            "returns": "QTransform",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QTransform &",
                                "qreal"
                            ],
                            "returns": "QTransform",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QTransform>",
                    "name": "transform",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "name": "QVector2D",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector2D",
                                    "parameters": [
                                        "Qt::Initialization"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector2D",
                                    "parameters": [
                                        "const QVector2D &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QVector2D",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QVector2D &"
                                    ],
                                    "returns": "QVector2D &",
                                    "type": "function"
                                },
                                {
                                    "name": "QVector2D",
                                    "parameters": [
                                        "float",
                                        "float"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector2D",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector2D",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector2D",
                                    "parameters": [
                                        "const QVector3D &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector2D",
                                    "parameters": [
                                        "const QVector4D &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "parameters": [
                                        "float"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "parameters": [
                                        "float"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "operator[]",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "float &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "length",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lengthSquared",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "normalized",
                                    "returns": "QVector2D",
                                    "type": "function"
                                },
                                {
                                    "name": "normalize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "distanceToPoint",
                                    "parameters": [
                                        "const QVector2D &"
                                    ],
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "distanceToLine",
                                    "parameters": [
                                        "const QVector2D &",
                                        "const QVector2D &"
                                    ],
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QVector2D &"
                                    ],
                                    "returns": "QVector2D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QVector2D &"
                                    ],
                                    "returns": "QVector2D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "float"
                                    ],
                                    "returns": "QVector2D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "const QVector2D &"
                                    ],
                                    "returns": "QVector2D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "float"
                                    ],
                                    "returns": "QVector2D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "const QVector2D &"
                                    ],
                                    "returns": "QVector2D &",
                                    "type": "function"
                                },
                                {
                                    "name": "dotProduct",
                                    "parameters": [
                                        "const QVector2D &",
                                        "const QVector2D &"
                                    ],
                                    "returns": "float",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVector3D",
                                    "returns": "QVector3D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVector4D",
                                    "returns": "QVector4D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPoint",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPointF",
                                    "returns": "QPointF",
                                    "type": "function"
                                }
                            ],
                            "name": "QVector2D",
                            "type": "class"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QVector2D &",
                                "const QVector2D &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QVector2D &",
                                "const QVector2D &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QVector2D &",
                                "const QVector2D &"
                            ],
                            "returns": "const QVector2D",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QVector2D &",
                                "const QVector2D &"
                            ],
                            "returns": "const QVector2D",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "float",
                                "const QVector2D &"
                            ],
                            "returns": "const QVector2D",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QVector2D &",
                                "float"
                            ],
                            "returns": "const QVector2D",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QVector2D &",
                                "const QVector2D &"
                            ],
                            "returns": "const QVector2D",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QVector2D &"
                            ],
                            "returns": "const QVector2D",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QVector2D &",
                                "float"
                            ],
                            "returns": "const QVector2D",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QVector2D &",
                                "const QVector2D &"
                            ],
                            "returns": "const QVector2D",
                            "type": "function"
                        },
                        {
                            "name": "qFuzzyCompare",
                            "parameters": [
                                "const QVector2D &",
                                "const QVector2D &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QVector2D &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QVector2D &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QVector2D &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QVector2D>",
                    "name": "vector2d",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "name": "QVector3D",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector3D",
                                    "parameters": [
                                        "const QVector3D &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QVector3D",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QVector3D &"
                                    ],
                                    "returns": "QVector3D &",
                                    "type": "function"
                                },
                                {
                                    "name": "QVector3D",
                                    "parameters": [
                                        "Qt::Initialization"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector3D",
                                    "parameters": [
                                        "float",
                                        "float",
                                        "float"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector3D",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector3D",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector3D",
                                    "parameters": [
                                        "const QVector2D &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector3D",
                                    "parameters": [
                                        "const QVector2D &",
                                        "float"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector3D",
                                    "parameters": [
                                        "const QVector4D &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "z",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "parameters": [
                                        "float"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "parameters": [
                                        "float"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setZ",
                                    "parameters": [
                                        "float"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "operator[]",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "float &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "length",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lengthSquared",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "normalized",
                                    "returns": "QVector3D",
                                    "type": "function"
                                },
                                {
                                    "name": "normalize",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QVector3D &"
                                    ],
                                    "returns": "QVector3D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QVector3D &"
                                    ],
                                    "returns": "QVector3D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "float"
                                    ],
                                    "returns": "QVector3D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "const QVector3D &"
                                    ],
                                    "returns": "QVector3D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "float"
                                    ],
                                    "returns": "QVector3D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "const QVector3D &"
                                    ],
                                    "returns": "QVector3D &",
                                    "type": "function"
                                },
                                {
                                    "name": "dotProduct",
                                    "parameters": [
                                        "const QVector3D &",
                                        "const QVector3D &"
                                    ],
                                    "returns": "float",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "crossProduct",
                                    "parameters": [
                                        "const QVector3D &",
                                        "const QVector3D &"
                                    ],
                                    "returns": "QVector3D",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "normal",
                                    "parameters": [
                                        "const QVector3D &",
                                        "const QVector3D &"
                                    ],
                                    "returns": "QVector3D",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "normal",
                                    "parameters": [
                                        "const QVector3D &",
                                        "const QVector3D &",
                                        "const QVector3D &"
                                    ],
                                    "returns": "QVector3D",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "project",
                                    "parameters": [
                                        "const QMatrix4x4 &",
                                        "const QMatrix4x4 &",
                                        "const QRect &"
                                    ],
                                    "returns": "QVector3D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "unproject",
                                    "parameters": [
                                        "const QMatrix4x4 &",
                                        "const QMatrix4x4 &",
                                        "const QRect &"
                                    ],
                                    "returns": "QVector3D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "distanceToPoint",
                                    "parameters": [
                                        "const QVector3D &"
                                    ],
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "distanceToPlane",
                                    "parameters": [
                                        "const QVector3D &",
                                        "const QVector3D &"
                                    ],
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "distanceToPlane",
                                    "parameters": [
                                        "const QVector3D &",
                                        "const QVector3D &",
                                        "const QVector3D &"
                                    ],
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "distanceToLine",
                                    "parameters": [
                                        "const QVector3D &",
                                        "const QVector3D &"
                                    ],
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVector2D",
                                    "returns": "QVector2D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVector4D",
                                    "returns": "QVector4D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPoint",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPointF",
                                    "returns": "QPointF",
                                    "type": "function"
                                }
                            ],
                            "name": "QVector3D",
                            "type": "class"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QVector3D &",
                                "const QVector3D &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QVector3D &",
                                "const QVector3D &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QVector3D &",
                                "const QVector3D &"
                            ],
                            "returns": "const QVector3D",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QVector3D &",
                                "const QVector3D &"
                            ],
                            "returns": "const QVector3D",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "float",
                                "const QVector3D &"
                            ],
                            "returns": "const QVector3D",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QVector3D &",
                                "float"
                            ],
                            "returns": "const QVector3D",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QVector3D &",
                                "const QVector3D &"
                            ],
                            "returns": "const QVector3D",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QVector3D &"
                            ],
                            "returns": "const QVector3D",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QVector3D &",
                                "float"
                            ],
                            "returns": "const QVector3D",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QVector3D &",
                                "const QVector3D &"
                            ],
                            "returns": "const QVector3D",
                            "type": "function"
                        },
                        {
                            "name": "qFuzzyCompare",
                            "parameters": [
                                "const QVector3D &",
                                "const QVector3D &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QVector3D &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QVector3D &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QVector3D &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QVector3D>",
                    "name": "vector3d",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "name": "QVector4D",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector4D",
                                    "parameters": [
                                        "const QVector4D &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QVector4D",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QVector4D &"
                                    ],
                                    "returns": "QVector4D &",
                                    "type": "function"
                                },
                                {
                                    "name": "QVector4D",
                                    "parameters": [
                                        "Qt::Initialization"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector4D",
                                    "parameters": [
                                        "float",
                                        "float",
                                        "float",
                                        "float"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector4D",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector4D",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector4D",
                                    "parameters": [
                                        "const QVector2D &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector4D",
                                    "parameters": [
                                        "const QVector2D &",
                                        "float",
                                        "float"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector4D",
                                    "parameters": [
                                        "const QVector3D &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector4D",
                                    "parameters": [
                                        "const QVector3D &",
                                        "float"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "z",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "w",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "parameters": [
                                        "float"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "parameters": [
                                        "float"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setZ",
                                    "parameters": [
                                        "float"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setW",
                                    "parameters": [
                                        "float"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "operator[]",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "float &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "length",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lengthSquared",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "normalized",
                                    "returns": "QVector4D",
                                    "type": "function"
                                },
                                {
                                    "name": "normalize",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QVector4D &"
                                    ],
                                    "returns": "QVector4D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QVector4D &"
                                    ],
                                    "returns": "QVector4D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "float"
                                    ],
                                    "returns": "QVector4D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "const QVector4D &"
                                    ],
                                    "returns": "QVector4D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "float"
                                    ],
                                    "returns": "QVector4D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "const QVector4D &"
                                    ],
                                    "returns": "QVector4D &",
                                    "type": "function"
                                },
                                {
                                    "name": "dotProduct",
                                    "parameters": [
                                        "const QVector4D &",
                                        "const QVector4D &"
                                    ],
                                    "returns": "float",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVector2D",
                                    "returns": "QVector2D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVector2DAffine",
                                    "returns": "QVector2D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVector3D",
                                    "returns": "QVector3D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVector3DAffine",
                                    "returns": "QVector3D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPoint",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPointF",
                                    "returns": "QPointF",
                                    "type": "function"
                                }
                            ],
                            "name": "QVector4D",
                            "type": "class"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QVector4D &",
                                "const QVector4D &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QVector4D &",
                                "const QVector4D &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QVector4D &",
                                "const QVector4D &"
                            ],
                            "returns": "const QVector4D",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QVector4D &",
                                "const QVector4D &"
                            ],
                            "returns": "const QVector4D",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "float",
                                "const QVector4D &"
                            ],
                            "returns": "const QVector4D",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QVector4D &",
                                "float"
                            ],
                            "returns": "const QVector4D",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QVector4D &",
                                "const QVector4D &"
                            ],
                            "returns": "const QVector4D",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QVector4D &"
                            ],
                            "returns": "const QVector4D",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QVector4D &",
                                "float"
                            ],
                            "returns": "const QVector4D",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QVector4D &",
                                "const QVector4D &"
                            ],
                            "returns": "const QVector4D",
                            "type": "function"
                        },
                        {
                            "name": "qFuzzyCompare",
                            "parameters": [
                                "const QVector4D &",
                                "const QVector4D &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QVector4D &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QVector4D &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QVector4D &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QVector4D>",
                    "name": "vector4d",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QQuaternion",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QQuaternion",
                                    "parameters": [
                                        "const QQuaternion &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QQuaternion",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QQuaternion &"
                                    ],
                                    "returns": "QQuaternion &",
                                    "type": "function"
                                },
                                {
                                    "name": "QQuaternion",
                                    "parameters": [
                                        "Qt::Initialization"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QQuaternion",
                                    "parameters": [
                                        "float",
                                        "float",
                                        "float",
                                        "float"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QQuaternion",
                                    "parameters": [
                                        "float",
                                        "const QVector3D &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QQuaternion",
                                    "parameters": [
                                        "const QVector4D &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isIdentity",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "vector",
                                    "returns": "QVector3D",
                                    "type": "function"
                                },
                                {
                                    "name": "setVector",
                                    "parameters": [
                                        "const QVector3D &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setVector",
                                    "parameters": [
                                        "float",
                                        "float",
                                        "float"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "z",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scalar",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "parameters": [
                                        "float"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "parameters": [
                                        "float"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setZ",
                                    "parameters": [
                                        "float"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setScalar",
                                    "parameters": [
                                        "float"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "dotProduct",
                                    "parameters": [
                                        "const QQuaternion &",
                                        "const QQuaternion &"
                                    ],
                                    "returns": "float",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "length",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lengthSquared",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "normalized",
                                    "returns": "QQuaternion",
                                    "type": "function"
                                },
                                {
                                    "name": "normalize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inverted",
                                    "returns": "QQuaternion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "conjugated",
                                    "returns": "QQuaternion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "conjugate",
                                    "returns": "QQuaternion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rotatedVector",
                                    "parameters": [
                                        "const QVector3D &"
                                    ],
                                    "returns": "QVector3D",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QQuaternion &"
                                    ],
                                    "returns": "QQuaternion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QQuaternion &"
                                    ],
                                    "returns": "QQuaternion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "float"
                                    ],
                                    "returns": "QQuaternion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "const QQuaternion &"
                                    ],
                                    "returns": "QQuaternion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "float"
                                    ],
                                    "returns": "QQuaternion &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVector4D",
                                    "returns": "QVector4D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getAxisAndAngle",
                                    "parameters": [
                                        "QVector3D *",
                                        "float *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fromAxisAndAngle",
                                    "parameters": [
                                        "const QVector3D &",
                                        "float"
                                    ],
                                    "returns": "QQuaternion",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getAxisAndAngle",
                                    "parameters": [
                                        "float *",
                                        "float *",
                                        "float *",
                                        "float *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fromAxisAndAngle",
                                    "parameters": [
                                        "float",
                                        "float",
                                        "float",
                                        "float"
                                    ],
                                    "returns": "QQuaternion",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toEulerAngles",
                                    "returns": "QVector3D",
                                    "type": "function"
                                },
                                {
                                    "name": "fromEulerAngles",
                                    "parameters": [
                                        "const QVector3D &"
                                    ],
                                    "returns": "QQuaternion",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getEulerAngles",
                                    "parameters": [
                                        "float *",
                                        "float *",
                                        "float *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fromEulerAngles",
                                    "parameters": [
                                        "float",
                                        "float",
                                        "float"
                                    ],
                                    "returns": "QQuaternion",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRotationMatrix",
                                    "returns": "QMatrix3x3",
                                    "type": "function"
                                },
                                {
                                    "name": "fromRotationMatrix",
                                    "parameters": [
                                        "const QMatrix3x3 &"
                                    ],
                                    "returns": "QQuaternion",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getAxes",
                                    "parameters": [
                                        "QVector3D *",
                                        "QVector3D *",
                                        "QVector3D *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fromAxes",
                                    "parameters": [
                                        "const QVector3D &",
                                        "const QVector3D &",
                                        "const QVector3D &"
                                    ],
                                    "returns": "QQuaternion",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromDirection",
                                    "parameters": [
                                        "const QVector3D &",
                                        "const QVector3D &"
                                    ],
                                    "returns": "QQuaternion",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "rotationTo",
                                    "parameters": [
                                        "const QVector3D &",
                                        "const QVector3D &"
                                    ],
                                    "returns": "QQuaternion",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "slerp",
                                    "parameters": [
                                        "const QQuaternion &",
                                        "const QQuaternion &",
                                        "float"
                                    ],
                                    "returns": "QQuaternion",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "nlerp",
                                    "parameters": [
                                        "const QQuaternion &",
                                        "const QQuaternion &",
                                        "float"
                                    ],
                                    "returns": "QQuaternion",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QQuaternion",
                            "type": "class"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QQuaternion &",
                                "const QQuaternion &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QQuaternion &",
                                "const QQuaternion &"
                            ],
                            "returns": "const QQuaternion",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QQuaternion &",
                                "const QQuaternion &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QQuaternion &",
                                "const QQuaternion &"
                            ],
                            "returns": "const QQuaternion",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QQuaternion &",
                                "const QQuaternion &"
                            ],
                            "returns": "const QQuaternion",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "float",
                                "const QQuaternion &"
                            ],
                            "returns": "const QQuaternion",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QQuaternion &",
                                "float"
                            ],
                            "returns": "const QQuaternion",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QQuaternion &"
                            ],
                            "returns": "const QQuaternion",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QQuaternion &",
                                "float"
                            ],
                            "returns": "const QQuaternion",
                            "type": "function"
                        },
                        {
                            "name": "qFuzzyCompare",
                            "parameters": [
                                "const QQuaternion &",
                                "const QQuaternion &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QQuaternion &",
                                "const QVector3D &"
                            ],
                            "returns": "QVector3D",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QQuaternion &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QQuaternion &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QQuaternion &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QQuaternion>",
                    "name": "quaternion",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Rectangle"
                                        },
                                        {
                                            "name": "Ellipse"
                                        }
                                    ],
                                    "name": "RegionType",
                                    "type": "enum"
                                },
                                {
                                    "name": "QRegion",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRegion",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "QRegion::RegionType"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRegion",
                                    "parameters": [
                                        "const QRect &",
                                        "QRegion::RegionType"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRegion",
                                    "parameters": [
                                        "const QPolygon &",
                                        "Qt::FillRule"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRegion",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRegion",
                                    "parameters": [
                                        "QRegion &&"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRegion",
                                    "parameters": [
                                        "const QBitmap &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QRegion",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "returns": "QRegion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QRegion &&"
                                    ],
                                    "returns": "QRegion &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QRegion &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "begin",
                                    "returns": "QRegion::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cbegin",
                                    "returns": "QRegion::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "end",
                                    "returns": "QRegion::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cend",
                                    "returns": "QRegion::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rbegin",
                                    "returns": "QRegion::const_reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "crbegin",
                                    "returns": "QRegion::const_reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rend",
                                    "returns": "QRegion::const_reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "crend",
                                    "returns": "QRegion::const_reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "united",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "returns": "QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "united",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersected",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "returns": "QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersected",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "subtracted",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "returns": "QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "xored",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "returns": "QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersects",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersects",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rects",
                                    "returns": "QVector<QRect>",
                                    "type": "function"
                                },
                                {
                                    "name": "setRects",
                                    "parameters": [
                                        "const QRect *",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rectCount",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator|",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "returns": "const QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator+",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "returns": "const QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator+",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "const QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator&",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "returns": "const QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator&",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "const QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator-",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "returns": "const QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator^",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "returns": "const QRegion",
                                    "type": "function"
                                },
                                {
                                    "name": "operator|=",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "returns": "QRegion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "returns": "QRegion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QRegion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator&=",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "returns": "QRegion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator&=",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QRegion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "returns": "QRegion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator^=",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "returns": "QRegion &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QRegion",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QRegion &",
                                "QRegion &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QRegion &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QRegion &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QRegion &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QRegion>",
                    "name": "region",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QObject",
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Clipboard"
                                        },
                                        {
                                            "name": "Selection"
                                        },
                                        {
                                            "name": "FindBuffer"
                                        },
                                        {
                                            "name": "LastMode"
                                        }
                                    ],
                                    "name": "Mode",
                                    "type": "enum"
                                },
                                {
                                    "name": "clear",
                                    "parameters": [
                                        "QClipboard::Mode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "supportsSelection",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "supportsFindBuffer",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "ownsSelection",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "ownsClipboard",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "ownsFindBuffer",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "parameters": [
                                        "QClipboard::Mode"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "parameters": [
                                        "QString &",
                                        "QClipboard::Mode"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setText",
                                    "parameters": [
                                        "const QString &",
                                        "QClipboard::Mode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mimeData",
                                    "parameters": [
                                        "QClipboard::Mode"
                                    ],
                                    "returns": "const QMimeData *",
                                    "type": "function"
                                },
                                {
                                    "name": "setMimeData",
                                    "parameters": [
                                        "QMimeData *",
                                        "QClipboard::Mode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "image",
                                    "parameters": [
                                        "QClipboard::Mode"
                                    ],
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixmap",
                                    "parameters": [
                                        "QClipboard::Mode"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "name": "setImage",
                                    "parameters": [
                                        "const QImage &",
                                        "QClipboard::Mode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setPixmap",
                                    "parameters": [
                                        "const QPixmap &",
                                        "QClipboard::Mode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "changed",
                                    "parameters": [
                                        "QClipboard::Mode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "selectionChanged",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "findBufferChanged",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "dataChanged",
                                    "type": "function"
                                }
                            ],
                            "name": "QClipboard",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QClipboard>",
                    "name": "clipboard",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QKeySequence &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QKeySequence &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "qHash",
                            "parameters": [
                                "const QKeySequence &",
                                "uint"
                            ],
                            "returns": "uint",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "UnknownKey"
                                        },
                                        {
                                            "name": "HelpContents"
                                        },
                                        {
                                            "name": "WhatsThis"
                                        },
                                        {
                                            "name": "Open"
                                        },
                                        {
                                            "name": "Close"
                                        },
                                        {
                                            "name": "Save"
                                        },
                                        {
                                            "name": "New"
                                        },
                                        {
                                            "name": "Delete"
                                        },
                                        {
                                            "name": "Cut"
                                        },
                                        {
                                            "name": "Copy"
                                        },
                                        {
                                            "name": "Paste"
                                        },
                                        {
                                            "name": "Undo"
                                        },
                                        {
                                            "name": "Redo"
                                        },
                                        {
                                            "name": "Back"
                                        },
                                        {
                                            "name": "Forward"
                                        },
                                        {
                                            "name": "Refresh"
                                        },
                                        {
                                            "name": "ZoomIn"
                                        },
                                        {
                                            "name": "ZoomOut"
                                        },
                                        {
                                            "name": "Print"
                                        },
                                        {
                                            "name": "AddTab"
                                        },
                                        {
                                            "name": "NextChild"
                                        },
                                        {
                                            "name": "PreviousChild"
                                        },
                                        {
                                            "name": "Find"
                                        },
                                        {
                                            "name": "FindNext"
                                        },
                                        {
                                            "name": "FindPrevious"
                                        },
                                        {
                                            "name": "Replace"
                                        },
                                        {
                                            "name": "SelectAll"
                                        },
                                        {
                                            "name": "Bold"
                                        },
                                        {
                                            "name": "Italic"
                                        },
                                        {
                                            "name": "Underline"
                                        },
                                        {
                                            "name": "MoveToNextChar"
                                        },
                                        {
                                            "name": "MoveToPreviousChar"
                                        },
                                        {
                                            "name": "MoveToNextWord"
                                        },
                                        {
                                            "name": "MoveToPreviousWord"
                                        },
                                        {
                                            "name": "MoveToNextLine"
                                        },
                                        {
                                            "name": "MoveToPreviousLine"
                                        },
                                        {
                                            "name": "MoveToNextPage"
                                        },
                                        {
                                            "name": "MoveToPreviousPage"
                                        },
                                        {
                                            "name": "MoveToStartOfLine"
                                        },
                                        {
                                            "name": "MoveToEndOfLine"
                                        },
                                        {
                                            "name": "MoveToStartOfBlock"
                                        },
                                        {
                                            "name": "MoveToEndOfBlock"
                                        },
                                        {
                                            "name": "MoveToStartOfDocument"
                                        },
                                        {
                                            "name": "MoveToEndOfDocument"
                                        },
                                        {
                                            "name": "SelectNextChar"
                                        },
                                        {
                                            "name": "SelectPreviousChar"
                                        },
                                        {
                                            "name": "SelectNextWord"
                                        },
                                        {
                                            "name": "SelectPreviousWord"
                                        },
                                        {
                                            "name": "SelectNextLine"
                                        },
                                        {
                                            "name": "SelectPreviousLine"
                                        },
                                        {
                                            "name": "SelectNextPage"
                                        },
                                        {
                                            "name": "SelectPreviousPage"
                                        },
                                        {
                                            "name": "SelectStartOfLine"
                                        },
                                        {
                                            "name": "SelectEndOfLine"
                                        },
                                        {
                                            "name": "SelectStartOfBlock"
                                        },
                                        {
                                            "name": "SelectEndOfBlock"
                                        },
                                        {
                                            "name": "SelectStartOfDocument"
                                        },
                                        {
                                            "name": "SelectEndOfDocument"
                                        },
                                        {
                                            "name": "DeleteStartOfWord"
                                        },
                                        {
                                            "name": "DeleteEndOfWord"
                                        },
                                        {
                                            "name": "DeleteEndOfLine"
                                        },
                                        {
                                            "name": "InsertParagraphSeparator"
                                        },
                                        {
                                            "name": "InsertLineSeparator"
                                        },
                                        {
                                            "name": "SaveAs"
                                        },
                                        {
                                            "name": "Preferences"
                                        },
                                        {
                                            "name": "Quit"
                                        },
                                        {
                                            "name": "FullScreen"
                                        },
                                        {
                                            "name": "Deselect"
                                        },
                                        {
                                            "name": "DeleteCompleteLine"
                                        },
                                        {
                                            "name": "Backspace"
                                        },
                                        {
                                            "name": "Cancel"
                                        }
                                    ],
                                    "name": "StandardKey",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "NativeText"
                                        },
                                        {
                                            "name": "PortableText"
                                        }
                                    ],
                                    "name": "SequenceFormat",
                                    "type": "enum"
                                },
                                {
                                    "name": "QKeySequence",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QKeySequence",
                                    "parameters": [
                                        "const QString &",
                                        "QKeySequence::SequenceFormat"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QKeySequence",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QKeySequence",
                                    "parameters": [
                                        "const QKeySequence &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QKeySequence",
                                    "parameters": [
                                        "QKeySequence::StandardKey"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QKeySequence",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoMatch"
                                        },
                                        {
                                            "name": "PartialMatch"
                                        },
                                        {
                                            "name": "ExactMatch"
                                        }
                                    ],
                                    "name": "SequenceMatch",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "QKeySequence::SequenceFormat"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "fromString",
                                    "parameters": [
                                        "const QString &",
                                        "QKeySequence::SequenceFormat"
                                    ],
                                    "returns": "QKeySequence",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "listFromString",
                                    "parameters": [
                                        "const QString &",
                                        "QKeySequence::SequenceFormat"
                                    ],
                                    "returns": "QList<QKeySequence>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "listToString",
                                    "parameters": [
                                        "const QList<QKeySequence> &",
                                        "QKeySequence::SequenceFormat"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matches",
                                    "parameters": [
                                        "const QKeySequence &"
                                    ],
                                    "returns": "QKeySequence::SequenceMatch",
                                    "type": "function"
                                },
                                {
                                    "name": "mnemonic",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QKeySequence",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "keyBindings",
                                    "parameters": [
                                        "QKeySequence::StandardKey"
                                    ],
                                    "returns": "QList<QKeySequence>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QKeySequence &"
                                    ],
                                    "returns": "QKeySequence &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QKeySequence &&"
                                    ],
                                    "returns": "QKeySequence &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QKeySequence &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QKeySequence &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QKeySequence &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "parameters": [
                                        "const QKeySequence &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "parameters": [
                                        "const QKeySequence &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<=",
                                    "parameters": [
                                        "const QKeySequence &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>=",
                                    "parameters": [
                                        "const QKeySequence &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "returns": "QKeySequence::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QKeySequence",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QKeySequence &",
                                "QKeySequence &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QKeySequence &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QKeySequence>",
                    "name": "keysequence",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QBrush",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBrush",
                                    "parameters": [
                                        "Qt::BrushStyle"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBrush",
                                    "parameters": [
                                        "const QColor &",
                                        "Qt::BrushStyle"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBrush",
                                    "parameters": [
                                        "Qt::GlobalColor",
                                        "Qt::BrushStyle"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBrush",
                                    "parameters": [
                                        "const QColor &",
                                        "const QPixmap &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBrush",
                                    "parameters": [
                                        "Qt::GlobalColor",
                                        "const QPixmap &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBrush",
                                    "parameters": [
                                        "const QPixmap &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBrush",
                                    "parameters": [
                                        "const QImage &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBrush",
                                    "parameters": [
                                        "const QBrush &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBrush",
                                    "parameters": [
                                        "const QGradient &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QBrush",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QBrush &"
                                    ],
                                    "returns": "QBrush &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QBrush &&"
                                    ],
                                    "returns": "QBrush &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QBrush &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "style",
                                    "returns": "Qt::BrushStyle",
                                    "type": "function"
                                },
                                {
                                    "name": "setStyle",
                                    "parameters": [
                                        "Qt::BrushStyle"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matrix",
                                    "returns": "const QMatrix &",
                                    "type": "function"
                                },
                                {
                                    "name": "setMatrix",
                                    "parameters": [
                                        "const QMatrix &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transform",
                                    "returns": "QTransform",
                                    "type": "function"
                                },
                                {
                                    "name": "setTransform",
                                    "parameters": [
                                        "const QTransform &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "texture",
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "name": "setTexture",
                                    "parameters": [
                                        "const QPixmap &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textureImage",
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextureImage",
                                    "parameters": [
                                        "const QImage &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "color",
                                    "returns": "const QColor &",
                                    "type": "function"
                                },
                                {
                                    "name": "setColor",
                                    "parameters": [
                                        "const QColor &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setColor",
                                    "parameters": [
                                        "Qt::GlobalColor"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "gradient",
                                    "returns": "const QGradient *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isOpaque",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QBrush &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QBrush &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "returns": "QBrush::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QBrush",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QBrush &",
                                "QBrush &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QBrush &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QBrush &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QBrush &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "LinearGradient"
                                        },
                                        {
                                            "name": "RadialGradient"
                                        },
                                        {
                                            "name": "ConicalGradient"
                                        },
                                        {
                                            "name": "NoGradient"
                                        }
                                    ],
                                    "name": "Type",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "PadSpread"
                                        },
                                        {
                                            "name": "ReflectSpread"
                                        },
                                        {
                                            "name": "RepeatSpread"
                                        }
                                    ],
                                    "name": "Spread",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "LogicalMode"
                                        },
                                        {
                                            "name": "StretchToDeviceMode"
                                        },
                                        {
                                            "name": "ObjectBoundingMode"
                                        }
                                    ],
                                    "name": "CoordinateMode",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "ColorInterpolation"
                                        },
                                        {
                                            "name": "ComponentInterpolation"
                                        }
                                    ],
                                    "name": "InterpolationMode",
                                    "type": "enum"
                                },
                                {
                                    "name": "QGradient",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "type",
                                    "returns": "QGradient::Type",
                                    "type": "function"
                                },
                                {
                                    "name": "setSpread",
                                    "parameters": [
                                        "QGradient::Spread"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "spread",
                                    "returns": "QGradient::Spread",
                                    "type": "function"
                                },
                                {
                                    "name": "setColorAt",
                                    "parameters": [
                                        "qreal",
                                        "const QColor &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setStops",
                                    "parameters": [
                                        "const QGradientStops &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "stops",
                                    "returns": "QGradientStops",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "coordinateMode",
                                    "returns": "QGradient::CoordinateMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setCoordinateMode",
                                    "parameters": [
                                        "QGradient::CoordinateMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "interpolationMode",
                                    "returns": "QGradient::InterpolationMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setInterpolationMode",
                                    "parameters": [
                                        "QGradient::InterpolationMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QGradient &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QGradient &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QGradient",
                            "type": "class"
                        },
                        {
                            "base": "QGradient",
                            "elements": [
                                {
                                    "name": "QLinearGradient",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLinearGradient",
                                    "parameters": [
                                        "const QLinearGradient &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QLinearGradient",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QLinearGradient &"
                                    ],
                                    "returns": "QLinearGradient &",
                                    "type": "function"
                                },
                                {
                                    "name": "QLinearGradient",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QPointF &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLinearGradient",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "start",
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "name": "setStart",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setStart",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "finalStop",
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "name": "setFinalStop",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setFinalStop",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QLinearGradient",
                            "type": "class"
                        },
                        {
                            "base": "QGradient",
                            "elements": [
                                {
                                    "name": "QRadialGradient",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRadialGradient",
                                    "parameters": [
                                        "const QRadialGradient &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QRadialGradient &"
                                    ],
                                    "returns": "QRadialGradient &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QRadialGradient",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QRadialGradient",
                                    "parameters": [
                                        "const QPointF &",
                                        "qreal",
                                        "const QPointF &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRadialGradient",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRadialGradient",
                                    "parameters": [
                                        "const QPointF &",
                                        "qreal"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRadialGradient",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRadialGradient",
                                    "parameters": [
                                        "const QPointF &",
                                        "qreal",
                                        "const QPointF &",
                                        "qreal"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRadialGradient",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "center",
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "name": "setCenter",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setCenter",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "focalPoint",
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "name": "setFocalPoint",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setFocalPoint",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "radius",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setRadius",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "centerRadius",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setCenterRadius",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "focalRadius",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setFocalRadius",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QRadialGradient",
                            "type": "class"
                        },
                        {
                            "base": "QGradient",
                            "elements": [
                                {
                                    "name": "QConicalGradient",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QConicalGradient",
                                    "parameters": [
                                        "const QConicalGradient &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QConicalGradient &"
                                    ],
                                    "returns": "QConicalGradient &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QConicalGradient",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QConicalGradient",
                                    "parameters": [
                                        "const QPointF &",
                                        "qreal"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QConicalGradient",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "center",
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "name": "setCenter",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setCenter",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "angle",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setAngle",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QConicalGradient",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QBrush>",
                    "name": "brush",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Overline"
                                        },
                                        {
                                            "name": "Underline"
                                        },
                                        {
                                            "name": "StrikeOut"
                                        },
                                        {
                                            "name": "RightToLeft"
                                        },
                                        {
                                            "name": "SplitLigature"
                                        }
                                    ],
                                    "name": "GlyphRunFlag",
                                    "type": "enum"
                                },
                                {
                                    "name": "QGlyphRun",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QGlyphRun",
                                    "parameters": [
                                        "const QGlyphRun &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QGlyphRun &&"
                                    ],
                                    "returns": "QGlyphRun &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QGlyphRun &"
                                    ],
                                    "returns": "QGlyphRun &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QGlyphRun",
                                    "type": "destructor"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QGlyphRun &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rawFont",
                                    "returns": "QRawFont",
                                    "type": "function"
                                },
                                {
                                    "name": "setRawFont",
                                    "parameters": [
                                        "const QRawFont &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setRawData",
                                    "parameters": [
                                        "const quint32 *",
                                        "const QPointF *",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "glyphIndexes",
                                    "returns": "QVector<quint32>",
                                    "type": "function"
                                },
                                {
                                    "name": "setGlyphIndexes",
                                    "parameters": [
                                        "const QVector<quint32> &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "positions",
                                    "returns": "QVector<QPointF>",
                                    "type": "function"
                                },
                                {
                                    "name": "setPositions",
                                    "parameters": [
                                        "const QVector<QPointF> &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QGlyphRun &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QGlyphRun &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setOverline",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "overline",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setUnderline",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "underline",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setStrikeOut",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "strikeOut",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setRightToLeft",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRightToLeft",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setFlag",
                                    "parameters": [
                                        "QGlyphRun::GlyphRunFlag",
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setFlags",
                                    "parameters": [
                                        "QGlyphRun::GlyphRunFlags"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "flags",
                                    "returns": "QGlyphRun::GlyphRunFlags",
                                    "type": "function"
                                },
                                {
                                    "name": "setBoundingRect",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QGlyphRun",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QGlyphRun &",
                                "QGlyphRun &"
                            ],
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QGlyphRun>",
                    "name": "glyphrun",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Antialiasing"
                                        },
                                        {
                                            "name": "TextAntialiasing"
                                        },
                                        {
                                            "name": "SmoothPixmapTransform"
                                        },
                                        {
                                            "name": "HighQualityAntialiasing"
                                        },
                                        {
                                            "name": "NonCosmeticDefaultPen"
                                        },
                                        {
                                            "name": "Qt4CompatiblePainting"
                                        }
                                    ],
                                    "name": "RenderHint",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "OpaqueHint"
                                        }
                                    ],
                                    "name": "PixmapFragmentHint",
                                    "type": "enum"
                                },
                                {
                                    "name": "QPainter",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPainter",
                                    "parameters": [
                                        "QPaintDevice *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPainter",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "device",
                                    "returns": "QPaintDevice *",
                                    "type": "function"
                                },
                                {
                                    "name": "begin",
                                    "parameters": [
                                        "QPaintDevice *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "end",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isActive",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "initFrom",
                                    "parameters": [
                                        "const QPaintDevice *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "CompositionMode_SourceOver"
                                        },
                                        {
                                            "name": "CompositionMode_DestinationOver"
                                        },
                                        {
                                            "name": "CompositionMode_Clear"
                                        },
                                        {
                                            "name": "CompositionMode_Source"
                                        },
                                        {
                                            "name": "CompositionMode_Destination"
                                        },
                                        {
                                            "name": "CompositionMode_SourceIn"
                                        },
                                        {
                                            "name": "CompositionMode_DestinationIn"
                                        },
                                        {
                                            "name": "CompositionMode_SourceOut"
                                        },
                                        {
                                            "name": "CompositionMode_DestinationOut"
                                        },
                                        {
                                            "name": "CompositionMode_SourceAtop"
                                        },
                                        {
                                            "name": "CompositionMode_DestinationAtop"
                                        },
                                        {
                                            "name": "CompositionMode_Xor"
                                        },
                                        {
                                            "name": "CompositionMode_Plus"
                                        },
                                        {
                                            "name": "CompositionMode_Multiply"
                                        },
                                        {
                                            "name": "CompositionMode_Screen"
                                        },
                                        {
                                            "name": "CompositionMode_Overlay"
                                        },
                                        {
                                            "name": "CompositionMode_Darken"
                                        },
                                        {
                                            "name": "CompositionMode_Lighten"
                                        },
                                        {
                                            "name": "CompositionMode_ColorDodge"
                                        },
                                        {
                                            "name": "CompositionMode_ColorBurn"
                                        },
                                        {
                                            "name": "CompositionMode_HardLight"
                                        },
                                        {
                                            "name": "CompositionMode_SoftLight"
                                        },
                                        {
                                            "name": "CompositionMode_Difference"
                                        },
                                        {
                                            "name": "CompositionMode_Exclusion"
                                        },
                                        {
                                            "name": "RasterOp_SourceOrDestination"
                                        },
                                        {
                                            "name": "RasterOp_SourceAndDestination"
                                        },
                                        {
                                            "name": "RasterOp_SourceXorDestination"
                                        },
                                        {
                                            "name": "RasterOp_NotSourceAndNotDestination"
                                        },
                                        {
                                            "name": "RasterOp_NotSourceOrNotDestination"
                                        },
                                        {
                                            "name": "RasterOp_NotSourceXorDestination"
                                        },
                                        {
                                            "name": "RasterOp_NotSource"
                                        },
                                        {
                                            "name": "RasterOp_NotSourceAndDestination"
                                        },
                                        {
                                            "name": "RasterOp_SourceAndNotDestination"
                                        },
                                        {
                                            "name": "RasterOp_NotSourceOrDestination"
                                        },
                                        {
                                            "name": "RasterOp_SourceOrNotDestination"
                                        },
                                        {
                                            "name": "RasterOp_ClearDestination"
                                        },
                                        {
                                            "name": "RasterOp_SetDestination"
                                        },
                                        {
                                            "name": "RasterOp_NotDestination"
                                        }
                                    ],
                                    "name": "CompositionMode",
                                    "type": "enum"
                                },
                                {
                                    "name": "setCompositionMode",
                                    "parameters": [
                                        "QPainter::CompositionMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "compositionMode",
                                    "returns": "QPainter::CompositionMode",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "font",
                                    "returns": "const QFont &",
                                    "type": "function"
                                },
                                {
                                    "name": "setFont",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fontMetrics",
                                    "returns": "QFontMetrics",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fontInfo",
                                    "returns": "QFontInfo",
                                    "type": "function"
                                },
                                {
                                    "name": "setPen",
                                    "parameters": [
                                        "const QColor &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setPen",
                                    "parameters": [
                                        "const QPen &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setPen",
                                    "parameters": [
                                        "Qt::PenStyle"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pen",
                                    "returns": "const QPen &",
                                    "type": "function"
                                },
                                {
                                    "name": "setBrush",
                                    "parameters": [
                                        "const QBrush &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setBrush",
                                    "parameters": [
                                        "Qt::BrushStyle"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "brush",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "name": "setBackgroundMode",
                                    "parameters": [
                                        "Qt::BGMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "backgroundMode",
                                    "returns": "Qt::BGMode",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "brushOrigin",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "name": "setBrushOrigin",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setBrushOrigin",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setBrushOrigin",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setBackground",
                                    "parameters": [
                                        "const QBrush &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "background",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "opacity",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setOpacity",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "clipRegion",
                                    "returns": "QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "clipPath",
                                    "returns": "QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "name": "setClipRect",
                                    "parameters": [
                                        "const QRectF &",
                                        "Qt::ClipOperation"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setClipRect",
                                    "parameters": [
                                        "const QRect &",
                                        "Qt::ClipOperation"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setClipRect",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "Qt::ClipOperation"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setClipRegion",
                                    "parameters": [
                                        "const QRegion &",
                                        "Qt::ClipOperation"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setClipPath",
                                    "parameters": [
                                        "const QPainterPath &",
                                        "Qt::ClipOperation"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setClipping",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasClipping",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "clipBoundingRect",
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "name": "save",
                                    "type": "function"
                                },
                                {
                                    "name": "restore",
                                    "type": "function"
                                },
                                {
                                    "name": "setMatrix",
                                    "parameters": [
                                        "const QMatrix &",
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matrix",
                                    "returns": "const QMatrix &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "deviceMatrix",
                                    "returns": "const QMatrix &",
                                    "type": "function"
                                },
                                {
                                    "name": "resetMatrix",
                                    "type": "function"
                                },
                                {
                                    "name": "setTransform",
                                    "parameters": [
                                        "const QTransform &",
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transform",
                                    "returns": "const QTransform &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "deviceTransform",
                                    "returns": "const QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "resetTransform",
                                    "type": "function"
                                },
                                {
                                    "name": "setWorldMatrix",
                                    "parameters": [
                                        "const QMatrix &",
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "worldMatrix",
                                    "returns": "const QMatrix &",
                                    "type": "function"
                                },
                                {
                                    "name": "setWorldTransform",
                                    "parameters": [
                                        "const QTransform &",
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "worldTransform",
                                    "returns": "const QTransform &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "combinedMatrix",
                                    "returns": "QMatrix",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "combinedTransform",
                                    "returns": "QTransform",
                                    "type": "function"
                                },
                                {
                                    "name": "setMatrixEnabled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matrixEnabled",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setWorldMatrixEnabled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "worldMatrixEnabled",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "scale",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "shear",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "rotate",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "window",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindow",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setWindow",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "viewport",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "setViewport",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setViewport",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setViewTransformEnabled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "viewTransformEnabled",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "strokePath",
                                    "parameters": [
                                        "const QPainterPath &",
                                        "const QPen &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fillPath",
                                    "parameters": [
                                        "const QPainterPath &",
                                        "const QBrush &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPath",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPoint",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPoint",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPoint",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPoints",
                                    "parameters": [
                                        "const QPointF *",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPoints",
                                    "parameters": [
                                        "const QPolygonF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPoints",
                                    "parameters": [
                                        "const QPoint *",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPoints",
                                    "parameters": [
                                        "const QPolygon &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawLine",
                                    "parameters": [
                                        "const QLineF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawLine",
                                    "parameters": [
                                        "const QLine &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawLine",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawLine",
                                    "parameters": [
                                        "const QPoint &",
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawLine",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawLines",
                                    "parameters": [
                                        "const QLineF *",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawLines",
                                    "parameters": [
                                        "const QVector<QLineF> &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawLines",
                                    "parameters": [
                                        "const QPointF *",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawLines",
                                    "parameters": [
                                        "const QVector<QPointF> &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawLines",
                                    "parameters": [
                                        "const QLine *",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawLines",
                                    "parameters": [
                                        "const QVector<QLine> &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawLines",
                                    "parameters": [
                                        "const QPoint *",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawLines",
                                    "parameters": [
                                        "const QVector<QPoint> &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawRect",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawRect",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawRect",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawRects",
                                    "parameters": [
                                        "const QRectF *",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawRects",
                                    "parameters": [
                                        "const QVector<QRectF> &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawRects",
                                    "parameters": [
                                        "const QRect *",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawRects",
                                    "parameters": [
                                        "const QVector<QRect> &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawEllipse",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawEllipse",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawEllipse",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawEllipse",
                                    "parameters": [
                                        "const QPointF &",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawEllipse",
                                    "parameters": [
                                        "const QPoint &",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPolyline",
                                    "parameters": [
                                        "const QPointF *",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPolyline",
                                    "parameters": [
                                        "const QPolygonF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPolyline",
                                    "parameters": [
                                        "const QPoint *",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPolyline",
                                    "parameters": [
                                        "const QPolygon &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPolygon",
                                    "parameters": [
                                        "const QPointF *",
                                        "int",
                                        "Qt::FillRule"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPolygon",
                                    "parameters": [
                                        "const QPolygonF &",
                                        "Qt::FillRule"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPolygon",
                                    "parameters": [
                                        "const QPoint *",
                                        "int",
                                        "Qt::FillRule"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPolygon",
                                    "parameters": [
                                        "const QPolygon &",
                                        "Qt::FillRule"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawConvexPolygon",
                                    "parameters": [
                                        "const QPointF *",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawConvexPolygon",
                                    "parameters": [
                                        "const QPolygonF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawConvexPolygon",
                                    "parameters": [
                                        "const QPoint *",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawConvexPolygon",
                                    "parameters": [
                                        "const QPolygon &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawArc",
                                    "parameters": [
                                        "const QRectF &",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawArc",
                                    "parameters": [
                                        "const QRect &",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawArc",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPie",
                                    "parameters": [
                                        "const QRectF &",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPie",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPie",
                                    "parameters": [
                                        "const QRect &",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawChord",
                                    "parameters": [
                                        "const QRectF &",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawChord",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawChord",
                                    "parameters": [
                                        "const QRect &",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawRoundedRect",
                                    "parameters": [
                                        "const QRectF &",
                                        "qreal",
                                        "qreal",
                                        "Qt::SizeMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "drawRoundedRect",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "qreal",
                                        "qreal",
                                        "Qt::SizeMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawRoundedRect",
                                    "parameters": [
                                        "const QRect &",
                                        "qreal",
                                        "qreal",
                                        "Qt::SizeMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawRoundRect",
                                    "parameters": [
                                        "const QRectF &",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawRoundRect",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawRoundRect",
                                    "parameters": [
                                        "const QRect &",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawTiledPixmap",
                                    "parameters": [
                                        "const QRectF &",
                                        "const QPixmap &",
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "drawTiledPixmap",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "const QPixmap &",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawTiledPixmap",
                                    "parameters": [
                                        "const QRect &",
                                        "const QPixmap &",
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPicture",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QPicture &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPicture",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "const QPicture &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPicture",
                                    "parameters": [
                                        "const QPoint &",
                                        "const QPicture &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPixmap",
                                    "parameters": [
                                        "const QRectF &",
                                        "const QPixmap &",
                                        "const QRectF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPixmap",
                                    "parameters": [
                                        "const QRect &",
                                        "const QPixmap &",
                                        "const QRect &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "drawPixmap",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "const QPixmap &",
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "drawPixmap",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "const QPixmap &",
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPixmap",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QPixmap &",
                                        "const QRectF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPixmap",
                                    "parameters": [
                                        "const QPoint &",
                                        "const QPixmap &",
                                        "const QRect &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPixmap",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QPixmap &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPixmap",
                                    "parameters": [
                                        "const QPoint &",
                                        "const QPixmap &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPixmap",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "const QPixmap &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPixmap",
                                    "parameters": [
                                        "const QRect &",
                                        "const QPixmap &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPixmap",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "const QPixmap &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawPixmapFragments",
                                    "parameters": [
                                        "const QPainter::PixmapFragment *",
                                        "int",
                                        "const QPixmap &",
                                        "QPainter::PixmapFragmentHints"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawImage",
                                    "parameters": [
                                        "const QRectF &",
                                        "const QImage &",
                                        "const QRectF &",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawImage",
                                    "parameters": [
                                        "const QRect &",
                                        "const QImage &",
                                        "const QRect &",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawImage",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QImage &",
                                        "const QRectF &",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawImage",
                                    "parameters": [
                                        "const QPoint &",
                                        "const QImage &",
                                        "const QRect &",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawImage",
                                    "parameters": [
                                        "const QRectF &",
                                        "const QImage &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawImage",
                                    "parameters": [
                                        "const QRect &",
                                        "const QImage &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawImage",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QImage &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawImage",
                                    "parameters": [
                                        "const QPoint &",
                                        "const QImage &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "drawImage",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "const QImage &",
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setLayoutDirection",
                                    "parameters": [
                                        "Qt::LayoutDirection"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "layoutDirection",
                                    "returns": "Qt::LayoutDirection",
                                    "type": "function"
                                },
                                {
                                    "name": "drawGlyphRun",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QGlyphRun &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawStaticText",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QStaticText &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawStaticText",
                                    "parameters": [
                                        "const QPoint &",
                                        "const QStaticText &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawStaticText",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "const QStaticText &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawText",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawText",
                                    "parameters": [
                                        "const QPoint &",
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawText",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawText",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QString &",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawText",
                                    "parameters": [
                                        "const QRectF &",
                                        "int",
                                        "const QString &",
                                        "QRectF *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawText",
                                    "parameters": [
                                        "const QRect &",
                                        "int",
                                        "const QString &",
                                        "QRect *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawText",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "const QString &",
                                        "QRect *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawText",
                                    "parameters": [
                                        "const QRectF &",
                                        "const QString &",
                                        "const QTextOption &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "boundingRect",
                                    "parameters": [
                                        "const QRectF &",
                                        "int",
                                        "const QString &"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "name": "boundingRect",
                                    "parameters": [
                                        "const QRect &",
                                        "int",
                                        "const QString &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "boundingRect",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "const QString &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "boundingRect",
                                    "parameters": [
                                        "const QRectF &",
                                        "const QString &",
                                        "const QTextOption &"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "name": "drawTextItem",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QTextItem &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawTextItem",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "const QTextItem &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "drawTextItem",
                                    "parameters": [
                                        "const QPoint &",
                                        "const QTextItem &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "parameters": [
                                        "const QRectF &",
                                        "const QBrush &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "const QBrush &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "parameters": [
                                        "const QRect &",
                                        "const QBrush &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "parameters": [
                                        "const QRectF &",
                                        "const QColor &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "const QColor &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "parameters": [
                                        "const QRect &",
                                        "const QColor &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "Qt::GlobalColor"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "parameters": [
                                        "const QRect &",
                                        "Qt::GlobalColor"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "parameters": [
                                        "const QRectF &",
                                        "Qt::GlobalColor"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "Qt::BrushStyle"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "parameters": [
                                        "const QRect &",
                                        "Qt::BrushStyle"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "parameters": [
                                        "const QRectF &",
                                        "Qt::BrushStyle"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "eraseRect",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "eraseRect",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "eraseRect",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setRenderHint",
                                    "parameters": [
                                        "QPainter::RenderHint",
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setRenderHints",
                                    "parameters": [
                                        "QPainter::RenderHints",
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "renderHints",
                                    "returns": "QPainter::RenderHints",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "testRenderHint",
                                    "parameters": [
                                        "QPainter::RenderHint"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "paintEngine",
                                    "returns": "QPaintEngine *",
                                    "type": "function"
                                },
                                {
                                    "name": "setRedirected",
                                    "parameters": [
                                        "const QPaintDevice *",
                                        "QPaintDevice *",
                                        "const QPoint &"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "redirected",
                                    "parameters": [
                                        "const QPaintDevice *",
                                        "QPoint *"
                                    ],
                                    "returns": "QPaintDevice *",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "restoreRedirected",
                                    "parameters": [
                                        "const QPaintDevice *"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "beginNativePainting",
                                    "type": "function"
                                },
                                {
                                    "name": "endNativePainting",
                                    "type": "function"
                                }
                            ],
                            "name": "QPainter",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QPainter::RenderHints::enum_type",
                                "QPainter::RenderHints::enum_type"
                            ],
                            "returns": "QFlags<QPainter::RenderHints::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QPainter::RenderHints::enum_type",
                                "QFlags<QPainter::RenderHints::enum_type>"
                            ],
                            "returns": "QFlags<QPainter::RenderHints::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QPainter::RenderHints::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QPainter>",
                    "name": "painter",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "MoveToElement"
                                        },
                                        {
                                            "name": "LineToElement"
                                        },
                                        {
                                            "name": "CurveToElement"
                                        },
                                        {
                                            "name": "CurveToDataElement"
                                        }
                                    ],
                                    "name": "ElementType",
                                    "type": "enum"
                                },
                                {
                                    "name": "QPainterPath",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPainterPath",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPainterPath",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "returns": "QPainterPath &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QPainterPath &&"
                                    ],
                                    "returns": "QPainterPath &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QPainterPath",
                                    "type": "destructor"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QPainterPath &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "closeSubpath",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTo",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "moveTo",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "lineTo",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "lineTo",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "arcMoveTo",
                                    "parameters": [
                                        "const QRectF &",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "arcMoveTo",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "arcTo",
                                    "parameters": [
                                        "const QRectF &",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "arcTo",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "cubicTo",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QPointF &",
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "cubicTo",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "quadTo",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "quadTo",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentPosition",
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "name": "addRect",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addRect",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addEllipse",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addEllipse",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addEllipse",
                                    "parameters": [
                                        "const QPointF &",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addPolygon",
                                    "parameters": [
                                        "const QPolygonF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addText",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QFont &",
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addText",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "const QFont &",
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addPath",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addRegion",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addRoundedRect",
                                    "parameters": [
                                        "const QRectF &",
                                        "qreal",
                                        "qreal",
                                        "Qt::SizeMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "addRoundedRect",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "Qt::SizeMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addRoundRect",
                                    "parameters": [
                                        "const QRectF &",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addRoundRect",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addRoundRect",
                                    "parameters": [
                                        "const QRectF &",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addRoundRect",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "connectPath",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersects",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "controlPointRect",
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fillRule",
                                    "returns": "Qt::FillRule",
                                    "type": "function"
                                },
                                {
                                    "name": "setFillRule",
                                    "parameters": [
                                        "Qt::FillRule"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toReversed",
                                    "returns": "QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toSubpathPolygons",
                                    "parameters": [
                                        "const QMatrix &"
                                    ],
                                    "returns": "QList<QPolygonF>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toFillPolygons",
                                    "parameters": [
                                        "const QMatrix &"
                                    ],
                                    "returns": "QList<QPolygonF>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toFillPolygon",
                                    "parameters": [
                                        "const QMatrix &"
                                    ],
                                    "returns": "QPolygonF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toSubpathPolygons",
                                    "parameters": [
                                        "const QTransform &"
                                    ],
                                    "returns": "QList<QPolygonF>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toFillPolygons",
                                    "parameters": [
                                        "const QTransform &"
                                    ],
                                    "returns": "QList<QPolygonF>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toFillPolygon",
                                    "parameters": [
                                        "const QTransform &"
                                    ],
                                    "returns": "QPolygonF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "elementCount",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "elementAt",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QPainterPath::Element",
                                    "type": "function"
                                },
                                {
                                    "name": "setElementPositionAt",
                                    "parameters": [
                                        "int",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "length",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "percentAtLength",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pointAtPercent",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "angleAtPercent",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "slopeAtPercent",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersects",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "united",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "returns": "QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersected",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "returns": "QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "subtracted",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "returns": "QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "subtractedInverted",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "returns": "QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "simplified",
                                    "returns": "QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator&",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "returns": "QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator|",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "returns": "QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator+",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "returns": "QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator-",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "returns": "QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "name": "operator&=",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "returns": "QPainterPath &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator|=",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "returns": "QPainterPath &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "returns": "QPainterPath &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "returns": "QPainterPath &",
                                    "type": "function"
                                }
                            ],
                            "name": "QPainterPath",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QPainterPath &",
                                "QPainterPath &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QPainterPath &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QPainterPath &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QPainterPathStroker",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPainterPathStroker",
                                    "parameters": [
                                        "const QPen &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPainterPathStroker",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setWidth",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setCapStyle",
                                    "parameters": [
                                        "Qt::PenCapStyle"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capStyle",
                                    "returns": "Qt::PenCapStyle",
                                    "type": "function"
                                },
                                {
                                    "name": "setJoinStyle",
                                    "parameters": [
                                        "Qt::PenJoinStyle"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "joinStyle",
                                    "returns": "Qt::PenJoinStyle",
                                    "type": "function"
                                },
                                {
                                    "name": "setMiterLimit",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "miterLimit",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurveThreshold",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "curveThreshold",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setDashPattern",
                                    "parameters": [
                                        "Qt::PenStyle"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setDashPattern",
                                    "parameters": [
                                        "const QVector<qreal> &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dashPattern",
                                    "returns": "QVector<qreal>",
                                    "type": "function"
                                },
                                {
                                    "name": "setDashOffset",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dashOffset",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "createStroke",
                                    "parameters": [
                                        "const QPainterPath &"
                                    ],
                                    "returns": "QPainterPath",
                                    "type": "function"
                                }
                            ],
                            "name": "QPainterPathStroker",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QPainterPath &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QPainterPath>",
                    "name": "painterpath",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "name": "QPalette",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPalette",
                                    "parameters": [
                                        "const QColor &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPalette",
                                    "parameters": [
                                        "Qt::GlobalColor"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPalette",
                                    "parameters": [
                                        "const QColor &",
                                        "const QColor &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "checked": 0,
                                    "name": "QPalette",
                                    "parameters": [
                                        "const QBrush &",
                                        "const QBrush &",
                                        "const QBrush &",
                                        "const QBrush &",
                                        "const QBrush &",
                                        "const QBrush &",
                                        "const QBrush &",
                                        "const QBrush &",
                                        "const QBrush &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "checked": 0,
                                    "name": "QPalette",
                                    "parameters": [
                                        "const QColor &",
                                        "const QColor &",
                                        "const QColor &",
                                        "const QColor &",
                                        "const QColor &",
                                        "const QColor &",
                                        "const QColor &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPalette",
                                    "parameters": [
                                        "const QPalette &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPalette",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QPalette &"
                                    ],
                                    "returns": "QPalette &",
                                    "type": "function"
                                },
                                {
                                    "name": "QPalette",
                                    "parameters": [
                                        "QPalette &&"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QPalette &&"
                                    ],
                                    "returns": "QPalette &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QPalette &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Active"
                                        },
                                        {
                                            "name": "Disabled"
                                        },
                                        {
                                            "name": "Inactive"
                                        },
                                        {
                                            "name": "NColorGroups"
                                        },
                                        {
                                            "name": "Current"
                                        },
                                        {
                                            "name": "All"
                                        },
                                        {
                                            "name": "Normal"
                                        }
                                    ],
                                    "name": "ColorGroup",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "WindowText"
                                        },
                                        {
                                            "name": "Button"
                                        },
                                        {
                                            "name": "Light"
                                        },
                                        {
                                            "name": "Midlight"
                                        },
                                        {
                                            "name": "Dark"
                                        },
                                        {
                                            "name": "Mid"
                                        },
                                        {
                                            "name": "Text"
                                        },
                                        {
                                            "name": "BrightText"
                                        },
                                        {
                                            "name": "ButtonText"
                                        },
                                        {
                                            "name": "Base"
                                        },
                                        {
                                            "name": "Window"
                                        },
                                        {
                                            "name": "Shadow"
                                        },
                                        {
                                            "name": "Highlight"
                                        },
                                        {
                                            "name": "HighlightedText"
                                        },
                                        {
                                            "name": "Link"
                                        },
                                        {
                                            "name": "LinkVisited"
                                        },
                                        {
                                            "name": "AlternateBase"
                                        },
                                        {
                                            "name": "NoRole"
                                        },
                                        {
                                            "name": "ToolTipBase"
                                        },
                                        {
                                            "name": "ToolTipText"
                                        },
                                        {
                                            "name": "NColorRoles"
                                        },
                                        {
                                            "name": "Foreground"
                                        },
                                        {
                                            "name": "Background"
                                        }
                                    ],
                                    "name": "ColorRole",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "currentColorGroup",
                                    "returns": "QPalette::ColorGroup",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentColorGroup",
                                    "parameters": [
                                        "QPalette::ColorGroup"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "color",
                                    "parameters": [
                                        "QPalette::ColorGroup",
                                        "QPalette::ColorRole"
                                    ],
                                    "returns": "const QColor &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "brush",
                                    "parameters": [
                                        "QPalette::ColorGroup",
                                        "QPalette::ColorRole"
                                    ],
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "name": "setColor",
                                    "parameters": [
                                        "QPalette::ColorGroup",
                                        "QPalette::ColorRole",
                                        "const QColor &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setColor",
                                    "parameters": [
                                        "QPalette::ColorRole",
                                        "const QColor &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setBrush",
                                    "parameters": [
                                        "QPalette::ColorRole",
                                        "const QBrush &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isBrushSet",
                                    "parameters": [
                                        "QPalette::ColorGroup",
                                        "QPalette::ColorRole"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setBrush",
                                    "parameters": [
                                        "QPalette::ColorGroup",
                                        "QPalette::ColorRole",
                                        "const QBrush &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "setColorGroup",
                                    "parameters": [
                                        "QPalette::ColorGroup",
                                        "const QBrush &",
                                        "const QBrush &",
                                        "const QBrush &",
                                        "const QBrush &",
                                        "const QBrush &",
                                        "const QBrush &",
                                        "const QBrush &",
                                        "const QBrush &",
                                        "const QBrush &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEqual",
                                    "parameters": [
                                        "QPalette::ColorGroup",
                                        "QPalette::ColorGroup"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "color",
                                    "parameters": [
                                        "QPalette::ColorRole"
                                    ],
                                    "returns": "const QColor &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "brush",
                                    "parameters": [
                                        "QPalette::ColorRole"
                                    ],
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "foreground",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowText",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "button",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "light",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dark",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mid",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "base",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alternateBase",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toolTipBase",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toolTipText",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "background",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "window",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "midlight",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "brightText",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "buttonText",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "shadow",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "highlight",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "highlightedText",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "link",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "linkVisited",
                                    "returns": "const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QPalette &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QPalette &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isCopyOf",
                                    "parameters": [
                                        "const QPalette &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cacheKey",
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "resolve",
                                    "parameters": [
                                        "const QPalette &"
                                    ],
                                    "returns": "QPalette",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "resolve",
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "name": "resolve",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QPalette",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QPalette &",
                                "QPalette &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QPalette &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QPalette &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QPalette &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QPalette>",
                    "name": "palette",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QPen &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QPen &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QPen",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPen",
                                    "parameters": [
                                        "Qt::PenStyle"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPen",
                                    "parameters": [
                                        "const QColor &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPen",
                                    "parameters": [
                                        "const QBrush &",
                                        "qreal",
                                        "Qt::PenStyle",
                                        "Qt::PenCapStyle",
                                        "Qt::PenJoinStyle"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPen",
                                    "parameters": [
                                        "const QPen &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPen",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QPen &"
                                    ],
                                    "returns": "QPen &",
                                    "type": "function"
                                },
                                {
                                    "name": "QPen",
                                    "parameters": [
                                        "QPen &&"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QPen &&"
                                    ],
                                    "returns": "QPen &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QPen &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "style",
                                    "returns": "Qt::PenStyle",
                                    "type": "function"
                                },
                                {
                                    "name": "setStyle",
                                    "parameters": [
                                        "Qt::PenStyle"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dashPattern",
                                    "returns": "QVector<qreal>",
                                    "type": "function"
                                },
                                {
                                    "name": "setDashPattern",
                                    "parameters": [
                                        "const QVector<qreal> &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dashOffset",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setDashOffset",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "miterLimit",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setMiterLimit",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "widthF",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setWidthF",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setWidth",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "color",
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "name": "setColor",
                                    "parameters": [
                                        "const QColor &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "brush",
                                    "returns": "QBrush",
                                    "type": "function"
                                },
                                {
                                    "name": "setBrush",
                                    "parameters": [
                                        "const QBrush &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSolid",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capStyle",
                                    "returns": "Qt::PenCapStyle",
                                    "type": "function"
                                },
                                {
                                    "name": "setCapStyle",
                                    "parameters": [
                                        "Qt::PenCapStyle"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "joinStyle",
                                    "returns": "Qt::PenJoinStyle",
                                    "type": "function"
                                },
                                {
                                    "name": "setJoinStyle",
                                    "parameters": [
                                        "Qt::PenJoinStyle"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isCosmetic",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setCosmetic",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QPen &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QPen &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "isDetached",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "returns": "QPen::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QPen",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QPen &",
                                "QPen &"
                            ],
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QPen &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QPen>",
                    "name": "pen",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QPicture",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPicture",
                                    "parameters": [
                                        "const QPicture &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPicture",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "devType",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "data",
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "setData",
                                    "parameters": [
                                        "const char *",
                                        "uint"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "play",
                                    "parameters": [
                                        "QPainter *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "load",
                                    "parameters": [
                                        "QIODevice *",
                                        "const char *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "load",
                                    "parameters": [
                                        "const QString &",
                                        "const char *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "save",
                                    "parameters": [
                                        "QIODevice *",
                                        "const char *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "save",
                                    "parameters": [
                                        "const QString &",
                                        "const char *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "setBoundingRect",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QPicture &"
                                    ],
                                    "returns": "QPicture &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QPicture &&"
                                    ],
                                    "returns": "QPicture &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QPicture &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "detach",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "pictureFormat",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "const char *",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "inputFormats",
                                    "returns": "QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "outputFormats",
                                    "returns": "QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "inputFormatList",
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "outputFormatList",
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "paintEngine",
                                    "returns": "QPaintEngine *",
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "returns": "QPicture::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QPicture",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QPicture &",
                                "QPicture &"
                            ],
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QPictureIO",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPictureIO",
                                    "parameters": [
                                        "QIODevice *",
                                        "const char *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPictureIO",
                                    "parameters": [
                                        "const QString &",
                                        "const char *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPictureIO",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "picture",
                                    "returns": "const QPicture &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "status",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "format",
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "ioDevice",
                                    "returns": "QIODevice *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fileName",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "quality",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "description",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "parameters",
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "gamma",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "name": "setPicture",
                                    "parameters": [
                                        "const QPicture &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setStatus",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setFormat",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setIODevice",
                                    "parameters": [
                                        "QIODevice *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setFileName",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setQuality",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setDescription",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setParameters",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setGamma",
                                    "parameters": [
                                        "float"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "read",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "write",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "pictureFormat",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "pictureFormat",
                                    "parameters": [
                                        "QIODevice *"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "inputFormats",
                                    "returns": "QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "outputFormats",
                                    "returns": "QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "defineIOHandler",
                                    "parameters": [
                                        "const char *",
                                        "const char *",
                                        "const char *",
                                        "picture_io_handler",
                                        "picture_io_handler"
                                    ],
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QPictureIO",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QPicture &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QPicture &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QPicture>",
                    "name": "picture",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "RGB"
                                        },
                                        {
                                            "name": "BGR"
                                        },
                                        {
                                            "name": "Indexed"
                                        },
                                        {
                                            "name": "Grayscale"
                                        },
                                        {
                                            "name": "CMYK"
                                        },
                                        {
                                            "name": "HSL"
                                        },
                                        {
                                            "name": "HSV"
                                        },
                                        {
                                            "name": "YUV"
                                        },
                                        {
                                            "name": "Alpha"
                                        }
                                    ],
                                    "name": "ColorModel",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "UsesAlpha"
                                        },
                                        {
                                            "name": "IgnoresAlpha"
                                        }
                                    ],
                                    "name": "AlphaUsage",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "AtBeginning"
                                        },
                                        {
                                            "name": "AtEnd"
                                        }
                                    ],
                                    "name": "AlphaPosition",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "NotPremultiplied"
                                        },
                                        {
                                            "name": "Premultiplied"
                                        }
                                    ],
                                    "name": "AlphaPremultiplied",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "UnsignedInteger"
                                        },
                                        {
                                            "name": "UnsignedShort"
                                        },
                                        {
                                            "name": "UnsignedByte"
                                        },
                                        {
                                            "name": "FloatingPoint"
                                        }
                                    ],
                                    "name": "TypeInterpretation",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "YUV444"
                                        },
                                        {
                                            "name": "YUV422"
                                        },
                                        {
                                            "name": "YUV411"
                                        },
                                        {
                                            "name": "YUV420P"
                                        },
                                        {
                                            "name": "YUV420SP"
                                        },
                                        {
                                            "name": "YV12"
                                        },
                                        {
                                            "name": "UYVY"
                                        },
                                        {
                                            "name": "YUYV"
                                        },
                                        {
                                            "name": "NV12"
                                        },
                                        {
                                            "name": "NV21"
                                        },
                                        {
                                            "name": "IMC1"
                                        },
                                        {
                                            "name": "IMC2"
                                        },
                                        {
                                            "name": "IMC3"
                                        },
                                        {
                                            "name": "IMC4"
                                        },
                                        {
                                            "name": "Y8"
                                        },
                                        {
                                            "name": "Y16"
                                        }
                                    ],
                                    "name": "YUVLayout",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "LittleEndian"
                                        },
                                        {
                                            "name": "BigEndian"
                                        },
                                        {
                                            "name": "CurrentSystemEndian"
                                        }
                                    ],
                                    "name": "ByteOrder",
                                    "type": "enum"
                                },
                                {
                                    "name": "QPixelFormat",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPixelFormat",
                                    "parameters": [
                                        "const QPixelFormat &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPixelFormat",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QPixelFormat &"
                                    ],
                                    "returns": "QPixelFormat &",
                                    "type": "function"
                                },
                                {
                                    "name": "QPixelFormat",
                                    "parameters": [
                                        "QPixelFormat::ColorModel",
                                        "uchar",
                                        "uchar",
                                        "uchar",
                                        "uchar",
                                        "uchar",
                                        "uchar",
                                        "QPixelFormat::AlphaUsage",
                                        "QPixelFormat::AlphaPosition",
                                        "QPixelFormat::AlphaPremultiplied",
                                        "QPixelFormat::TypeInterpretation",
                                        "QPixelFormat::ByteOrder",
                                        "uchar"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "colorModel",
                                    "returns": "QPixelFormat::ColorModel",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "channelCount",
                                    "returns": "uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "redSize",
                                    "returns": "uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "greenSize",
                                    "returns": "uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "blueSize",
                                    "returns": "uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cyanSize",
                                    "returns": "uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "magentaSize",
                                    "returns": "uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "yellowSize",
                                    "returns": "uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "blackSize",
                                    "returns": "uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hueSize",
                                    "returns": "uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "saturationSize",
                                    "returns": "uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lightnessSize",
                                    "returns": "uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "brightnessSize",
                                    "returns": "uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alphaSize",
                                    "returns": "uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bitsPerPixel",
                                    "returns": "uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alphaUsage",
                                    "returns": "QPixelFormat::AlphaUsage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alphaPosition",
                                    "returns": "QPixelFormat::AlphaPosition",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "premultiplied",
                                    "returns": "QPixelFormat::AlphaPremultiplied",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "typeInterpretation",
                                    "returns": "QPixelFormat::TypeInterpretation",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "byteOrder",
                                    "returns": "QPixelFormat::ByteOrder",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "yuvLayout",
                                    "returns": "QPixelFormat::YUVLayout",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "subEnum",
                                    "returns": "uchar",
                                    "type": "function"
                                }
                            ],
                            "name": "QPixelFormat",
                            "type": "class"
                        },
                        {
                            "name": "qPixelFormatRgba",
                            "parameters": [
                                "uchar",
                                "uchar",
                                "uchar",
                                "uchar",
                                "QPixelFormat::AlphaUsage",
                                "QPixelFormat::AlphaPosition",
                                "QPixelFormat::AlphaPremultiplied",
                                "QPixelFormat::TypeInterpretation"
                            ],
                            "returns": "QPixelFormat",
                            "type": "function"
                        },
                        {
                            "name": "qPixelFormatGrayscale",
                            "parameters": [
                                "uchar",
                                "QPixelFormat::TypeInterpretation"
                            ],
                            "returns": "QPixelFormat",
                            "type": "function"
                        },
                        {
                            "name": "qPixelFormatAlpha",
                            "parameters": [
                                "uchar",
                                "QPixelFormat::TypeInterpretation"
                            ],
                            "returns": "QPixelFormat",
                            "type": "function"
                        },
                        {
                            "name": "qPixelFormatCmyk",
                            "parameters": [
                                "uchar",
                                "uchar",
                                "QPixelFormat::AlphaUsage",
                                "QPixelFormat::AlphaPosition",
                                "QPixelFormat::TypeInterpretation"
                            ],
                            "returns": "QPixelFormat",
                            "type": "function"
                        },
                        {
                            "name": "qPixelFormatHsl",
                            "parameters": [
                                "uchar",
                                "uchar",
                                "QPixelFormat::AlphaUsage",
                                "QPixelFormat::AlphaPosition",
                                "QPixelFormat::TypeInterpretation"
                            ],
                            "returns": "QPixelFormat",
                            "type": "function"
                        },
                        {
                            "name": "qPixelFormatHsv",
                            "parameters": [
                                "uchar",
                                "uchar",
                                "QPixelFormat::AlphaUsage",
                                "QPixelFormat::AlphaPosition",
                                "QPixelFormat::TypeInterpretation"
                            ],
                            "returns": "QPixelFormat",
                            "type": "function"
                        },
                        {
                            "name": "qPixelFormatYuv",
                            "parameters": [
                                "QPixelFormat::YUVLayout",
                                "uchar",
                                "QPixelFormat::AlphaUsage",
                                "QPixelFormat::AlphaPosition",
                                "QPixelFormat::AlphaPremultiplied",
                                "QPixelFormat::TypeInterpretation",
                                "QPixelFormat::ByteOrder"
                            ],
                            "returns": "QPixelFormat",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QPixelFormat>",
                    "name": "pixelformat",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QObject",
                            "elements": [
                                {
                                    "name": "~QScreen",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "handle",
                                    "returns": "QPlatformScreen *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "name",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "manufacturer",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "model",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "serialNumber",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "depth",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "geometry",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "physicalSize",
                                    "returns": "QSizeF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "physicalDotsPerInchX",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "physicalDotsPerInchY",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "physicalDotsPerInch",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "logicalDotsPerInchX",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "logicalDotsPerInchY",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "logicalDotsPerInch",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "devicePixelRatio",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "availableSize",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "availableGeometry",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "virtualSiblings",
                                    "returns": "QList<QScreen *>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "virtualSize",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "virtualGeometry",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "availableVirtualSize",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "availableVirtualGeometry",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "primaryOrientation",
                                    "returns": "Qt::ScreenOrientation",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "orientation",
                                    "returns": "Qt::ScreenOrientation",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nativeOrientation",
                                    "returns": "Qt::ScreenOrientation",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "orientationUpdateMask",
                                    "returns": "Qt::ScreenOrientations",
                                    "type": "function"
                                },
                                {
                                    "name": "setOrientationUpdateMask",
                                    "parameters": [
                                        "Qt::ScreenOrientations"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "angleBetween",
                                    "parameters": [
                                        "Qt::ScreenOrientation",
                                        "Qt::ScreenOrientation"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transformBetween",
                                    "parameters": [
                                        "Qt::ScreenOrientation",
                                        "Qt::ScreenOrientation",
                                        "const QRect &"
                                    ],
                                    "returns": "QTransform",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapBetween",
                                    "parameters": [
                                        "Qt::ScreenOrientation",
                                        "Qt::ScreenOrientation",
                                        "const QRect &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isPortrait",
                                    "parameters": [
                                        "Qt::ScreenOrientation"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isLandscape",
                                    "parameters": [
                                        "Qt::ScreenOrientation"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "grabWindow",
                                    "parameters": [
                                        "WId",
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "refreshRate",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "geometryChanged",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "availableGeometryChanged",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "physicalSizeChanged",
                                    "parameters": [
                                        "const QSizeF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "physicalDotsPerInchChanged",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "logicalDotsPerInchChanged",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "virtualGeometryChanged",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "primaryOrientationChanged",
                                    "parameters": [
                                        "Qt::ScreenOrientation"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "orientationChanged",
                                    "parameters": [
                                        "Qt::ScreenOrientation"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "refreshRateChanged",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QScreen",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QScreen *"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QScreen>",
                    "name": "screen",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "ModerateCaching"
                                        },
                                        {
                                            "name": "AggressiveCaching"
                                        }
                                    ],
                                    "name": "PerformanceHint",
                                    "type": "enum"
                                },
                                {
                                    "name": "QStaticText",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QStaticText",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QStaticText",
                                    "parameters": [
                                        "const QStaticText &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QStaticText &&"
                                    ],
                                    "returns": "QStaticText &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QStaticText &"
                                    ],
                                    "returns": "QStaticText &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QStaticText",
                                    "type": "destructor"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QStaticText &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setText",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextFormat",
                                    "parameters": [
                                        "Qt::TextFormat"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textFormat",
                                    "returns": "Qt::TextFormat",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextWidth",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textWidth",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextOption",
                                    "parameters": [
                                        "const QTextOption &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textOption",
                                    "returns": "QTextOption",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "returns": "QSizeF",
                                    "type": "function"
                                },
                                {
                                    "name": "prepare",
                                    "parameters": [
                                        "const QTransform &",
                                        "const QFont &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setPerformanceHint",
                                    "parameters": [
                                        "QStaticText::PerformanceHint"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "performanceHint",
                                    "returns": "QStaticText::PerformanceHint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QStaticText &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QStaticText &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QStaticText",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QStaticText &",
                                "QStaticText &"
                            ],
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QStaticText>",
                    "name": "statictext",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "LeftTab"
                                        },
                                        {
                                            "name": "RightTab"
                                        },
                                        {
                                            "name": "CenterTab"
                                        },
                                        {
                                            "name": "DelimiterTab"
                                        }
                                    ],
                                    "name": "TabType",
                                    "type": "enum"
                                },
                                {
                                    "name": "QTextOption",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTextOption",
                                    "parameters": [
                                        "Qt::Alignment"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QTextOption",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QTextOption",
                                    "parameters": [
                                        "const QTextOption &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QTextOption &"
                                    ],
                                    "returns": "QTextOption &",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlignment",
                                    "parameters": [
                                        "Qt::Alignment"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alignment",
                                    "returns": "Qt::Alignment",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextDirection",
                                    "parameters": [
                                        "Qt::LayoutDirection"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textDirection",
                                    "returns": "Qt::LayoutDirection",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoWrap"
                                        },
                                        {
                                            "name": "WordWrap"
                                        },
                                        {
                                            "name": "ManualWrap"
                                        },
                                        {
                                            "name": "WrapAnywhere"
                                        },
                                        {
                                            "name": "WrapAtWordBoundaryOrAnywhere"
                                        }
                                    ],
                                    "name": "WrapMode",
                                    "type": "enum"
                                },
                                {
                                    "name": "setWrapMode",
                                    "parameters": [
                                        "QTextOption::WrapMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "wrapMode",
                                    "returns": "QTextOption::WrapMode",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "ShowTabsAndSpaces"
                                        },
                                        {
                                            "name": "ShowLineAndParagraphSeparators"
                                        },
                                        {
                                            "name": "AddSpaceForLineAndParagraphSeparators"
                                        },
                                        {
                                            "name": "SuppressColors"
                                        },
                                        {
                                            "name": "ShowDocumentTerminator"
                                        },
                                        {
                                            "name": "IncludeTrailingSpaces"
                                        }
                                    ],
                                    "name": "Flag",
                                    "type": "enum"
                                },
                                {
                                    "name": "setFlags",
                                    "parameters": [
                                        "QTextOption::Flags"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "flags",
                                    "returns": "QTextOption::Flags",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabStop",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tabStop",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabStopDistance",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tabStopDistance",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabArray",
                                    "parameters": [
                                        "const QList<qreal> &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tabArray",
                                    "returns": "QList<qreal>",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabs",
                                    "parameters": [
                                        "const QList<QTextOption::Tab> &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tabs",
                                    "returns": "QList<QTextOption::Tab>",
                                    "type": "function"
                                },
                                {
                                    "name": "setUseDesignMetrics",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "useDesignMetrics",
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QTextOption",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QTextOption::Flags::enum_type",
                                "QTextOption::Flags::enum_type"
                            ],
                            "returns": "QFlags<QTextOption::Flags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QTextOption::Flags::enum_type",
                                "QFlags<QTextOption::Flags::enum_type>"
                            ],
                            "returns": "QFlags<QTextOption::Flags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QTextOption::Flags::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QTextOption>",
                    "name": "textoption",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QObject",
                            "checked": 1,
                            "elements": [
                                {
                                    "checked": 0,
                                    "name": "QValidator",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QValidator",
                                    "type": "destructor"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Invalid"
                                        },
                                        {
                                            "name": "Intermediate"
                                        },
                                        {
                                            "name": "Acceptable"
                                        }
                                    ],
                                    "name": "State",
                                    "type": "enum"
                                },
                                {
                                    "name": "setLocale",
                                    "parameters": [
                                        "const QLocale &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "locale",
                                    "returns": "QLocale",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "validate",
                                    "parameters": [
                                        "QString &",
                                        "int &"
                                    ],
                                    "returns": "QValidator::State",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fixup",
                                    "parameters": [
                                        "QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "changed",
                                    "type": "function"
                                }
                            ],
                            "name": "QValidator",
                            "type": "class"
                        },
                        {
                            "base": "QValidator",
                            "elements": [
                                {
                                    "name": "QIntValidator",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QIntValidator",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QIntValidator",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "validate",
                                    "parameters": [
                                        "QString &",
                                        "int &"
                                    ],
                                    "returns": "QValidator::State",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fixup",
                                    "parameters": [
                                        "QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setBottom",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setTop",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setRange",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottom",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "top",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "bottomChanged",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "topChanged",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QIntValidator",
                            "type": "class"
                        },
                        {
                            "base": "QValidator",
                            "elements": [
                                {
                                    "name": "QDoubleValidator",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDoubleValidator",
                                    "parameters": [
                                        "double",
                                        "double",
                                        "int",
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDoubleValidator",
                                    "type": "destructor"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "StandardNotation"
                                        },
                                        {
                                            "name": "ScientificNotation"
                                        }
                                    ],
                                    "name": "Notation",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "validate",
                                    "parameters": [
                                        "QString &",
                                        "int &"
                                    ],
                                    "returns": "QValidator::State",
                                    "type": "function"
                                },
                                {
                                    "name": "setRange",
                                    "parameters": [
                                        "double",
                                        "double",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setBottom",
                                    "parameters": [
                                        "double"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setTop",
                                    "parameters": [
                                        "double"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setDecimals",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setNotation",
                                    "parameters": [
                                        "QDoubleValidator::Notation"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottom",
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "top",
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "decimals",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "notation",
                                    "returns": "QDoubleValidator::Notation",
                                    "type": "function"
                                },
                                {
                                    "name": "bottomChanged",
                                    "parameters": [
                                        "double"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "topChanged",
                                    "parameters": [
                                        "double"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "decimalsChanged",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "notationChanged",
                                    "parameters": [
                                        "QDoubleValidator::Notation"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QDoubleValidator",
                            "type": "class"
                        },
                        {
                            "base": "QValidator",
                            "elements": [
                                {
                                    "name": "QRegularExpressionValidator",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRegularExpressionValidator",
                                    "parameters": [
                                        "const QRegularExpression &",
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QRegularExpressionValidator",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "validate",
                                    "parameters": [
                                        "QString &",
                                        "int &"
                                    ],
                                    "returns": "QValidator::State",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "regularExpression",
                                    "returns": "QRegularExpression",
                                    "type": "function"
                                },
                                {
                                    "name": "setRegularExpression",
                                    "parameters": [
                                        "const QRegularExpression &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "regularExpressionChanged",
                                    "parameters": [
                                        "const QRegularExpression &"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QRegularExpressionValidator",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QValidator>",
                    "name": "validator",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QObject",
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Hidden"
                                        },
                                        {
                                            "name": "AutomaticVisibility"
                                        },
                                        {
                                            "name": "Windowed"
                                        },
                                        {
                                            "name": "Minimized"
                                        },
                                        {
                                            "name": "Maximized"
                                        },
                                        {
                                            "name": "FullScreen"
                                        }
                                    ],
                                    "name": "Visibility",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "ExcludeTransients"
                                        },
                                        {
                                            "name": "IncludeTransients"
                                        }
                                    ],
                                    "name": "AncestorMode",
                                    "type": "enum"
                                },
                                {
                                    "name": "QWindow",
                                    "parameters": [
                                        "QScreen *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QWindow",
                                    "parameters": [
                                        "QWindow *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QWindow",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setSurfaceType",
                                    "parameters": [
                                        "QSurface::SurfaceType"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "surfaceType",
                                    "returns": "QSurface::SurfaceType",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isVisible",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "visibility",
                                    "returns": "QWindow::Visibility",
                                    "type": "function"
                                },
                                {
                                    "name": "setVisibility",
                                    "parameters": [
                                        "QWindow::Visibility"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "create",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "winId",
                                    "returns": "WId",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "parent",
                                    "parameters": [
                                        "QWindow::AncestorMode"
                                    ],
                                    "returns": "QWindow *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "parent",
                                    "returns": "QWindow *",
                                    "type": "function"
                                },
                                {
                                    "name": "setParent",
                                    "parameters": [
                                        "QWindow *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTopLevel",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isModal",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "modality",
                                    "returns": "Qt::WindowModality",
                                    "type": "function"
                                },
                                {
                                    "name": "setModality",
                                    "parameters": [
                                        "Qt::WindowModality"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setFormat",
                                    "parameters": [
                                        "const QSurfaceFormat &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "format",
                                    "returns": "QSurfaceFormat",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "requestedFormat",
                                    "returns": "QSurfaceFormat",
                                    "type": "function"
                                },
                                {
                                    "name": "setFlags",
                                    "parameters": [
                                        "Qt::WindowFlags"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "flags",
                                    "returns": "Qt::WindowFlags",
                                    "type": "function"
                                },
                                {
                                    "name": "setFlag",
                                    "parameters": [
                                        "Qt::WindowType",
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "type",
                                    "returns": "Qt::WindowType",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "title",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setOpacity",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "opacity",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setMask",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mask",
                                    "returns": "QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isActive",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "reportContentOrientationChange",
                                    "parameters": [
                                        "Qt::ScreenOrientation"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contentOrientation",
                                    "returns": "Qt::ScreenOrientation",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "devicePixelRatio",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowState",
                                    "returns": "Qt::WindowState",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowStates",
                                    "returns": "Qt::WindowStates",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowState",
                                    "parameters": [
                                        "Qt::WindowState"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowStates",
                                    "parameters": [
                                        "Qt::WindowStates"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setTransientParent",
                                    "parameters": [
                                        "QWindow *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transientParent",
                                    "returns": "QWindow *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isAncestorOf",
                                    "parameters": [
                                        "const QWindow *",
                                        "QWindow::AncestorMode"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isExposed",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumWidth",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumHeight",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximumWidth",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximumHeight",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSize",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximumSize",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "baseSize",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeIncrement",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumSize",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximumSize",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setBaseSize",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setSizeIncrement",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "geometry",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "frameMargins",
                                    "returns": "QMargins",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "frameGeometry",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "framePosition",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "name": "setFramePosition",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "position",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "name": "setPosition",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setPosition",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "resize",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "resize",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setFilePath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "filePath",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setIcon",
                                    "parameters": [
                                        "const QIcon &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "icon",
                                    "returns": "QIcon",
                                    "type": "function"
                                },
                                {
                                    "name": "destroy",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "handle",
                                    "returns": "QPlatformWindow *",
                                    "type": "function"
                                },
                                {
                                    "name": "setKeyboardGrabEnabled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setMouseGrabEnabled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "screen",
                                    "returns": "QScreen *",
                                    "type": "function"
                                },
                                {
                                    "name": "setScreen",
                                    "parameters": [
                                        "QScreen *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "accessibleRoot",
                                    "returns": "QAccessibleInterface *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "focusObject",
                                    "returns": "QObject *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapToGlobal",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapFromGlobal",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cursor",
                                    "returns": "QCursor",
                                    "type": "function"
                                },
                                {
                                    "name": "setCursor",
                                    "parameters": [
                                        "const QCursor &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "unsetCursor",
                                    "type": "function"
                                },
                                {
                                    "name": "fromWinId",
                                    "parameters": [
                                        "WId"
                                    ],
                                    "returns": "QWindow *",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setVulkanInstance",
                                    "parameters": [
                                        "QVulkanInstance *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "vulkanInstance",
                                    "returns": "QVulkanInstance *",
                                    "type": "function"
                                },
                                {
                                    "name": "requestActivate",
                                    "type": "function"
                                },
                                {
                                    "name": "setVisible",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "show",
                                    "type": "function"
                                },
                                {
                                    "name": "hide",
                                    "type": "function"
                                },
                                {
                                    "name": "showMinimized",
                                    "type": "function"
                                },
                                {
                                    "name": "showMaximized",
                                    "type": "function"
                                },
                                {
                                    "name": "showFullScreen",
                                    "type": "function"
                                },
                                {
                                    "name": "showNormal",
                                    "type": "function"
                                },
                                {
                                    "name": "close",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "raise",
                                    "type": "function"
                                },
                                {
                                    "name": "lower",
                                    "type": "function"
                                },
                                {
                                    "name": "setTitle",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setWidth",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setHeight",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setGeometry",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setGeometry",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumWidth",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumHeight",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximumWidth",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximumHeight",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "alert",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "requestUpdate",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "checked": 0,
                                    "name": "screenChanged",
                                    "parameters": [
                                        "QScreen *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "modalityChanged",
                                    "parameters": [
                                        "Qt::WindowModality"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "windowStateChanged",
                                    "parameters": [
                                        "Qt::WindowState"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "windowTitleChanged",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "xChanged",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "yChanged",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "widthChanged",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "heightChanged",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "minimumWidthChanged",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "minimumHeightChanged",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "maximumWidthChanged",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "maximumHeightChanged",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "visibleChanged",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "visibilityChanged",
                                    "parameters": [
                                        "QWindow::Visibility"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "activeChanged",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "contentOrientationChanged",
                                    "parameters": [
                                        "Qt::ScreenOrientation"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "focusObjectChanged",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "opacityChanged",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QWindow",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QWindow *"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QWindow>",
                    "name": "window",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QEvent",
                            "elements": [
                                {
                                    "name": "QMouseEvent",
                                    "parameters": [
                                        "QEvent::Type",
                                        "const QPointF &",
                                        "Qt::MouseButton",
                                        "Qt::MouseButtons",
                                        "Qt::KeyboardModifiers"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QMouseEvent",
                                    "parameters": [
                                        "QEvent::Type",
                                        "const QPointF &",
                                        "const QPointF &",
                                        "Qt::MouseButton",
                                        "Qt::MouseButtons",
                                        "Qt::KeyboardModifiers"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QMouseEvent",
                                    "parameters": [
                                        "QEvent::Type",
                                        "const QPointF &",
                                        "const QPointF &",
                                        "const QPointF &",
                                        "Qt::MouseButton",
                                        "Qt::MouseButtons",
                                        "Qt::KeyboardModifiers"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QMouseEvent",
                                    "parameters": [
                                        "QEvent::Type",
                                        "const QPointF &",
                                        "const QPointF &",
                                        "const QPointF &",
                                        "Qt::MouseButton",
                                        "Qt::MouseButtons",
                                        "Qt::KeyboardModifiers",
                                        "Qt::MouseEventSource"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QMouseEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "pos",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "globalPos",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "globalX",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "globalY",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "localPos",
                                    "returns": "const QPointF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowPos",
                                    "returns": "const QPointF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "screenPos",
                                    "returns": "const QPointF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "button",
                                    "returns": "Qt::MouseButton",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "buttons",
                                    "returns": "Qt::MouseButtons",
                                    "type": "function"
                                },
                                {
                                    "name": "setLocalPos",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "source",
                                    "returns": "Qt::MouseEventSource",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "flags",
                                    "returns": "Qt::MouseEventFlags",
                                    "type": "function"
                                }
                            ],
                            "name": "QMouseEvent",
                            "type": "class"
                        },
                        {
                            "base": "QEvent",
                            "checked": 1,
                            "elements": [
                                {
                                    "checked": 0,
                                    "enumerators": [
                                        {
                                            "checked": 0,
                                            "name": "DefaultDeltasPerStep"
                                        }
                                    ],
                                    "name": "",
                                    "type": "enum"
                                },
                                {
                                    "name": "QWheelEvent",
                                    "parameters": [
                                        "const QPointF &",
                                        "int",
                                        "Qt::MouseButtons",
                                        "Qt::KeyboardModifiers",
                                        "Qt::Orientation"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QWheelEvent",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QPointF &",
                                        "int",
                                        "Qt::MouseButtons",
                                        "Qt::KeyboardModifiers",
                                        "Qt::Orientation"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QWheelEvent",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QPointF &",
                                        "QPoint",
                                        "QPoint",
                                        "int",
                                        "Qt::Orientation",
                                        "Qt::MouseButtons",
                                        "Qt::KeyboardModifiers"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QWheelEvent",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QPointF &",
                                        "QPoint",
                                        "QPoint",
                                        "int",
                                        "Qt::Orientation",
                                        "Qt::MouseButtons",
                                        "Qt::KeyboardModifiers",
                                        "Qt::ScrollPhase"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QWheelEvent",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QPointF &",
                                        "QPoint",
                                        "QPoint",
                                        "int",
                                        "Qt::Orientation",
                                        "Qt::MouseButtons",
                                        "Qt::KeyboardModifiers",
                                        "Qt::ScrollPhase",
                                        "Qt::MouseEventSource"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QWheelEvent",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QPointF &",
                                        "QPoint",
                                        "QPoint",
                                        "int",
                                        "Qt::Orientation",
                                        "Qt::MouseButtons",
                                        "Qt::KeyboardModifiers",
                                        "Qt::ScrollPhase",
                                        "Qt::MouseEventSource",
                                        "bool"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QWheelEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "pixelDelta",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "angleDelta",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "delta",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "orientation",
                                    "returns": "Qt::Orientation",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pos",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "globalPos",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "globalX",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "globalY",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "posF",
                                    "returns": "const QPointF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "globalPosF",
                                    "returns": "const QPointF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "buttons",
                                    "returns": "Qt::MouseButtons",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "phase",
                                    "returns": "Qt::ScrollPhase",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inverted",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "source",
                                    "returns": "Qt::MouseEventSource",
                                    "type": "function"
                                }
                            ],
                            "name": "QWheelEvent",
                            "type": "class"
                        },
                        {
                            "base": "QEvent",
                            "elements": [
                                {
                                    "name": "QKeyEvent",
                                    "parameters": [
                                        "QEvent::Type",
                                        "int",
                                        "Qt::KeyboardModifiers",
                                        "const QString &",
                                        "bool",
                                        "ushort"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QKeyEvent",
                                    "parameters": [
                                        "QEvent::Type",
                                        "int",
                                        "Qt::KeyboardModifiers",
                                        "quint32",
                                        "quint32",
                                        "quint32",
                                        "const QString &",
                                        "bool",
                                        "ushort"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QKeyEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "key",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matches",
                                    "parameters": [
                                        "QKeySequence::StandardKey"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "modifiers",
                                    "returns": "Qt::KeyboardModifiers",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isAutoRepeat",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nativeScanCode",
                                    "returns": "quint32",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nativeVirtualKey",
                                    "returns": "quint32",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nativeModifiers",
                                    "returns": "quint32",
                                    "type": "function"
                                }
                            ],
                            "name": "QKeyEvent",
                            "type": "class"
                        },
                        {
                            "base": "QEvent",
                            "elements": [
                                {
                                    "name": "QPaintEvent",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPaintEvent",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPaintEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "rect",
                                    "returns": "const QRect &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "region",
                                    "returns": "const QRegion &",
                                    "type": "function"
                                }
                            ],
                            "name": "QPaintEvent",
                            "type": "class"
                        },
                        {
                            "base": "QEvent",
                            "elements": [
                                {
                                    "name": "QMoveEvent",
                                    "parameters": [
                                        "const QPoint &",
                                        "const QPoint &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QMoveEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "pos",
                                    "returns": "const QPoint &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "oldPos",
                                    "returns": "const QPoint &",
                                    "type": "function"
                                }
                            ],
                            "name": "QMoveEvent",
                            "type": "class"
                        },
                        {
                            "base": "QEvent",
                            "elements": [
                                {
                                    "name": "QResizeEvent",
                                    "parameters": [
                                        "const QSize &",
                                        "const QSize &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QResizeEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "returns": "const QSize &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "oldSize",
                                    "returns": "const QSize &",
                                    "type": "function"
                                }
                            ],
                            "name": "QResizeEvent",
                            "type": "class"
                        },
                        {
                            "base": "QEvent",
                            "elements": [
                                {
                                    "name": "QCloseEvent",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QCloseEvent",
                                    "type": "destructor"
                                }
                            ],
                            "name": "QCloseEvent",
                            "type": "class"
                        },
                        {
                            "base": "QEvent",
                            "elements": [
                                {
                                    "name": "QShowEvent",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QShowEvent",
                                    "type": "destructor"
                                }
                            ],
                            "name": "QShowEvent",
                            "type": "class"
                        },
                        {
                            "base": "QEvent",
                            "elements": [
                                {
                                    "name": "QHideEvent",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QHideEvent",
                                    "type": "destructor"
                                }
                            ],
                            "name": "QHideEvent",
                            "type": "class"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "QKeyEvent *",
                                "QKeySequence::StandardKey"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "QKeySequence::StandardKey",
                                "QKeyEvent *"
                            ],
                            "returns": "bool",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<qevent.h>,yasl/core/event.h",
                    "name": "guievent",
                    "type": "file"
                }
            ],
            "name": "gui",
            "type": "module"
        },
        {
            "checked": 1,
            "elements": [
                {
                    "elements": [
                        {
                            "base": "QObject",
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "DrawWindowBackground"
                                        },
                                        {
                                            "name": "DrawChildren"
                                        },
                                        {
                                            "name": "IgnoreMask"
                                        }
                                    ],
                                    "name": "RenderFlag",
                                    "type": "enum"
                                },
                                {
                                    "name": "QWidget",
                                    "parameters": [
                                        "QWidget *",
                                        "Qt::WindowFlags"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QWidget",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "devType",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "winId",
                                    "returns": "WId",
                                    "type": "function"
                                },
                                {
                                    "name": "createWinId",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "internalWinId",
                                    "returns": "WId",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "effectiveWinId",
                                    "returns": "WId",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "style",
                                    "returns": "QStyle *",
                                    "type": "function"
                                },
                                {
                                    "name": "setStyle",
                                    "parameters": [
                                        "QStyle *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTopLevel",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isWindow",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isModal",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowModality",
                                    "returns": "Qt::WindowModality",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowModality",
                                    "parameters": [
                                        "Qt::WindowModality"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEnabled",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEnabledTo",
                                    "parameters": [
                                        "const QWidget *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEnabledToTLW",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setEnabled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setDisabled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowModified",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "frameGeometry",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "geometry",
                                    "returns": "const QRect &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "normalGeometry",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pos",
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "frameSize",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rect",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "childrenRect",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "childrenRegion",
                                    "returns": "QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSize",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximumSize",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumWidth",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumHeight",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximumWidth",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximumHeight",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumSize",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumSize",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximumSize",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximumSize",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumWidth",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumHeight",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximumWidth",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximumHeight",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeIncrement",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setSizeIncrement",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setSizeIncrement",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "baseSize",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setBaseSize",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setBaseSize",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setFixedSize",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setFixedSize",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setFixedWidth",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setFixedHeight",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapToGlobal",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapFromGlobal",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapToParent",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapFromParent",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapTo",
                                    "parameters": [
                                        "const QWidget *",
                                        "const QPoint &"
                                    ],
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapFrom",
                                    "parameters": [
                                        "const QWidget *",
                                        "const QPoint &"
                                    ],
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "window",
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nativeParentWidget",
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "topLevelWidget",
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "palette",
                                    "returns": "const QPalette &",
                                    "type": "function"
                                },
                                {
                                    "name": "setPalette",
                                    "parameters": [
                                        "const QPalette &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setBackgroundRole",
                                    "parameters": [
                                        "QPalette::ColorRole"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "backgroundRole",
                                    "returns": "QPalette::ColorRole",
                                    "type": "function"
                                },
                                {
                                    "name": "setForegroundRole",
                                    "parameters": [
                                        "QPalette::ColorRole"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "foregroundRole",
                                    "returns": "QPalette::ColorRole",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "font",
                                    "returns": "const QFont &",
                                    "type": "function"
                                },
                                {
                                    "name": "setFont",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fontMetrics",
                                    "returns": "QFontMetrics",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fontInfo",
                                    "returns": "QFontInfo",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cursor",
                                    "returns": "QCursor",
                                    "type": "function"
                                },
                                {
                                    "name": "setCursor",
                                    "parameters": [
                                        "const QCursor &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "unsetCursor",
                                    "type": "function"
                                },
                                {
                                    "name": "setMouseTracking",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasMouseTracking",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "underMouse",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabletTracking",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasTabletTracking",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setMask",
                                    "parameters": [
                                        "const QBitmap &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setMask",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mask",
                                    "returns": "QRegion",
                                    "type": "function"
                                },
                                {
                                    "name": "clearMask",
                                    "type": "function"
                                },
                                {
                                    "name": "render",
                                    "parameters": [
                                        "QPaintDevice *",
                                        "const QPoint &",
                                        "const QRegion &",
                                        "QWidget::RenderFlags"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "render",
                                    "parameters": [
                                        "QPainter *",
                                        "const QPoint &",
                                        "const QRegion &",
                                        "QWidget::RenderFlags"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "grab",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "graphicsEffect",
                                    "returns": "QGraphicsEffect *",
                                    "type": "function"
                                },
                                {
                                    "name": "setGraphicsEffect",
                                    "parameters": [
                                        "QGraphicsEffect *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "grabGesture",
                                    "parameters": [
                                        "Qt::GestureType",
                                        "Qt::GestureFlags"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "ungrabGesture",
                                    "parameters": [
                                        "Qt::GestureType"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowTitle",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setStyleSheet",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "styleSheet",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowTitle",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowIcon",
                                    "parameters": [
                                        "const QIcon &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowIcon",
                                    "returns": "QIcon",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowIconText",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowIconText",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowRole",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowRole",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowFilePath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowFilePath",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowOpacity",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowOpacity",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isWindowModified",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setToolTip",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toolTip",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setToolTipDuration",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toolTipDuration",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setStatusTip",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "statusTip",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setWhatsThis",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "whatsThis",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "accessibleName",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setAccessibleName",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "accessibleDescription",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setAccessibleDescription",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setLayoutDirection",
                                    "parameters": [
                                        "Qt::LayoutDirection"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "layoutDirection",
                                    "returns": "Qt::LayoutDirection",
                                    "type": "function"
                                },
                                {
                                    "name": "unsetLayoutDirection",
                                    "type": "function"
                                },
                                {
                                    "name": "setLocale",
                                    "parameters": [
                                        "const QLocale &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "locale",
                                    "returns": "QLocale",
                                    "type": "function"
                                },
                                {
                                    "name": "unsetLocale",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRightToLeft",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isLeftToRight",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setFocus",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isActiveWindow",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "activateWindow",
                                    "type": "function"
                                },
                                {
                                    "name": "clearFocus",
                                    "type": "function"
                                },
                                {
                                    "name": "setFocus",
                                    "parameters": [
                                        "Qt::FocusReason"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "focusPolicy",
                                    "returns": "Qt::FocusPolicy",
                                    "type": "function"
                                },
                                {
                                    "name": "setFocusPolicy",
                                    "parameters": [
                                        "Qt::FocusPolicy"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasFocus",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabOrder",
                                    "parameters": [
                                        "QWidget *",
                                        "QWidget *"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setFocusProxy",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "focusProxy",
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contextMenuPolicy",
                                    "returns": "Qt::ContextMenuPolicy",
                                    "type": "function"
                                },
                                {
                                    "name": "setContextMenuPolicy",
                                    "parameters": [
                                        "Qt::ContextMenuPolicy"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "grabMouse",
                                    "type": "function"
                                },
                                {
                                    "name": "grabMouse",
                                    "parameters": [
                                        "const QCursor &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "releaseMouse",
                                    "type": "function"
                                },
                                {
                                    "name": "grabKeyboard",
                                    "type": "function"
                                },
                                {
                                    "name": "releaseKeyboard",
                                    "type": "function"
                                },
                                {
                                    "name": "grabShortcut",
                                    "parameters": [
                                        "const QKeySequence &",
                                        "Qt::ShortcutContext"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "releaseShortcut",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setShortcutEnabled",
                                    "parameters": [
                                        "int",
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setShortcutAutoRepeat",
                                    "parameters": [
                                        "int",
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "mouseGrabber",
                                    "returns": "QWidget *",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "keyboardGrabber",
                                    "returns": "QWidget *",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "updatesEnabled",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setUpdatesEnabled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "graphicsProxyWidget",
                                    "returns": "QGraphicsProxyWidget *",
                                    "type": "function"
                                },
                                {
                                    "name": "update",
                                    "type": "function"
                                },
                                {
                                    "name": "repaint",
                                    "type": "function"
                                },
                                {
                                    "name": "update",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "update",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "update",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "repaint",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "repaint",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "repaint",
                                    "parameters": [
                                        "const QRegion &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setVisible",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setHidden",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "show",
                                    "type": "function"
                                },
                                {
                                    "name": "hide",
                                    "type": "function"
                                },
                                {
                                    "name": "showMinimized",
                                    "type": "function"
                                },
                                {
                                    "name": "showMaximized",
                                    "type": "function"
                                },
                                {
                                    "name": "showFullScreen",
                                    "type": "function"
                                },
                                {
                                    "name": "showNormal",
                                    "type": "function"
                                },
                                {
                                    "name": "close",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "raise",
                                    "type": "function"
                                },
                                {
                                    "name": "lower",
                                    "type": "function"
                                },
                                {
                                    "name": "stackUnder",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "move",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "move",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "resize",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "resize",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setGeometry",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setGeometry",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "saveGeometry",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "restoreGeometry",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "adjustSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isVisible",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isVisibleTo",
                                    "parameters": [
                                        "const QWidget *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isHidden",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isMinimized",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isMaximized",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isFullScreen",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowState",
                                    "returns": "Qt::WindowStates",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowState",
                                    "parameters": [
                                        "Qt::WindowStates"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "overrideWindowState",
                                    "parameters": [
                                        "Qt::WindowStates"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizePolicy",
                                    "returns": "QSizePolicy",
                                    "type": "function"
                                },
                                {
                                    "name": "setSizePolicy",
                                    "parameters": [
                                        "QSizePolicy"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setSizePolicy",
                                    "parameters": [
                                        "QSizePolicy::Policy",
                                        "QSizePolicy::Policy"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "heightForWidth",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasHeightForWidth",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "visibleRegion",
                                    "returns": "QRegion",
                                    "type": "function"
                                },
                                {
                                    "name": "setContentsMargins",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setContentsMargins",
                                    "parameters": [
                                        "const QMargins &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getContentsMargins",
                                    "parameters": [
                                        "int *",
                                        "int *",
                                        "int *",
                                        "int *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contentsMargins",
                                    "returns": "QMargins",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contentsRect",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "layout",
                                    "returns": "QLayout *",
                                    "type": "function"
                                },
                                {
                                    "name": "setLayout",
                                    "parameters": [
                                        "QLayout *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "updateGeometry",
                                    "type": "function"
                                },
                                {
                                    "name": "setParent",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setParent",
                                    "parameters": [
                                        "QWidget *",
                                        "Qt::WindowFlags"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "scroll",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "scroll",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "const QRect &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "focusWidget",
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nextInFocusChain",
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "previousInFocusChain",
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "acceptDrops",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAcceptDrops",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addAction",
                                    "parameters": [
                                        "QAction *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addActions",
                                    "parameters": [
                                        "QList<QAction *>"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "insertActions",
                                    "parameters": [
                                        "QAction *",
                                        "QList<QAction *>"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "insertAction",
                                    "parameters": [
                                        "QAction *",
                                        "QAction *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "removeAction",
                                    "parameters": [
                                        "QAction *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "actions",
                                    "returns": "QList<QAction *>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "parentWidget",
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowFlags",
                                    "parameters": [
                                        "Qt::WindowFlags"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowFlags",
                                    "returns": "Qt::WindowFlags",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowFlag",
                                    "parameters": [
                                        "Qt::WindowType",
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "overrideWindowFlags",
                                    "parameters": [
                                        "Qt::WindowFlags"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowType",
                                    "returns": "Qt::WindowType",
                                    "type": "function"
                                },
                                {
                                    "name": "find",
                                    "parameters": [
                                        "WId"
                                    ],
                                    "returns": "QWidget *",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "childAt",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "childAt",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "name": "setAttribute",
                                    "parameters": [
                                        "Qt::WidgetAttribute",
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "testAttribute",
                                    "parameters": [
                                        "Qt::WidgetAttribute"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "paintEngine",
                                    "returns": "QPaintEngine *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "ensurePolished",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isAncestorOf",
                                    "parameters": [
                                        "const QWidget *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoFillBackground",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoFillBackground",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "backingStore",
                                    "returns": "QBackingStore *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowHandle",
                                    "returns": "QWindow *",
                                    "type": "function"
                                },
                                {
                                    "name": "createWindowContainer",
                                    "parameters": [
                                        "QWindow *",
                                        "QWidget *",
                                        "Qt::WindowFlags"
                                    ],
                                    "returns": "QWidget *",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "windowTitleChanged",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "windowIconChanged",
                                    "parameters": [
                                        "const QIcon &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "windowIconTextChanged",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "customContextMenuRequested",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inputMethodQuery",
                                    "parameters": [
                                        "Qt::InputMethodQuery"
                                    ],
                                    "returns": "QVariant",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inputMethodHints",
                                    "returns": "Qt::InputMethodHints",
                                    "type": "function"
                                },
                                {
                                    "name": "setInputMethodHints",
                                    "parameters": [
                                        "Qt::InputMethodHints"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QWidget",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QWidget::RenderFlags::enum_type",
                                "QWidget::RenderFlags::enum_type"
                            ],
                            "returns": "QFlags<QWidget::RenderFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QWidget::RenderFlags::enum_type",
                                "QFlags<QWidget::RenderFlags::enum_type>"
                            ],
                            "returns": "QFlags<QWidget::RenderFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QWidget::RenderFlags::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QWidget *"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "type": "statement",
                            "value": "void register_newwidget_file(script::Namespace n); // defined in newwidget.cpp"
                        },
                        {
                            "type": "statement",
                            "value": "register_newwidget_file(widgets);"
                        }
                    ],
                    "hincludes": "<QWidget>",
                    "name": "widget",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "name": "~QAbstractButton",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setText",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setIcon",
                                    "parameters": [
                                        "const QIcon &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "icon",
                                    "returns": "QIcon",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "iconSize",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setShortcut",
                                    "parameters": [
                                        "const QKeySequence &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "shortcut",
                                    "returns": "QKeySequence",
                                    "type": "function"
                                },
                                {
                                    "name": "setCheckable",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isCheckable",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isChecked",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setDown",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDown",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoRepeat",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoRepeat",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoRepeatDelay",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoRepeatDelay",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoRepeatInterval",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoRepeatInterval",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoExclusive",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoExclusive",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "group",
                                    "returns": "QButtonGroup *",
                                    "type": "function"
                                },
                                {
                                    "name": "setIconSize",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "animateClick",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "click",
                                    "type": "function"
                                },
                                {
                                    "name": "toggle",
                                    "type": "function"
                                },
                                {
                                    "name": "setChecked",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "pressed",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "released",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "clicked",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "toggled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QAbstractButton",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QAbstractButton>",
                    "name": "abstractbutton",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QAbstractButton",
                            "elements": [
                                {
                                    "name": "QPushButton",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPushButton",
                                    "parameters": [
                                        "const QString &",
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPushButton",
                                    "parameters": [
                                        "const QIcon &",
                                        "const QString &",
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPushButton",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoDefault",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoDefault",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDefault",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setDefault",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setMenu",
                                    "parameters": [
                                        "QMenu *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "menu",
                                    "returns": "QMenu *",
                                    "type": "function"
                                },
                                {
                                    "name": "setFlat",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isFlat",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "showMenu",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "clicked",
                                    "type": "function"
                                }
                            ],
                            "name": "QPushButton",
                            "type": "class"
                        },
                        {
                            "type": "statement",
                            "value": "void register_newpushbutton_file(script::Namespace n); // defined in newpushbutton.cpp"
                        },
                        {
                            "type": "statement",
                            "value": "register_newpushbutton_file(widgets);"
                        }
                    ],
                    "hincludes": "<QPushButton>",
                    "name": "pushbutton",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "name": "QFrame",
                                    "parameters": [
                                        "QWidget *",
                                        "Qt::WindowFlags"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFrame",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "frameStyle",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setFrameStyle",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "frameWidth",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoFrame"
                                        },
                                        {
                                            "name": "Box"
                                        },
                                        {
                                            "name": "Panel"
                                        },
                                        {
                                            "name": "WinPanel"
                                        },
                                        {
                                            "name": "HLine"
                                        },
                                        {
                                            "name": "VLine"
                                        },
                                        {
                                            "name": "StyledPanel"
                                        }
                                    ],
                                    "name": "Shape",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Plain"
                                        },
                                        {
                                            "name": "Raised"
                                        },
                                        {
                                            "name": "Sunken"
                                        }
                                    ],
                                    "name": "Shadow",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Shadow_Mask"
                                        },
                                        {
                                            "name": "Shape_Mask"
                                        }
                                    ],
                                    "name": "StyleMask",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "frameShape",
                                    "returns": "QFrame::Shape",
                                    "type": "function"
                                },
                                {
                                    "name": "setFrameShape",
                                    "parameters": [
                                        "QFrame::Shape"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "frameShadow",
                                    "returns": "QFrame::Shadow",
                                    "type": "function"
                                },
                                {
                                    "name": "setFrameShadow",
                                    "parameters": [
                                        "QFrame::Shadow"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lineWidth",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setLineWidth",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "midLineWidth",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMidLineWidth",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "frameRect",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "setFrameRect",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QFrame",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QFrame>",
                    "name": "frame",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QFrame",
                            "elements": [
                                {
                                    "name": "QLabel",
                                    "parameters": [
                                        "QWidget *",
                                        "Qt::WindowFlags"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLabel",
                                    "parameters": [
                                        "const QString &",
                                        "QWidget *",
                                        "Qt::WindowFlags"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QLabel",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixmap",
                                    "returns": "const QPixmap *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "picture",
                                    "returns": "const QPicture *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "movie",
                                    "returns": "QMovie *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textFormat",
                                    "returns": "Qt::TextFormat",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextFormat",
                                    "parameters": [
                                        "Qt::TextFormat"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alignment",
                                    "returns": "Qt::Alignment",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlignment",
                                    "parameters": [
                                        "Qt::Alignment"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setWordWrap",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "wordWrap",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "indent",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setIndent",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "margin",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMargin",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasScaledContents",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setScaledContents",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setBuddy",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "buddy",
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "heightForWidth",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "openExternalLinks",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setOpenExternalLinks",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setTextInteractionFlags",
                                    "parameters": [
                                        "Qt::TextInteractionFlags"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textInteractionFlags",
                                    "returns": "Qt::TextInteractionFlags",
                                    "type": "function"
                                },
                                {
                                    "name": "setSelection",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasSelectedText",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectedText",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectionStart",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setText",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setPixmap",
                                    "parameters": [
                                        "const QPixmap &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setPicture",
                                    "parameters": [
                                        "const QPicture &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setMovie",
                                    "parameters": [
                                        "QMovie *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "parameters": [
                                        "double"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "type": "function"
                                },
                                {
                                    "name": "linkActivated",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "linkHovered",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QLabel",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newLabel",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QLabel&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newLabel",
                            "parameters": [
                                "const QString&",
                                "QWidget*"
                            ],
                            "returns": "QLabel&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QLabel>",
                    "name": "label",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "name": "QTabWidget",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QTabWidget",
                                    "type": "destructor"
                                },
                                {
                                    "name": "addTab",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "addTab",
                                    "parameters": [
                                        "QWidget *",
                                        "const QIcon &",
                                        "const QString &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "insertTab",
                                    "parameters": [
                                        "int",
                                        "QWidget *",
                                        "const QString &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "insertTab",
                                    "parameters": [
                                        "int",
                                        "QWidget *",
                                        "const QIcon &",
                                        "const QString &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "removeTab",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTabEnabled",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabEnabled",
                                    "parameters": [
                                        "int",
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tabText",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabText",
                                    "parameters": [
                                        "int",
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tabIcon",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QIcon",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabIcon",
                                    "parameters": [
                                        "int",
                                        "const QIcon &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setTabToolTip",
                                    "parameters": [
                                        "int",
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tabToolTip",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabWhatsThis",
                                    "parameters": [
                                        "int",
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tabWhatsThis",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentIndex",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentWidget",
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "widget",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "indexOf",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "North"
                                        },
                                        {
                                            "name": "South"
                                        },
                                        {
                                            "name": "West"
                                        },
                                        {
                                            "name": "East"
                                        }
                                    ],
                                    "name": "TabPosition",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "tabPosition",
                                    "returns": "QTabWidget::TabPosition",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabPosition",
                                    "parameters": [
                                        "QTabWidget::TabPosition"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tabsClosable",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabsClosable",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isMovable",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setMovable",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Rounded"
                                        },
                                        {
                                            "name": "Triangular"
                                        }
                                    ],
                                    "name": "TabShape",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "tabShape",
                                    "returns": "QTabWidget::TabShape",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabShape",
                                    "parameters": [
                                        "QTabWidget::TabShape"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "heightForWidth",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasHeightForWidth",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setCornerWidget",
                                    "parameters": [
                                        "QWidget *",
                                        "Qt::Corner"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cornerWidget",
                                    "parameters": [
                                        "Qt::Corner"
                                    ],
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "elideMode",
                                    "returns": "Qt::TextElideMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setElideMode",
                                    "parameters": [
                                        "Qt::TextElideMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "iconSize",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setIconSize",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "usesScrollButtons",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setUsesScrollButtons",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "documentMode",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setDocumentMode",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tabBarAutoHide",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabBarAutoHide",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tabBar",
                                    "returns": "QTabBar *",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentIndex",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentWidget",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "currentChanged",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "tabCloseRequested",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "tabBarClicked",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "tabBarDoubleClicked",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QTabWidget",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newTabWidget",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QTabWidget&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QTabWidget>",
                    "name": "tabwidget",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "LeadingPosition"
                                        },
                                        {
                                            "name": "TrailingPosition"
                                        }
                                    ],
                                    "name": "ActionPosition",
                                    "type": "enum"
                                },
                                {
                                    "name": "QLineEdit",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLineEdit",
                                    "parameters": [
                                        "const QString &",
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QLineEdit",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "displayText",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "placeholderText",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setPlaceholderText",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maxLength",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaxLength",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setFrame",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasFrame",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setClearButtonEnabled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isClearButtonEnabled",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Normal"
                                        },
                                        {
                                            "name": "NoEcho"
                                        },
                                        {
                                            "name": "Password"
                                        },
                                        {
                                            "name": "PasswordEchoOnEdit"
                                        }
                                    ],
                                    "name": "EchoMode",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "echoMode",
                                    "returns": "QLineEdit::EchoMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setEchoMode",
                                    "parameters": [
                                        "QLineEdit::EchoMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isReadOnly",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setReadOnly",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setValidator",
                                    "parameters": [
                                        "const QValidator *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "validator",
                                    "returns": "const QValidator *",
                                    "type": "function"
                                },
                                {
                                    "name": "setCompleter",
                                    "parameters": [
                                        "QCompleter *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "completer",
                                    "returns": "QCompleter *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cursorPosition",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setCursorPosition",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "cursorPositionAt",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlignment",
                                    "parameters": [
                                        "Qt::Alignment"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alignment",
                                    "returns": "Qt::Alignment",
                                    "type": "function"
                                },
                                {
                                    "name": "cursorForward",
                                    "parameters": [
                                        "bool",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "cursorBackward",
                                    "parameters": [
                                        "bool",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "cursorWordForward",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "cursorWordBackward",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "backspace",
                                    "type": "function"
                                },
                                {
                                    "name": "del",
                                    "type": "function"
                                },
                                {
                                    "name": "home",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "end",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isModified",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setModified",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setSelection",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasSelectedText",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectedText",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectionStart",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectionEnd",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectionLength",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isUndoAvailable",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRedoAvailable",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setDragEnabled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dragEnabled",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setCursorMoveStyle",
                                    "parameters": [
                                        "Qt::CursorMoveStyle"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cursorMoveStyle",
                                    "returns": "Qt::CursorMoveStyle",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inputMask",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setInputMask",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasAcceptableInput",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextMargins",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setTextMargins",
                                    "parameters": [
                                        "const QMargins &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getTextMargins",
                                    "parameters": [
                                        "int *",
                                        "int *",
                                        "int *",
                                        "int *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textMargins",
                                    "returns": "QMargins",
                                    "type": "function"
                                },
                                {
                                    "name": "addAction",
                                    "parameters": [
                                        "QAction *",
                                        "QLineEdit::ActionPosition"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addAction",
                                    "parameters": [
                                        "const QIcon &",
                                        "QLineEdit::ActionPosition"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "setText",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "type": "function"
                                },
                                {
                                    "name": "selectAll",
                                    "type": "function"
                                },
                                {
                                    "name": "undo",
                                    "type": "function"
                                },
                                {
                                    "name": "redo",
                                    "type": "function"
                                },
                                {
                                    "name": "cut",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "copy",
                                    "type": "function"
                                },
                                {
                                    "name": "paste",
                                    "type": "function"
                                },
                                {
                                    "name": "deselect",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "createStandardContextMenu",
                                    "returns": "QMenu *",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "textChanged",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "textEdited",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "cursorPositionChanged",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "returnPressed",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "editingFinished",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "selectionChanged",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inputMethodQuery",
                                    "parameters": [
                                        "Qt::InputMethodQuery"
                                    ],
                                    "returns": "QVariant",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inputMethodQuery",
                                    "parameters": [
                                        "Qt::InputMethodQuery",
                                        "QVariant"
                                    ],
                                    "returns": "QVariant",
                                    "type": "function"
                                },
                                {
                                    "name": "event",
                                    "parameters": [
                                        "QEvent *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QLineEdit",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newLineEdit",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QLineEdit&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newLineEdit",
                            "parameters": [
                                "const QString &",
                                "QWidget*"
                            ],
                            "returns": "QLineEdit&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QLineEdit>",
                    "name": "lineedit",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "name": "QGroupBox",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QGroupBox",
                                    "parameters": [
                                        "const QString &",
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QGroupBox",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "title",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setTitle",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alignment",
                                    "returns": "Qt::Alignment",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlignment",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isFlat",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setFlat",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isCheckable",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setCheckable",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isChecked",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setChecked",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "clicked",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "toggled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QGroupBox",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newGroupBox",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QGroupBox&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newGroupBox",
                            "parameters": [
                                "const QString &",
                                "QWidget*"
                            ],
                            "returns": "QGroupBox&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QGroupBox>",
                    "name": "groupbox",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "name": "QComboBox",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QComboBox",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "maxVisibleItems",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaxVisibleItems",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaxCount",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maxCount",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoCompletion",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoCompletion",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoCompletionCaseSensitivity",
                                    "returns": "Qt::CaseSensitivity",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoCompletionCaseSensitivity",
                                    "parameters": [
                                        "Qt::CaseSensitivity"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "duplicatesEnabled",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setDuplicatesEnabled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setFrame",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasFrame",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "findText",
                                    "parameters": [
                                        "const QString &",
                                        "Qt::MatchFlags"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "findData",
                                    "parameters": [
                                        "const QVariant &",
                                        "int",
                                        "Qt::MatchFlags"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoInsert"
                                        },
                                        {
                                            "name": "InsertAtTop"
                                        },
                                        {
                                            "name": "InsertAtCurrent"
                                        },
                                        {
                                            "name": "InsertAtBottom"
                                        },
                                        {
                                            "name": "InsertAfterCurrent"
                                        },
                                        {
                                            "name": "InsertBeforeCurrent"
                                        },
                                        {
                                            "name": "InsertAlphabetically"
                                        }
                                    ],
                                    "name": "InsertPolicy",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "insertPolicy",
                                    "returns": "QComboBox::InsertPolicy",
                                    "type": "function"
                                },
                                {
                                    "name": "setInsertPolicy",
                                    "parameters": [
                                        "QComboBox::InsertPolicy"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "AdjustToContents"
                                        },
                                        {
                                            "name": "AdjustToContentsOnFirstShow"
                                        },
                                        {
                                            "name": "AdjustToMinimumContentsLength"
                                        },
                                        {
                                            "name": "AdjustToMinimumContentsLengthWithIcon"
                                        }
                                    ],
                                    "name": "SizeAdjustPolicy",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "sizeAdjustPolicy",
                                    "returns": "QComboBox::SizeAdjustPolicy",
                                    "type": "function"
                                },
                                {
                                    "name": "setSizeAdjustPolicy",
                                    "parameters": [
                                        "QComboBox::SizeAdjustPolicy"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumContentsLength",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumContentsLength",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "iconSize",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setIconSize",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEditable",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setEditable",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setLineEdit",
                                    "parameters": [
                                        "QLineEdit *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lineEdit",
                                    "returns": "QLineEdit *",
                                    "type": "function"
                                },
                                {
                                    "name": "setValidator",
                                    "parameters": [
                                        "const QValidator *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "validator",
                                    "returns": "const QValidator *",
                                    "type": "function"
                                },
                                {
                                    "name": "setCompleter",
                                    "parameters": [
                                        "QCompleter *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "completer",
                                    "returns": "QCompleter *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "itemDelegate",
                                    "returns": "QAbstractItemDelegate *",
                                    "type": "function"
                                },
                                {
                                    "name": "setItemDelegate",
                                    "parameters": [
                                        "QAbstractItemDelegate *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "model",
                                    "returns": "QAbstractItemModel *",
                                    "type": "function"
                                },
                                {
                                    "name": "setModel",
                                    "parameters": [
                                        "QAbstractItemModel *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rootModelIndex",
                                    "returns": "QModelIndex",
                                    "type": "function"
                                },
                                {
                                    "name": "setRootModelIndex",
                                    "parameters": [
                                        "const QModelIndex &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "modelColumn",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setModelColumn",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentIndex",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentText",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentData",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QVariant",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "itemText",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "itemIcon",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QIcon",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "itemData",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QVariant",
                                    "type": "function"
                                },
                                {
                                    "name": "addItem",
                                    "parameters": [
                                        "const QString &",
                                        "const QVariant &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addItem",
                                    "parameters": [
                                        "const QIcon &",
                                        "const QString &",
                                        "const QVariant &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addItems",
                                    "parameters": [
                                        "const QStringList &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "insertItem",
                                    "parameters": [
                                        "int",
                                        "const QString &",
                                        "const QVariant &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "insertItem",
                                    "parameters": [
                                        "int",
                                        "const QIcon &",
                                        "const QString &",
                                        "const QVariant &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "insertItems",
                                    "parameters": [
                                        "int",
                                        "const QStringList &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "insertSeparator",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "removeItem",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setItemText",
                                    "parameters": [
                                        "int",
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setItemIcon",
                                    "parameters": [
                                        "int",
                                        "const QIcon &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setItemData",
                                    "parameters": [
                                        "int",
                                        "const QVariant &",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "view",
                                    "returns": "QAbstractItemView *",
                                    "type": "function"
                                },
                                {
                                    "name": "setView",
                                    "parameters": [
                                        "QAbstractItemView *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "showPopup",
                                    "type": "function"
                                },
                                {
                                    "name": "hidePopup",
                                    "type": "function"
                                },
                                {
                                    "name": "event",
                                    "parameters": [
                                        "QEvent *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inputMethodQuery",
                                    "parameters": [
                                        "Qt::InputMethodQuery"
                                    ],
                                    "returns": "QVariant",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inputMethodQuery",
                                    "parameters": [
                                        "Qt::InputMethodQuery",
                                        "const QVariant &"
                                    ],
                                    "returns": "QVariant",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "type": "function"
                                },
                                {
                                    "name": "clearEditText",
                                    "type": "function"
                                },
                                {
                                    "name": "setEditText",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentIndex",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentText",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "editTextChanged",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "activated",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "activated",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "highlighted",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "highlighted",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "currentIndexChanged",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "currentIndexChanged",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "currentTextChanged",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QComboBox",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newComboBox",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QComboBox&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QComboBox>",
                    "name": "combobox",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QComboBox",
                            "elements": [
                                {
                                    "name": "QFontComboBox",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFontComboBox",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setWritingSystem",
                                    "parameters": [
                                        "QFontDatabase::WritingSystem"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "writingSystem",
                                    "returns": "QFontDatabase::WritingSystem",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "AllFonts"
                                        },
                                        {
                                            "name": "ScalableFonts"
                                        },
                                        {
                                            "name": "NonScalableFonts"
                                        },
                                        {
                                            "name": "MonospacedFonts"
                                        },
                                        {
                                            "name": "ProportionalFonts"
                                        }
                                    ],
                                    "name": "FontFilter",
                                    "type": "enum"
                                },
                                {
                                    "name": "setFontFilters",
                                    "parameters": [
                                        "QFontComboBox::FontFilters"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fontFilters",
                                    "returns": "QFontComboBox::FontFilters",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentFont",
                                    "returns": "QFont",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentFont",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "currentFontChanged",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QFontComboBox",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QFontComboBox::FontFilters::enum_type",
                                "QFontComboBox::FontFilters::enum_type"
                            ],
                            "returns": "QFlags<QFontComboBox::FontFilters::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QFontComboBox::FontFilters::enum_type",
                                "QFlags<QFontComboBox::FontFilters::enum_type>"
                            ],
                            "returns": "QFlags<QFontComboBox::FontFilters::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QFontComboBox::FontFilters::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newFontComboBox",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QFontComboBox&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QFontComboBox>",
                    "name": "fontcombobox",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "name": "QAbstractSlider",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QAbstractSlider",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "orientation",
                                    "returns": "Qt::Orientation",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimum",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimum",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximum",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximum",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setSingleStep",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "singleStep",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setPageStep",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pageStep",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setTracking",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasTracking",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setSliderDown",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSliderDown",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setSliderPosition",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sliderPosition",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setInvertedAppearance",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "invertedAppearance",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setInvertedControls",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "invertedControls",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "SliderNoAction"
                                        },
                                        {
                                            "name": "SliderSingleStepAdd"
                                        },
                                        {
                                            "name": "SliderSingleStepSub"
                                        },
                                        {
                                            "name": "SliderPageStepAdd"
                                        },
                                        {
                                            "name": "SliderPageStepSub"
                                        },
                                        {
                                            "name": "SliderToMinimum"
                                        },
                                        {
                                            "name": "SliderToMaximum"
                                        },
                                        {
                                            "name": "SliderMove"
                                        }
                                    ],
                                    "name": "SliderAction",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "value",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "triggerAction",
                                    "parameters": [
                                        "QAbstractSlider::SliderAction"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setValue",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setOrientation",
                                    "parameters": [
                                        "Qt::Orientation"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setRange",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "valueChanged",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "sliderPressed",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "sliderMoved",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "sliderReleased",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "rangeChanged",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "actionTriggered",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QAbstractSlider",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QAbstractSlider>",
                    "name": "abstractslider",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QAbstractSlider",
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoTicks"
                                        },
                                        {
                                            "name": "TicksAbove"
                                        },
                                        {
                                            "name": "TicksLeft"
                                        },
                                        {
                                            "name": "TicksBelow"
                                        },
                                        {
                                            "name": "TicksRight"
                                        },
                                        {
                                            "name": "TicksBothSides"
                                        }
                                    ],
                                    "name": "TickPosition",
                                    "type": "enum"
                                },
                                {
                                    "name": "QSlider",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSlider",
                                    "parameters": [
                                        "Qt::Orientation",
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QSlider",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setTickPosition",
                                    "parameters": [
                                        "QSlider::TickPosition"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tickPosition",
                                    "returns": "QSlider::TickPosition",
                                    "type": "function"
                                },
                                {
                                    "name": "setTickInterval",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tickInterval",
                                    "returns": "int",
                                    "type": "function"
                                }
                            ],
                            "name": "QSlider",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newSlider",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QSlider&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newSlider",
                            "parameters": [
                                "Qt::Orientation",
                                "QWidget*"
                            ],
                            "returns": "QSlider&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QSlider>",
                    "name": "slider",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QAbstractSlider",
                            "elements": [
                                {
                                    "name": "QScrollBar",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QScrollBar",
                                    "parameters": [
                                        "Qt::Orientation",
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QScrollBar",
                                    "type": "destructor"
                                }
                            ],
                            "name": "QScrollBar",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newScrollBar",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QScrollBar&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newScrollBar",
                            "parameters": [
                                "Qt::Orientation",
                                "QWidget*"
                            ],
                            "returns": "QScrollBar&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QScrollBar>",
                    "name": "scrollbar",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QAbstractSlider",
                            "elements": [
                                {
                                    "name": "QDial",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDial",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "wrapping",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "notchSize",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setNotchTarget",
                                    "parameters": [
                                        "double"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "notchTarget",
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "notchesVisible",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setNotchesVisible",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setWrapping",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QDial",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newDial",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QDial&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QDial>",
                    "name": "dial",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "name": "QAbstractSpinBox",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QAbstractSpinBox",
                                    "type": "destructor"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "StepNone"
                                        },
                                        {
                                            "name": "StepUpEnabled"
                                        },
                                        {
                                            "name": "StepDownEnabled"
                                        }
                                    ],
                                    "name": "StepEnabledFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "UpDownArrows"
                                        },
                                        {
                                            "name": "PlusMinus"
                                        },
                                        {
                                            "name": "NoButtons"
                                        }
                                    ],
                                    "name": "ButtonSymbols",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "buttonSymbols",
                                    "returns": "QAbstractSpinBox::ButtonSymbols",
                                    "type": "function"
                                },
                                {
                                    "name": "setButtonSymbols",
                                    "parameters": [
                                        "QAbstractSpinBox::ButtonSymbols"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "CorrectToPreviousValue"
                                        },
                                        {
                                            "name": "CorrectToNearestValue"
                                        }
                                    ],
                                    "name": "CorrectionMode",
                                    "type": "enum"
                                },
                                {
                                    "name": "setCorrectionMode",
                                    "parameters": [
                                        "QAbstractSpinBox::CorrectionMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "correctionMode",
                                    "returns": "QAbstractSpinBox::CorrectionMode",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasAcceptableInput",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "specialValueText",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setSpecialValueText",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "wrapping",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setWrapping",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setReadOnly",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isReadOnly",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setKeyboardTracking",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "keyboardTracking",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlignment",
                                    "parameters": [
                                        "Qt::Alignment"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alignment",
                                    "returns": "Qt::Alignment",
                                    "type": "function"
                                },
                                {
                                    "name": "setFrame",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasFrame",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAccelerated",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isAccelerated",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setGroupSeparatorShown",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isGroupSeparatorShown",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "interpretText",
                                    "type": "function"
                                },
                                {
                                    "name": "event",
                                    "parameters": [
                                        "QEvent *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inputMethodQuery",
                                    "parameters": [
                                        "Qt::InputMethodQuery"
                                    ],
                                    "returns": "QVariant",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "validate",
                                    "parameters": [
                                        "QString &",
                                        "int &"
                                    ],
                                    "returns": "QValidator::State",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fixup",
                                    "parameters": [
                                        "QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "stepBy",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "stepUp",
                                    "type": "function"
                                },
                                {
                                    "name": "stepDown",
                                    "type": "function"
                                },
                                {
                                    "name": "selectAll",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "editingFinished",
                                    "type": "function"
                                }
                            ],
                            "name": "QAbstractSpinBox",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QAbstractSpinBox::StepEnabled::enum_type",
                                "QAbstractSpinBox::StepEnabled::enum_type"
                            ],
                            "returns": "QFlags<QAbstractSpinBox::StepEnabled::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QAbstractSpinBox::StepEnabled::enum_type",
                                "QFlags<QAbstractSpinBox::StepEnabled::enum_type>"
                            ],
                            "returns": "QFlags<QAbstractSpinBox::StepEnabled::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QAbstractSpinBox::StepEnabled::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QAbstractSpinBox>",
                    "name": "abstractspinbox",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QAbstractSpinBox",
                            "elements": [
                                {
                                    "name": "QSpinBox",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QSpinBox",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "value",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "prefix",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setPrefix",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "suffix",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setSuffix",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cleanText",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "singleStep",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setSingleStep",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimum",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimum",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximum",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximum",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setRange",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "displayIntegerBase",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setDisplayIntegerBase",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setValue",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "valueChanged",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "valueChanged",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QSpinBox",
                            "type": "class"
                        },
                        {
                            "base": "QAbstractSpinBox",
                            "elements": [
                                {
                                    "name": "QDoubleSpinBox",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDoubleSpinBox",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "value",
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "prefix",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setPrefix",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "suffix",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setSuffix",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cleanText",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "singleStep",
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "name": "setSingleStep",
                                    "parameters": [
                                        "double"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimum",
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimum",
                                    "parameters": [
                                        "double"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximum",
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximum",
                                    "parameters": [
                                        "double"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setRange",
                                    "parameters": [
                                        "double",
                                        "double"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "decimals",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setDecimals",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "validate",
                                    "parameters": [
                                        "QString &",
                                        "int &"
                                    ],
                                    "returns": "QValidator::State",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "valueFromText",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textFromValue",
                                    "parameters": [
                                        "double"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fixup",
                                    "parameters": [
                                        "QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setValue",
                                    "parameters": [
                                        "double"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "valueChanged",
                                    "parameters": [
                                        "double"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "valueChanged",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QDoubleSpinBox",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newSpinBox",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QSpinBox&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newDoubleSpinBox",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QDoubleSpinBox&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QSpinBox>",
                    "name": "spinbox",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QAbstractSpinBox",
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoSection"
                                        },
                                        {
                                            "name": "AmPmSection"
                                        },
                                        {
                                            "name": "MSecSection"
                                        },
                                        {
                                            "name": "SecondSection"
                                        },
                                        {
                                            "name": "MinuteSection"
                                        },
                                        {
                                            "name": "HourSection"
                                        },
                                        {
                                            "name": "DaySection"
                                        },
                                        {
                                            "name": "MonthSection"
                                        },
                                        {
                                            "name": "YearSection"
                                        },
                                        {
                                            "name": "TimeSections_Mask"
                                        },
                                        {
                                            "name": "DateSections_Mask"
                                        }
                                    ],
                                    "name": "Section",
                                    "type": "enum"
                                },
                                {
                                    "name": "QDateTimeEdit",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateTimeEdit",
                                    "parameters": [
                                        "const QDateTime &",
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateTimeEdit",
                                    "parameters": [
                                        "const QDate &",
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateTimeEdit",
                                    "parameters": [
                                        "const QTime &",
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDateTimeEdit",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "dateTime",
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "date",
                                    "returns": "QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "time",
                                    "returns": "QTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumDateTime",
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "name": "clearMinimumDateTime",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumDateTime",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximumDateTime",
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "name": "clearMaximumDateTime",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximumDateTime",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setDateTimeRange",
                                    "parameters": [
                                        "const QDateTime &",
                                        "const QDateTime &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumDate",
                                    "returns": "QDate",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumDate",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "clearMinimumDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximumDate",
                                    "returns": "QDate",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximumDate",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "clearMaximumDate",
                                    "type": "function"
                                },
                                {
                                    "name": "setDateRange",
                                    "parameters": [
                                        "const QDate &",
                                        "const QDate &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumTime",
                                    "returns": "QTime",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumTime",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "clearMinimumTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximumTime",
                                    "returns": "QTime",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximumTime",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "clearMaximumTime",
                                    "type": "function"
                                },
                                {
                                    "name": "setTimeRange",
                                    "parameters": [
                                        "const QTime &",
                                        "const QTime &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "displayedSections",
                                    "returns": "QDateTimeEdit::Sections",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentSection",
                                    "returns": "QDateTimeEdit::Section",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sectionAt",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QDateTimeEdit::Section",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentSection",
                                    "parameters": [
                                        "QDateTimeEdit::Section"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentSectionIndex",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentSectionIndex",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "calendarWidget",
                                    "returns": "QCalendarWidget *",
                                    "type": "function"
                                },
                                {
                                    "name": "setCalendarWidget",
                                    "parameters": [
                                        "QCalendarWidget *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sectionCount",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setSelectedSection",
                                    "parameters": [
                                        "QDateTimeEdit::Section"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sectionText",
                                    "parameters": [
                                        "QDateTimeEdit::Section"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "displayFormat",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setDisplayFormat",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "calendarPopup",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setCalendarPopup",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "timeSpec",
                                    "returns": "Qt::TimeSpec",
                                    "type": "function"
                                },
                                {
                                    "name": "setTimeSpec",
                                    "parameters": [
                                        "Qt::TimeSpec"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "type": "function"
                                },
                                {
                                    "name": "stepBy",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "event",
                                    "parameters": [
                                        "QEvent *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "dateTimeChanged",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "timeChanged",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "dateChanged",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setDateTime",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setDate",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setTime",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QDateTimeEdit",
                            "type": "class"
                        },
                        {
                            "base": "QDateTimeEdit",
                            "elements": [
                                {
                                    "name": "QTimeEdit",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTimeEdit",
                                    "parameters": [
                                        "const QTime &",
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QTimeEdit",
                                    "type": "destructor"
                                },
                                {
                                    "binding": "signals",
                                    "name": "userTimeChanged",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QTimeEdit",
                            "type": "class"
                        },
                        {
                            "base": "QDateTimeEdit",
                            "elements": [
                                {
                                    "name": "QDateEdit",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateEdit",
                                    "parameters": [
                                        "const QDate &",
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDateEdit",
                                    "type": "destructor"
                                },
                                {
                                    "binding": "signals",
                                    "name": "userDateChanged",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QDateEdit",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QDateTimeEdit::Sections::enum_type",
                                "QDateTimeEdit::Sections::enum_type"
                            ],
                            "returns": "QFlags<QDateTimeEdit::Sections::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QDateTimeEdit::Sections::enum_type",
                                "QFlags<QDateTimeEdit::Sections::enum_type>"
                            ],
                            "returns": "QFlags<QDateTimeEdit::Sections::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QDateTimeEdit::Sections::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newDateTimeEdit",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QDateTimeEdit&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newDateTimeEdit",
                            "parameters": [
                                "const QDateTime&",
                                "QWidget*"
                            ],
                            "returns": "QDateTimeEdit&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newDateTimeEdit",
                            "parameters": [
                                "const QDate&",
                                "QWidget*"
                            ],
                            "returns": "QDateTimeEdit&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newDateTimeEdit",
                            "parameters": [
                                "const QTime&",
                                "QWidget*"
                            ],
                            "returns": "QDateTimeEdit&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newDateEdit",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QDateEdit&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newDateEdit",
                            "parameters": [
                                "const QDate&",
                                "QWidget*"
                            ],
                            "returns": "QDateEdit&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newTimeEdit",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QTimeEdit&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newTimeEdit",
                            "parameters": [
                                "const QTime&",
                                "QWidget*"
                            ],
                            "returns": "QTimeEdit&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QDateTimeEdit>",
                    "name": "datetimeedit",
                    "type": "file"
                },
                {
                    "cppincludes": "checkbox.inc",
                    "elements": [
                        {
                            "base": "QAbstractButton",
                            "elements": [
                                {
                                    "name": "QCheckBox",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QCheckBox",
                                    "parameters": [
                                        "const QString &",
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QCheckBox",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setTristate",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTristate",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "checkState",
                                    "returns": "Qt::CheckState",
                                    "type": "function"
                                },
                                {
                                    "name": "setCheckState",
                                    "parameters": [
                                        "Qt::CheckState"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "stateChanged",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QCheckBox",
                            "type": "class"
                        },
                        {
                            "type": "statement",
                            "value": "register_newcheckbox_functions(widgets);"
                        }
                    ],
                    "hincludes": "<QCheckBox>",
                    "name": "checkbox",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QAbstractButton",
                            "elements": [
                                {
                                    "name": "QRadioButton",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRadioButton",
                                    "parameters": [
                                        "const QString &",
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QRadioButton",
                                    "type": "destructor"
                                }
                            ],
                            "name": "QRadioButton",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newRadioButton",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QRadioButton&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newRadioButton",
                            "parameters": [
                                "const QString&",
                                "QWidget*"
                            ],
                            "returns": "QRadioButton&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QRadioButton>",
                    "name": "radiobutton",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QAbstractButton",
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "DelayedPopup"
                                        },
                                        {
                                            "name": "MenuButtonPopup"
                                        },
                                        {
                                            "name": "InstantPopup"
                                        }
                                    ],
                                    "name": "ToolButtonPopupMode",
                                    "type": "enum"
                                },
                                {
                                    "name": "QToolButton",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QToolButton",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toolButtonStyle",
                                    "returns": "Qt::ToolButtonStyle",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "arrowType",
                                    "returns": "Qt::ArrowType",
                                    "type": "function"
                                },
                                {
                                    "name": "setArrowType",
                                    "parameters": [
                                        "Qt::ArrowType"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setMenu",
                                    "parameters": [
                                        "QMenu *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "menu",
                                    "returns": "QMenu *",
                                    "type": "function"
                                },
                                {
                                    "name": "setPopupMode",
                                    "parameters": [
                                        "QToolButton::ToolButtonPopupMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "popupMode",
                                    "returns": "QToolButton::ToolButtonPopupMode",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "defaultAction",
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoRaise",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoRaise",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "showMenu",
                                    "type": "function"
                                },
                                {
                                    "name": "setToolButtonStyle",
                                    "parameters": [
                                        "Qt::ToolButtonStyle"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setDefaultAction",
                                    "parameters": [
                                        "QAction *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "triggered",
                                    "parameters": [
                                        "QAction *"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QToolButton",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newToolButton",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QToolButton&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QToolButton>",
                    "name": "toolbutton",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QObject",
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoRole"
                                        },
                                        {
                                            "name": "TextHeuristicRole"
                                        },
                                        {
                                            "name": "ApplicationSpecificRole"
                                        },
                                        {
                                            "name": "AboutQtRole"
                                        },
                                        {
                                            "name": "AboutRole"
                                        },
                                        {
                                            "name": "PreferencesRole"
                                        },
                                        {
                                            "name": "QuitRole"
                                        }
                                    ],
                                    "name": "MenuRole",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "LowPriority"
                                        },
                                        {
                                            "name": "NormalPriority"
                                        },
                                        {
                                            "name": "HighPriority"
                                        }
                                    ],
                                    "name": "Priority",
                                    "type": "enum"
                                },
                                {
                                    "name": "QAction",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QAction",
                                    "parameters": [
                                        "const QString &",
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QAction",
                                    "parameters": [
                                        "const QIcon &",
                                        "const QString &",
                                        "QObject *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QAction",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setActionGroup",
                                    "parameters": [
                                        "QActionGroup *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "actionGroup",
                                    "returns": "QActionGroup *",
                                    "type": "function"
                                },
                                {
                                    "name": "setIcon",
                                    "parameters": [
                                        "const QIcon &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "icon",
                                    "returns": "QIcon",
                                    "type": "function"
                                },
                                {
                                    "name": "setText",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setIconText",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "iconText",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setToolTip",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toolTip",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setStatusTip",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "statusTip",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setWhatsThis",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "whatsThis",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setPriority",
                                    "parameters": [
                                        "QAction::Priority"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "priority",
                                    "returns": "QAction::Priority",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "menu",
                                    "returns": "QMenu *",
                                    "type": "function"
                                },
                                {
                                    "name": "setMenu",
                                    "parameters": [
                                        "QMenu *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setSeparator",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSeparator",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setShortcut",
                                    "parameters": [
                                        "const QKeySequence &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "shortcut",
                                    "returns": "QKeySequence",
                                    "type": "function"
                                },
                                {
                                    "name": "setShortcuts",
                                    "parameters": [
                                        "const QList<QKeySequence> &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setShortcuts",
                                    "parameters": [
                                        "QKeySequence::StandardKey"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "shortcuts",
                                    "returns": "QList<QKeySequence>",
                                    "type": "function"
                                },
                                {
                                    "name": "setShortcutContext",
                                    "parameters": [
                                        "Qt::ShortcutContext"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "shortcutContext",
                                    "returns": "Qt::ShortcutContext",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoRepeat",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoRepeat",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setFont",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "font",
                                    "returns": "QFont",
                                    "type": "function"
                                },
                                {
                                    "name": "setCheckable",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isCheckable",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "data",
                                    "returns": "QVariant",
                                    "type": "function"
                                },
                                {
                                    "name": "setData",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isChecked",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEnabled",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isVisible",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Trigger"
                                        },
                                        {
                                            "name": "Hover"
                                        }
                                    ],
                                    "name": "ActionEvent",
                                    "type": "enum"
                                },
                                {
                                    "name": "activate",
                                    "parameters": [
                                        "QAction::ActionEvent"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "showStatusText",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setMenuRole",
                                    "parameters": [
                                        "QAction::MenuRole"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "menuRole",
                                    "returns": "QAction::MenuRole",
                                    "type": "function"
                                },
                                {
                                    "name": "setIconVisibleInMenu",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isIconVisibleInMenu",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setShortcutVisibleInContextMenu",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isShortcutVisibleInContextMenu",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "parentWidget",
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "associatedWidgets",
                                    "returns": "QList<QWidget *>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "associatedGraphicsWidgets",
                                    "returns": "QList<QGraphicsWidget *>",
                                    "type": "function"
                                },
                                {
                                    "name": "trigger",
                                    "type": "function"
                                },
                                {
                                    "name": "hover",
                                    "type": "function"
                                },
                                {
                                    "name": "setChecked",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "toggle",
                                    "type": "function"
                                },
                                {
                                    "name": "setEnabled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setDisabled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setVisible",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "changed",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "triggered",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "hovered",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "toggled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QAction",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QAction *"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newAction",
                            "parameters": [
                                "QObject*"
                            ],
                            "returns": "QAction&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newAction",
                            "parameters": [
                                "const QString&",
                                "QObject*"
                            ],
                            "returns": "QAction&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newAction",
                            "parameters": [
                                "const QIcon&",
                                "const QString&",
                                "QObject*"
                            ],
                            "returns": "QAction&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QAction>",
                    "name": "action",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "name": "QMenu",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QMenu",
                                    "parameters": [
                                        "const QString &",
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QMenu",
                                    "type": "destructor"
                                },
                                {
                                    "name": "addAction",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addAction",
                                    "parameters": [
                                        "const QIcon &",
                                        "const QString &"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addAction",
                                    "parameters": [
                                        "const QString &",
                                        "const QObject *",
                                        "const char *",
                                        "const QKeySequence &"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addAction",
                                    "parameters": [
                                        "const QIcon &",
                                        "const QString &",
                                        "const QObject *",
                                        "const char *",
                                        "const QKeySequence &"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addMenu",
                                    "parameters": [
                                        "QMenu *"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addMenu",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QMenu *",
                                    "type": "function"
                                },
                                {
                                    "name": "addMenu",
                                    "parameters": [
                                        "const QIcon &",
                                        "const QString &"
                                    ],
                                    "returns": "QMenu *",
                                    "type": "function"
                                },
                                {
                                    "name": "addSeparator",
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addSection",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addSection",
                                    "parameters": [
                                        "const QIcon &",
                                        "const QString &"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "insertMenu",
                                    "parameters": [
                                        "QAction *",
                                        "QMenu *"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "insertSeparator",
                                    "parameters": [
                                        "QAction *"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "insertSection",
                                    "parameters": [
                                        "QAction *",
                                        "const QString &"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "insertSection",
                                    "parameters": [
                                        "QAction *",
                                        "const QIcon &",
                                        "const QString &"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "type": "function"
                                },
                                {
                                    "name": "setTearOffEnabled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTearOffEnabled",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTearOffMenuVisible",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "showTearOffMenu",
                                    "type": "function"
                                },
                                {
                                    "name": "showTearOffMenu",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "hideTearOffMenu",
                                    "type": "function"
                                },
                                {
                                    "name": "setDefaultAction",
                                    "parameters": [
                                        "QAction *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "defaultAction",
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "setActiveAction",
                                    "parameters": [
                                        "QAction *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "activeAction",
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "popup",
                                    "parameters": [
                                        "const QPoint &",
                                        "QAction *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "exec",
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "exec",
                                    "parameters": [
                                        "const QPoint &",
                                        "QAction *"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "exec",
                                    "parameters": [
                                        "QList<QAction *>",
                                        "const QPoint &",
                                        "QAction *",
                                        "QWidget *"
                                    ],
                                    "returns": "QAction *",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "actionGeometry",
                                    "parameters": [
                                        "QAction *"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "actionAt",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "menuAction",
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "title",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setTitle",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "icon",
                                    "returns": "QIcon",
                                    "type": "function"
                                },
                                {
                                    "name": "setIcon",
                                    "parameters": [
                                        "const QIcon &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setNoReplayFor",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "platformMenu",
                                    "returns": "QPlatformMenu *",
                                    "type": "function"
                                },
                                {
                                    "name": "setPlatformMenu",
                                    "parameters": [
                                        "QPlatformMenu *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "separatorsCollapsible",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setSeparatorsCollapsible",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toolTipsVisible",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setToolTipsVisible",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "aboutToShow",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "aboutToHide",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "triggered",
                                    "parameters": [
                                        "QAction *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "hovered",
                                    "parameters": [
                                        "QAction *"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QMenu",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newMenu",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QMenu&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newMenu",
                            "parameters": [
                                "const QString&",
                                "QWidget*"
                            ],
                            "returns": "QMenu&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QMenu>",
                    "name": "menu",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QObject",
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "SetDefaultConstraint"
                                        },
                                        {
                                            "name": "SetNoConstraint"
                                        },
                                        {
                                            "name": "SetMinimumSize"
                                        },
                                        {
                                            "name": "SetFixedSize"
                                        },
                                        {
                                            "name": "SetMaximumSize"
                                        },
                                        {
                                            "name": "SetMinAndMaxSize"
                                        }
                                    ],
                                    "name": "SizeConstraint",
                                    "type": "enum"
                                },
                                {
                                    "checked": 0,
                                    "name": "QLayout",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "checked": 0,
                                    "name": "QLayout",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QLayout",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "margin",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "spacing",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMargin",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setSpacing",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setContentsMargins",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setContentsMargins",
                                    "parameters": [
                                        "const QMargins &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getContentsMargins",
                                    "parameters": [
                                        "int *",
                                        "int *",
                                        "int *",
                                        "int *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contentsMargins",
                                    "returns": "QMargins",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contentsRect",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlignment",
                                    "parameters": [
                                        "QWidget *",
                                        "Qt::Alignment"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlignment",
                                    "parameters": [
                                        "QLayout *",
                                        "Qt::Alignment"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setSizeConstraint",
                                    "parameters": [
                                        "QLayout::SizeConstraint"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeConstraint",
                                    "returns": "QLayout::SizeConstraint",
                                    "type": "function"
                                },
                                {
                                    "name": "setMenuBar",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "menuBar",
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "parentWidget",
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "name": "invalidate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "geometry",
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "activate",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "update",
                                    "type": "function"
                                },
                                {
                                    "name": "addWidget",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addItem",
                                    "parameters": [
                                        "QLayoutItem *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "removeWidget",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "removeItem",
                                    "parameters": [
                                        "QLayoutItem *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "expandingDirections",
                                    "returns": "Qt::Orientations",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSize",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximumSize",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setGeometry",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "itemAt",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QLayoutItem *",
                                    "type": "function"
                                },
                                {
                                    "name": "takeAt",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QLayoutItem *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "indexOf",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "controlTypes",
                                    "returns": "QSizePolicy::ControlTypes",
                                    "type": "function"
                                },
                                {
                                    "name": "replaceWidget",
                                    "parameters": [
                                        "QWidget *",
                                        "QWidget *",
                                        "Qt::FindChildOptions"
                                    ],
                                    "returns": "QLayoutItem *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "totalHeightForWidth",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "totalMinimumSize",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "totalMaximumSize",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "totalSizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "layout",
                                    "returns": "QLayout *",
                                    "type": "function"
                                },
                                {
                                    "name": "setEnabled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEnabled",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "closestAcceptableSize",
                                    "parameters": [
                                        "const QWidget *",
                                        "const QSize &"
                                    ],
                                    "returns": "QSize",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QLayout",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QLayout>",
                    "name": "layout",
                    "type": "file"
                },
                {
                    "cppincludes": "boxlayout.inc",
                    "elements": [
                        {
                            "base": "QLayout",
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "LeftToRight"
                                        },
                                        {
                                            "name": "RightToLeft"
                                        },
                                        {
                                            "name": "TopToBottom"
                                        },
                                        {
                                            "name": "BottomToTop"
                                        },
                                        {
                                            "name": "Down"
                                        },
                                        {
                                            "name": "Up"
                                        }
                                    ],
                                    "name": "Direction",
                                    "type": "enum"
                                },
                                {
                                    "name": "QBoxLayout",
                                    "parameters": [
                                        "QBoxLayout::Direction",
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QBoxLayout",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "direction",
                                    "returns": "QBoxLayout::Direction",
                                    "type": "function"
                                },
                                {
                                    "name": "setDirection",
                                    "parameters": [
                                        "QBoxLayout::Direction"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addSpacing",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addStretch",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addSpacerItem",
                                    "parameters": [
                                        "QSpacerItem *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::Alignment();0",
                                    "name": "addWidget",
                                    "parameters": [
                                        "QWidget *",
                                        "int",
                                        "Qt::Alignment"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addLayout",
                                    "parameters": [
                                        "QLayout *",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addStrut",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "insertSpacing",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "insertStretch",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "insertSpacerItem",
                                    "parameters": [
                                        "int",
                                        "QSpacerItem *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "insertWidget",
                                    "parameters": [
                                        "int",
                                        "QWidget *",
                                        "int",
                                        "Qt::Alignment"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "insertLayout",
                                    "parameters": [
                                        "int",
                                        "QLayout *",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "insertItem",
                                    "parameters": [
                                        "int",
                                        "QLayoutItem *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "spacing",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setSpacing",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setStretchFactor",
                                    "parameters": [
                                        "QWidget *",
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setStretchFactor",
                                    "parameters": [
                                        "QLayout *",
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setStretch",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "stretch",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                }
                            ],
                            "name": "QBoxLayout",
                            "type": "class"
                        },
                        {
                            "base": "QBoxLayout",
                            "elements": [
                                {
                                    "name": "QHBoxLayout",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QHBoxLayout",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QHBoxLayout",
                                    "type": "destructor"
                                }
                            ],
                            "name": "QHBoxLayout",
                            "type": "class"
                        },
                        {
                            "base": "QBoxLayout",
                            "elements": [
                                {
                                    "name": "QVBoxLayout",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVBoxLayout",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QVBoxLayout",
                                    "type": "destructor"
                                }
                            ],
                            "name": "QVBoxLayout",
                            "type": "class"
                        },
                        {
                            "type": "statement",
                            "value": "register_newlayout_functions(widgets);"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newHBoxLayout",
                            "returns": "QHBoxLayout&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newHBoxLayout",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QHBoxLayout&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newVBoxLayout",
                            "returns": "QVBoxLayout&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newVBoxLayout",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QVBoxLayout&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QBoxLayout>",
                    "name": "boxlayout",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QLayout",
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "FieldsStayAtSizeHint"
                                        },
                                        {
                                            "name": "ExpandingFieldsGrow"
                                        },
                                        {
                                            "name": "AllNonFixedFieldsGrow"
                                        }
                                    ],
                                    "name": "FieldGrowthPolicy",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "DontWrapRows"
                                        },
                                        {
                                            "name": "WrapLongRows"
                                        },
                                        {
                                            "name": "WrapAllRows"
                                        }
                                    ],
                                    "name": "RowWrapPolicy",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "LabelRole"
                                        },
                                        {
                                            "name": "FieldRole"
                                        },
                                        {
                                            "name": "SpanningRole"
                                        }
                                    ],
                                    "name": "ItemRole",
                                    "type": "enum"
                                },
                                {
                                    "name": "QFormLayout",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFormLayout",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setFieldGrowthPolicy",
                                    "parameters": [
                                        "QFormLayout::FieldGrowthPolicy"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fieldGrowthPolicy",
                                    "returns": "QFormLayout::FieldGrowthPolicy",
                                    "type": "function"
                                },
                                {
                                    "name": "setRowWrapPolicy",
                                    "parameters": [
                                        "QFormLayout::RowWrapPolicy"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rowWrapPolicy",
                                    "returns": "QFormLayout::RowWrapPolicy",
                                    "type": "function"
                                },
                                {
                                    "name": "setLabelAlignment",
                                    "parameters": [
                                        "Qt::Alignment"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "labelAlignment",
                                    "returns": "Qt::Alignment",
                                    "type": "function"
                                },
                                {
                                    "name": "setFormAlignment",
                                    "parameters": [
                                        "Qt::Alignment"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "formAlignment",
                                    "returns": "Qt::Alignment",
                                    "type": "function"
                                },
                                {
                                    "name": "setHorizontalSpacing",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "horizontalSpacing",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setVerticalSpacing",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "verticalSpacing",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "spacing",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setSpacing",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addRow",
                                    "parameters": [
                                        "QWidget *",
                                        "QWidget *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addRow",
                                    "parameters": [
                                        "QWidget *",
                                        "QLayout *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addRow",
                                    "parameters": [
                                        "const QString &",
                                        "QWidget *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addRow",
                                    "parameters": [
                                        "const QString &",
                                        "QLayout *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addRow",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addRow",
                                    "parameters": [
                                        "QLayout *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "insertRow",
                                    "parameters": [
                                        "int",
                                        "QWidget *",
                                        "QWidget *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "insertRow",
                                    "parameters": [
                                        "int",
                                        "QWidget *",
                                        "QLayout *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "insertRow",
                                    "parameters": [
                                        "int",
                                        "const QString &",
                                        "QWidget *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "insertRow",
                                    "parameters": [
                                        "int",
                                        "const QString &",
                                        "QLayout *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "insertRow",
                                    "parameters": [
                                        "int",
                                        "QWidget *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "insertRow",
                                    "parameters": [
                                        "int",
                                        "QLayout *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "removeRow",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "removeRow",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "removeRow",
                                    "parameters": [
                                        "QLayout *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "takeRow",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QFormLayout::TakeRowResult",
                                    "type": "function"
                                },
                                {
                                    "name": "takeRow",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "returns": "QFormLayout::TakeRowResult",
                                    "type": "function"
                                },
                                {
                                    "name": "takeRow",
                                    "parameters": [
                                        "QLayout *"
                                    ],
                                    "returns": "QFormLayout::TakeRowResult",
                                    "type": "function"
                                },
                                {
                                    "name": "setItem",
                                    "parameters": [
                                        "int",
                                        "QFormLayout::ItemRole",
                                        "QLayoutItem *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setWidget",
                                    "parameters": [
                                        "int",
                                        "QFormLayout::ItemRole",
                                        "QWidget *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setLayout",
                                    "parameters": [
                                        "int",
                                        "QFormLayout::ItemRole",
                                        "QLayout *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "itemAt",
                                    "parameters": [
                                        "int",
                                        "QFormLayout::ItemRole"
                                    ],
                                    "returns": "QLayoutItem *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getItemPosition",
                                    "parameters": [
                                        "int",
                                        "int *",
                                        "QFormLayout::ItemRole *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getWidgetPosition",
                                    "parameters": [
                                        "QWidget *",
                                        "int *",
                                        "QFormLayout::ItemRole *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getLayoutPosition",
                                    "parameters": [
                                        "QLayout *",
                                        "int *",
                                        "QFormLayout::ItemRole *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "labelForField",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "labelForField",
                                    "parameters": [
                                        "QLayout *"
                                    ],
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "name": "addItem",
                                    "parameters": [
                                        "QLayoutItem *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "itemAt",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QLayoutItem *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rowCount",
                                    "returns": "int",
                                    "type": "function"
                                }
                            ],
                            "name": "QFormLayout",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newFormLayout",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QFormLayout&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QFormLayout>",
                    "name": "formlayout",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QLayout",
                            "checked": 1,
                            "elements": [
                                {
                                    "name": "QGridLayout",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QGridLayout",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QGridLayout",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setHorizontalSpacing",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "horizontalSpacing",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setVerticalSpacing",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "verticalSpacing",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setSpacing",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "spacing",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setRowStretch",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setColumnStretch",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rowStretch",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "columnStretch",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setRowMinimumHeight",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setColumnMinimumWidth",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rowMinimumHeight",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "columnMinimumWidth",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "columnCount",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rowCount",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cellRect",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "addWidget",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addWidget",
                                    "parameters": [
                                        "QWidget *",
                                        "int",
                                        "int",
                                        "Qt::Alignment"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "addWidget",
                                    "parameters": [
                                        "QWidget *",
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "Qt::Alignment"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addLayout",
                                    "parameters": [
                                        "QLayout *",
                                        "int",
                                        "int",
                                        "Qt::Alignment"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "addLayout",
                                    "parameters": [
                                        "QLayout *",
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "Qt::Alignment"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setOriginCorner",
                                    "parameters": [
                                        "Qt::Corner"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "originCorner",
                                    "returns": "Qt::Corner",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "itemAtPosition",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QLayoutItem *",
                                    "type": "function"
                                },
                                {
                                    "name": "setGeometry",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addItem",
                                    "parameters": [
                                        "QLayoutItem *",
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "Qt::Alignment"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setDefaultPositioning",
                                    "parameters": [
                                        "int",
                                        "Qt::Orientation"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getItemPosition",
                                    "parameters": [
                                        "int",
                                        "int *",
                                        "int *",
                                        "int *",
                                        "int *"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QGridLayout",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newGridLayout",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QGridLayout&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newGridLayout",
                            "returns": "QGridLayout&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QGridLayout>",
                    "name": "gridlayout",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QLayout",
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "StackOne"
                                        },
                                        {
                                            "name": "StackAll"
                                        }
                                    ],
                                    "name": "StackingMode",
                                    "type": "enum"
                                },
                                {
                                    "name": "QStackedLayout",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QStackedLayout",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QStackedLayout",
                                    "parameters": [
                                        "QLayout *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QStackedLayout",
                                    "type": "destructor"
                                },
                                {
                                    "name": "addWidget",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "insertWidget",
                                    "parameters": [
                                        "int",
                                        "QWidget *"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentWidget",
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentIndex",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "widget",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "stackingMode",
                                    "returns": "QStackedLayout::StackingMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setStackingMode",
                                    "parameters": [
                                        "QStackedLayout::StackingMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addItem",
                                    "parameters": [
                                        "QLayoutItem *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSize",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "itemAt",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QLayoutItem *",
                                    "type": "function"
                                },
                                {
                                    "name": "takeAt",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QLayoutItem *",
                                    "type": "function"
                                },
                                {
                                    "name": "setGeometry",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasHeightForWidth",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "heightForWidth",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "widgetRemoved",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "currentChanged",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentIndex",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentWidget",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QStackedLayout",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newStackedLayout",
                            "returns": "QStackedLayout&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newStackedLayout",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QStackedLayout&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newStackedLayout",
                            "parameters": [
                                "QLayout*"
                            ],
                            "returns": "QStackedLayout&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QStackedLayout>",
                    "name": "stackedlayout",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "name": "QDialog",
                                    "parameters": [
                                        "QWidget *",
                                        "Qt::WindowFlags"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDialog",
                                    "type": "destructor"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Rejected"
                                        },
                                        {
                                            "name": "Accepted"
                                        }
                                    ],
                                    "name": "DialogCode",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "result",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setVisible",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setOrientation",
                                    "parameters": [
                                        "Qt::Orientation"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "orientation",
                                    "returns": "Qt::Orientation",
                                    "type": "function"
                                },
                                {
                                    "name": "setExtension",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "extension",
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setSizeGripEnabled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSizeGripEnabled",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setModal",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setResult",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "finished",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "accepted",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "rejected",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "type": "function"
                                },
                                {
                                    "name": "exec",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "done",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "accept",
                                    "type": "function"
                                },
                                {
                                    "name": "reject",
                                    "type": "function"
                                },
                                {
                                    "name": "showExtension",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QDialog",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QDialog>",
                    "name": "dialog",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QDialog",
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoIcon"
                                        },
                                        {
                                            "name": "Information"
                                        },
                                        {
                                            "name": "Warning"
                                        },
                                        {
                                            "name": "Critical"
                                        },
                                        {
                                            "name": "Question"
                                        }
                                    ],
                                    "name": "Icon",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "InvalidRole"
                                        },
                                        {
                                            "name": "AcceptRole"
                                        },
                                        {
                                            "name": "RejectRole"
                                        },
                                        {
                                            "name": "DestructiveRole"
                                        },
                                        {
                                            "name": "ActionRole"
                                        },
                                        {
                                            "name": "HelpRole"
                                        },
                                        {
                                            "name": "YesRole"
                                        },
                                        {
                                            "name": "NoRole"
                                        },
                                        {
                                            "name": "ResetRole"
                                        },
                                        {
                                            "name": "ApplyRole"
                                        },
                                        {
                                            "name": "NRoles"
                                        }
                                    ],
                                    "name": "ButtonRole",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoButton"
                                        },
                                        {
                                            "name": "Ok"
                                        },
                                        {
                                            "name": "Save"
                                        },
                                        {
                                            "name": "SaveAll"
                                        },
                                        {
                                            "name": "Open"
                                        },
                                        {
                                            "name": "Yes"
                                        },
                                        {
                                            "name": "YesToAll"
                                        },
                                        {
                                            "name": "No"
                                        },
                                        {
                                            "name": "NoToAll"
                                        },
                                        {
                                            "name": "Abort"
                                        },
                                        {
                                            "name": "Retry"
                                        },
                                        {
                                            "name": "Ignore"
                                        },
                                        {
                                            "name": "Close"
                                        },
                                        {
                                            "name": "Cancel"
                                        },
                                        {
                                            "name": "Discard"
                                        },
                                        {
                                            "name": "Help"
                                        },
                                        {
                                            "name": "Apply"
                                        },
                                        {
                                            "name": "Reset"
                                        },
                                        {
                                            "name": "RestoreDefaults"
                                        },
                                        {
                                            "name": "FirstButton"
                                        },
                                        {
                                            "name": "LastButton"
                                        },
                                        {
                                            "name": "YesAll"
                                        },
                                        {
                                            "name": "NoAll"
                                        },
                                        {
                                            "name": "Default"
                                        },
                                        {
                                            "name": "Escape"
                                        },
                                        {
                                            "name": "FlagMask"
                                        },
                                        {
                                            "name": "ButtonMask"
                                        }
                                    ],
                                    "name": "StandardButton",
                                    "type": "enum"
                                },
                                {
                                    "name": "QMessageBox",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QMessageBox",
                                    "parameters": [
                                        "QMessageBox::Icon",
                                        "const QString &",
                                        "const QString &",
                                        "QMessageBox::StandardButtons",
                                        "QWidget *",
                                        "Qt::WindowFlags"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QMessageBox",
                                    "type": "destructor"
                                },
                                {
                                    "name": "addButton",
                                    "parameters": [
                                        "QAbstractButton *",
                                        "QMessageBox::ButtonRole"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "addButton",
                                    "parameters": [
                                        "const QString &",
                                        "QMessageBox::ButtonRole"
                                    ],
                                    "returns": "QPushButton *",
                                    "type": "function"
                                },
                                {
                                    "name": "addButton",
                                    "parameters": [
                                        "QMessageBox::StandardButton"
                                    ],
                                    "returns": "QPushButton *",
                                    "type": "function"
                                },
                                {
                                    "name": "removeButton",
                                    "parameters": [
                                        "QAbstractButton *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "parameters": [
                                        "QObject *",
                                        "const char *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "buttons",
                                    "returns": "QList<QAbstractButton *>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "buttonRole",
                                    "parameters": [
                                        "QAbstractButton *"
                                    ],
                                    "returns": "QMessageBox::ButtonRole",
                                    "type": "function"
                                },
                                {
                                    "name": "setStandardButtons",
                                    "parameters": [
                                        "QMessageBox::StandardButtons"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "standardButtons",
                                    "returns": "QMessageBox::StandardButtons",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "standardButton",
                                    "parameters": [
                                        "QAbstractButton *"
                                    ],
                                    "returns": "QMessageBox::StandardButton",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "button",
                                    "parameters": [
                                        "QMessageBox::StandardButton"
                                    ],
                                    "returns": "QAbstractButton *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "defaultButton",
                                    "returns": "QPushButton *",
                                    "type": "function"
                                },
                                {
                                    "name": "setDefaultButton",
                                    "parameters": [
                                        "QPushButton *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setDefaultButton",
                                    "parameters": [
                                        "QMessageBox::StandardButton"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "escapeButton",
                                    "returns": "QAbstractButton *",
                                    "type": "function"
                                },
                                {
                                    "name": "setEscapeButton",
                                    "parameters": [
                                        "QAbstractButton *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setEscapeButton",
                                    "parameters": [
                                        "QMessageBox::StandardButton"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "clickedButton",
                                    "returns": "QAbstractButton *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setText",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "icon",
                                    "returns": "QMessageBox::Icon",
                                    "type": "function"
                                },
                                {
                                    "name": "setIcon",
                                    "parameters": [
                                        "QMessageBox::Icon"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "iconPixmap",
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "name": "setIconPixmap",
                                    "parameters": [
                                        "const QPixmap &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textFormat",
                                    "returns": "Qt::TextFormat",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextFormat",
                                    "parameters": [
                                        "Qt::TextFormat"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setTextInteractionFlags",
                                    "parameters": [
                                        "Qt::TextInteractionFlags"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textInteractionFlags",
                                    "returns": "Qt::TextInteractionFlags",
                                    "type": "function"
                                },
                                {
                                    "name": "setCheckBox",
                                    "parameters": [
                                        "QCheckBox *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "checkBox",
                                    "returns": "QCheckBox *",
                                    "type": "function"
                                },
                                {
                                    "name": "information",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "QMessageBox::StandardButtons",
                                        "QMessageBox::StandardButton"
                                    ],
                                    "returns": "QMessageBox::StandardButton",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "question",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "QMessageBox::StandardButtons",
                                        "QMessageBox::StandardButton"
                                    ],
                                    "returns": "QMessageBox::StandardButton",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "warning",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "QMessageBox::StandardButtons",
                                        "QMessageBox::StandardButton"
                                    ],
                                    "returns": "QMessageBox::StandardButton",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "critical",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "QMessageBox::StandardButtons",
                                        "QMessageBox::StandardButton"
                                    ],
                                    "returns": "QMessageBox::StandardButton",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "about",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "aboutQt",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "QMessageBox",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &",
                                        "QMessageBox::Icon",
                                        "int",
                                        "int",
                                        "int",
                                        "QWidget *",
                                        "Qt::WindowFlags"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "checked": 0,
                                    "name": "information",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "information",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "const QString &",
                                        "const QString &",
                                        "const QString &",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "information",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "QMessageBox::StandardButton",
                                        "QMessageBox::StandardButton"
                                    ],
                                    "returns": "QMessageBox::StandardButton",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "question",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "question",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "const QString &",
                                        "const QString &",
                                        "const QString &",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "question",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "QMessageBox::StandardButton",
                                        "QMessageBox::StandardButton"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "warning",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "warning",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "const QString &",
                                        "const QString &",
                                        "const QString &",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "warning",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "QMessageBox::StandardButton",
                                        "QMessageBox::StandardButton"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "critical",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "critical",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "const QString &",
                                        "const QString &",
                                        "const QString &",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "critical",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "QMessageBox::StandardButton",
                                        "QMessageBox::StandardButton"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "buttonText",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setButtonText",
                                    "parameters": [
                                        "int",
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "informativeText",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setInformativeText",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "detailedText",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setDetailedText",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowTitle",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowModality",
                                    "parameters": [
                                        "Qt::WindowModality"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "standardIcon",
                                    "parameters": [
                                        "QMessageBox::Icon"
                                    ],
                                    "returns": "QPixmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "buttonClicked",
                                    "parameters": [
                                        "QAbstractButton *"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QMessageBox",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QMessageBox::StandardButtons::enum_type",
                                "QMessageBox::StandardButtons::enum_type"
                            ],
                            "returns": "QFlags<QMessageBox::StandardButtons::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QMessageBox::StandardButtons::enum_type",
                                "QFlags<QMessageBox::StandardButtons::enum_type>"
                            ],
                            "returns": "QFlags<QMessageBox::StandardButtons::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QMessageBox::StandardButtons::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QMessageBox>",
                    "name": "messagebox",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QDialog",
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Detail"
                                        },
                                        {
                                            "name": "List"
                                        }
                                    ],
                                    "name": "ViewMode",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "AnyFile"
                                        },
                                        {
                                            "name": "ExistingFile"
                                        },
                                        {
                                            "name": "Directory"
                                        },
                                        {
                                            "name": "ExistingFiles"
                                        },
                                        {
                                            "name": "DirectoryOnly"
                                        }
                                    ],
                                    "name": "FileMode",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "AcceptOpen"
                                        },
                                        {
                                            "name": "AcceptSave"
                                        }
                                    ],
                                    "name": "AcceptMode",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "LookIn"
                                        },
                                        {
                                            "name": "FileName"
                                        },
                                        {
                                            "name": "FileType"
                                        },
                                        {
                                            "name": "Accept"
                                        },
                                        {
                                            "name": "Reject"
                                        }
                                    ],
                                    "name": "DialogLabel",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "ShowDirsOnly"
                                        },
                                        {
                                            "name": "DontResolveSymlinks"
                                        },
                                        {
                                            "name": "DontConfirmOverwrite"
                                        },
                                        {
                                            "name": "DontUseSheet"
                                        },
                                        {
                                            "name": "DontUseNativeDialog"
                                        },
                                        {
                                            "name": "ReadOnly"
                                        },
                                        {
                                            "name": "HideNameFilterDetails"
                                        },
                                        {
                                            "name": "DontUseCustomDirectoryIcons"
                                        }
                                    ],
                                    "name": "Option",
                                    "type": "enum"
                                },
                                {
                                    "name": "QFileDialog",
                                    "parameters": [
                                        "QWidget *",
                                        "Qt::WindowFlags"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFileDialog",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFileDialog",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setDirectory",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setDirectory",
                                    "parameters": [
                                        "const QDir &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "directory",
                                    "returns": "QDir",
                                    "type": "function"
                                },
                                {
                                    "name": "setDirectoryUrl",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "directoryUrl",
                                    "returns": "QUrl",
                                    "type": "function"
                                },
                                {
                                    "name": "selectFile",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectedFiles",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "selectUrl",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectedUrls",
                                    "returns": "QList<QUrl>",
                                    "type": "function"
                                },
                                {
                                    "name": "setNameFilterDetailsVisible",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNameFilterDetailsVisible",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setNameFilter",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setNameFilters",
                                    "parameters": [
                                        "const QStringList &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nameFilters",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "selectNameFilter",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectedMimeTypeFilter",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectedNameFilter",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setMimeTypeFilters",
                                    "parameters": [
                                        "const QStringList &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mimeTypeFilters",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "selectMimeTypeFilter",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "filter",
                                    "returns": "QDir::Filters",
                                    "type": "function"
                                },
                                {
                                    "name": "setFilter",
                                    "parameters": [
                                        "QDir::Filters"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setViewMode",
                                    "parameters": [
                                        "QFileDialog::ViewMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "viewMode",
                                    "returns": "QFileDialog::ViewMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setFileMode",
                                    "parameters": [
                                        "QFileDialog::FileMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fileMode",
                                    "returns": "QFileDialog::FileMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setAcceptMode",
                                    "parameters": [
                                        "QFileDialog::AcceptMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "acceptMode",
                                    "returns": "QFileDialog::AcceptMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setReadOnly",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isReadOnly",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setResolveSymlinks",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "resolveSymlinks",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setSidebarUrls",
                                    "parameters": [
                                        "const QList<QUrl> &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sidebarUrls",
                                    "returns": "QList<QUrl>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "saveState",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "restoreState",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setConfirmOverwrite",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "confirmOverwrite",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setDefaultSuffix",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "defaultSuffix",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setHistory",
                                    "parameters": [
                                        "const QStringList &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "history",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "setItemDelegate",
                                    "parameters": [
                                        "QAbstractItemDelegate *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "itemDelegate",
                                    "returns": "QAbstractItemDelegate *",
                                    "type": "function"
                                },
                                {
                                    "name": "setIconProvider",
                                    "parameters": [
                                        "QFileIconProvider *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "iconProvider",
                                    "returns": "QFileIconProvider *",
                                    "type": "function"
                                },
                                {
                                    "name": "setLabelText",
                                    "parameters": [
                                        "QFileDialog::DialogLabel",
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "labelText",
                                    "parameters": [
                                        "QFileDialog::DialogLabel"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setSupportedSchemes",
                                    "parameters": [
                                        "const QStringList &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "supportedSchemes",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "setProxyModel",
                                    "parameters": [
                                        "QAbstractProxyModel *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "proxyModel",
                                    "returns": "QAbstractProxyModel *",
                                    "type": "function"
                                },
                                {
                                    "name": "setOption",
                                    "parameters": [
                                        "QFileDialog::Option",
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "testOption",
                                    "parameters": [
                                        "QFileDialog::Option"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setOptions",
                                    "parameters": [
                                        "QFileDialog::Options"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "options",
                                    "returns": "QFileDialog::Options",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "parameters": [
                                        "QObject *",
                                        "const char *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setVisible",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "fileSelected",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "checked": 0,
                                    "name": "filesSelected",
                                    "parameters": [
                                        "const QStringList &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "currentChanged",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "directoryEntered",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "checked": 0,
                                    "name": "urlSelected",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "checked": 0,
                                    "name": "urlsSelected",
                                    "parameters": [
                                        "const QList<QUrl> &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "checked": 0,
                                    "name": "currentUrlChanged",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "checked": 0,
                                    "name": "directoryUrlEntered",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "filterSelected",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "getOpenFileName",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "const QString &",
                                        "QString *",
                                        "QFileDialog::Options"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getOpenFileUrl",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QUrl &",
                                        "const QString &",
                                        "QString *",
                                        "QFileDialog::Options",
                                        "const QStringList &"
                                    ],
                                    "returns": "QUrl",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getSaveFileName",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "const QString &",
                                        "QString *",
                                        "QFileDialog::Options"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getSaveFileUrl",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QUrl &",
                                        "const QString &",
                                        "QString *",
                                        "QFileDialog::Options",
                                        "const QStringList &"
                                    ],
                                    "returns": "QUrl",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getExistingDirectory",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "QFileDialog::Options"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getExistingDirectoryUrl",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QUrl &",
                                        "QFileDialog::Options",
                                        "const QStringList &"
                                    ],
                                    "returns": "QUrl",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getOpenFileNames",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "const QString &",
                                        "QString *",
                                        "QFileDialog::Options"
                                    ],
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getOpenFileUrls",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QUrl &",
                                        "const QString &",
                                        "QString *",
                                        "QFileDialog::Options",
                                        "const QStringList &"
                                    ],
                                    "returns": "QList<QUrl>",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QFileDialog",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QFileDialog::Options::enum_type",
                                "QFileDialog::Options::enum_type"
                            ],
                            "returns": "QFlags<QFileDialog::Options::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QFileDialog::Options::enum_type",
                                "QFlags<QFileDialog::Options::enum_type>"
                            ],
                            "returns": "QFlags<QFileDialog::Options::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QFileDialog::Options::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QFileDialog>",
                    "name": "filedialog",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QDialog",
                            "checked": 1,
                            "elements": [
                                {
                                    "name": "QErrorMessage",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QErrorMessage",
                                    "type": "destructor"
                                },
                                {
                                    "name": "showMessage",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "showMessage",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QErrorMessage",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QErrorMessage>",
                    "name": "errormessage",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QDialog",
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "ShowAlphaChannel"
                                        },
                                        {
                                            "name": "NoButtons"
                                        },
                                        {
                                            "name": "DontUseNativeDialog"
                                        }
                                    ],
                                    "name": "ColorDialogOption",
                                    "type": "enum"
                                },
                                {
                                    "name": "QColorDialog",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColorDialog",
                                    "parameters": [
                                        "const QColor &",
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QColorDialog",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setCurrentColor",
                                    "parameters": [
                                        "const QColor &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentColor",
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectedColor",
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "name": "setOption",
                                    "parameters": [
                                        "QColorDialog::ColorDialogOption",
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "testOption",
                                    "parameters": [
                                        "QColorDialog::ColorDialogOption"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setOptions",
                                    "parameters": [
                                        "QColorDialog::ColorDialogOptions"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "options",
                                    "returns": "QColorDialog::ColorDialogOptions",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "parameters": [
                                        "QObject *",
                                        "const char *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setVisible",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "getColor",
                                    "parameters": [
                                        "const QColor &",
                                        "QWidget *",
                                        "const QString &",
                                        "QColorDialog::ColorDialogOptions"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getRgba",
                                    "parameters": [
                                        "QRgb",
                                        "bool *",
                                        "QWidget *"
                                    ],
                                    "returns": "QRgb",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "customCount",
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "customColor",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setCustomColor",
                                    "parameters": [
                                        "int",
                                        "QColor"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "standardColor",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setStandardColor",
                                    "parameters": [
                                        "int",
                                        "QColor"
                                    ],
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "currentColorChanged",
                                    "parameters": [
                                        "const QColor &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "colorSelected",
                                    "parameters": [
                                        "const QColor &"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QColorDialog",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QColorDialog::ColorDialogOption",
                                "QColorDialog::ColorDialogOption"
                            ],
                            "returns": "QColorDialog::ColorDialogOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QColorDialog::ColorDialogOption",
                                "QColorDialog::ColorDialogOptions"
                            ],
                            "returns": "QColorDialog::ColorDialogOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QColorDialog::ColorDialogOptions::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QColorDialog>",
                    "name": "colordialog",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QDialog",
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoButtons"
                                        },
                                        {
                                            "name": "DontUseNativeDialog"
                                        },
                                        {
                                            "name": "ScalableFonts"
                                        },
                                        {
                                            "name": "NonScalableFonts"
                                        },
                                        {
                                            "name": "MonospacedFonts"
                                        },
                                        {
                                            "name": "ProportionalFonts"
                                        }
                                    ],
                                    "name": "FontDialogOption",
                                    "type": "enum"
                                },
                                {
                                    "name": "QFontDialog",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFontDialog",
                                    "parameters": [
                                        "const QFont &",
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFontDialog",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setCurrentFont",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentFont",
                                    "returns": "QFont",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectedFont",
                                    "returns": "QFont",
                                    "type": "function"
                                },
                                {
                                    "name": "setOption",
                                    "parameters": [
                                        "QFontDialog::FontDialogOption",
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "testOption",
                                    "parameters": [
                                        "QFontDialog::FontDialogOption"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setOptions",
                                    "parameters": [
                                        "QFontDialog::FontDialogOptions"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "options",
                                    "returns": "QFontDialog::FontDialogOptions",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "parameters": [
                                        "QObject *",
                                        "const char *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setVisible",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "getFont",
                                    "parameters": [
                                        "bool *",
                                        "QWidget *"
                                    ],
                                    "returns": "QFont",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getFont",
                                    "parameters": [
                                        "bool *",
                                        "const QFont &",
                                        "QWidget *",
                                        "const QString &",
                                        "QFontDialog::FontDialogOptions"
                                    ],
                                    "returns": "QFont",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "currentFontChanged",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "fontSelected",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QFontDialog",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QFontDialog::FontDialogOption",
                                "QFontDialog::FontDialogOption"
                            ],
                            "returns": "QFontDialog::FontDialogOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QFontDialog::FontDialogOption",
                                "QFontDialog::FontDialogOptions"
                            ],
                            "returns": "QFontDialog::FontDialogOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QFontDialog::FontDialogOptions::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QFontDialog>",
                    "name": "fontdialog",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QDialog",
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoButtons"
                                        },
                                        {
                                            "name": "UseListViewForComboBoxItems"
                                        },
                                        {
                                            "name": "UsePlainTextEditForTextInput"
                                        }
                                    ],
                                    "name": "InputDialogOption",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "TextInput"
                                        },
                                        {
                                            "name": "IntInput"
                                        },
                                        {
                                            "name": "DoubleInput"
                                        }
                                    ],
                                    "name": "InputMode",
                                    "type": "enum"
                                },
                                {
                                    "name": "QInputDialog",
                                    "parameters": [
                                        "QWidget *",
                                        "Qt::WindowFlags"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QInputDialog",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setInputMode",
                                    "parameters": [
                                        "QInputDialog::InputMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inputMode",
                                    "returns": "QInputDialog::InputMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setLabelText",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "labelText",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setOption",
                                    "parameters": [
                                        "QInputDialog::InputDialogOption",
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "testOption",
                                    "parameters": [
                                        "QInputDialog::InputDialogOption"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setOptions",
                                    "parameters": [
                                        "QInputDialog::InputDialogOptions"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "options",
                                    "returns": "QInputDialog::InputDialogOptions",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextValue",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textValue",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextEchoMode",
                                    "parameters": [
                                        "QLineEdit::EchoMode"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textEchoMode",
                                    "returns": "QLineEdit::EchoMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setComboBoxEditable",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isComboBoxEditable",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setComboBoxItems",
                                    "parameters": [
                                        "const QStringList &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "comboBoxItems",
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "setIntValue",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intValue",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setIntMinimum",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intMinimum",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setIntMaximum",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intMaximum",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setIntRange",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setIntStep",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intStep",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setDoubleValue",
                                    "parameters": [
                                        "double"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "doubleValue",
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "name": "setDoubleMinimum",
                                    "parameters": [
                                        "double"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "doubleMinimum",
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "name": "setDoubleMaximum",
                                    "parameters": [
                                        "double"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "doubleMaximum",
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "name": "setDoubleRange",
                                    "parameters": [
                                        "double",
                                        "double"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setDoubleDecimals",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "doubleDecimals",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setOkButtonText",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "okButtonText",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setCancelButtonText",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cancelButtonText",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "parameters": [
                                        "QObject *",
                                        "const char *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setVisible",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "getText",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "QLineEdit::EchoMode",
                                        "const QString &",
                                        "bool *",
                                        "Qt::WindowFlags",
                                        "Qt::InputMethodHints"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getMultiLineText",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "const QString &",
                                        "bool *",
                                        "Qt::WindowFlags",
                                        "Qt::InputMethodHints"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getItem",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "const QStringList &",
                                        "int",
                                        "bool",
                                        "bool *",
                                        "Qt::WindowFlags",
                                        "Qt::InputMethodHints"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getInt",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "bool *",
                                        "Qt::WindowFlags"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getDouble",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "double",
                                        "double",
                                        "double",
                                        "int",
                                        "bool *",
                                        "Qt::WindowFlags"
                                    ],
                                    "returns": "double",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getDouble",
                                    "parameters": [
                                        "QWidget *",
                                        "const QString &",
                                        "const QString &",
                                        "double",
                                        "double",
                                        "double",
                                        "int",
                                        "bool *",
                                        "Qt::WindowFlags",
                                        "double"
                                    ],
                                    "returns": "double",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setDoubleStep",
                                    "parameters": [
                                        "double"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "doubleStep",
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "textValueChanged",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "textValueSelected",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "intValueChanged",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "intValueSelected",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "doubleValueChanged",
                                    "parameters": [
                                        "double"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "doubleValueSelected",
                                    "parameters": [
                                        "double"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "done",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QInputDialog",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QInputDialog::InputDialogOption",
                                "QInputDialog::InputDialogOption"
                            ],
                            "returns": "QInputDialog::InputDialogOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QInputDialog::InputDialogOption",
                                "QInputDialog::InputDialogOptions"
                            ],
                            "returns": "QInputDialog::InputDialogOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QInputDialog::InputDialogOptions::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QInputDialog>",
                    "name": "inputdialog",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QDialog",
                            "elements": [
                                {
                                    "name": "QProgressDialog",
                                    "parameters": [
                                        "QWidget *",
                                        "Qt::WindowFlags"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QProgressDialog",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &",
                                        "int",
                                        "int",
                                        "QWidget *",
                                        "Qt::WindowFlags"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QProgressDialog",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setLabel",
                                    "parameters": [
                                        "QLabel *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setCancelButton",
                                    "parameters": [
                                        "QPushButton *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setBar",
                                    "parameters": [
                                        "QProgressBar *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "wasCanceled",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimum",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximum",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "value",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "labelText",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumDuration",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoReset",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoReset",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoClose",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoClose",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "parameters": [
                                        "QObject *",
                                        "const char *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "cancel",
                                    "type": "function"
                                },
                                {
                                    "name": "reset",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximum",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimum",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setRange",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setValue",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setLabelText",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setCancelButtonText",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumDuration",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "canceled",
                                    "type": "function"
                                }
                            ],
                            "name": "QProgressDialog",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QProgressDialog>",
                    "name": "progressdialog",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QDialog",
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "BackButton"
                                        },
                                        {
                                            "name": "NextButton"
                                        },
                                        {
                                            "name": "CommitButton"
                                        },
                                        {
                                            "name": "FinishButton"
                                        },
                                        {
                                            "name": "CancelButton"
                                        },
                                        {
                                            "name": "HelpButton"
                                        },
                                        {
                                            "name": "CustomButton1"
                                        },
                                        {
                                            "name": "CustomButton2"
                                        },
                                        {
                                            "name": "CustomButton3"
                                        },
                                        {
                                            "name": "Stretch"
                                        },
                                        {
                                            "name": "NoButton"
                                        },
                                        {
                                            "name": "NStandardButtons"
                                        },
                                        {
                                            "name": "NButtons"
                                        }
                                    ],
                                    "name": "WizardButton",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "WatermarkPixmap"
                                        },
                                        {
                                            "name": "LogoPixmap"
                                        },
                                        {
                                            "name": "BannerPixmap"
                                        },
                                        {
                                            "name": "BackgroundPixmap"
                                        },
                                        {
                                            "name": "NPixmaps"
                                        }
                                    ],
                                    "name": "WizardPixmap",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "ClassicStyle"
                                        },
                                        {
                                            "name": "ModernStyle"
                                        },
                                        {
                                            "name": "MacStyle"
                                        },
                                        {
                                            "name": "AeroStyle"
                                        },
                                        {
                                            "name": "NStyles"
                                        }
                                    ],
                                    "name": "WizardStyle",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "IndependentPages"
                                        },
                                        {
                                            "name": "IgnoreSubTitles"
                                        },
                                        {
                                            "name": "ExtendedWatermarkPixmap"
                                        },
                                        {
                                            "name": "NoDefaultButton"
                                        },
                                        {
                                            "name": "NoBackButtonOnStartPage"
                                        },
                                        {
                                            "name": "NoBackButtonOnLastPage"
                                        },
                                        {
                                            "name": "DisabledBackButtonOnLastPage"
                                        },
                                        {
                                            "name": "HaveNextButtonOnLastPage"
                                        },
                                        {
                                            "name": "HaveFinishButtonOnEarlyPages"
                                        },
                                        {
                                            "name": "NoCancelButton"
                                        },
                                        {
                                            "name": "CancelButtonOnLeft"
                                        },
                                        {
                                            "name": "HaveHelpButton"
                                        },
                                        {
                                            "name": "HelpButtonOnRight"
                                        },
                                        {
                                            "name": "HaveCustomButton1"
                                        },
                                        {
                                            "name": "HaveCustomButton2"
                                        },
                                        {
                                            "name": "HaveCustomButton3"
                                        },
                                        {
                                            "name": "NoCancelButtonOnLastPage"
                                        }
                                    ],
                                    "name": "WizardOption",
                                    "type": "enum"
                                },
                                {
                                    "name": "QWizard",
                                    "parameters": [
                                        "QWidget *",
                                        "Qt::WindowFlags"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QWizard",
                                    "type": "destructor"
                                },
                                {
                                    "name": "addPage",
                                    "parameters": [
                                        "QWizardPage *"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setPage",
                                    "parameters": [
                                        "int",
                                        "QWizardPage *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "removePage",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "page",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QWizardPage *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasVisitedPage",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "visitedPages",
                                    "returns": "QList<int>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pageIds",
                                    "returns": "QList<int>",
                                    "type": "function"
                                },
                                {
                                    "name": "setStartId",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "startId",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentPage",
                                    "returns": "QWizardPage *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentId",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "validateCurrentPage",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nextId",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setField",
                                    "parameters": [
                                        "const QString &",
                                        "const QVariant &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "field",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QVariant",
                                    "type": "function"
                                },
                                {
                                    "name": "setWizardStyle",
                                    "parameters": [
                                        "QWizard::WizardStyle"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "wizardStyle",
                                    "returns": "QWizard::WizardStyle",
                                    "type": "function"
                                },
                                {
                                    "name": "setOption",
                                    "parameters": [
                                        "QWizard::WizardOption",
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "testOption",
                                    "parameters": [
                                        "QWizard::WizardOption"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setOptions",
                                    "parameters": [
                                        "QWizard::WizardOptions"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "options",
                                    "returns": "QWizard::WizardOptions",
                                    "type": "function"
                                },
                                {
                                    "name": "setButtonText",
                                    "parameters": [
                                        "QWizard::WizardButton",
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "buttonText",
                                    "parameters": [
                                        "QWizard::WizardButton"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setButtonLayout",
                                    "parameters": [
                                        "const QList<QWizard::WizardButton> &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setButton",
                                    "parameters": [
                                        "QWizard::WizardButton",
                                        "QAbstractButton *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "button",
                                    "parameters": [
                                        "QWizard::WizardButton"
                                    ],
                                    "returns": "QAbstractButton *",
                                    "type": "function"
                                },
                                {
                                    "name": "setTitleFormat",
                                    "parameters": [
                                        "Qt::TextFormat"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "titleFormat",
                                    "returns": "Qt::TextFormat",
                                    "type": "function"
                                },
                                {
                                    "name": "setSubTitleFormat",
                                    "parameters": [
                                        "Qt::TextFormat"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "subTitleFormat",
                                    "returns": "Qt::TextFormat",
                                    "type": "function"
                                },
                                {
                                    "name": "setPixmap",
                                    "parameters": [
                                        "QWizard::WizardPixmap",
                                        "const QPixmap &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixmap",
                                    "parameters": [
                                        "QWizard::WizardPixmap"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "name": "setSideWidget",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sideWidget",
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "name": "setDefaultProperty",
                                    "parameters": [
                                        "const char *",
                                        "const char *",
                                        "const char *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setVisible",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "currentIdChanged",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "helpRequested",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "customButtonClicked",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "pageAdded",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "pageRemoved",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "back",
                                    "type": "function"
                                },
                                {
                                    "name": "next",
                                    "type": "function"
                                },
                                {
                                    "name": "restart",
                                    "type": "function"
                                }
                            ],
                            "name": "QWizard",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QWizard::WizardOption",
                                "QWizard::WizardOption"
                            ],
                            "returns": "QWizard::WizardOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QWizard::WizardOption",
                                "QWizard::WizardOptions"
                            ],
                            "returns": "QWizard::WizardOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QWizard::WizardOptions::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "name": "QWizardPage",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QWizardPage",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setTitle",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "title",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setSubTitle",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "subTitle",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setPixmap",
                                    "parameters": [
                                        "QWizard::WizardPixmap",
                                        "const QPixmap &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixmap",
                                    "parameters": [
                                        "QWizard::WizardPixmap"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "name": "setFinalPage",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isFinalPage",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setCommitPage",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isCommitPage",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setButtonText",
                                    "parameters": [
                                        "QWizard::WizardButton",
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "buttonText",
                                    "parameters": [
                                        "QWizard::WizardButton"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "initializePage",
                                    "type": "function"
                                },
                                {
                                    "name": "cleanupPage",
                                    "type": "function"
                                },
                                {
                                    "name": "validatePage",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isComplete",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nextId",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "completeChanged",
                                    "type": "function"
                                }
                            ],
                            "name": "QWizardPage",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QWizard>",
                    "name": "wizard",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "name": "QToolBar",
                                    "parameters": [
                                        "const QString &",
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "QToolBar",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QToolBar",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setMovable",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isMovable",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAllowedAreas",
                                    "parameters": [
                                        "Qt::ToolBarAreas"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "allowedAreas",
                                    "returns": "Qt::ToolBarAreas",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isAreaAllowed",
                                    "parameters": [
                                        "Qt::ToolBarArea"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setOrientation",
                                    "parameters": [
                                        "Qt::Orientation"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "orientation",
                                    "returns": "Qt::Orientation",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "type": "function"
                                },
                                {
                                    "name": "addAction",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addAction",
                                    "parameters": [
                                        "const QIcon &",
                                        "const QString &"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addAction",
                                    "parameters": [
                                        "const QString &",
                                        "const QObject *",
                                        "const char *"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addAction",
                                    "parameters": [
                                        "const QIcon &",
                                        "const QString &",
                                        "const QObject *",
                                        "const char *"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addSeparator",
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "insertSeparator",
                                    "parameters": [
                                        "QAction *"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addWidget",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "insertWidget",
                                    "parameters": [
                                        "QAction *",
                                        "QWidget *"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "actionGeometry",
                                    "parameters": [
                                        "QAction *"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "actionAt",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "actionAt",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toggleViewAction",
                                    "returns": "QAction *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "iconSize",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toolButtonStyle",
                                    "returns": "Qt::ToolButtonStyle",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "widgetForAction",
                                    "parameters": [
                                        "QAction *"
                                    ],
                                    "returns": "QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isFloatable",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setFloatable",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isFloating",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setIconSize",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setToolButtonStyle",
                                    "parameters": [
                                        "Qt::ToolButtonStyle"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "actionTriggered",
                                    "parameters": [
                                        "QAction *"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "movableChanged",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "allowedAreasChanged",
                                    "parameters": [
                                        "Qt::ToolBarAreas"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "orientationChanged",
                                    "parameters": [
                                        "Qt::Orientation"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "iconSizeChanged",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "toolButtonStyleChanged",
                                    "parameters": [
                                        "Qt::ToolButtonStyle"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "topLevelChanged",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "visibilityChanged",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QToolBar",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newToolBar",
                            "parameters": [
                                "const QString&",
                                "QWidget*"
                            ],
                            "returns": "QToolBar&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newToolBar",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QToolBar&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QToolBar>",
                    "name": "toolbar",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "TopToBottom"
                                        },
                                        {
                                            "name": "BottomToTop"
                                        }
                                    ],
                                    "name": "Direction",
                                    "type": "enum"
                                },
                                {
                                    "name": "QProgressBar",
                                    "parameters": [
                                        "QWidget *"
                                    ],
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QProgressBar",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "minimum",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximum",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "value",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextVisible",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTextVisible",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alignment",
                                    "returns": "Qt::Alignment",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlignment",
                                    "parameters": [
                                        "Qt::Alignment"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "orientation",
                                    "returns": "Qt::Orientation",
                                    "type": "function"
                                },
                                {
                                    "name": "setInvertedAppearance",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "invertedAppearance",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextDirection",
                                    "parameters": [
                                        "QProgressBar::Direction"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textDirection",
                                    "returns": "QProgressBar::Direction",
                                    "type": "function"
                                },
                                {
                                    "name": "setFormat",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "resetFormat",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "format",
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "reset",
                                    "type": "function"
                                },
                                {
                                    "name": "setRange",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimum",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximum",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setValue",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "name": "setOrientation",
                                    "parameters": [
                                        "Qt::Orientation"
                                    ],
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "valueChanged",
                                    "parameters": [
                                        "int"
                                    ],
                                    "type": "function"
                                }
                            ],
                            "name": "QProgressBar",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newProgressBar",
                            "parameters": [
                                "QWidget*"
                            ],
                            "returns": "QProgressBar&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QProgressBar>",
                    "name": "progressbar",
                    "type": "file"
                }
            ],
            "name": "widgets",
            "type": "module"
        }
    ],
    "types": {
        "classes": [
            {
                "header": "yasl/core/enums.h",
                "id": "QtAlignment",
                "name": "Qt::Alignment",
                "rename": "Alignment"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtImageConversionFlags",
                "name": "Qt::ImageConversionFlags",
                "rename": "ImageConversionFlags"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtKeyboardModifiers",
                "name": "Qt::KeyboardModifiers",
                "rename": "KeyboardModifiers"
            },
            {
                "header": "yasl/core/bytearray.h",
                "id": "QByteArray",
                "links": "ptr@Ptr<QByteArray>;list@QList<QByteArray>",
                "name": "QByteArray",
                "rename": "ByteArray"
            },
            {
                "header": "yasl/core/bytearray.h",
                "id": "PtrQByteArray",
                "name": "Ptr<QByteArray>"
            },
            {
                "header": "yasl/core/bytearray.h",
                "id": "QListQByteArray",
                "name": "QList<QByteArray>"
            },
            {
                "header": "yasl/core/bytearray.h",
                "id": "QByteArrayBase64Options",
                "name": "QByteArray::Base64Options",
                "rename": "Base64Options"
            },
            {
                "header": "yasl/core/bytearray.h",
                "id": "QByteRef",
                "name": "QByteRef",
                "rename": "ByteRef"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QChar",
                "name": "QChar",
                "rename": "Char"
            },
            {
                "header": "yasl/core/event.h",
                "id": "QChildEvent",
                "name": "QChildEvent",
                "rename": "ChildEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/core/datastream.h",
                "id": "QDataStream",
                "name": "QDataStream",
                "rename": "DataStream"
            },
            {
                "header": "yasl/core/datetime.h",
                "id": "QDate",
                "name": "QDate",
                "rename": "Date"
            },
            {
                "header": "yasl/core/datetime.h",
                "id": "QDateTime",
                "name": "QDateTime",
                "rename": "DateTime"
            },
            {
                "header": "yasl/core/event.h",
                "id": "QDeferredDeleteEvent",
                "name": "QDeferredDeleteEvent",
                "rename": "DeferredDeleteEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/core/dir.h",
                "id": "QDir",
                "name": "QDir",
                "rename": "Dir"
            },
            {
                "header": "yasl/core/dir.h",
                "id": "QDirFilters",
                "name": "QDir::Filters",
                "rename": "Filters"
            },
            {
                "header": "yasl/core/dir.h",
                "id": "QDirSortFlags",
                "name": "QDir::SortFlags",
                "rename": "SortFlags"
            },
            {
                "header": "yasl/core/event.h",
                "id": "QDynamicPropertyChangeEvent",
                "name": "QDynamicPropertyChangeEvent",
                "rename": "DynamicPropertyChangeEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/core/elapsedtimer.h",
                "id": "QElapsedTimer",
                "name": "QElapsedTimer",
                "rename": "ElapsedTimer"
            },
            {
                "header": "yasl/core/event.h",
                "id": "QEvent",
                "name": "QEvent",
                "rename": "Event",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/core/file.h",
                "id": "QFile",
                "name": "QFile",
                "rename": "File",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDevice",
                "name": "QFileDevice",
                "rename": "FileDevice",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDevicePermissions",
                "name": "QFileDevice::Permissions",
                "rename": "Permissions"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDeviceFileHandleFlags",
                "name": "QFileDevice::FileHandleFlags",
                "rename": "FileHandleFlags"
            },
            {
                "header": "yasl/core/fileinfo.h",
                "id": "QFileInfo",
                "name": "QFileInfo",
                "rename": "FileInfo"
            },
            {
                "header": "yasl/core/iodevice.h",
                "id": "QIODevice",
                "name": "QIODevice",
                "rename": "IODevice",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/iodevice.h",
                "id": "QIODeviceOpenMode",
                "name": "QIODevice::OpenMode",
                "rename": "OpenMode"
            },
            {
                "header": "yasl/core/line.h",
                "id": "QLine",
                "name": "QLine",
                "rename": "Line"
            },
            {
                "header": "yasl/core/line.h",
                "id": "QLineF",
                "name": "QLineF",
                "rename": "LineF"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocale",
                "links": "ptr@Ptr<QLocale>;list@QList<QLocale>",
                "name": "QLocale",
                "rename": "Locale"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "PtrQLocale",
                "name": "Ptr<QLocale>"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QListQLocale",
                "name": "QList<QLocale>"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleDataSizeFormats",
                "name": "QLocale::DataSizeFormats",
                "rename": "DataSizeFormats"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleNumberOptions",
                "name": "QLocale::NumberOptions",
                "rename": "NumberOptions"
            },
            {
                "header": "yasl/core/margins.h",
                "id": "QMargins",
                "name": "QMargins",
                "rename": "Margins"
            },
            {
                "header": "yasl/core/margins.h",
                "id": "QMarginsF",
                "name": "QMarginsF",
                "rename": "MarginsF"
            },
            {
                "header": "yasl/core/mimetype.h",
                "id": "QMimeType",
                "name": "QMimeType",
                "rename": "MimeType"
            },
            {
                "header": "yasl/core/point.h",
                "id": "QPoint",
                "name": "QPoint",
                "rename": "Point"
            },
            {
                "header": "yasl/core/point.h",
                "id": "QPointF",
                "name": "QPointF",
                "rename": "PointF"
            },
            {
                "header": "yasl/core/object.h",
                "id": "QObject",
                "links": "ref@QObject*;ptr@Ptr<QObject*>;list@QList<QObject*>",
                "name": "QObject",
                "rename": "Object",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/object.h",
                "id": "QObjectStar",
                "name": "QObject*"
            },
            {
                "header": "yasl/core/object.h",
                "id": "PtrQObject",
                "name": "Ptr<QObject*>"
            },
            {
                "header": "yasl/core/object.h",
                "id": "QListQObject",
                "name": "QList<QObject*>"
            },
            {
                "header": "yasl/core/object.h",
                "id": "QListQObject",
                "name": "QObjectList"
            },
            {
                "header": "yasl/core/process.h",
                "id": "QProcess",
                "name": "QProcess",
                "rename": "Process",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/process.h",
                "id": "QProcessEnvironment",
                "name": "QProcessEnvironment",
                "rename": "ProcessEnvironment"
            },
            {
                "header": "yasl/core/rect.h",
                "id": "QRect",
                "name": "QRect",
                "rename": "Rect"
            },
            {
                "header": "yasl/core/rect.h",
                "id": "QRectF",
                "name": "QRectF",
                "rename": "RectF"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpression",
                "name": "QRegularExpression",
                "rename": "RegularExpression"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpressionMatchOptions",
                "name": "QRegularExpression::MatchOptions",
                "rename": "MatchOptions"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpressionPatternOptions",
                "name": "QRegularExpression::PatternOptions",
                "rename": "PatternOptions"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpressionMatch",
                "name": "QRegularExpressionMatch",
                "rename": "RegularExpressionMatch"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpressionMatchIterator",
                "name": "QRegularExpressionMatchIterator",
                "rename": "RegularExpressionMatchIterator"
            },
            {
                "header": "yasl/core/settings.h",
                "id": "QSettings",
                "name": "QSettings",
                "rename": "Settings",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/object.h",
                "id": "QSignalBlocker",
                "name": "QSignalBlocker",
                "rename": "SignalBlocker"
            },
            {
                "header": "yasl/core/size.h",
                "id": "QSize",
                "name": "QSize",
                "rename": "Size"
            },
            {
                "header": "yasl/core/size.h",
                "id": "QSizeF",
                "name": "QSizeF",
                "rename": "SizeF"
            },
            {
                "header": "yasl/core/datetime.h",
                "id": "QTime",
                "name": "QTime",
                "rename": "Time"
            },
            {
                "header": "yasl/core/timer.h",
                "id": "QTimer",
                "name": "QTimer",
                "rename": "Timer",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/event.h",
                "id": "QTimerEvent",
                "name": "QTimerEvent",
                "rename": "TimerEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/core/timezone.h",
                "id": "QTimeZone",
                "name": "QTimeZone",
                "rename": "TimeZone"
            },
            {
                "header": "yasl/core/url.h",
                "id": "QUrl",
                "name": "QUrl",
                "rename": "Url"
            },
            {
                "header": "yasl/core/url.h",
                "id": "QUrlComponentFormattingOptions",
                "name": "QUrl::ComponentFormattingOptions",
                "rename": "ComponentFormattingOptions"
            },
            {
                "header": "yasl/core/url.h",
                "id": "QUrlUserInputResolutionOptions",
                "name": "QUrl::UserInputResolutionOptions",
                "rename": "UserInputResolutionOptions"
            },
            {
                "header": "yasl/core/urlquery.h",
                "id": "QUrlQuery",
                "name": "QUrlQuery",
                "rename": "UrlQuery"
            },
            {
                "header": "yasl/core/uuid.h",
                "id": "QUuid",
                "name": "QUuid",
                "rename": "Uuid"
            },
            {
                "header": "yasl/core/variant.h",
                "id": "QVariant",
                "name": "QVariant",
                "rename": "Variant"
            },
            {
                "header": "yasl/gui/color.h",
                "id": "QColor",
                "name": "QColor",
                "rename": "Color"
            },
            {
                "header": "yasl/gui/cursor.h",
                "id": "QCursor",
                "name": "QCursor",
                "rename": "Cursor"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFont",
                "name": "QFont",
                "rename": "Font"
            },
            {
                "header": "yasl/gui/fontdatabase.h",
                "id": "QFontDatabase",
                "name": "QFontDatabase",
                "rename": "FontDatabase"
            },
            {
                "header": "yasl/gui/fontinfo.h",
                "id": "QFontInfo",
                "name": "QFontInfo",
                "rename": "FontInfo"
            },
            {
                "header": "yasl/gui/fontmetrics.h",
                "id": "QFontMetrics",
                "name": "QFontMetrics",
                "rename": "FontMetrics"
            },
            {
                "header": "yasl/gui/fontmetrics.h",
                "id": "QFontMetricsF",
                "name": "QFontMetricsF",
                "rename": "FontMetricsF"
            },
            {
                "header": "yasl/gui/pixmap.h",
                "id": "QPixmap",
                "name": "QPixmap",
                "rename": "Pixmap"
            },
            {
                "header": "yasl/gui/bitmap.h",
                "id": "QBitmap",
                "name": "QBitmap",
                "rename": "Bitmap"
            },
            {
                "header": "yasl/gui/icon.h",
                "id": "QIcon",
                "name": "QIcon",
                "rename": "Icon"
            },
            {
                "header": "yasl/gui/image.h",
                "id": "QImage",
                "name": "QImage",
                "rename": "Image"
            },
            {
                "header": "yasl/gui/transform.h",
                "id": "QTransform",
                "name": "QTransform",
                "rename": "Transform"
            },
            {
                "header": "yasl/gui/vector2d.h",
                "id": "QVector2D",
                "name": "QVector2D",
                "rename": "Vector2D"
            },
            {
                "header": "yasl/gui/vector3d.h",
                "id": "QVector3D",
                "name": "QVector3D",
                "rename": "Vector3D"
            },
            {
                "header": "yasl/gui/vector4d.h",
                "id": "QVector4D",
                "name": "QVector4D",
                "rename": "Vector4D"
            },
            {
                "header": "yasl/gui/quaternion.h",
                "id": "QQuaternion",
                "name": "QQuaternion",
                "rename": "Quaternion"
            },
            {
                "header": "yasl/gui/region.h",
                "id": "QRegion",
                "name": "QRegion",
                "rename": "Region"
            },
            {
                "header": "yasl/gui/clipboard.h",
                "id": "QClipboard",
                "name": "QClipboard",
                "rename": "Clipboard",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/gui/keysequence.h",
                "id": "QKeySequence",
                "name": "QKeySequence",
                "rename": "KeySequence"
            },
            {
                "header": "yasl/gui/brush.h",
                "id": "QBrush",
                "name": "QBrush",
                "rename": "Brush"
            },
            {
                "header": "yasl/gui/brush.h",
                "id": "QGradient",
                "name": "QGradient",
                "rename": "Gradient"
            },
            {
                "header": "yasl/gui/brush.h",
                "id": "QLinearGradient",
                "name": "QLinearGradient",
                "rename": "LinearGradient"
            },
            {
                "header": "yasl/gui/brush.h",
                "id": "QRadialGradient",
                "name": "QRadialGradient",
                "rename": "RadialGradient"
            },
            {
                "header": "yasl/gui/brush.h",
                "id": "QConicalGradient",
                "name": "QConicalGradient",
                "rename": "ConicalGradient"
            },
            {
                "header": "yasl/gui/glyphrun.h",
                "id": "QGlyphRun",
                "name": "QGlyphRun",
                "rename": "GlyphRun"
            },
            {
                "header": "yasl/gui/painter.h",
                "id": "QPainter",
                "name": "QPainter",
                "rename": "Painter"
            },
            {
                "header": "yasl/gui/painter.h",
                "id": "QPainterRenderHints",
                "name": "QPainter::RenderHints",
                "rename": "RenderHints"
            },
            {
                "header": "yasl/gui/painter.h",
                "id": "QPainterPixmapFragmentHints",
                "name": "QPainter::PixmapFragmentHints",
                "rename": "PixmapFragmentHints"
            },
            {
                "header": "yasl/gui/painterpath.h",
                "id": "QPainterPath",
                "name": "QPainterPath",
                "rename": "PainterPath"
            },
            {
                "header": "yasl/gui/painterpath.h",
                "id": "QPainterPathStroker",
                "name": "QPainterPathStroker",
                "rename": "PainterPathStroker"
            },
            {
                "header": "yasl/gui/palette.h",
                "id": "QPalette",
                "name": "QPalette",
                "rename": "Palette"
            },
            {
                "header": "yasl/gui/pen.h",
                "id": "QPen",
                "name": "QPen",
                "rename": "Pen"
            },
            {
                "header": "yasl/gui/picture.h",
                "id": "QPicture",
                "name": "QPicture",
                "rename": "Picture"
            },
            {
                "header": "yasl/gui/picture.h",
                "id": "QPictureIO",
                "name": "QPictureIO",
                "rename": "PictureIO"
            },
            {
                "header": "yasl/gui/pixelformat.h",
                "id": "QPixelFormat",
                "name": "QPixelFormat",
                "rename": "PixelFormat"
            },
            {
                "header": "yasl/gui/screen.h",
                "id": "QScreen",
                "name": "QScreen",
                "rename": "Screen",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/gui/statictext.h",
                "id": "QStaticText",
                "name": "QStaticText",
                "rename": "StaticText"
            },
            {
                "header": "yasl/gui/textoption.h",
                "id": "QTextOption",
                "name": "QTextOption",
                "rename": "TextOption"
            },
            {
                "header": "yasl/gui/textoption.h",
                "id": "QTextOptionFlags",
                "name": "QTextOption::Flags",
                "rename": "Flags"
            },
            {
                "header": "yasl/gui/validator.h",
                "id": "QValidator",
                "name": "QValidator",
                "rename": "Validator",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/gui/validator.h",
                "id": "QIntValidator",
                "name": "QIntValidator",
                "rename": "IntValidator",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/gui/validator.h",
                "id": "QDoubleValidator",
                "name": "QDoubleValidator",
                "rename": "DoubleValidator",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/gui/validator.h",
                "id": "QRegularExpressionValidator",
                "name": "QRegularExpressionValidator",
                "rename": "RegularExpressionValidator",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/gui/window.h",
                "id": "QWindow",
                "links": "ref@QWindow*",
                "name": "QWindow",
                "rename": "Window",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/gui/window.h",
                "id": "QWindowStar",
                "name": "QWindow*"
            },
            {
                "header": "yasl/gui/guievent.h",
                "id": "QMouseEvent",
                "name": "QMouseEvent",
                "rename": "MouseEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/gui/guievent.h",
                "id": "QWheelEvent",
                "name": "QWheelEvent",
                "rename": "WheelEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/gui/guievent.h",
                "id": "QKeyEvent",
                "name": "QKeyEvent",
                "rename": "KeyEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/gui/guievent.h",
                "id": "QPaintEvent",
                "name": "QPaintEvent",
                "rename": "PaintEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/gui/guievent.h",
                "id": "QMoveEvent",
                "name": "QMoveEvent",
                "rename": "MoveEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/gui/guievent.h",
                "id": "QResizeEvent",
                "name": "QResizeEvent",
                "rename": "ResizeEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/gui/guievent.h",
                "id": "QCloseEvent",
                "name": "QCloseEvent",
                "rename": "CloseEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/gui/guievent.h",
                "id": "QShowEvent",
                "name": "QShowEvent",
                "rename": "ShowEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/gui/guievent.h",
                "id": "QHideEvent",
                "name": "QHideEvent",
                "rename": "HideEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/widgets/widget.h",
                "id": "QWidget",
                "links": "ref@QWidget*;ptr@Ptr<QWidget*>;list@QList<QWidget*>",
                "name": "QWidget",
                "rename": "Widget",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/widget.h",
                "id": "QWidgetStar",
                "name": "QWidget*"
            },
            {
                "header": "yasl/widgets/widget.h",
                "id": "PtrQWidget",
                "name": "Ptr<QWidget*>"
            },
            {
                "header": "yasl/widgets/widget.h",
                "id": "QListQWidget",
                "name": "QList<QWidget*>"
            },
            {
                "header": "yasl/widgets/abstractbutton.h",
                "id": "QAbstractButton",
                "name": "QAbstractButton",
                "rename": "AbstractButton",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/pushbutton.h",
                "id": "QPushButton",
                "name": "QPushButton",
                "rename": "PushButton",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/frame.h",
                "id": "QFrame",
                "name": "QFrame",
                "rename": "Frame",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/label.h",
                "id": "QLabel",
                "name": "QLabel",
                "rename": "Label",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/tabwidget.h",
                "id": "QTabWidget",
                "name": "QTabWidget",
                "rename": "TabWidget",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/lineedit.h",
                "id": "QLineEdit",
                "name": "QLineEdit",
                "rename": "LineEdit",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/jsonvalue.h",
                "id": "QJsonValue",
                "name": "QJsonValue",
                "rename": "JsonValue"
            },
            {
                "header": "yasl/core/jsonvalue.h",
                "id": "QJsonValueRef",
                "name": "QJsonValueRef",
                "rename": "JsonValueRef"
            },
            {
                "header": "yasl/core/jsonarray.h",
                "id": "QJsonArray",
                "name": "QJsonArray",
                "rename": "JsonArray"
            },
            {
                "header": "yasl/core/jsonobject.h",
                "id": "QJsonObject",
                "name": "QJsonObject",
                "rename": "JsonObject"
            },
            {
                "header": "yasl/core/jsondocument.h",
                "id": "QJsonDocument",
                "name": "QJsonDocument",
                "rename": "JsonDocument"
            },
            {
                "header": "yasl/widgets/groupbox.h",
                "id": "QGroupBox",
                "name": "QGroupBox",
                "rename": "GroupBox",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/combobox.h",
                "id": "QComboBox",
                "name": "QComboBox",
                "rename": "ComboBox",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/fontcombobox.h",
                "id": "QFontComboBox",
                "name": "QFontComboBox",
                "rename": "FontComboBox",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/fontcombobox.h",
                "id": "QFontComboBoxFontFilters",
                "name": "QFontComboBox::FontFilters",
                "rename": "FontFilters"
            },
            {
                "header": "yasl/widgets/abstractslider.h",
                "id": "QAbstractSlider",
                "name": "QAbstractSlider",
                "rename": "AbstractSlider",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/slider.h",
                "id": "QSlider",
                "name": "QSlider",
                "rename": "Slider",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/scrollbar.h",
                "id": "QScrollBar",
                "name": "QScrollBar",
                "rename": "ScrollBar",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/dial.h",
                "id": "QDial",
                "name": "QDial",
                "rename": "Dial",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/abstractspinbox.h",
                "id": "QAbstractSpinBox",
                "name": "QAbstractSpinBox",
                "rename": "AbstractSpinBox",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/abstractspinbox.h",
                "id": "QAbstractSpinBoxStepEnabled",
                "name": "QAbstractSpinBox::StepEnabled",
                "rename": "StepEnabled"
            },
            {
                "header": "yasl/widgets/spinbox.h",
                "id": "QSpinBox",
                "name": "QSpinBox",
                "rename": "SpinBox",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/spinbox.h",
                "id": "QDoubleSpinBox",
                "name": "QDoubleSpinBox",
                "rename": "DoubleSpinBox",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/datetimeedit.h",
                "id": "QDateTimeEdit",
                "name": "QDateTimeEdit",
                "rename": "DateTimeEdit",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/datetimeedit.h",
                "id": "QTimeEdit",
                "name": "QTimeEdit",
                "rename": "TimeEdit",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/datetimeedit.h",
                "id": "QDateEdit",
                "name": "QDateEdit",
                "rename": "DateEdit",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/datetimeedit.h",
                "id": "QDateTimeEditSections",
                "name": "QDateTimeEdit::Sections",
                "rename": "Sections"
            },
            {
                "header": "yasl/widgets/checkbox.h",
                "id": "QCheckBox",
                "name": "QCheckBox",
                "rename": "CheckBox",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/radiobutton.h",
                "id": "QRadioButton",
                "name": "QRadioButton",
                "rename": "RadioButton",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/toolbutton.h",
                "id": "QToolButton",
                "name": "QToolButton",
                "rename": "ToolButton",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/action.h",
                "id": "QAction",
                "links": "ref@QAction*;ptr@Ptr<QAction*>;list@QList<QAction*>",
                "name": "QAction",
                "rename": "Action",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/action.h",
                "id": "QActionStar",
                "name": "QAction*"
            },
            {
                "header": "yasl/widgets/action.h",
                "id": "PtrQAction",
                "name": "Ptr<QAction*>"
            },
            {
                "header": "yasl/widgets/action.h",
                "id": "QListQAction",
                "name": "QList<QAction*>"
            },
            {
                "header": "yasl/widgets/menu.h",
                "id": "QMenu",
                "links": "ref@QMenu*",
                "name": "QMenu",
                "rename": "Menu",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/menu.h",
                "id": "QMenuStar",
                "name": "QMenu*"
            },
            {
                "header": "yasl/widgets/layout.h",
                "id": "QLayout",
                "links": "ref@QLayout*",
                "name": "QLayout",
                "rename": "Layout",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/layout.h",
                "id": "QLayoutStar",
                "name": "QLayout*"
            },
            {
                "header": "yasl/widgets/boxlayout.h",
                "id": "QBoxLayout",
                "name": "QBoxLayout",
                "rename": "BoxLayout",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/boxlayout.h",
                "id": "QHBoxLayout",
                "name": "QHBoxLayout",
                "rename": "QHBoxLayout",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/boxlayout.h",
                "id": "QVBoxLayout",
                "name": "QVBoxLayout",
                "rename": "QVBoxLayout",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/formlayout.h",
                "id": "QFormLayout",
                "name": "QFormLayout",
                "rename": "FormLayout",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/gridlayout.h",
                "id": "QGridLayout",
                "name": "QGridLayout",
                "rename": "GridLayout",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/stackedlayout.h",
                "id": "QStackedLayout",
                "name": "QStackedLayout",
                "rename": "StackedLayout",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/dialog.h",
                "id": "QDialog",
                "name": "QDialog",
                "rename": "Dialog",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/messagebox.h",
                "id": "QMessageBox",
                "name": "QMessageBox",
                "rename": "MessageBox",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/messagebox.h",
                "id": "QMessageBoxStandardButtons",
                "name": "QMessageBox::StandardButtons",
                "rename": "StandardButtons"
            },
            {
                "header": "yasl/widgets/filedialog.h",
                "id": "QFileDialog",
                "name": "QFileDialog",
                "rename": "FileDialog",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/filedialog.h",
                "id": "QFileDialogOptions",
                "name": "QFileDialog::Options",
                "rename": "Options"
            },
            {
                "header": "yasl/widgets/errormessage.h",
                "id": "QErrorMessage",
                "name": "QErrorMessage",
                "rename": "ErrorMessage",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/colordialog.h",
                "id": "QColorDialog",
                "name": "QColorDialog",
                "rename": "ColorDialog",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/colordialog.h",
                "id": "QColorDialogColorDialogOptions",
                "name": "QColorDialog::ColorDialogOptions",
                "rename": "ColorDialogOptions"
            },
            {
                "header": "yasl/widgets/fontdialog.h",
                "id": "QFontDialog",
                "name": "QFontDialog",
                "rename": "FontDialog",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/fontdialog.h",
                "id": "QFontDialogFontDialogOptions",
                "name": "QFontDialog::FontDialogOptions",
                "rename": "FontDialogOptions"
            },
            {
                "header": "yasl/widgets/inputdialog.h",
                "id": "QInputDialog",
                "name": "QInputDialog",
                "rename": "InputDialog",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/inputdialog.h",
                "id": "QInputDialogInputDialogOptions",
                "name": "QInputDialog::InputDialogOptions",
                "rename": "InputDialogOptions"
            },
            {
                "header": "yasl/widgets/progressdialog.h",
                "id": "QProgressDialog",
                "name": "QProgressDialog",
                "rename": "ProgressDialog",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/wizard.h",
                "id": "QWizard",
                "name": "QWizard",
                "rename": "Wizard",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/wizard.h",
                "id": "QWizardPage",
                "name": "QWizardPage",
                "rename": "WizardPage",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/wizard.h",
                "id": "QWizardWizardOptions",
                "name": "QWizard::WizardOptions",
                "rename": "WizardOptions"
            },
            {
                "header": "yasl/widgets/toolbar.h",
                "id": "QToolBar",
                "name": "QToolBar",
                "rename": "ToolBar",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtToolBarAreas",
                "name": "Qt::ToolBarAreas",
                "rename": "ToolBarAreas"
            },
            {
                "header": "yasl/widgets/progressbar.h",
                "id": "QProgressBar",
                "name": "QProgressBar",
                "rename": "ProgressBar",
                "tag": "qobject_tag"
            }
        ],
        "enums": [
            {
                "header": "yasl/core/bytearray.h",
                "id": "QByteArrayBase64Option",
                "links": "flags@QByteArray::Base64Options",
                "name": "QByteArray::Base64Option"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtGlobalColor",
                "name": "Qt::GlobalColor"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtKeyboardModifier",
                "links": "flags@Qt::KeyboardModifiers",
                "name": "Qt::KeyboardModifier"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtModifier",
                "name": "Qt::Modifier"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtMouseButton",
                "name": "Qt::MouseButton"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtOrientation",
                "name": "Qt::Orientation"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtFocusPolicy",
                "name": "Qt::FocusPolicy"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTabFocusBehavior",
                "name": "Qt::TabFocusBehavior"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtSortOrder",
                "name": "Qt::SortOrder"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTileRule",
                "name": "Qt::TileRule"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtAlignmentFlag",
                "links": "flags@Qt::Alignment",
                "name": "Qt::AlignmentFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTextFlag",
                "name": "Qt::TextFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTextElideMode",
                "name": "Qt::TextElideMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtWhiteSpaceMode",
                "name": "Qt::WhiteSpaceMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtHitTestAccuracy",
                "name": "Qt::HitTestAccuracy"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtWindowType",
                "name": "Qt::WindowType"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtWindowState",
                "name": "Qt::WindowState"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtApplicationState",
                "name": "Qt::ApplicationState"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtScreenOrientation",
                "name": "Qt::ScreenOrientation"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtWidgetAttribute",
                "name": "Qt::WidgetAttribute"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtApplicationAttribute",
                "name": "Qt::ApplicationAttribute"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtImageConversionFlag",
                "links": "flags@Qt::ImageConversionFlags",
                "name": "Qt::ImageConversionFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtBGMode",
                "name": "Qt::BGMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtKey",
                "name": "Qt::Key"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtArrowType",
                "name": "Qt::ArrowType"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtPenStyle",
                "name": "Qt::PenStyle"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtPenCapStyle",
                "name": "Qt::PenCapStyle"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtPenJoinStyle",
                "name": "Qt::PenJoinStyle"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtBrushStyle",
                "name": "Qt::BrushStyle"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtSizeMode",
                "name": "Qt::SizeMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtUIEffect",
                "name": "Qt::UIEffect"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtCursorShape",
                "name": "Qt::CursorShape"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTextFormat",
                "name": "Qt::TextFormat"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtAspectRatioMode",
                "name": "Qt::AspectRatioMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtDockWidgetArea",
                "name": "Qt::DockWidgetArea"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtDockWidgetAreaSizes",
                "name": "Qt::DockWidgetAreaSizes"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtToolBarArea",
                "links": "flags@Qt::ToolBarAreas",
                "name": "Qt::ToolBarArea"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtToolBarAreaSizes",
                "name": "Qt::ToolBarAreaSizes"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtDateFormat",
                "name": "Qt::DateFormat"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTimeSpec",
                "name": "Qt::TimeSpec"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtDayOfWeek",
                "name": "Qt::DayOfWeek"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtScrollBarPolicy",
                "name": "Qt::ScrollBarPolicy"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtCaseSensitivity",
                "name": "Qt::CaseSensitivity"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtCorner",
                "name": "Qt::Corner"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtEdge",
                "name": "Qt::Edge"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtConnectionType",
                "name": "Qt::ConnectionType"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtShortcutContext",
                "name": "Qt::ShortcutContext"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtFillRule",
                "name": "Qt::FillRule"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtMaskMode",
                "name": "Qt::MaskMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtClipOperation",
                "name": "Qt::ClipOperation"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtItemSelectionMode",
                "name": "Qt::ItemSelectionMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtItemSelectionOperation",
                "name": "Qt::ItemSelectionOperation"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTransformationMode",
                "name": "Qt::TransformationMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtAxis",
                "name": "Qt::Axis"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtFocusReason",
                "name": "Qt::FocusReason"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtContextMenuPolicy",
                "name": "Qt::ContextMenuPolicy"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtInputMethodQuery",
                "name": "Qt::InputMethodQuery"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtInputMethodHint",
                "name": "Qt::InputMethodHint"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtEnterKeyType",
                "name": "Qt::EnterKeyType"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtToolButtonStyle",
                "name": "Qt::ToolButtonStyle"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtLayoutDirection",
                "name": "Qt::LayoutDirection"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtAnchorPoint",
                "name": "Qt::AnchorPoint"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtFindChildOption",
                "name": "Qt::FindChildOption"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtDropAction",
                "name": "Qt::DropAction"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtCheckState",
                "name": "Qt::CheckState"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtItemDataRole",
                "name": "Qt::ItemDataRole"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtItemFlag",
                "name": "Qt::ItemFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtMatchFlag",
                "name": "Qt::MatchFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtWindowModality",
                "name": "Qt::WindowModality"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTextInteractionFlag",
                "name": "Qt::TextInteractionFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtEventPriority",
                "name": "Qt::EventPriority"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtSizeHint",
                "name": "Qt::SizeHint"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtWindowFrameSection",
                "name": "Qt::WindowFrameSection"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtInitialization",
                "name": "Qt::Initialization"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtCoordinateSystem",
                "name": "Qt::CoordinateSystem"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTouchPointState",
                "name": "Qt::TouchPointState"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtGestureState",
                "name": "Qt::GestureState"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtGestureType",
                "name": "Qt::GestureType"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtGestureFlag",
                "name": "Qt::GestureFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtNativeGestureType",
                "name": "Qt::NativeGestureType"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtNavigationMode",
                "name": "Qt::NavigationMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtCursorMoveStyle",
                "name": "Qt::CursorMoveStyle"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTimerType",
                "name": "Qt::TimerType"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtScrollPhase",
                "name": "Qt::ScrollPhase"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtMouseEventSource",
                "name": "Qt::MouseEventSource"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtMouseEventFlag",
                "name": "Qt::MouseEventFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtChecksumType",
                "name": "Qt::ChecksumType"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharSpecialCharacter",
                "name": "QChar::SpecialCharacter"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharCategory",
                "name": "QChar::Category"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharScript",
                "name": "QChar::Script"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharDirection",
                "name": "QChar::Direction"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharDecomposition",
                "name": "QChar::Decomposition"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharJoiningType",
                "name": "QChar::JoiningType"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharJoining",
                "name": "QChar::Joining"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharCombiningClass",
                "name": "QChar::CombiningClass"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharUnicodeVersion",
                "name": "QChar::UnicodeVersion"
            },
            {
                "header": "yasl/core/datastream.h",
                "id": "QDataStreamVersion",
                "name": "QDataStream::Version"
            },
            {
                "header": "yasl/core/datastream.h",
                "id": "QDataStreamByteOrder",
                "name": "QDataStream::ByteOrder"
            },
            {
                "header": "yasl/core/datastream.h",
                "id": "QDataStreamStatus",
                "name": "QDataStream::Status"
            },
            {
                "header": "yasl/core/datastream.h",
                "id": "QDataStreamFloatingPointPrecision",
                "name": "QDataStream::FloatingPointPrecision"
            },
            {
                "header": "yasl/core/datetime.h",
                "id": "QDateMonthNameType",
                "name": "QDate::MonthNameType"
            },
            {
                "header": "yasl/core/dir.h",
                "id": "QDirFilter",
                "links": "flags@QDir::Filters",
                "name": "QDir::Filter"
            },
            {
                "header": "yasl/core/dir.h",
                "id": "QDirSortFlag",
                "links": "flags@QDir::SortFlags",
                "name": "QDir::SortFlag"
            },
            {
                "header": "yasl/core/elapsedtimer.h",
                "id": "QElapsedTimerClockType",
                "name": "QElapsedTimer::ClockType"
            },
            {
                "header": "yasl/core/event.h",
                "id": "QEventType",
                "name": "QEvent::Type"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDeviceFileError",
                "name": "QFileDevice::FileError"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDeviceFileTime",
                "name": "QFileDevice::FileTime"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDevicePermission",
                "links": "flags@QFileDevice::Permissions",
                "name": "QFileDevice::Permission"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDeviceFileHandleFlag",
                "links": "flags@QFileDevice::FileHandleFlags",
                "name": "QFileDevice::FileHandleFlag"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDeviceMemoryMapFlags",
                "name": "QFileDevice::MemoryMapFlags"
            },
            {
                "header": "yasl/core/iodevice.h",
                "id": "QIODeviceOpenModeFlag",
                "links": "flags@QIODevice::OpenMode",
                "name": "QIODevice::OpenModeFlag"
            },
            {
                "header": "yasl/core/line.h",
                "id": "QLineFIntersectType",
                "name": "QLineF::IntersectType"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleLanguage",
                "name": "QLocale::Language"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleScript",
                "name": "QLocale::Script"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleCountry",
                "name": "QLocale::Country"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleMeasurementSystem",
                "name": "QLocale::MeasurementSystem"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleFormatType",
                "name": "QLocale::FormatType"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleNumberOption",
                "links": "flags@QLocale::NumberOptions",
                "name": "QLocale::NumberOption"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleFloatingPointPrecisionOption",
                "name": "QLocale::FloatingPointPrecisionOption"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleCurrencySymbolFormat",
                "name": "QLocale::CurrencySymbolFormat"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleDataSizeFormat",
                "links": "flags@QLocale::DataSizeFormats",
                "name": "QLocale::DataSizeFormat"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleQuotationStyle",
                "name": "QLocale::QuotationStyle"
            },
            {
                "header": "yasl/core/process.h",
                "id": "QProcessProcessError",
                "name": "QProcess::ProcessError"
            },
            {
                "header": "yasl/core/process.h",
                "id": "QProcessProcessState",
                "name": "QProcess::ProcessState"
            },
            {
                "header": "yasl/core/process.h",
                "id": "QProcessProcessChannel",
                "name": "QProcess::ProcessChannel"
            },
            {
                "header": "yasl/core/process.h",
                "id": "QProcessProcessChannelMode",
                "name": "QProcess::ProcessChannelMode"
            },
            {
                "header": "yasl/core/process.h",
                "id": "QProcessInputChannelMode",
                "name": "QProcess::InputChannelMode"
            },
            {
                "header": "yasl/core/process.h",
                "id": "QProcessExitStatus",
                "name": "QProcess::ExitStatus"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpressionPatternOption",
                "links": "flags@QRegularExpression::PatternOptions",
                "name": "QRegularExpression::PatternOption"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpressionMatchType",
                "name": "QRegularExpression::MatchType"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpressionMatchOption",
                "links": "flags@QRegularExpression::MatchOptions",
                "name": "QRegularExpression::MatchOption"
            },
            {
                "header": "yasl/core/settings.h",
                "id": "QSettingsStatus",
                "name": "QSettings::Status"
            },
            {
                "header": "yasl/core/settings.h",
                "id": "QSettingsFormat",
                "name": "QSettings::Format"
            },
            {
                "header": "yasl/core/settings.h",
                "id": "QSettingsScope",
                "name": "QSettings::Scope"
            },
            {
                "header": "yasl/core/timezone.h",
                "id": "QTimeZoneTimeType",
                "name": "QTimeZone::TimeType"
            },
            {
                "header": "yasl/core/timezone.h",
                "id": "QTimeZoneNameType",
                "name": "QTimeZone::NameType"
            },
            {
                "header": "yasl/core/url.h",
                "id": "QUrlParsingMode",
                "name": "QUrl::ParsingMode"
            },
            {
                "header": "yasl/core/url.h",
                "id": "QUrlUrlFormattingOption",
                "name": "QUrl::UrlFormattingOption"
            },
            {
                "header": "yasl/core/url.h",
                "id": "QUrlComponentFormattingOption",
                "links": "flags@QUrl::ComponentFormattingOptions",
                "name": "QUrl::ComponentFormattingOption"
            },
            {
                "header": "yasl/core/url.h",
                "id": "QUrlUserInputResolutionOption",
                "links": "flags@QUrl::UserInputResolutionOptions",
                "name": "QUrl::UserInputResolutionOption"
            },
            {
                "header": "yasl/core/uuid.h",
                "id": "QUuidVariant",
                "name": "QUuid::Variant"
            },
            {
                "header": "yasl/core/uuid.h",
                "id": "QUuidVersion",
                "name": "QUuid::Version"
            },
            {
                "header": "yasl/core/variant.h",
                "id": "QVariantType",
                "name": "QVariant::Type"
            },
            {
                "header": "yasl/gui/color.h",
                "id": "QColorSpec",
                "name": "QColor::Spec"
            },
            {
                "header": "yasl/gui/color.h",
                "id": "QColorNameFormat",
                "name": "QColor::NameFormat"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontStyleHint",
                "name": "QFont::StyleHint"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontStyleStrategy",
                "name": "QFont::StyleStrategy"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontHintingPreference",
                "name": "QFont::HintingPreference"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontWeight",
                "name": "QFont::Weight"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontStyle",
                "name": "QFont::Style"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontStretch",
                "name": "QFont::Stretch"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontCapitalization",
                "name": "QFont::Capitalization"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontSpacingType",
                "name": "QFont::SpacingType"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontResolveProperties",
                "name": "QFont::ResolveProperties"
            },
            {
                "header": "yasl/gui/fontdatabase.h",
                "id": "QFontDatabaseWritingSystem",
                "name": "QFontDatabase::WritingSystem"
            },
            {
                "header": "yasl/gui/fontdatabase.h",
                "id": "QFontDatabaseSystemFont",
                "name": "QFontDatabase::SystemFont"
            },
            {
                "header": "yasl/gui/icon.h",
                "id": "QIconMode",
                "name": "QIcon::Mode"
            },
            {
                "header": "yasl/gui/icon.h",
                "id": "QIconState",
                "name": "QIcon::State"
            },
            {
                "header": "yasl/gui/image.h",
                "id": "QImageInvertMode",
                "name": "QImage::InvertMode"
            },
            {
                "header": "yasl/gui/image.h",
                "id": "QImageFormat",
                "name": "QImage::Format"
            },
            {
                "header": "yasl/gui/transform.h",
                "id": "QTransformTransformationType",
                "name": "QTransform::TransformationType"
            },
            {
                "header": "yasl/gui/region.h",
                "id": "QRegionRegionType",
                "name": "QRegion::RegionType"
            },
            {
                "header": "yasl/gui/clipboard.h",
                "id": "QClipboardMode",
                "name": "QClipboard::Mode"
            },
            {
                "header": "yasl/gui/keysequence.h",
                "id": "QKeySequenceStandardKey",
                "name": "QKeySequence::StandardKey"
            },
            {
                "header": "yasl/gui/keysequence.h",
                "id": "QKeySequenceSequenceFormat",
                "name": "QKeySequence::SequenceFormat"
            },
            {
                "header": "yasl/gui/keysequence.h",
                "id": "QKeySequenceSequenceMatch",
                "name": "QKeySequence::SequenceMatch"
            },
            {
                "header": "yasl/gui/brush.h",
                "id": "QGradientType",
                "name": "QGradient::Type"
            },
            {
                "header": "yasl/gui/brush.h",
                "id": "QGradientSpread",
                "name": "QGradient::Spread"
            },
            {
                "header": "yasl/gui/brush.h",
                "id": "QGradientCoordinateMode",
                "name": "QGradient::CoordinateMode"
            },
            {
                "header": "yasl/gui/brush.h",
                "id": "QGradientInterpolationMode",
                "name": "QGradient::InterpolationMode"
            },
            {
                "header": "yasl/gui/glyphrun.h",
                "id": "QGlyphRunGlyphRunFlag",
                "name": "QGlyphRun::GlyphRunFlag"
            },
            {
                "header": "yasl/gui/painter.h",
                "id": "QPainterRenderHint",
                "links": "flags@QPainter::RenderHints",
                "name": "QPainter::RenderHint"
            },
            {
                "header": "yasl/gui/painter.h",
                "id": "QPainterPixmapFragmentHint",
                "links": "flags@QPainter::PixmapFragmentHints",
                "name": "QPainter::PixmapFragmentHint"
            },
            {
                "header": "yasl/gui/painter.h",
                "id": "QPainterCompositionMode",
                "name": "QPainter::CompositionMode"
            },
            {
                "header": "yasl/gui/painterpath.h",
                "id": "QPainterPathElementType",
                "name": "QPainterPath::ElementType"
            },
            {
                "header": "yasl/gui/palette.h",
                "id": "QPaletteColorGroup",
                "name": "QPalette::ColorGroup"
            },
            {
                "header": "yasl/gui/palette.h",
                "id": "QPaletteColorRole",
                "name": "QPalette::ColorRole"
            },
            {
                "header": "yasl/gui/pixelformat.h",
                "id": "QPixelFormatColorModel",
                "name": "QPixelFormat::ColorModel"
            },
            {
                "header": "yasl/gui/pixelformat.h",
                "id": "QPixelFormatAlphaUsage",
                "name": "QPixelFormat::AlphaUsage"
            },
            {
                "header": "yasl/gui/pixelformat.h",
                "id": "QPixelFormatAlphaPosition",
                "name": "QPixelFormat::AlphaPosition"
            },
            {
                "header": "yasl/gui/pixelformat.h",
                "id": "QPixelFormatAlphaPremultiplied",
                "name": "QPixelFormat::AlphaPremultiplied"
            },
            {
                "header": "yasl/gui/pixelformat.h",
                "id": "QPixelFormatTypeInterpretation",
                "name": "QPixelFormat::TypeInterpretation"
            },
            {
                "header": "yasl/gui/pixelformat.h",
                "id": "QPixelFormatYUVLayout",
                "name": "QPixelFormat::YUVLayout"
            },
            {
                "header": "yasl/gui/pixelformat.h",
                "id": "QPixelFormatByteOrder",
                "name": "QPixelFormat::ByteOrder"
            },
            {
                "header": "yasl/gui/statictext.h",
                "id": "QStaticTextPerformanceHint",
                "name": "QStaticText::PerformanceHint"
            },
            {
                "header": "yasl/gui/textoption.h",
                "id": "QTextOptionTabType",
                "name": "QTextOption::TabType"
            },
            {
                "header": "yasl/gui/textoption.h",
                "id": "QTextOptionWrapMode",
                "name": "QTextOption::WrapMode"
            },
            {
                "header": "yasl/gui/textoption.h",
                "id": "QTextOptionFlag",
                "links": "flags@QTextOption::Flags",
                "name": "QTextOption::Flag"
            },
            {
                "header": "yasl/gui/validator.h",
                "id": "QValidatorState",
                "name": "QValidator::State"
            },
            {
                "header": "yasl/gui/validator.h",
                "id": "QDoubleValidatorNotation",
                "name": "QDoubleValidator::Notation"
            },
            {
                "header": "yasl/gui/window.h",
                "id": "QWindowVisibility",
                "name": "QWindow::Visibility"
            },
            {
                "header": "yasl/gui/window.h",
                "id": "QWindowAncestorMode",
                "name": "QWindow::AncestorMode"
            },
            {
                "header": "yasl/widgets/widget.h",
                "id": "QWidgetRenderFlag",
                "name": "QWidget::RenderFlag"
            },
            {
                "header": "yasl/widgets/frame.h",
                "id": "QFrameShape",
                "name": "QFrame::Shape"
            },
            {
                "header": "yasl/widgets/frame.h",
                "id": "QFrameShadow",
                "name": "QFrame::Shadow"
            },
            {
                "header": "yasl/widgets/frame.h",
                "id": "QFrameStyleMask",
                "name": "QFrame::StyleMask"
            },
            {
                "header": "yasl/widgets/tabwidget.h",
                "id": "QTabWidgetTabPosition",
                "name": "QTabWidget::TabPosition"
            },
            {
                "header": "yasl/widgets/tabwidget.h",
                "id": "QTabWidgetTabShape",
                "name": "QTabWidget::TabShape"
            },
            {
                "header": "yasl/widgets/lineedit.h",
                "id": "QLineEditActionPosition",
                "name": "QLineEdit::ActionPosition"
            },
            {
                "header": "yasl/widgets/lineedit.h",
                "id": "QLineEditEchoMode",
                "name": "QLineEdit::EchoMode"
            },
            {
                "header": "yasl/core/jsonvalue.h",
                "id": "QJsonValueType",
                "name": "QJsonValue::Type"
            },
            {
                "header": "yasl/core/jsondocument.h",
                "id": "QJsonDocumentDataValidation",
                "name": "QJsonDocument::DataValidation"
            },
            {
                "header": "yasl/core/jsondocument.h",
                "id": "QJsonDocumentJsonFormat",
                "name": "QJsonDocument::JsonFormat"
            },
            {
                "header": "yasl/widgets/combobox.h",
                "id": "QComboBoxInsertPolicy",
                "name": "QComboBox::InsertPolicy"
            },
            {
                "header": "yasl/widgets/combobox.h",
                "id": "QComboBoxSizeAdjustPolicy",
                "name": "QComboBox::SizeAdjustPolicy"
            },
            {
                "header": "yasl/widgets/fontcombobox.h",
                "id": "QFontComboBoxFontFilter",
                "links": "flags@QFontComboBox::FontFilters",
                "name": "QFontComboBox::FontFilter"
            },
            {
                "header": "yasl/widgets/abstractslider.h",
                "id": "QAbstractSliderSliderAction",
                "name": "QAbstractSlider::SliderAction"
            },
            {
                "header": "yasl/widgets/slider.h",
                "id": "QSliderTickPosition",
                "name": "QSlider::TickPosition"
            },
            {
                "header": "yasl/widgets/abstractspinbox.h",
                "id": "QAbstractSpinBoxStepEnabledFlag",
                "links": "flags@QAbstractSpinBox::StepEnabled",
                "name": "QAbstractSpinBox::StepEnabledFlag"
            },
            {
                "header": "yasl/widgets/abstractspinbox.h",
                "id": "QAbstractSpinBoxButtonSymbols",
                "name": "QAbstractSpinBox::ButtonSymbols"
            },
            {
                "header": "yasl/widgets/abstractspinbox.h",
                "id": "QAbstractSpinBoxCorrectionMode",
                "name": "QAbstractSpinBox::CorrectionMode"
            },
            {
                "header": "yasl/widgets/datetimeedit.h",
                "id": "QDateTimeEditSection",
                "links": "flags@QDateTimeEdit::Sections",
                "name": "QDateTimeEdit::Section"
            },
            {
                "header": "yasl/widgets/toolbutton.h",
                "id": "QToolButtonToolButtonPopupMode",
                "name": "QToolButton::ToolButtonPopupMode"
            },
            {
                "header": "yasl/widgets/action.h",
                "id": "QActionMenuRole",
                "name": "QAction::MenuRole"
            },
            {
                "header": "yasl/widgets/action.h",
                "id": "QActionPriority",
                "name": "QAction::Priority"
            },
            {
                "header": "yasl/widgets/action.h",
                "id": "QActionActionEvent",
                "name": "QAction::ActionEvent"
            },
            {
                "header": "yasl/widgets/layout.h",
                "id": "QLayoutSizeConstraint",
                "name": "QLayout::SizeConstraint"
            },
            {
                "header": "yasl/widgets/boxlayout.h",
                "id": "QBoxLayoutDirection",
                "name": "QBoxLayout::Direction"
            },
            {
                "header": "yasl/widgets/formlayout.h",
                "id": "QFormLayoutFieldGrowthPolicy",
                "name": "QFormLayout::FieldGrowthPolicy"
            },
            {
                "header": "yasl/widgets/formlayout.h",
                "id": "QFormLayoutRowWrapPolicy",
                "name": "QFormLayout::RowWrapPolicy"
            },
            {
                "header": "yasl/widgets/formlayout.h",
                "id": "QFormLayoutItemRole",
                "name": "QFormLayout::ItemRole"
            },
            {
                "header": "yasl/widgets/stackedlayout.h",
                "id": "QStackedLayoutStackingMode",
                "name": "QStackedLayout::StackingMode"
            },
            {
                "header": "yasl/widgets/dialog.h",
                "id": "QDialogDialogCode",
                "name": "QDialog::DialogCode"
            },
            {
                "header": "yasl/widgets/messagebox.h",
                "id": "QMessageBoxIcon",
                "name": "QMessageBox::Icon"
            },
            {
                "header": "yasl/widgets/messagebox.h",
                "id": "QMessageBoxButtonRole",
                "name": "QMessageBox::ButtonRole"
            },
            {
                "header": "yasl/widgets/messagebox.h",
                "id": "QMessageBoxStandardButton",
                "links": "flags@QMessageBox::StandardButtons",
                "name": "QMessageBox::StandardButton"
            },
            {
                "header": "yasl/widgets/filedialog.h",
                "id": "QFileDialogViewMode",
                "name": "QFileDialog::ViewMode"
            },
            {
                "header": "yasl/widgets/filedialog.h",
                "id": "QFileDialogFileMode",
                "name": "QFileDialog::FileMode"
            },
            {
                "header": "yasl/widgets/filedialog.h",
                "id": "QFileDialogAcceptMode",
                "name": "QFileDialog::AcceptMode"
            },
            {
                "header": "yasl/widgets/filedialog.h",
                "id": "QFileDialogDialogLabel",
                "name": "QFileDialog::DialogLabel"
            },
            {
                "header": "yasl/widgets/filedialog.h",
                "id": "QFileDialogOption",
                "links": "flags@QFileDialog::Options",
                "name": "QFileDialog::Option"
            },
            {
                "header": "yasl/widgets/colordialog.h",
                "id": "QColorDialogColorDialogOption",
                "links": "flags@QColorDialog::ColorDialogOptions",
                "name": "QColorDialog::ColorDialogOption"
            },
            {
                "header": "yasl/widgets/fontdialog.h",
                "id": "QFontDialogFontDialogOption",
                "links": "flags@QFontDialog::FontDialogOptions",
                "name": "QFontDialog::FontDialogOption"
            },
            {
                "header": "yasl/widgets/inputdialog.h",
                "id": "QInputDialogInputDialogOption",
                "links": "flags@QInputDialog::InputDialogOptions",
                "name": "QInputDialog::InputDialogOption"
            },
            {
                "header": "yasl/widgets/inputdialog.h",
                "id": "QInputDialogInputMode",
                "name": "QInputDialog::InputMode"
            },
            {
                "header": "yasl/widgets/wizard.h",
                "id": "QWizardWizardButton",
                "name": "QWizard::WizardButton"
            },
            {
                "header": "yasl/widgets/wizard.h",
                "id": "QWizardWizardPixmap",
                "name": "QWizard::WizardPixmap"
            },
            {
                "header": "yasl/widgets/wizard.h",
                "id": "QWizardWizardStyle",
                "name": "QWizard::WizardStyle"
            },
            {
                "header": "yasl/widgets/wizard.h",
                "id": "QWizardWizardOption",
                "links": "flags@QWizard::WizardOptions",
                "name": "QWizard::WizardOption"
            },
            {
                "header": "yasl/widgets/progressbar.h",
                "id": "QProgressBarDirection",
                "name": "QProgressBar::Direction"
            }
        ],
        "fundamentals": [
            {
                "id": "Void",
                "name": "void"
            },
            {
                "id": "Boolean",
                "name": "bool"
            },
            {
                "id": "Char",
                "name": "char"
            },
            {
                "id": "Int",
                "name": "int"
            },
            {
                "id": "Float",
                "name": "float"
            },
            {
                "id": "Double",
                "name": "double"
            },
            {
                "id": "String",
                "name": "QString",
                "rename": "String"
            },
            {
                "id": "",
                "name": "qreal"
            },
            {
                "id": "",
                "name": "uint"
            }
        ]
    }
}
