{
    "modules": [
        {
            "checked": 1,
            "elements": [
                {
                    "checked": 1,
                    "cppincludes": "yasl/core/bytearray-functions.h",
                    "elements": [
                        {
                            "name": "qstrcmp",
                            "rename": "strcmp",
                            "signature": "const QByteArray &;const QByteArray &->int",
                            "type": "function"
                        },
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        "Base64Encoding",
                                        "Base64UrlEncoding",
                                        "KeepTrailingEquals",
                                        "OmitTrailingEquals"
                                    ],
                                    "name": "Base64Option",
                                    "type": "enum"
                                },
                                {
                                    "name": "QByteArray",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QByteArray",
                                    "signature": "int;char",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QByteArray",
                                    "signature": "int;Qt::Initialization",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QByteArray",
                                    "signature": "const QByteArray &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QByteArray",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QByteArray &->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "QByteArray",
                                    "signature": "QByteArray &&",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QByteArray &&->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QByteArray &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "resize",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "-1",
                                    "name": "fill",
                                    "signature": "char;int->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capacity",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "reserve",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "squeeze",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "detach",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSharedWith",
                                    "signature": "const QByteArray &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "at",
                                    "signature": "int->char",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "signature": "int->char",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "operator[]",
                                    "signature": "uint->char",
                                    "type": "function"
                                },
                                {
                                    "name": "operator[]",
                                    "signature": "int->QByteRef",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "operator[]",
                                    "signature": "uint->QByteRef",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "front",
                                    "signature": "->char",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "front",
                                    "signature": "->QByteRef",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "back",
                                    "signature": "->char",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "back",
                                    "signature": "->QByteRef",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "0",
                                    "name": "indexOf",
                                    "signature": "char;int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "0",
                                    "name": "indexOf",
                                    "signature": "const QByteArray &;int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "-1",
                                    "name": "lastIndexOf",
                                    "signature": "char;int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "-1",
                                    "name": "lastIndexOf",
                                    "signature": "const QByteArray &;int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "signature": "char->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "signature": "const QByteArray &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "signature": "char->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "signature": "const QByteArray &->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "left",
                                    "signature": "int->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "right",
                                    "signature": "int->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "-1",
                                    "name": "mid",
                                    "signature": "int;int->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "chopped",
                                    "signature": "int->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "startsWith",
                                    "signature": "const QByteArray &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "startsWith",
                                    "signature": "char->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "endsWith",
                                    "signature": "const QByteArray &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "endsWith",
                                    "signature": "char->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "truncate",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "chop",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toLower",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "toLower",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "ba_toLower",
                                    "rename": "toLower",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toUpper",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "toUpper",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "ba_toUpper",
                                    "rename": "toUpper",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "trimmed",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "trimmed",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "ba_trimmed",
                                    "rename": "trimmed",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "simplified",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "ba_simplified",
                                    "rename": "simplified",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "false;' '",
                                    "name": "leftJustified",
                                    "signature": "int;char;bool->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "false;' '",
                                    "name": "rightJustified",
                                    "signature": "int;char;bool->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "prepend",
                                    "signature": "char->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "prepend",
                                    "signature": "int;char->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "prepend",
                                    "signature": "const QByteArray &->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "append",
                                    "signature": "char->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "append",
                                    "signature": "int;char->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "append",
                                    "signature": "const QByteArray &->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "signature": "int;char->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "signature": "int;int;char->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "signature": "int;const QByteArray &->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "remove",
                                    "signature": "int;int->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "replace",
                                    "signature": "int;int;const QByteArray &->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "replace",
                                    "signature": "char;const QByteArray &->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "replace",
                                    "signature": "const QByteArray &;const QByteArray &->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "replace",
                                    "signature": "char;char->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "char->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "const QByteArray &->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "split",
                                    "signature": "char->QList<QByteArray>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "repeated",
                                    "signature": "int->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "append",
                                    "signature": "const QString &->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "signature": "int;const QString &->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "replace",
                                    "signature": "char;const QString &->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "replace",
                                    "signature": "const QString &;const QByteArray &->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "const QString &->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "indexOf",
                                    "signature": "const QString &;int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastIndexOf",
                                    "signature": "const QString &;int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<=",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>=",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toShort",
                                    "signature": "bool *;int->short",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUShort",
                                    "signature": "bool *;int->ushort",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toInt",
                                    "signature": "bool *;int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUInt",
                                    "signature": "bool *;int->uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLong",
                                    "signature": "bool *;int->long",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toULong",
                                    "signature": "bool *;int->ulong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLongLong",
                                    "signature": "bool *;int->qlonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toULongLong",
                                    "signature": "bool *;int->qulonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toFloat",
                                    "signature": "bool *->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDouble",
                                    "signature": "bool *->double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toBase64",
                                    "signature": "QByteArray::Base64Options->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toBase64",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toHex",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toHex",
                                    "signature": "char->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPercentEncoding",
                                    "signature": "const QByteArray &;const QByteArray &;char->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "signature": "short;int->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "signature": "ushort;int->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "defaults": "10",
                                    "name": "setNum",
                                    "signature": "int;int->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "setNum",
                                    "signature": "uint;int->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "signature": "qlonglong;int->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "signature": "qulonglong;int->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "defaults": "6;'g'",
                                    "name": "setNum",
                                    "signature": "float;char;int->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "defaults": "6;'g'",
                                    "name": "setNum",
                                    "signature": "double;char;int->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "setRawData",
                                    "signature": "const char *;uint->QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "number",
                                    "signature": "int;int->QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "number",
                                    "signature": "uint;int->QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "number",
                                    "signature": "qlonglong;int->QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "number",
                                    "signature": "qulonglong;int->QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "number",
                                    "signature": "double;char;int->QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromBase64",
                                    "signature": "const QByteArray &;QByteArray::Base64Options->QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromBase64",
                                    "signature": "const QByteArray &->QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromHex",
                                    "signature": "const QByteArray &->QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromPercentEncoding",
                                    "signature": "const QByteArray &;char->QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "begin",
                                    "signature": "->QByteArray::iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "begin",
                                    "signature": "->QByteArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cbegin",
                                    "signature": "->QByteArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constBegin",
                                    "signature": "->QByteArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "end",
                                    "signature": "->QByteArray::iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "end",
                                    "signature": "->QByteArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cend",
                                    "signature": "->QByteArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constEnd",
                                    "signature": "->QByteArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "rbegin",
                                    "signature": "->QByteArray::reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "rend",
                                    "signature": "->QByteArray::reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rbegin",
                                    "signature": "->QByteArray::const_reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rend",
                                    "signature": "->QByteArray::const_reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "crbegin",
                                    "signature": "->QByteArray::const_reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "crend",
                                    "signature": "->QByteArray::const_reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "push_back",
                                    "signature": "char->void",
                                    "type": "function"
                                },
                                {
                                    "name": "push_back",
                                    "signature": "const QByteArray &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "push_front",
                                    "signature": "char->void",
                                    "type": "function"
                                },
                                {
                                    "name": "push_front",
                                    "signature": "const QByteArray &->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "shrink_to_fit",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "length",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QByteArray",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "signature": "QByteArray::Base64Option;QByteArray::Base64Option->QByteArray::Base64Options",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QByteArray::Base64Option;QByteArray::Base64Options->QByteArray::Base64Options",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QByteArray::Base64Options::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "signature": "const QByteArray &;const QByteArray &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "signature": "const QByteArray &;const QByteArray &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<",
                            "signature": "const QByteArray &;const QByteArray &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<=",
                            "signature": "const QByteArray &;const QByteArray &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>",
                            "signature": "const QByteArray &;const QByteArray &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>=",
                            "signature": "const QByteArray &;const QByteArray &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QByteArray &;const QByteArray &->const QByteArray",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QByteArray &;char->const QByteArray",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "char;const QByteArray &->const QByteArray",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QByteArray &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QByteArray &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "qCompress",
                            "signature": "const QByteArray &;int->QByteArray",
                            "type": "function"
                        },
                        {
                            "name": "qUncompress",
                            "signature": "const QByteArray &->QByteArray",
                            "type": "function"
                        },
                        {
                            "name": "swap",
                            "signature": "QByteArray &;QByteArray &->void",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "operator=",
                                    "signature": "char->QByteRef &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QByteRef &->QByteRef &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "char->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "char->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "signature": "char->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>=",
                                    "signature": "char->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "signature": "char->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<=",
                                    "signature": "char->bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QByteRef",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QByteArray>",
                    "name": "bytearray",
                    "type": "file"
                },
                {
                    "cppincludes": "yasl/core/char-functions.h",
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "~QChar",
                                    "type": "destructor"
                                },
                                {
                                    "enumerators": [
                                        "Null",
                                        "Tabulation",
                                        "LineFeed",
                                        "CarriageReturn",
                                        "Space",
                                        "Nbsp",
                                        "SoftHyphen",
                                        "ReplacementCharacter",
                                        "ObjectReplacementCharacter",
                                        "ByteOrderMark",
                                        "ByteOrderSwapped",
                                        "ParagraphSeparator",
                                        "LineSeparator",
                                        "LastValidCodePoint"
                                    ],
                                    "name": "SpecialCharacter",
                                    "type": "enum"
                                },
                                {
                                    "name": "QChar",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "signature": "ushort",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "signature": "uchar;uchar",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "signature": "short",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "signature": "uint",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "signature": "int",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "signature": "QChar::SpecialCharacter",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "signature": "QLatin1Char",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "signature": "char16_t",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "signature": "wchar_t",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "signature": "char",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "signature": "uchar",
                                    "type": "constructor"
                                },
                                {
                                    "enumerators": [
                                        "Mark_NonSpacing",
                                        "Mark_SpacingCombining",
                                        "Mark_Enclosing",
                                        "Number_DecimalDigit",
                                        "Number_Letter",
                                        "Number_Other",
                                        "Separator_Space",
                                        "Separator_Line",
                                        "Separator_Paragraph",
                                        "Other_Control",
                                        "Other_Format",
                                        "Other_Surrogate",
                                        "Other_PrivateUse",
                                        "Other_NotAssigned",
                                        "Letter_Uppercase",
                                        "Letter_Lowercase",
                                        "Letter_Titlecase",
                                        "Letter_Modifier",
                                        "Letter_Other",
                                        "Punctuation_Connector",
                                        "Punctuation_Dash",
                                        "Punctuation_Open",
                                        "Punctuation_Close",
                                        "Punctuation_InitialQuote",
                                        "Punctuation_FinalQuote",
                                        "Punctuation_Other",
                                        "Symbol_Math",
                                        "Symbol_Currency",
                                        "Symbol_Modifier",
                                        "Symbol_Other"
                                    ],
                                    "name": "Category",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "Script_Unknown",
                                        "Script_Inherited",
                                        "Script_Common",
                                        "Script_Latin",
                                        "Script_Greek",
                                        "Script_Cyrillic",
                                        "Script_Armenian",
                                        "Script_Hebrew",
                                        "Script_Arabic",
                                        "Script_Syriac",
                                        "Script_Thaana",
                                        "Script_Devanagari",
                                        "Script_Bengali",
                                        "Script_Gurmukhi",
                                        "Script_Gujarati",
                                        "Script_Oriya",
                                        "Script_Tamil",
                                        "Script_Telugu",
                                        "Script_Kannada",
                                        "Script_Malayalam",
                                        "Script_Sinhala",
                                        "Script_Thai",
                                        "Script_Lao",
                                        "Script_Tibetan",
                                        "Script_Myanmar",
                                        "Script_Georgian",
                                        "Script_Hangul",
                                        "Script_Ethiopic",
                                        "Script_Cherokee",
                                        "Script_CanadianAboriginal",
                                        "Script_Ogham",
                                        "Script_Runic",
                                        "Script_Khmer",
                                        "Script_Mongolian",
                                        "Script_Hiragana",
                                        "Script_Katakana",
                                        "Script_Bopomofo",
                                        "Script_Han",
                                        "Script_Yi",
                                        "Script_OldItalic",
                                        "Script_Gothic",
                                        "Script_Deseret",
                                        "Script_Tagalog",
                                        "Script_Hanunoo",
                                        "Script_Buhid",
                                        "Script_Tagbanwa",
                                        "Script_Coptic",
                                        "Script_Limbu",
                                        "Script_TaiLe",
                                        "Script_LinearB",
                                        "Script_Ugaritic",
                                        "Script_Shavian",
                                        "Script_Osmanya",
                                        "Script_Cypriot",
                                        "Script_Braille",
                                        "Script_Buginese",
                                        "Script_NewTaiLue",
                                        "Script_Glagolitic",
                                        "Script_Tifinagh",
                                        "Script_SylotiNagri",
                                        "Script_OldPersian",
                                        "Script_Kharoshthi",
                                        "Script_Balinese",
                                        "Script_Cuneiform",
                                        "Script_Phoenician",
                                        "Script_PhagsPa",
                                        "Script_Nko",
                                        "Script_Sundanese",
                                        "Script_Lepcha",
                                        "Script_OlChiki",
                                        "Script_Vai",
                                        "Script_Saurashtra",
                                        "Script_KayahLi",
                                        "Script_Rejang",
                                        "Script_Lycian",
                                        "Script_Carian",
                                        "Script_Lydian",
                                        "Script_Cham",
                                        "Script_TaiTham",
                                        "Script_TaiViet",
                                        "Script_Avestan",
                                        "Script_EgyptianHieroglyphs",
                                        "Script_Samaritan",
                                        "Script_Lisu",
                                        "Script_Bamum",
                                        "Script_Javanese",
                                        "Script_MeeteiMayek",
                                        "Script_ImperialAramaic",
                                        "Script_OldSouthArabian",
                                        "Script_InscriptionalParthian",
                                        "Script_InscriptionalPahlavi",
                                        "Script_OldTurkic",
                                        "Script_Kaithi",
                                        "Script_Batak",
                                        "Script_Brahmi",
                                        "Script_Mandaic",
                                        "Script_Chakma",
                                        "Script_MeroiticCursive",
                                        "Script_MeroiticHieroglyphs",
                                        "Script_Miao",
                                        "Script_Sharada",
                                        "Script_SoraSompeng",
                                        "Script_Takri",
                                        "Script_CaucasianAlbanian",
                                        "Script_BassaVah",
                                        "Script_Duployan",
                                        "Script_Elbasan",
                                        "Script_Grantha",
                                        "Script_PahawhHmong",
                                        "Script_Khojki",
                                        "Script_LinearA",
                                        "Script_Mahajani",
                                        "Script_Manichaean",
                                        "Script_MendeKikakui",
                                        "Script_Modi",
                                        "Script_Mro",
                                        "Script_OldNorthArabian",
                                        "Script_Nabataean",
                                        "Script_Palmyrene",
                                        "Script_PauCinHau",
                                        "Script_OldPermic",
                                        "Script_PsalterPahlavi",
                                        "Script_Siddham",
                                        "Script_Khudawadi",
                                        "Script_Tirhuta",
                                        "Script_WarangCiti",
                                        "Script_Ahom",
                                        "Script_AnatolianHieroglyphs",
                                        "Script_Hatran",
                                        "Script_Multani",
                                        "Script_OldHungarian",
                                        "Script_SignWriting",
                                        "ScriptCount"
                                    ],
                                    "name": "Script",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "DirL",
                                        "DirR",
                                        "DirEN",
                                        "DirES",
                                        "DirET",
                                        "DirAN",
                                        "DirCS",
                                        "DirB",
                                        "DirS",
                                        "DirWS",
                                        "DirON",
                                        "DirLRE",
                                        "DirLRO",
                                        "DirAL",
                                        "DirRLE",
                                        "DirRLO",
                                        "DirPDF",
                                        "DirNSM",
                                        "DirBN",
                                        "DirLRI",
                                        "DirRLI",
                                        "DirFSI",
                                        "DirPDI"
                                    ],
                                    "name": "Direction",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "NoDecomposition",
                                        "Canonical",
                                        "Font",
                                        "NoBreak",
                                        "Initial",
                                        "Medial",
                                        "Final",
                                        "Isolated",
                                        "Circle",
                                        "Super",
                                        "Sub",
                                        "Vertical",
                                        "Wide",
                                        "Narrow",
                                        "Small",
                                        "Square",
                                        "Compat",
                                        "Fraction"
                                    ],
                                    "name": "Decomposition",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "Joining_None",
                                        "Joining_Causing",
                                        "Joining_Dual",
                                        "Joining_Right",
                                        "Joining_Left",
                                        "Joining_Transparent"
                                    ],
                                    "name": "JoiningType",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "OtherJoining",
                                        "Dual",
                                        "Right",
                                        "Center"
                                    ],
                                    "name": "Joining",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "Combining_BelowLeftAttached",
                                        "Combining_BelowAttached",
                                        "Combining_BelowRightAttached",
                                        "Combining_LeftAttached",
                                        "Combining_RightAttached",
                                        "Combining_AboveLeftAttached",
                                        "Combining_AboveAttached",
                                        "Combining_AboveRightAttached",
                                        "Combining_BelowLeft",
                                        "Combining_Below",
                                        "Combining_BelowRight",
                                        "Combining_Left",
                                        "Combining_Right",
                                        "Combining_AboveLeft",
                                        "Combining_Above",
                                        "Combining_AboveRight",
                                        "Combining_DoubleBelow",
                                        "Combining_DoubleAbove",
                                        "Combining_IotaSubscript"
                                    ],
                                    "name": "CombiningClass",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "Unicode_Unassigned",
                                        "Unicode_1_1",
                                        "Unicode_2_0",
                                        "Unicode_2_1_2",
                                        "Unicode_3_0",
                                        "Unicode_3_1",
                                        "Unicode_3_2",
                                        "Unicode_4_0",
                                        "Unicode_4_1",
                                        "Unicode_5_0",
                                        "Unicode_5_1",
                                        "Unicode_5_2",
                                        "Unicode_6_0",
                                        "Unicode_6_1",
                                        "Unicode_6_2",
                                        "Unicode_6_3",
                                        "Unicode_7_0",
                                        "Unicode_8_0"
                                    ],
                                    "name": "UnicodeVersion",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "category",
                                    "signature": "->QChar::Category",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "direction",
                                    "signature": "->QChar::Direction",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "joiningType",
                                    "signature": "->QChar::JoiningType",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "joining",
                                    "signature": "->QChar::Joining",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "combiningClass",
                                    "signature": "->unsigned char",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mirroredChar",
                                    "signature": "->QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasMirrored",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "decomposition",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "decompositionTag",
                                    "signature": "->QChar::Decomposition",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "digitValue",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLower",
                                    "signature": "->QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUpper",
                                    "signature": "->QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toTitleCase",
                                    "signature": "->QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCaseFolded",
                                    "signature": "->QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "script",
                                    "signature": "->QChar::Script",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "unicodeVersion",
                                    "signature": "->QChar::UnicodeVersion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLatin1",
                                    "signature": "->char",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "unicode",
                                    "signature": "->ushort",
                                    "type": "function"
                                },
                                {
                                    "name": "unicode",
                                    "signature": "->ushort &",
                                    "type": "function"
                                },
                                {
                                    "name": "fromLatin1",
                                    "signature": "char->QChar",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isPrint",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSpace",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isMark",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isPunct",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSymbol",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isLetter",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNumber",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isLetterOrNumber",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDigit",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isLower",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isUpper",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTitleCase",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNonCharacter",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isHighSurrogate",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isLowSurrogate",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSurrogate",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cell",
                                    "signature": "->uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "row",
                                    "signature": "->uchar",
                                    "type": "function"
                                },
                                {
                                    "name": "setCell",
                                    "signature": "uchar->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRow",
                                    "signature": "uchar->void",
                                    "type": "function"
                                },
                                {
                                    "name": "isNonCharacter",
                                    "signature": "uint->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isHighSurrogate",
                                    "signature": "uint->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isLowSurrogate",
                                    "signature": "uint->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isSurrogate",
                                    "signature": "uint->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "requiresSurrogates",
                                    "signature": "uint->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "surrogateToUcs4",
                                    "signature": "ushort;ushort->uint",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "surrogateToUcs4",
                                    "signature": "QChar;QChar->uint",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "highSurrogate",
                                    "signature": "uint->ushort",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "lowSurrogate",
                                    "signature": "uint->ushort",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_category",
                                    "rename": "category",
                                    "signature": "uint->QChar::Category",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_direction",
                                    "rename": "direction",
                                    "signature": "uint->QChar::Direction",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_joiningType",
                                    "rename": "joiningType",
                                    "signature": "uint->QChar::JoiningType",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_joining",
                                    "rename": "joining",
                                    "signature": "uint->QChar::Joining",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_combiningClass",
                                    "rename": "combiningClass",
                                    "signature": "uint->unsigned char",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_mirroredChar",
                                    "rename": "mirroredChar",
                                    "signature": "uint->uint",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_hasMirrored",
                                    "rename": "hasMirrored",
                                    "signature": "uint->bool",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_decomposition",
                                    "rename": "decomposition",
                                    "signature": "uint->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_decompositionTag",
                                    "rename": "decompositionTag",
                                    "signature": "uint->QChar::Decomposition",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_digitValue",
                                    "rename": "digitValue",
                                    "signature": "uint->int",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_toLower",
                                    "rename": "toLower",
                                    "signature": "uint->uint",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_toUpper",
                                    "rename": "toUpper",
                                    "signature": "uint->uint",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_toTitleCase",
                                    "rename": "toTitleCase",
                                    "signature": "uint->uint",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_toCaseFolded",
                                    "rename": "toCaseFolded",
                                    "signature": "uint->uint",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_script",
                                    "rename": "script",
                                    "signature": "uint->QChar::Script",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_unicodeVersion",
                                    "rename": "unicodeVersion",
                                    "signature": "uint->QChar::UnicodeVersion",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_currentUnicodeVersion",
                                    "rename": "currentUnicodeVersion",
                                    "signature": "->QChar::UnicodeVersion",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_isPrint",
                                    "rename": "isPrint",
                                    "signature": "uint->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "isSpace",
                                    "signature": "uint->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_isMark",
                                    "rename": "isMark",
                                    "signature": "uint->bool",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_isPunct",
                                    "rename": "isPunct",
                                    "signature": "uint->bool",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_isSymbol",
                                    "rename": "isSymbol",
                                    "signature": "uint->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "isLetter",
                                    "signature": "uint->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isNumber",
                                    "signature": "uint->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isLetterOrNumber",
                                    "signature": "uint->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isDigit",
                                    "signature": "uint->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isLower",
                                    "signature": "uint->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isUpper",
                                    "signature": "uint->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isTitleCase",
                                    "signature": "uint->bool",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QChar",
                            "type": "class"
                        },
                        {
                            "name": "operator==",
                            "signature": "QChar;QChar->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<",
                            "signature": "QChar;QChar->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "signature": "QChar;QChar->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>=",
                            "signature": "QChar;QChar->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>",
                            "signature": "QChar;QChar->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<=",
                            "signature": "QChar;QChar->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "signature": "QChar;std::nullptr_t->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<",
                            "signature": "QChar;std::nullptr_t->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "signature": "std::nullptr_t;QChar->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<",
                            "signature": "std::nullptr_t;QChar->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "signature": "QChar;std::nullptr_t->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>=",
                            "signature": "QChar;std::nullptr_t->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>",
                            "signature": "QChar;std::nullptr_t->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<=",
                            "signature": "QChar;std::nullptr_t->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "signature": "std::nullptr_t;QChar->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>=",
                            "signature": "std::nullptr_t;QChar->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>",
                            "signature": "std::nullptr_t;QChar->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<=",
                            "signature": "std::nullptr_t;QChar->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;QChar->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QChar &->QDataStream &",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QChar>",
                    "name": "char",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "name": "qt_getQtMetaObject",
                            "signature": "->const QMetaObject *",
                            "type": "function"
                        },
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "color0",
                                        "color1",
                                        "black",
                                        "white",
                                        "darkGray",
                                        "gray",
                                        "lightGray",
                                        "red",
                                        "green",
                                        "blue",
                                        "cyan",
                                        "magenta",
                                        "yellow",
                                        "darkRed",
                                        "darkGreen",
                                        "darkBlue",
                                        "darkCyan",
                                        "darkMagenta",
                                        "darkYellow",
                                        "transparent"
                                    ],
                                    "name": "GlobalColor",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "NoModifier",
                                        "ShiftModifier",
                                        "ControlModifier",
                                        "AltModifier",
                                        "MetaModifier",
                                        "KeypadModifier",
                                        "GroupSwitchModifier",
                                        "KeyboardModifierMask"
                                    ],
                                    "name": "KeyboardModifier",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "META",
                                        "SHIFT",
                                        "CTRL",
                                        "ALT",
                                        "MODIFIER_MASK",
                                        "UNICODE_ACCEL"
                                    ],
                                    "name": "Modifier",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "NoButton",
                                        "LeftButton",
                                        "RightButton",
                                        "MidButton",
                                        "MiddleButton",
                                        "BackButton",
                                        "XButton1",
                                        "ExtraButton1",
                                        "ForwardButton",
                                        "XButton2",
                                        "ExtraButton2",
                                        "TaskButton",
                                        "ExtraButton3",
                                        "ExtraButton4",
                                        "ExtraButton5",
                                        "ExtraButton6",
                                        "ExtraButton7",
                                        "ExtraButton8",
                                        "ExtraButton9",
                                        "ExtraButton10",
                                        "ExtraButton11",
                                        "ExtraButton12",
                                        "ExtraButton13",
                                        "ExtraButton14",
                                        "ExtraButton15",
                                        "ExtraButton16",
                                        "ExtraButton17",
                                        "ExtraButton18",
                                        "ExtraButton19",
                                        "ExtraButton20",
                                        "ExtraButton21",
                                        "ExtraButton22",
                                        "ExtraButton23",
                                        "ExtraButton24",
                                        "AllButtons",
                                        "MaxMouseButton",
                                        "MouseButtonMask"
                                    ],
                                    "name": "MouseButton",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "Horizontal",
                                        "Vertical"
                                    ],
                                    "name": "Orientation",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "NoFocus",
                                        "TabFocus",
                                        "ClickFocus",
                                        "StrongFocus",
                                        "WheelFocus"
                                    ],
                                    "name": "FocusPolicy",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "NoTabFocus",
                                        "TabFocusTextControls",
                                        "TabFocusListControls",
                                        "TabFocusAllControls"
                                    ],
                                    "name": "TabFocusBehavior",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "AscendingOrder",
                                        "DescendingOrder"
                                    ],
                                    "name": "SortOrder",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "StretchTile",
                                        "RepeatTile",
                                        "RoundTile"
                                    ],
                                    "name": "TileRule",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "AlignLeft",
                                        "AlignLeading",
                                        "AlignRight",
                                        "AlignTrailing",
                                        "AlignHCenter",
                                        "AlignJustify",
                                        "AlignAbsolute",
                                        "AlignHorizontal_Mask",
                                        "AlignTop",
                                        "AlignBottom",
                                        "AlignVCenter",
                                        "AlignBaseline",
                                        "AlignVertical_Mask",
                                        "AlignCenter"
                                    ],
                                    "name": "AlignmentFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "TextSingleLine",
                                        "TextDontClip",
                                        "TextExpandTabs",
                                        "TextShowMnemonic",
                                        "TextWordWrap",
                                        "TextWrapAnywhere",
                                        "TextDontPrint",
                                        "TextIncludeTrailingSpaces",
                                        "TextHideMnemonic",
                                        "TextJustificationForced",
                                        "TextForceLeftToRight",
                                        "TextForceRightToLeft",
                                        "TextLongestVariant",
                                        "TextBypassShaping"
                                    ],
                                    "name": "TextFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "ElideLeft",
                                        "ElideRight",
                                        "ElideMiddle",
                                        "ElideNone"
                                    ],
                                    "name": "TextElideMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "WhiteSpaceNormal",
                                        "WhiteSpacePre",
                                        "WhiteSpaceNoWrap",
                                        "WhiteSpaceModeUndefined"
                                    ],
                                    "name": "WhiteSpaceMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "ExactHit",
                                        "FuzzyHit"
                                    ],
                                    "name": "HitTestAccuracy",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "Widget",
                                        "Window",
                                        "Dialog",
                                        "Sheet",
                                        "Drawer",
                                        "Popup",
                                        "Tool",
                                        "ToolTip",
                                        "SplashScreen",
                                        "Desktop",
                                        "SubWindow",
                                        "ForeignWindow",
                                        "CoverWindow",
                                        "WindowType_Mask",
                                        "MSWindowsFixedSizeDialogHint",
                                        "MSWindowsOwnDC",
                                        "BypassWindowManagerHint",
                                        "X11BypassWindowManagerHint",
                                        "FramelessWindowHint",
                                        "WindowTitleHint",
                                        "WindowSystemMenuHint",
                                        "WindowMinimizeButtonHint",
                                        "WindowMaximizeButtonHint",
                                        "WindowMinMaxButtonsHint",
                                        "WindowContextHelpButtonHint",
                                        "WindowShadeButtonHint",
                                        "WindowStaysOnTopHint",
                                        "WindowTransparentForInput",
                                        "WindowOverridesSystemGestures",
                                        "WindowDoesNotAcceptFocus",
                                        "MaximizeUsingFullscreenGeometryHint",
                                        "CustomizeWindowHint",
                                        "WindowStaysOnBottomHint",
                                        "WindowCloseButtonHint",
                                        "MacWindowToolBarButtonHint",
                                        "BypassGraphicsProxyWidget",
                                        "NoDropShadowWindowHint",
                                        "WindowFullscreenButtonHint"
                                    ],
                                    "name": "WindowType",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "WindowNoState",
                                        "WindowMinimized",
                                        "WindowMaximized",
                                        "WindowFullScreen",
                                        "WindowActive"
                                    ],
                                    "name": "WindowState",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "ApplicationSuspended",
                                        "ApplicationHidden",
                                        "ApplicationInactive",
                                        "ApplicationActive"
                                    ],
                                    "name": "ApplicationState",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "PrimaryOrientation",
                                        "PortraitOrientation",
                                        "LandscapeOrientation",
                                        "InvertedPortraitOrientation",
                                        "InvertedLandscapeOrientation"
                                    ],
                                    "name": "ScreenOrientation",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "WA_Disabled",
                                        "WA_UnderMouse",
                                        "WA_MouseTracking",
                                        "WA_ContentsPropagated",
                                        "WA_OpaquePaintEvent",
                                        "WA_NoBackground",
                                        "WA_StaticContents",
                                        "WA_LaidOut",
                                        "WA_PaintOnScreen",
                                        "WA_NoSystemBackground",
                                        "WA_UpdatesDisabled",
                                        "WA_Mapped",
                                        "WA_MacNoClickThrough",
                                        "WA_InputMethodEnabled",
                                        "WA_WState_Visible",
                                        "WA_WState_Hidden",
                                        "WA_ForceDisabled",
                                        "WA_KeyCompression",
                                        "WA_PendingMoveEvent",
                                        "WA_PendingResizeEvent",
                                        "WA_SetPalette",
                                        "WA_SetFont",
                                        "WA_SetCursor",
                                        "WA_NoChildEventsFromChildren",
                                        "WA_WindowModified",
                                        "WA_Resized",
                                        "WA_Moved",
                                        "WA_PendingUpdate",
                                        "WA_InvalidSize",
                                        "WA_MacBrushedMetal",
                                        "WA_MacMetalStyle",
                                        "WA_CustomWhatsThis",
                                        "WA_LayoutOnEntireRect",
                                        "WA_OutsideWSRange",
                                        "WA_GrabbedShortcut",
                                        "WA_TransparentForMouseEvents",
                                        "WA_PaintUnclipped",
                                        "WA_SetWindowIcon",
                                        "WA_NoMouseReplay",
                                        "WA_DeleteOnClose",
                                        "WA_RightToLeft",
                                        "WA_SetLayoutDirection",
                                        "WA_NoChildEventsForParent",
                                        "WA_ForceUpdatesDisabled",
                                        "WA_WState_Created",
                                        "WA_WState_CompressKeys",
                                        "WA_WState_InPaintEvent",
                                        "WA_WState_Reparented",
                                        "WA_WState_ConfigPending",
                                        "WA_WState_Polished",
                                        "WA_WState_DND",
                                        "WA_WState_OwnSizePolicy",
                                        "WA_WState_ExplicitShowHide",
                                        "WA_ShowModal",
                                        "WA_MouseNoMask",
                                        "WA_GroupLeader",
                                        "WA_NoMousePropagation",
                                        "WA_Hover",
                                        "WA_InputMethodTransparent",
                                        "WA_QuitOnClose",
                                        "WA_KeyboardFocusChange",
                                        "WA_AcceptDrops",
                                        "WA_DropSiteRegistered",
                                        "WA_ForceAcceptDrops",
                                        "WA_WindowPropagation",
                                        "WA_NoX11EventCompression",
                                        "WA_TintedBackground",
                                        "WA_X11OpenGLOverlay",
                                        "WA_AlwaysShowToolTips",
                                        "WA_MacOpaqueSizeGrip",
                                        "WA_SetStyle",
                                        "WA_SetLocale",
                                        "WA_MacShowFocusRect",
                                        "WA_MacNormalSize",
                                        "WA_MacSmallSize",
                                        "WA_MacMiniSize",
                                        "WA_LayoutUsesWidgetRect",
                                        "WA_StyledBackground",
                                        "WA_MSWindowsUseDirect3D",
                                        "WA_CanHostQMdiSubWindowTitleBar",
                                        "WA_MacAlwaysShowToolWindow",
                                        "WA_StyleSheet",
                                        "WA_ShowWithoutActivating",
                                        "WA_X11BypassTransientForHint",
                                        "WA_NativeWindow",
                                        "WA_DontCreateNativeAncestors",
                                        "WA_MacVariableSize",
                                        "WA_DontShowOnScreen",
                                        "WA_X11NetWmWindowTypeDesktop",
                                        "WA_X11NetWmWindowTypeDock",
                                        "WA_X11NetWmWindowTypeToolBar",
                                        "WA_X11NetWmWindowTypeMenu",
                                        "WA_X11NetWmWindowTypeUtility",
                                        "WA_X11NetWmWindowTypeSplash",
                                        "WA_X11NetWmWindowTypeDialog",
                                        "WA_X11NetWmWindowTypeDropDownMenu",
                                        "WA_X11NetWmWindowTypePopupMenu",
                                        "WA_X11NetWmWindowTypeToolTip",
                                        "WA_X11NetWmWindowTypeNotification",
                                        "WA_X11NetWmWindowTypeCombo",
                                        "WA_X11NetWmWindowTypeDND",
                                        "WA_MacFrameworkScaled",
                                        "WA_SetWindowModality",
                                        "WA_WState_WindowOpacitySet",
                                        "WA_TranslucentBackground",
                                        "WA_AcceptTouchEvents",
                                        "WA_WState_AcceptedTouchBeginEvent",
                                        "WA_TouchPadAcceptSingleTouchEvents",
                                        "WA_X11DoNotAcceptFocus",
                                        "WA_MacNoShadow",
                                        "WA_AlwaysStackOnTop",
                                        "WA_TabletTracking",
                                        "WA_AttributeCount"
                                    ],
                                    "name": "WidgetAttribute",
                                    "type": "enum"
                                },
                                {
                                    "checked": 1,
                                    "enumclass": true,
                                    "enumerators": [
                                        "AA_ImmediateWidgetCreation",
                                        "AA_MSWindowsUseDirect3DByDefault",
                                        "AA_DontShowIconsInMenus",
                                        "AA_NativeWindows",
                                        "AA_DontCreateNativeWidgetSiblings",
                                        "AA_PluginApplication",
                                        "AA_MacPluginApplication",
                                        "AA_DontUseNativeMenuBar",
                                        "AA_MacDontSwapCtrlAndMeta",
                                        "AA_Use96Dpi",
                                        "AA_X11InitThreads",
                                        "AA_SynthesizeTouchForUnhandledMouseEvents",
                                        "AA_SynthesizeMouseForUnhandledTouchEvents",
                                        "AA_UseHighDpiPixmaps",
                                        "AA_ForceRasterWidgets",
                                        "AA_UseDesktopOpenGL",
                                        "AA_UseOpenGLES",
                                        "AA_UseSoftwareOpenGL",
                                        "AA_ShareOpenGLContexts",
                                        "AA_SetPalette",
                                        "AA_EnableHighDpiScaling",
                                        "AA_DisableHighDpiScaling",
                                        "AA_UseStyleSheetPropagationInWidgetStyles",
                                        "AA_DontUseNativeDialogs",
                                        "AA_SynthesizeMouseForUnhandledTabletEvents",
                                        "AA_CompressHighFrequencyEvents",
                                        "AA_DontCheckOpenGLContextThreadAffinity",
                                        "AA_DisableShaderDiskCache",
                                        "AA_DontShowShortcutsInContextMenus-",
                                        "AA_CompressTabletEvents-",
                                        "AA_DisableWindowContextHelpButton-",
                                        "AA_AttributeCount"
                                    ],
                                    "name": "ApplicationAttribute",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "ColorMode_Mask",
                                        "AutoColor",
                                        "ColorOnly",
                                        "MonoOnly",
                                        "AlphaDither_Mask",
                                        "ThresholdAlphaDither",
                                        "OrderedAlphaDither",
                                        "DiffuseAlphaDither",
                                        "NoAlpha",
                                        "Dither_Mask",
                                        "DiffuseDither",
                                        "OrderedDither",
                                        "ThresholdDither",
                                        "DitherMode_Mask",
                                        "AutoDither",
                                        "PreferDither",
                                        "AvoidDither",
                                        "NoOpaqueDetection",
                                        "NoFormatConversion"
                                    ],
                                    "name": "ImageConversionFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "TransparentMode",
                                        "OpaqueMode"
                                    ],
                                    "name": "BGMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "Key_Escape",
                                        "Key_Tab",
                                        "Key_Backtab",
                                        "Key_Backspace",
                                        "Key_Return",
                                        "Key_Enter",
                                        "Key_Insert",
                                        "Key_Delete",
                                        "Key_Pause",
                                        "Key_Print",
                                        "Key_SysReq",
                                        "Key_Clear",
                                        "Key_Home",
                                        "Key_End",
                                        "Key_Left",
                                        "Key_Up",
                                        "Key_Right",
                                        "Key_Down",
                                        "Key_PageUp",
                                        "Key_PageDown",
                                        "Key_Shift",
                                        "Key_Control",
                                        "Key_Meta",
                                        "Key_Alt",
                                        "Key_CapsLock",
                                        "Key_NumLock",
                                        "Key_ScrollLock",
                                        "Key_F1",
                                        "Key_F2",
                                        "Key_F3",
                                        "Key_F4",
                                        "Key_F5",
                                        "Key_F6",
                                        "Key_F7",
                                        "Key_F8",
                                        "Key_F9",
                                        "Key_F10",
                                        "Key_F11",
                                        "Key_F12",
                                        "Key_F13",
                                        "Key_F14",
                                        "Key_F15",
                                        "Key_F16",
                                        "Key_F17",
                                        "Key_F18",
                                        "Key_F19",
                                        "Key_F20",
                                        "Key_F21",
                                        "Key_F22",
                                        "Key_F23",
                                        "Key_F24",
                                        "Key_F25",
                                        "Key_F26",
                                        "Key_F27",
                                        "Key_F28",
                                        "Key_F29",
                                        "Key_F30",
                                        "Key_F31",
                                        "Key_F32",
                                        "Key_F33",
                                        "Key_F34",
                                        "Key_F35",
                                        "Key_Super_L",
                                        "Key_Super_R",
                                        "Key_Menu",
                                        "Key_Hyper_L",
                                        "Key_Hyper_R",
                                        "Key_Help",
                                        "Key_Direction_L",
                                        "Key_Direction_R",
                                        "Key_Space",
                                        "Key_Any",
                                        "Key_Exclam",
                                        "Key_QuoteDbl",
                                        "Key_NumberSign",
                                        "Key_Dollar",
                                        "Key_Percent",
                                        "Key_Ampersand",
                                        "Key_Apostrophe",
                                        "Key_ParenLeft",
                                        "Key_ParenRight",
                                        "Key_Asterisk",
                                        "Key_Plus",
                                        "Key_Comma",
                                        "Key_Minus",
                                        "Key_Period",
                                        "Key_Slash",
                                        "Key_0",
                                        "Key_1",
                                        "Key_2",
                                        "Key_3",
                                        "Key_4",
                                        "Key_5",
                                        "Key_6",
                                        "Key_7",
                                        "Key_8",
                                        "Key_9",
                                        "Key_Colon",
                                        "Key_Semicolon",
                                        "Key_Less",
                                        "Key_Equal",
                                        "Key_Greater",
                                        "Key_Question",
                                        "Key_At",
                                        "Key_A",
                                        "Key_B",
                                        "Key_C",
                                        "Key_D",
                                        "Key_E",
                                        "Key_F",
                                        "Key_G",
                                        "Key_H",
                                        "Key_I",
                                        "Key_J",
                                        "Key_K",
                                        "Key_L",
                                        "Key_M",
                                        "Key_N",
                                        "Key_O",
                                        "Key_P",
                                        "Key_Q",
                                        "Key_R",
                                        "Key_S",
                                        "Key_T",
                                        "Key_U",
                                        "Key_V",
                                        "Key_W",
                                        "Key_X",
                                        "Key_Y",
                                        "Key_Z",
                                        "Key_BracketLeft",
                                        "Key_Backslash",
                                        "Key_BracketRight",
                                        "Key_AsciiCircum",
                                        "Key_Underscore",
                                        "Key_QuoteLeft",
                                        "Key_BraceLeft",
                                        "Key_Bar",
                                        "Key_BraceRight",
                                        "Key_AsciiTilde",
                                        "Key_nobreakspace",
                                        "Key_exclamdown",
                                        "Key_cent",
                                        "Key_sterling",
                                        "Key_currency",
                                        "Key_yen",
                                        "Key_brokenbar",
                                        "Key_section",
                                        "Key_diaeresis",
                                        "Key_copyright",
                                        "Key_ordfeminine",
                                        "Key_guillemotleft",
                                        "Key_notsign",
                                        "Key_hyphen",
                                        "Key_registered",
                                        "Key_macron",
                                        "Key_degree",
                                        "Key_plusminus",
                                        "Key_twosuperior",
                                        "Key_threesuperior",
                                        "Key_acute",
                                        "Key_mu",
                                        "Key_paragraph",
                                        "Key_periodcentered",
                                        "Key_cedilla",
                                        "Key_onesuperior",
                                        "Key_masculine",
                                        "Key_guillemotright",
                                        "Key_onequarter",
                                        "Key_onehalf",
                                        "Key_threequarters",
                                        "Key_questiondown",
                                        "Key_Agrave",
                                        "Key_Aacute",
                                        "Key_Acircumflex",
                                        "Key_Atilde",
                                        "Key_Adiaeresis",
                                        "Key_Aring",
                                        "Key_AE",
                                        "Key_Ccedilla",
                                        "Key_Egrave",
                                        "Key_Eacute",
                                        "Key_Ecircumflex",
                                        "Key_Ediaeresis",
                                        "Key_Igrave",
                                        "Key_Iacute",
                                        "Key_Icircumflex",
                                        "Key_Idiaeresis",
                                        "Key_ETH",
                                        "Key_Ntilde",
                                        "Key_Ograve",
                                        "Key_Oacute",
                                        "Key_Ocircumflex",
                                        "Key_Otilde",
                                        "Key_Odiaeresis",
                                        "Key_multiply",
                                        "Key_Ooblique",
                                        "Key_Ugrave",
                                        "Key_Uacute",
                                        "Key_Ucircumflex",
                                        "Key_Udiaeresis",
                                        "Key_Yacute",
                                        "Key_THORN",
                                        "Key_ssharp",
                                        "Key_division",
                                        "Key_ydiaeresis",
                                        "Key_AltGr",
                                        "Key_Multi_key",
                                        "Key_Codeinput",
                                        "Key_SingleCandidate",
                                        "Key_MultipleCandidate",
                                        "Key_PreviousCandidate",
                                        "Key_Mode_switch",
                                        "Key_Kanji",
                                        "Key_Muhenkan",
                                        "Key_Henkan",
                                        "Key_Romaji",
                                        "Key_Hiragana",
                                        "Key_Katakana",
                                        "Key_Hiragana_Katakana",
                                        "Key_Zenkaku",
                                        "Key_Hankaku",
                                        "Key_Zenkaku_Hankaku",
                                        "Key_Touroku",
                                        "Key_Massyo",
                                        "Key_Kana_Lock",
                                        "Key_Kana_Shift",
                                        "Key_Eisu_Shift",
                                        "Key_Eisu_toggle",
                                        "Key_Hangul",
                                        "Key_Hangul_Start",
                                        "Key_Hangul_End",
                                        "Key_Hangul_Hanja",
                                        "Key_Hangul_Jamo",
                                        "Key_Hangul_Romaja",
                                        "Key_Hangul_Jeonja",
                                        "Key_Hangul_Banja",
                                        "Key_Hangul_PreHanja",
                                        "Key_Hangul_PostHanja",
                                        "Key_Hangul_Special",
                                        "Key_Dead_Grave",
                                        "Key_Dead_Acute",
                                        "Key_Dead_Circumflex",
                                        "Key_Dead_Tilde",
                                        "Key_Dead_Macron",
                                        "Key_Dead_Breve",
                                        "Key_Dead_Abovedot",
                                        "Key_Dead_Diaeresis",
                                        "Key_Dead_Abovering",
                                        "Key_Dead_Doubleacute",
                                        "Key_Dead_Caron",
                                        "Key_Dead_Cedilla",
                                        "Key_Dead_Ogonek",
                                        "Key_Dead_Iota",
                                        "Key_Dead_Voiced_Sound",
                                        "Key_Dead_Semivoiced_Sound",
                                        "Key_Dead_Belowdot",
                                        "Key_Dead_Hook",
                                        "Key_Dead_Horn",
                                        "Key_Back",
                                        "Key_Forward",
                                        "Key_Stop",
                                        "Key_Refresh",
                                        "Key_VolumeDown",
                                        "Key_VolumeMute",
                                        "Key_VolumeUp",
                                        "Key_BassBoost",
                                        "Key_BassUp",
                                        "Key_BassDown",
                                        "Key_TrebleUp",
                                        "Key_TrebleDown",
                                        "Key_MediaPlay",
                                        "Key_MediaStop",
                                        "Key_MediaPrevious",
                                        "Key_MediaNext",
                                        "Key_MediaRecord",
                                        "Key_MediaPause",
                                        "Key_MediaTogglePlayPause",
                                        "Key_HomePage",
                                        "Key_Favorites",
                                        "Key_Search",
                                        "Key_Standby",
                                        "Key_OpenUrl",
                                        "Key_LaunchMail",
                                        "Key_LaunchMedia",
                                        "Key_Launch0",
                                        "Key_Launch1",
                                        "Key_Launch2",
                                        "Key_Launch3",
                                        "Key_Launch4",
                                        "Key_Launch5",
                                        "Key_Launch6",
                                        "Key_Launch7",
                                        "Key_Launch8",
                                        "Key_Launch9",
                                        "Key_LaunchA",
                                        "Key_LaunchB",
                                        "Key_LaunchC",
                                        "Key_LaunchD",
                                        "Key_LaunchE",
                                        "Key_LaunchF",
                                        "Key_MonBrightnessUp",
                                        "Key_MonBrightnessDown",
                                        "Key_KeyboardLightOnOff",
                                        "Key_KeyboardBrightnessUp",
                                        "Key_KeyboardBrightnessDown",
                                        "Key_PowerOff",
                                        "Key_WakeUp",
                                        "Key_Eject",
                                        "Key_ScreenSaver",
                                        "Key_WWW",
                                        "Key_Memo",
                                        "Key_LightBulb",
                                        "Key_Shop",
                                        "Key_History",
                                        "Key_AddFavorite",
                                        "Key_HotLinks",
                                        "Key_BrightnessAdjust",
                                        "Key_Finance",
                                        "Key_Community",
                                        "Key_AudioRewind",
                                        "Key_BackForward",
                                        "Key_ApplicationLeft",
                                        "Key_ApplicationRight",
                                        "Key_Book",
                                        "Key_CD",
                                        "Key_Calculator",
                                        "Key_ToDoList",
                                        "Key_ClearGrab",
                                        "Key_Close",
                                        "Key_Copy",
                                        "Key_Cut",
                                        "Key_Display",
                                        "Key_DOS",
                                        "Key_Documents",
                                        "Key_Excel",
                                        "Key_Explorer",
                                        "Key_Game",
                                        "Key_Go",
                                        "Key_iTouch",
                                        "Key_LogOff",
                                        "Key_Market",
                                        "Key_Meeting",
                                        "Key_MenuKB",
                                        "Key_MenuPB",
                                        "Key_MySites",
                                        "Key_News",
                                        "Key_OfficeHome",
                                        "Key_Option",
                                        "Key_Paste",
                                        "Key_Phone",
                                        "Key_Calendar",
                                        "Key_Reply",
                                        "Key_Reload",
                                        "Key_RotateWindows",
                                        "Key_RotationPB",
                                        "Key_RotationKB",
                                        "Key_Save",
                                        "Key_Send",
                                        "Key_Spell",
                                        "Key_SplitScreen",
                                        "Key_Support",
                                        "Key_TaskPane",
                                        "Key_Terminal",
                                        "Key_Tools",
                                        "Key_Travel",
                                        "Key_Video",
                                        "Key_Word",
                                        "Key_Xfer",
                                        "Key_ZoomIn",
                                        "Key_ZoomOut",
                                        "Key_Away",
                                        "Key_Messenger",
                                        "Key_WebCam",
                                        "Key_MailForward",
                                        "Key_Pictures",
                                        "Key_Music",
                                        "Key_Battery",
                                        "Key_Bluetooth",
                                        "Key_WLAN",
                                        "Key_UWB",
                                        "Key_AudioForward",
                                        "Key_AudioRepeat",
                                        "Key_AudioRandomPlay",
                                        "Key_Subtitle",
                                        "Key_AudioCycleTrack",
                                        "Key_Time",
                                        "Key_Hibernate",
                                        "Key_View",
                                        "Key_TopMenu",
                                        "Key_PowerDown",
                                        "Key_Suspend",
                                        "Key_ContrastAdjust",
                                        "Key_LaunchG",
                                        "Key_LaunchH",
                                        "Key_TouchpadToggle",
                                        "Key_TouchpadOn",
                                        "Key_TouchpadOff",
                                        "Key_MicMute",
                                        "Key_Red",
                                        "Key_Green",
                                        "Key_Yellow",
                                        "Key_Blue",
                                        "Key_ChannelUp",
                                        "Key_ChannelDown",
                                        "Key_Guide",
                                        "Key_Info",
                                        "Key_Settings",
                                        "Key_MicVolumeUp",
                                        "Key_MicVolumeDown",
                                        "Key_New",
                                        "Key_Open",
                                        "Key_Find",
                                        "Key_Undo",
                                        "Key_Redo",
                                        "Key_MediaLast",
                                        "Key_Select",
                                        "Key_Yes",
                                        "Key_No",
                                        "Key_Cancel",
                                        "Key_Printer",
                                        "Key_Execute",
                                        "Key_Sleep",
                                        "Key_Play",
                                        "Key_Zoom",
                                        "Key_Exit",
                                        "Key_Context1",
                                        "Key_Context2",
                                        "Key_Context3",
                                        "Key_Context4",
                                        "Key_Call",
                                        "Key_Hangup",
                                        "Key_Flip",
                                        "Key_ToggleCallHangup",
                                        "Key_VoiceDial",
                                        "Key_LastNumberRedial",
                                        "Key_Camera",
                                        "Key_CameraFocus",
                                        "Key_unknown"
                                    ],
                                    "name": "Key",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "NoArrow",
                                        "UpArrow",
                                        "DownArrow",
                                        "LeftArrow",
                                        "RightArrow"
                                    ],
                                    "name": "ArrowType",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "NoPen",
                                        "SolidLine",
                                        "DashLine",
                                        "DotLine",
                                        "DashDotLine",
                                        "DashDotDotLine",
                                        "CustomDashLine",
                                        "MPenStyle"
                                    ],
                                    "name": "PenStyle",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "FlatCap",
                                        "SquareCap",
                                        "RoundCap",
                                        "MPenCapStyle"
                                    ],
                                    "name": "PenCapStyle",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "MiterJoin",
                                        "BevelJoin",
                                        "RoundJoin",
                                        "SvgMiterJoin",
                                        "MPenJoinStyle"
                                    ],
                                    "name": "PenJoinStyle",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "NoBrush",
                                        "SolidPattern",
                                        "Dense1Pattern",
                                        "Dense2Pattern",
                                        "Dense3Pattern",
                                        "Dense4Pattern",
                                        "Dense5Pattern",
                                        "Dense6Pattern",
                                        "Dense7Pattern",
                                        "HorPattern",
                                        "VerPattern",
                                        "CrossPattern",
                                        "BDiagPattern",
                                        "FDiagPattern",
                                        "DiagCrossPattern",
                                        "LinearGradientPattern",
                                        "RadialGradientPattern",
                                        "ConicalGradientPattern",
                                        "TexturePattern"
                                    ],
                                    "name": "BrushStyle",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "AbsoluteSize",
                                        "RelativeSize"
                                    ],
                                    "name": "SizeMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "UI_General",
                                        "UI_AnimateMenu",
                                        "UI_FadeMenu",
                                        "UI_AnimateCombo",
                                        "UI_AnimateTooltip",
                                        "UI_FadeTooltip",
                                        "UI_AnimateToolBox"
                                    ],
                                    "name": "UIEffect",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "ArrowCursor",
                                        "UpArrowCursor",
                                        "CrossCursor",
                                        "WaitCursor",
                                        "IBeamCursor",
                                        "SizeVerCursor",
                                        "SizeHorCursor",
                                        "SizeBDiagCursor",
                                        "SizeFDiagCursor",
                                        "SizeAllCursor",
                                        "BlankCursor",
                                        "SplitVCursor",
                                        "SplitHCursor",
                                        "PointingHandCursor",
                                        "ForbiddenCursor",
                                        "WhatsThisCursor",
                                        "BusyCursor",
                                        "OpenHandCursor",
                                        "ClosedHandCursor",
                                        "DragCopyCursor",
                                        "DragMoveCursor",
                                        "DragLinkCursor",
                                        "LastCursor",
                                        "BitmapCursor",
                                        "CustomCursor"
                                    ],
                                    "name": "CursorShape",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "PlainText",
                                        "RichText",
                                        "AutoText"
                                    ],
                                    "name": "TextFormat",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "IgnoreAspectRatio",
                                        "KeepAspectRatio",
                                        "KeepAspectRatioByExpanding"
                                    ],
                                    "name": "AspectRatioMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "LeftDockWidgetArea",
                                        "RightDockWidgetArea",
                                        "TopDockWidgetArea",
                                        "BottomDockWidgetArea",
                                        "DockWidgetArea_Mask",
                                        "AllDockWidgetAreas",
                                        "NoDockWidgetArea"
                                    ],
                                    "name": "DockWidgetArea",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "NDockWidgetAreas"
                                    ],
                                    "name": "DockWidgetAreaSizes",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "LeftToolBarArea",
                                        "RightToolBarArea",
                                        "TopToolBarArea",
                                        "BottomToolBarArea",
                                        "ToolBarArea_Mask",
                                        "AllToolBarAreas",
                                        "NoToolBarArea"
                                    ],
                                    "name": "ToolBarArea",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "NToolBarAreas"
                                    ],
                                    "name": "ToolBarAreaSizes",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "TextDate",
                                        "ISODate",
                                        "SystemLocaleDate",
                                        "LocalDate",
                                        "LocaleDate",
                                        "SystemLocaleShortDate",
                                        "SystemLocaleLongDate",
                                        "DefaultLocaleShortDate",
                                        "DefaultLocaleLongDate",
                                        "RFC2822Date",
                                        "ISODateWithMs"
                                    ],
                                    "name": "DateFormat",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "LocalTime",
                                        "UTC",
                                        "OffsetFromUTC",
                                        "TimeZone"
                                    ],
                                    "name": "TimeSpec",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "Monday",
                                        "Tuesday",
                                        "Wednesday",
                                        "Thursday",
                                        "Friday",
                                        "Saturday",
                                        "Sunday"
                                    ],
                                    "name": "DayOfWeek",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "ScrollBarAsNeeded",
                                        "ScrollBarAlwaysOff",
                                        "ScrollBarAlwaysOn"
                                    ],
                                    "name": "ScrollBarPolicy",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "CaseInsensitive",
                                        "CaseSensitive"
                                    ],
                                    "name": "CaseSensitivity",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "TopLeftCorner",
                                        "TopRightCorner",
                                        "BottomLeftCorner",
                                        "BottomRightCorner"
                                    ],
                                    "name": "Corner",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "TopEdge",
                                        "LeftEdge",
                                        "RightEdge",
                                        "BottomEdge"
                                    ],
                                    "name": "Edge",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "AutoConnection",
                                        "DirectConnection",
                                        "QueuedConnection",
                                        "BlockingQueuedConnection",
                                        "UniqueConnection"
                                    ],
                                    "name": "ConnectionType",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "WidgetShortcut",
                                        "WindowShortcut",
                                        "ApplicationShortcut",
                                        "WidgetWithChildrenShortcut"
                                    ],
                                    "name": "ShortcutContext",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "OddEvenFill",
                                        "WindingFill"
                                    ],
                                    "name": "FillRule",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "MaskInColor",
                                        "MaskOutColor"
                                    ],
                                    "name": "MaskMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "NoClip",
                                        "ReplaceClip",
                                        "IntersectClip"
                                    ],
                                    "name": "ClipOperation",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "ContainsItemShape",
                                        "IntersectsItemShape",
                                        "ContainsItemBoundingRect",
                                        "IntersectsItemBoundingRect"
                                    ],
                                    "name": "ItemSelectionMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "ReplaceSelection",
                                        "AddToSelection"
                                    ],
                                    "name": "ItemSelectionOperation",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "FastTransformation",
                                        "SmoothTransformation"
                                    ],
                                    "name": "TransformationMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "XAxis",
                                        "YAxis",
                                        "ZAxis"
                                    ],
                                    "name": "Axis",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "MouseFocusReason",
                                        "TabFocusReason",
                                        "BacktabFocusReason",
                                        "ActiveWindowFocusReason",
                                        "PopupFocusReason",
                                        "ShortcutFocusReason",
                                        "MenuBarFocusReason",
                                        "OtherFocusReason",
                                        "NoFocusReason"
                                    ],
                                    "name": "FocusReason",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "NoContextMenu",
                                        "DefaultContextMenu",
                                        "ActionsContextMenu",
                                        "CustomContextMenu",
                                        "PreventContextMenu"
                                    ],
                                    "name": "ContextMenuPolicy",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "ImEnabled",
                                        "ImCursorRectangle",
                                        "ImMicroFocus",
                                        "ImFont",
                                        "ImCursorPosition",
                                        "ImSurroundingText",
                                        "ImCurrentSelection",
                                        "ImMaximumTextLength",
                                        "ImAnchorPosition",
                                        "ImHints",
                                        "ImPreferredLanguage",
                                        "ImAbsolutePosition",
                                        "ImTextBeforeCursor",
                                        "ImTextAfterCursor",
                                        "ImEnterKeyType",
                                        "ImAnchorRectangle",
                                        "ImInputItemClipRectangle",
                                        "ImPlatformData",
                                        "ImQueryInput",
                                        "ImQueryAll"
                                    ],
                                    "name": "InputMethodQuery",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "ImhNone",
                                        "ImhHiddenText",
                                        "ImhSensitiveData",
                                        "ImhNoAutoUppercase",
                                        "ImhPreferNumbers",
                                        "ImhPreferUppercase",
                                        "ImhPreferLowercase",
                                        "ImhNoPredictiveText",
                                        "ImhDate",
                                        "ImhTime",
                                        "ImhPreferLatin",
                                        "ImhMultiLine",
                                        "ImhDigitsOnly",
                                        "ImhFormattedNumbersOnly",
                                        "ImhUppercaseOnly",
                                        "ImhLowercaseOnly",
                                        "ImhDialableCharactersOnly",
                                        "ImhEmailCharactersOnly",
                                        "ImhUrlCharactersOnly",
                                        "ImhLatinOnly",
                                        "ImhExclusiveInputMask"
                                    ],
                                    "name": "InputMethodHint",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "EnterKeyDefault",
                                        "EnterKeyReturn",
                                        "EnterKeyDone",
                                        "EnterKeyGo",
                                        "EnterKeySend",
                                        "EnterKeySearch",
                                        "EnterKeyNext",
                                        "EnterKeyPrevious"
                                    ],
                                    "name": "EnterKeyType",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "ToolButtonIconOnly",
                                        "ToolButtonTextOnly",
                                        "ToolButtonTextBesideIcon",
                                        "ToolButtonTextUnderIcon",
                                        "ToolButtonFollowStyle"
                                    ],
                                    "name": "ToolButtonStyle",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "LeftToRight",
                                        "RightToLeft",
                                        "LayoutDirectionAuto"
                                    ],
                                    "name": "LayoutDirection",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "AnchorLeft",
                                        "AnchorHorizontalCenter",
                                        "AnchorRight",
                                        "AnchorTop",
                                        "AnchorVerticalCenter",
                                        "AnchorBottom"
                                    ],
                                    "name": "AnchorPoint",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "FindDirectChildrenOnly",
                                        "FindChildrenRecursively"
                                    ],
                                    "name": "FindChildOption",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "CopyAction",
                                        "MoveAction",
                                        "LinkAction",
                                        "ActionMask",
                                        "TargetMoveAction",
                                        "IgnoreAction"
                                    ],
                                    "name": "DropAction",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "Unchecked",
                                        "PartiallyChecked",
                                        "Checked"
                                    ],
                                    "name": "CheckState",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "DisplayRole",
                                        "DecorationRole",
                                        "EditRole",
                                        "ToolTipRole",
                                        "StatusTipRole",
                                        "WhatsThisRole",
                                        "FontRole",
                                        "TextAlignmentRole",
                                        "BackgroundColorRole",
                                        "BackgroundRole",
                                        "TextColorRole",
                                        "ForegroundRole",
                                        "CheckStateRole",
                                        "AccessibleTextRole",
                                        "AccessibleDescriptionRole",
                                        "SizeHintRole",
                                        "InitialSortOrderRole",
                                        "DisplayPropertyRole",
                                        "DecorationPropertyRole",
                                        "ToolTipPropertyRole",
                                        "StatusTipPropertyRole",
                                        "WhatsThisPropertyRole",
                                        "UserRole"
                                    ],
                                    "name": "ItemDataRole",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "NoItemFlags",
                                        "ItemIsSelectable",
                                        "ItemIsEditable",
                                        "ItemIsDragEnabled",
                                        "ItemIsDropEnabled",
                                        "ItemIsUserCheckable",
                                        "ItemIsEnabled",
                                        "ItemIsAutoTristate",
                                        "ItemIsTristate",
                                        "ItemNeverHasChildren",
                                        "ItemIsUserTristate"
                                    ],
                                    "name": "ItemFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "MatchExactly",
                                        "MatchContains",
                                        "MatchStartsWith",
                                        "MatchEndsWith",
                                        "MatchRegExp",
                                        "MatchWildcard",
                                        "MatchFixedString",
                                        "MatchCaseSensitive",
                                        "MatchWrap",
                                        "MatchRecursive"
                                    ],
                                    "name": "MatchFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "NonModal",
                                        "WindowModal",
                                        "ApplicationModal"
                                    ],
                                    "name": "WindowModality",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "NoTextInteraction",
                                        "TextSelectableByMouse",
                                        "TextSelectableByKeyboard",
                                        "LinksAccessibleByMouse",
                                        "LinksAccessibleByKeyboard",
                                        "TextEditable",
                                        "TextEditorInteraction",
                                        "TextBrowserInteraction"
                                    ],
                                    "name": "TextInteractionFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "HighEventPriority",
                                        "NormalEventPriority",
                                        "LowEventPriority"
                                    ],
                                    "name": "EventPriority",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "MinimumSize",
                                        "PreferredSize",
                                        "MaximumSize",
                                        "MinimumDescent",
                                        "NSizeHints"
                                    ],
                                    "name": "SizeHint",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "NoSection",
                                        "LeftSection",
                                        "TopLeftSection",
                                        "TopSection",
                                        "TopRightSection",
                                        "RightSection",
                                        "BottomRightSection",
                                        "BottomSection",
                                        "BottomLeftSection",
                                        "TitleBarArea"
                                    ],
                                    "name": "WindowFrameSection",
                                    "type": "enum"
                                },
                                {
                                    "cppenumclass": true,
                                    "enumclass": true,
                                    "enumerators": [
                                        "Uninitialized"
                                    ],
                                    "name": "Initialization",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "DeviceCoordinates",
                                        "LogicalCoordinates"
                                    ],
                                    "name": "CoordinateSystem",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "TouchPointPressed",
                                        "TouchPointMoved",
                                        "TouchPointStationary",
                                        "TouchPointReleased"
                                    ],
                                    "name": "TouchPointState",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "NoGesture",
                                        "GestureStarted",
                                        "GestureUpdated",
                                        "GestureFinished",
                                        "GestureCanceled"
                                    ],
                                    "name": "GestureState",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "TapGesture",
                                        "TapAndHoldGesture",
                                        "PanGesture",
                                        "PinchGesture",
                                        "SwipeGesture",
                                        "CustomGesture",
                                        "LastGestureType"
                                    ],
                                    "name": "GestureType",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "DontStartGestureOnChildren",
                                        "ReceivePartialGestures",
                                        "IgnoredGesturesPropagateToParent"
                                    ],
                                    "name": "GestureFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "BeginNativeGesture",
                                        "EndNativeGesture",
                                        "PanNativeGesture",
                                        "ZoomNativeGesture",
                                        "SmartZoomNativeGesture",
                                        "RotateNativeGesture",
                                        "SwipeNativeGesture"
                                    ],
                                    "name": "NativeGestureType",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "NavigationModeNone",
                                        "NavigationModeKeypadTabOrder",
                                        "NavigationModeKeypadDirectional",
                                        "NavigationModeCursorAuto",
                                        "NavigationModeCursorForceVisible"
                                    ],
                                    "name": "NavigationMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "LogicalMoveStyle",
                                        "VisualMoveStyle"
                                    ],
                                    "name": "CursorMoveStyle",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "PreciseTimer",
                                        "CoarseTimer",
                                        "VeryCoarseTimer"
                                    ],
                                    "name": "TimerType",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "NoScrollPhase",
                                        "ScrollBegin",
                                        "ScrollUpdate",
                                        "ScrollEnd"
                                    ],
                                    "name": "ScrollPhase",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "MouseEventNotSynthesized",
                                        "MouseEventSynthesizedBySystem",
                                        "MouseEventSynthesizedByQt",
                                        "MouseEventSynthesizedByApplication"
                                    ],
                                    "name": "MouseEventSource",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "MouseEventCreatedDoubleClick",
                                        "MouseEventFlagMask"
                                    ],
                                    "name": "MouseEventFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        "ChecksumIso3309",
                                        "ChecksumItuV41"
                                    ],
                                    "name": "ChecksumType",
                                    "type": "enum"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::ScrollBarPolicy->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::ScrollBarPolicy->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::FocusPolicy->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::FocusPolicy->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::ContextMenuPolicy->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::ContextMenuPolicy->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::ArrowType->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::ArrowType->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::ToolButtonStyle->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::ToolButtonStyle->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::PenStyle->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::PenStyle->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::PenCapStyle->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::PenCapStyle->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::PenJoinStyle->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::PenJoinStyle->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::BrushStyle->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::BrushStyle->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::FillRule->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::FillRule->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::MaskMode->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::MaskMode->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::BGMode->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::BGMode->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::ClipOperation->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::ClipOperation->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::SizeMode->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::SizeMode->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::Axis->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::Axis->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::Corner->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::Corner->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::Edge->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::Edge->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::LayoutDirection->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::LayoutDirection->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::SizeHint->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::SizeHint->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::Orientation->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::Orientation->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::DropAction->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::DropAction->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::Alignment->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::Alignment->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::TextFlag->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::TextFlag->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::Orientations->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::Orientations->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::DropActions->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::DropActions->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::Edges->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::Edges->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::DockWidgetAreas->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::DockWidgetAreas->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::ToolBarAreas->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::ToolBarAreas->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::DockWidgetArea->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::DockWidgetArea->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::ToolBarArea->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::ToolBarArea->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::TextFormat->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::TextFormat->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::TextElideMode->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::TextElideMode->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::DateFormat->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::DateFormat->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::TimeSpec->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::TimeSpec->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::DayOfWeek->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::DayOfWeek->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::CursorShape->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::CursorShape->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::GlobalColor->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::GlobalColor->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::AspectRatioMode->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::AspectRatioMode->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::TransformationMode->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::TransformationMode->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::ImageConversionFlags->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::ImageConversionFlags->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::Key->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::Key->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::ShortcutContext->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::ShortcutContext->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::TextInteractionFlag->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::TextInteractionFlag->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::TextInteractionFlags->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::TextInteractionFlags->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::ItemSelectionMode->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::ItemSelectionMode->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::ItemSelectionOperation->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::ItemSelectionOperation->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::ItemFlags->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::ItemFlags->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::CheckState->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::CheckState->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::ItemDataRole->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::ItemDataRole->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::SortOrder->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::SortOrder->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::CaseSensitivity->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::CaseSensitivity->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::MatchFlags->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::MatchFlags->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::KeyboardModifiers->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::KeyboardModifiers->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::MouseButtons->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::MouseButtons->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::WindowType->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::WindowType->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::WindowState->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::WindowState->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::WindowModality->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::WindowModality->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::WidgetAttribute->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::WidgetAttribute->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::ApplicationAttribute->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::ApplicationAttribute->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::WindowFlags->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::WindowFlags->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::WindowStates->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::WindowStates->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::FocusReason->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::FocusReason->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::InputMethodHint->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::InputMethodHint->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::InputMethodQuery->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::InputMethodQuery->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::InputMethodHints->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::InputMethodHints->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::EnterKeyType->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::EnterKeyType->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::InputMethodQueries->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::InputMethodQueries->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::TouchPointStates->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::TouchPointStates->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::ScreenOrientation->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::ScreenOrientation->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::ScreenOrientations->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::ScreenOrientations->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::ConnectionType->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::ConnectionType->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::ApplicationState->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::ApplicationState->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::GestureState->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::GestureState->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::GestureType->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::GestureType->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::NativeGestureType->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::NativeGestureType->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::CursorMoveStyle->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::CursorMoveStyle->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::TimerType->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::TimerType->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::ScrollPhase->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::ScrollPhase->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::MouseEventSource->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::MouseEventSource->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::MouseEventFlag->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::MouseEventFlag->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::ChecksumType->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::ChecksumType->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "signature": "Qt::TabFocusBehavior->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "signature": "Qt::TabFocusBehavior->const char *",
                                    "type": "function"
                                }
                            ],
                            "name": "Qt",
                            "rename": "@",
                            "type": "namespace"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::MouseButtons::enum_type;Qt::MouseButtons::enum_type->QFlags<Qt::MouseButtons::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::MouseButtons::enum_type;QFlags<Qt::MouseButtons::enum_type>->QFlags<Qt::MouseButtons::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::MouseButtons::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::Orientations::enum_type;Qt::Orientations::enum_type->QFlags<Qt::Orientations::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::Orientations::enum_type;QFlags<Qt::Orientations::enum_type>->QFlags<Qt::Orientations::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::Orientations::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::KeyboardModifiers::enum_type;Qt::KeyboardModifiers::enum_type->QFlags<Qt::KeyboardModifiers::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::KeyboardModifiers::enum_type;QFlags<Qt::KeyboardModifiers::enum_type>->QFlags<Qt::KeyboardModifiers::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::KeyboardModifiers::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::WindowFlags::enum_type;Qt::WindowFlags::enum_type->QFlags<Qt::WindowFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::WindowFlags::enum_type;QFlags<Qt::WindowFlags::enum_type>->QFlags<Qt::WindowFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::WindowFlags::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::Alignment::enum_type;Qt::Alignment::enum_type->QFlags<Qt::Alignment::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::Alignment::enum_type;QFlags<Qt::Alignment::enum_type>->QFlags<Qt::Alignment::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::Alignment::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::Edges::enum_type;Qt::Edges::enum_type->QFlags<Qt::Edges::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::Edges::enum_type;QFlags<Qt::Edges::enum_type>->QFlags<Qt::Edges::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::Edges::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::ImageConversionFlags::enum_type;Qt::ImageConversionFlags::enum_type->QFlags<Qt::ImageConversionFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::ImageConversionFlags::enum_type;QFlags<Qt::ImageConversionFlags::enum_type>->QFlags<Qt::ImageConversionFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::ImageConversionFlags::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::DockWidgetAreas::enum_type;Qt::DockWidgetAreas::enum_type->QFlags<Qt::DockWidgetAreas::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::DockWidgetAreas::enum_type;QFlags<Qt::DockWidgetAreas::enum_type>->QFlags<Qt::DockWidgetAreas::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::DockWidgetAreas::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::ToolBarAreas::enum_type;Qt::ToolBarAreas::enum_type->QFlags<Qt::ToolBarAreas::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::ToolBarAreas::enum_type;QFlags<Qt::ToolBarAreas::enum_type>->QFlags<Qt::ToolBarAreas::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::ToolBarAreas::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::WindowStates::enum_type;Qt::WindowStates::enum_type->QFlags<Qt::WindowStates::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::WindowStates::enum_type;QFlags<Qt::WindowStates::enum_type>->QFlags<Qt::WindowStates::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::WindowStates::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::ScreenOrientations::enum_type;Qt::ScreenOrientations::enum_type->QFlags<Qt::ScreenOrientations::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::ScreenOrientations::enum_type;QFlags<Qt::ScreenOrientations::enum_type>->QFlags<Qt::ScreenOrientations::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::ScreenOrientations::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::DropActions::enum_type;Qt::DropActions::enum_type->QFlags<Qt::DropActions::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::DropActions::enum_type;QFlags<Qt::DropActions::enum_type>->QFlags<Qt::DropActions::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::DropActions::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::ItemFlags::enum_type;Qt::ItemFlags::enum_type->QFlags<Qt::ItemFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::ItemFlags::enum_type;QFlags<Qt::ItemFlags::enum_type>->QFlags<Qt::ItemFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::ItemFlags::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::MatchFlags::enum_type;Qt::MatchFlags::enum_type->QFlags<Qt::MatchFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::MatchFlags::enum_type;QFlags<Qt::MatchFlags::enum_type>->QFlags<Qt::MatchFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::MatchFlags::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::TextInteractionFlags::enum_type;Qt::TextInteractionFlags::enum_type->QFlags<Qt::TextInteractionFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::TextInteractionFlags::enum_type;QFlags<Qt::TextInteractionFlags::enum_type>->QFlags<Qt::TextInteractionFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::TextInteractionFlags::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::InputMethodQueries::enum_type;Qt::InputMethodQueries::enum_type->QFlags<Qt::InputMethodQueries::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::InputMethodQueries::enum_type;QFlags<Qt::InputMethodQueries::enum_type>->QFlags<Qt::InputMethodQueries::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::InputMethodQueries::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::InputMethodHints::enum_type;Qt::InputMethodHints::enum_type->QFlags<Qt::InputMethodHints::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::InputMethodHints::enum_type;QFlags<Qt::InputMethodHints::enum_type>->QFlags<Qt::InputMethodHints::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::InputMethodHints::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::TouchPointStates::enum_type;Qt::TouchPointStates::enum_type->QFlags<Qt::TouchPointStates::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::TouchPointStates::enum_type;QFlags<Qt::TouchPointStates::enum_type>->QFlags<Qt::TouchPointStates::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::TouchPointStates::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::MouseEventFlags::enum_type;Qt::MouseEventFlags::enum_type->QFlags<Qt::MouseEventFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::MouseEventFlags::enum_type;QFlags<Qt::MouseEventFlags::enum_type>->QFlags<Qt::MouseEventFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::MouseEventFlags::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::GestureFlags::enum_type;Qt::GestureFlags::enum_type->QFlags<Qt::GestureFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::GestureFlags::enum_type;QFlags<Qt::GestureFlags::enum_type>->QFlags<Qt::GestureFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "Qt::GestureFlags::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<Qt>",
                    "name": "enums",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QPoint",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPoint",
                                    "signature": "int;int",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPoint",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "manhattanLength",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "rx",
                                    "signature": "->int &",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "ry",
                                    "signature": "->int &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "const QPoint &->QPoint &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "signature": "const QPoint &->QPoint &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "signature": "float->QPoint &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "signature": "double->QPoint &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "signature": "int->QPoint &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "signature": "qreal->QPoint &",
                                    "type": "function"
                                },
                                {
                                    "name": "dotProduct",
                                    "signature": "const QPoint &;const QPoint &->int",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QPoint",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QPoint &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QPoint &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "signature": "const QPoint &;const QPoint &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "signature": "const QPoint &;const QPoint &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QPoint &;const QPoint &->const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QPoint &;const QPoint &->const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QPoint &;float->const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QPoint &;double->const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QPoint &;int->const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "float;const QPoint &->const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "double;const QPoint &->const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "int;const QPoint &->const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QPoint &->const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QPoint &->const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "signature": "const QPoint &;qreal->const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QPoint &->QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QPointF",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPointF",
                                    "signature": "const QPoint &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPointF",
                                    "signature": "qreal;qreal",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPointF",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "manhattanLength",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "rx",
                                    "signature": "->qreal &",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "ry",
                                    "signature": "->qreal &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "const QPointF &->QPointF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "signature": "const QPointF &->QPointF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "signature": "qreal->QPointF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "signature": "qreal->QPointF &",
                                    "type": "function"
                                },
                                {
                                    "name": "dotProduct",
                                    "signature": "const QPointF &;const QPointF &->qreal",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPoint",
                                    "signature": "->QPoint",
                                    "type": "function"
                                }
                            ],
                            "name": "QPointF",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QPointF &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QPointF &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "signature": "const QPointF &;const QPointF &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "signature": "const QPointF &;const QPointF &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QPointF &;const QPointF &->const QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QPointF &;const QPointF &->const QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QPointF &;qreal->const QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "qreal;const QPointF &->const QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QPointF &->const QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QPointF &->const QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "signature": "const QPointF &;qreal->const QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QPointF &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QPoint>",
                    "name": "point",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QSize",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSize",
                                    "signature": "const QSize &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QSize",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QSize",
                                    "signature": "int;int",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setWidth",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setHeight",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "transpose",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transposed",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "scale",
                                    "signature": "int;int;Qt::AspectRatioMode->void",
                                    "type": "function"
                                },
                                {
                                    "name": "scale",
                                    "signature": "const QSize &;Qt::AspectRatioMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaled",
                                    "signature": "int;int;Qt::AspectRatioMode->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaled",
                                    "signature": "const QSize &;Qt::AspectRatioMode->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "expandedTo",
                                    "signature": "const QSize &->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundedTo",
                                    "signature": "const QSize &->QSize",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "rwidth",
                                    "signature": "->int &",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "rheight",
                                    "signature": "->int &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "const QSize &->QSize &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "signature": "const QSize &->QSize &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "signature": "qreal->QSize &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "signature": "qreal->QSize &",
                                    "type": "function"
                                }
                            ],
                            "name": "QSize",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QSize &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QSize &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "signature": "const QSize &;const QSize &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "signature": "const QSize &;const QSize &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QSize &;const QSize &->const QSize",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QSize &;const QSize &->const QSize",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QSize &;qreal->const QSize",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "qreal;const QSize &->const QSize",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "signature": "const QSize &;qreal->const QSize",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QSize &->QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QSizeF",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSizeF",
                                    "signature": "const QSizeF &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSizeF",
                                    "signature": "const QSize &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSizeF",
                                    "signature": "qreal;qreal",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QSizeF",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setWidth",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setHeight",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "transpose",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transposed",
                                    "signature": "->QSizeF",
                                    "type": "function"
                                },
                                {
                                    "name": "scale",
                                    "signature": "qreal;qreal;Qt::AspectRatioMode->void",
                                    "type": "function"
                                },
                                {
                                    "name": "scale",
                                    "signature": "const QSizeF &;Qt::AspectRatioMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaled",
                                    "signature": "qreal;qreal;Qt::AspectRatioMode->QSizeF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaled",
                                    "signature": "const QSizeF &;Qt::AspectRatioMode->QSizeF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "expandedTo",
                                    "signature": "const QSizeF &->QSizeF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundedTo",
                                    "signature": "const QSizeF &->QSizeF",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "rwidth",
                                    "signature": "->qreal &",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "rheight",
                                    "signature": "->qreal &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "const QSizeF &->QSizeF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "signature": "const QSizeF &->QSizeF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "signature": "qreal->QSizeF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "signature": "qreal->QSizeF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toSize",
                                    "signature": "->QSize",
                                    "type": "function"
                                }
                            ],
                            "name": "QSizeF",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QSizeF &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QSizeF &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "signature": "const QSizeF &;const QSizeF &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "signature": "const QSizeF &;const QSizeF &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QSizeF &;const QSizeF &->const QSizeF",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QSizeF &;const QSizeF &->const QSizeF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QSizeF &;qreal->const QSizeF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "qreal;const QSizeF &->const QSizeF",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "signature": "const QSizeF &;qreal->const QSizeF",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QSizeF &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QSize>",
                    "name": "size",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QRect",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRect",
                                    "signature": "const QRect &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QRect",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QRect",
                                    "signature": "const QPoint &;const QPoint &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRect",
                                    "signature": "const QPoint &;const QSize &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRect",
                                    "signature": "int;int;int;int",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "left",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "top",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "right",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottom",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "normalized",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setLeft",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTop",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRight",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBottom",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTopLeft",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBottomRight",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTopRight",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBottomLeft",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "topLeft",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottomRight",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "topRight",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottomLeft",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "center",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "name": "moveLeft",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTop",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveRight",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveBottom",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTopLeft",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveBottomRight",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTopRight",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveBottomLeft",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveCenter",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "signature": "int;int->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "signature": "const QPoint &->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transposed",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTo",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTo",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRect",
                                    "signature": "int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getRect",
                                    "signature": "int *;int *;int *;int *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setCoords",
                                    "signature": "int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getCoords",
                                    "signature": "int *;int *;int *;int *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "adjust",
                                    "signature": "int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "adjusted",
                                    "signature": "int;int;int;int->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setWidth",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setHeight",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setSize",
                                    "signature": "const QSize &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator|",
                                    "signature": "const QRect &->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator&",
                                    "signature": "const QRect &->QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "operator|=",
                                    "signature": "const QRect &->QRect &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator&=",
                                    "signature": "const QRect &->QRect &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "signature": "const QRect &;bool->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "signature": "const QPoint &;bool->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "signature": "int;int->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "signature": "int;int;bool->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "united",
                                    "signature": "const QRect &->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersected",
                                    "signature": "const QRect &->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersects",
                                    "signature": "const QRect &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "marginsAdded",
                                    "signature": "const QMargins &->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "marginsRemoved",
                                    "signature": "const QMargins &->QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "const QMargins &->QRect &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "signature": "const QMargins &->QRect &",
                                    "type": "function"
                                }
                            ],
                            "name": "QRect",
                            "type": "class"
                        },
                        {
                            "name": "operator==",
                            "signature": "const QRect &;const QRect &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "signature": "const QRect &;const QRect &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QRect &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QRect &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "signature": "const QRect &;const QRect &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "signature": "const QRect &;const QRect &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QRect &;const QMargins &->QRect",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QMargins &;const QRect &->QRect",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QRect &;const QMargins &->QRect",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QRect &->QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QRectF",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRectF",
                                    "signature": "const QRectF &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QRectF",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QRectF",
                                    "signature": "const QPointF &;const QSizeF &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRectF",
                                    "signature": "const QPointF &;const QPointF &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRectF",
                                    "signature": "qreal;qreal;qreal;qreal",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRectF",
                                    "signature": "const QRect &",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "normalized",
                                    "signature": "->QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "left",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "top",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "right",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottom",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setLeft",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTop",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRight",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBottom",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "topLeft",
                                    "signature": "->QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottomRight",
                                    "signature": "->QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "topRight",
                                    "signature": "->QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottomLeft",
                                    "signature": "->QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "center",
                                    "signature": "->QPointF",
                                    "type": "function"
                                },
                                {
                                    "name": "setTopLeft",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBottomRight",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTopRight",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBottomLeft",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveLeft",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTop",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveRight",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveBottom",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTopLeft",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveBottomRight",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTopRight",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveBottomLeft",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveCenter",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "signature": "qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "signature": "qreal;qreal->QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "signature": "const QPointF &->QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transposed",
                                    "signature": "->QRectF",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTo",
                                    "signature": "qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTo",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRect",
                                    "signature": "qreal;qreal;qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getRect",
                                    "signature": "qreal *;qreal *;qreal *;qreal *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setCoords",
                                    "signature": "qreal;qreal;qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getCoords",
                                    "signature": "qreal *;qreal *;qreal *;qreal *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "adjust",
                                    "signature": "qreal;qreal;qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "adjusted",
                                    "signature": "qreal;qreal;qreal;qreal->QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "signature": "->QSizeF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setWidth",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setHeight",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setSize",
                                    "signature": "const QSizeF &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator|",
                                    "signature": "const QRectF &->QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator&",
                                    "signature": "const QRectF &->QRectF",
                                    "type": "function"
                                },
                                {
                                    "name": "operator|=",
                                    "signature": "const QRectF &->QRectF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator&=",
                                    "signature": "const QRectF &->QRectF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "signature": "const QRectF &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "signature": "const QPointF &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "signature": "qreal;qreal->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "united",
                                    "signature": "const QRectF &->QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersected",
                                    "signature": "const QRectF &->QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersects",
                                    "signature": "const QRectF &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "marginsAdded",
                                    "signature": "const QMarginsF &->QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "marginsRemoved",
                                    "signature": "const QMarginsF &->QRectF",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "const QMarginsF &->QRectF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "signature": "const QMarginsF &->QRectF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRect",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toAlignedRect",
                                    "signature": "->QRect",
                                    "type": "function"
                                }
                            ],
                            "name": "QRectF",
                            "type": "class"
                        },
                        {
                            "name": "operator==",
                            "signature": "const QRectF &;const QRectF &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "signature": "const QRectF &;const QRectF &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QRectF &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QRectF &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "signature": "const QRectF &;const QRectF &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "signature": "const QRectF &;const QRectF &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QRectF &;const QMarginsF &->QRectF",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QMarginsF &;const QRectF &->QRectF",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QRectF &;const QMarginsF &->QRectF",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QRectF &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QRect>",
                    "name": "rect",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QMargins",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QMargins",
                                    "signature": "const QMargins &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QMargins",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QMargins",
                                    "signature": "int;int;int;int",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "left",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "top",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "right",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottom",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setLeft",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTop",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRight",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBottom",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "const QMargins &->QMargins &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "signature": "const QMargins &->QMargins &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "int->QMargins &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "signature": "int->QMargins &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "signature": "int->QMargins &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "signature": "int->QMargins &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "signature": "qreal->QMargins &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "signature": "qreal->QMargins &",
                                    "type": "function"
                                }
                            ],
                            "name": "QMargins",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QMargins &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QMargins &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "signature": "const QMargins &;const QMargins &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "signature": "const QMargins &;const QMargins &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QMargins &;const QMargins &->QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QMargins &;const QMargins &->QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QMargins &;int->QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "int;const QMargins &->QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QMargins &;int->QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QMargins &;int->QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "int;const QMargins &->QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QMargins &;qreal->QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "qreal;const QMargins &->QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "signature": "const QMargins &;int->QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "signature": "const QMargins &;qreal->QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QMargins &->QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QMargins &->QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QMargins &->QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QMarginsF",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QMargins",
                                    "signature": "const QMargins &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QMarginsF",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QMarginsF",
                                    "signature": "qreal;qreal;qreal;qreal",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QMarginsF",
                                    "signature": "const QMargins &",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "left",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "top",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "right",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottom",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setLeft",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTop",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRight",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBottom",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "const QMarginsF &->QMarginsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "signature": "const QMarginsF &->QMarginsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "qreal->QMarginsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "signature": "qreal->QMarginsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "signature": "qreal->QMarginsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "signature": "qreal->QMarginsF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toMargins",
                                    "signature": "->QMargins",
                                    "type": "function"
                                }
                            ],
                            "name": "QMarginsF",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QMarginsF &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QMarginsF &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "signature": "const QMarginsF &;const QMarginsF &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "signature": "const QMarginsF &;const QMarginsF &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QMarginsF &;const QMarginsF &->QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QMarginsF &;const QMarginsF &->QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QMarginsF &;qreal->QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "qreal;const QMarginsF &->QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QMarginsF &;qreal->QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QMarginsF &;qreal->QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "qreal;const QMarginsF &->QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "signature": "const QMarginsF &;qreal->QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QMarginsF &->QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QMarginsF &->QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QMarginsF &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QMargins>",
                    "name": "margins",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        "DateFormat",
                                        "StandaloneFormat"
                                    ],
                                    "name": "MonthNameType",
                                    "type": "enum"
                                },
                                {
                                    "name": "QDate",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDate",
                                    "signature": "const QDate &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDate",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QDate",
                                    "signature": "int;int;int",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "year",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "month",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "day",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dayOfWeek",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dayOfYear",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "daysInMonth",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "daysInYear",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "weekNumber",
                                    "signature": "int *->int",
                                    "type": "function"
                                },
                                {
                                    "name": "shortMonthName",
                                    "signature": "int;QDate::MonthNameType->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "shortDayName",
                                    "signature": "int;QDate::MonthNameType->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "longMonthName",
                                    "signature": "int;QDate::MonthNameType->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "longDayName",
                                    "signature": "int;QDate::MonthNameType->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "Qt::TextDate",
                                    "name": "toString",
                                    "signature": "Qt::DateFormat->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "QStringView->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setDate",
                                    "signature": "int;int;int->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "getDate",
                                    "signature": "int *;int *;int *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getDate",
                                    "signature": "int *;int *;int *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addDays",
                                    "signature": "qint64->QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addMonths",
                                    "signature": "int->QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addYears",
                                    "signature": "int->QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "daysTo",
                                    "signature": "const QDate &->qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QDate &->QDate &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QDate &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QDate &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "signature": "const QDate &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<=",
                                    "signature": "const QDate &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "signature": "const QDate &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>=",
                                    "signature": "const QDate &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "currentDate",
                                    "signature": "->QDate",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::TextDate",
                                    "name": "fromString",
                                    "signature": "const QString &;Qt::DateFormat->QDate",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromString",
                                    "signature": "const QString &;const QString &->QDate",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isValid",
                                    "signature": "int;int;int->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isLeapYear",
                                    "signature": "int->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromJulianDay",
                                    "signature": "qint64->QDate",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toJulianDay",
                                    "signature": "->qint64",
                                    "type": "function"
                                }
                            ],
                            "name": "QDate",
                            "type": "class"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QTime",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTime",
                                    "signature": "const QTime &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QTime",
                                    "type": "destructor"
                                },
                                {
                                    "defaults": "0;0",
                                    "name": "QTime",
                                    "signature": "int;int;int;int",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hour",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minute",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "second",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "msec",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "Qt::TextDate",
                                    "name": "toString",
                                    "signature": "Qt::DateFormat->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "QStringView->QString",
                                    "type": "function"
                                },
                                {
                                    "defaults": "0",
                                    "name": "setHMS",
                                    "signature": "int;int;int;int->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addSecs",
                                    "signature": "int->QTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "secsTo",
                                    "signature": "const QTime &->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addMSecs",
                                    "signature": "int->QTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "msecsTo",
                                    "signature": "const QTime &->int",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QTime &->QTime &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QTime &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QTime &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "signature": "const QTime &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<=",
                                    "signature": "const QTime &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "signature": "const QTime &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>=",
                                    "signature": "const QTime &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "fromMSecsSinceStartOfDay",
                                    "signature": "int->QTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "msecsSinceStartOfDay",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "currentTime",
                                    "signature": "->QTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::TextDate",
                                    "name": "fromString",
                                    "signature": "const QString &;Qt::DateFormat->QTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromString",
                                    "signature": "const QString &;const QString &->QTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "0",
                                    "name": "isValid",
                                    "signature": "int;int;int;int->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "start",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "restart",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "elapsed",
                                    "signature": "->int",
                                    "type": "function"
                                }
                            ],
                            "name": "QTime",
                            "type": "class"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QDateTime",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateTime",
                                    "signature": "const QDate &",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "Qt::LocalTime",
                                    "name": "QDateTime",
                                    "signature": "const QDate &;const QTime &;Qt::TimeSpec",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateTime",
                                    "signature": "const QDate &;const QTime &;Qt::TimeSpec;int",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateTime",
                                    "signature": "const QDate &;const QTime &;const QTimeZone &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateTime",
                                    "signature": "const QDateTime &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateTime",
                                    "signature": "QDateTime &&",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDateTime",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QDateTime &&->QDateTime &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QDateTime &->QDateTime &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QDateTime &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "date",
                                    "signature": "->QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "time",
                                    "signature": "->QTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "timeSpec",
                                    "signature": "->Qt::TimeSpec",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "offsetFromUtc",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "timeZone",
                                    "signature": "->QTimeZone",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "timeZoneAbbreviation",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDaylightTime",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toMSecsSinceEpoch",
                                    "signature": "->qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toSecsSinceEpoch",
                                    "signature": "->qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "setDate",
                                    "signature": "const QDate &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTime",
                                    "signature": "const QTime &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTimeSpec",
                                    "signature": "Qt::TimeSpec->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setOffsetFromUtc",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTimeZone",
                                    "signature": "const QTimeZone &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMSecsSinceEpoch",
                                    "signature": "qint64->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setSecsSinceEpoch",
                                    "signature": "qint64->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "Qt::TextDate",
                                    "name": "toString",
                                    "signature": "Qt::DateFormat->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "QStringView->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addDays",
                                    "signature": "qint64->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addMonths",
                                    "signature": "int->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addYears",
                                    "signature": "int->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addSecs",
                                    "signature": "qint64->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addMSecs",
                                    "signature": "qint64->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toTimeSpec",
                                    "signature": "Qt::TimeSpec->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLocalTime",
                                    "signature": "->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUTC",
                                    "signature": "->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toOffsetFromUtc",
                                    "signature": "int->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toTimeZone",
                                    "signature": "const QTimeZone &->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "daysTo",
                                    "signature": "const QDateTime &->qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "secsTo",
                                    "signature": "const QDateTime &->qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "msecsTo",
                                    "signature": "const QDateTime &->qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QDateTime &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QDateTime &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "signature": "const QDateTime &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<=",
                                    "signature": "const QDateTime &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "signature": "const QDateTime &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>=",
                                    "signature": "const QDateTime &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setUtcOffset",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "utcOffset",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "currentDateTime",
                                    "signature": "->QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "currentDateTimeUtc",
                                    "signature": "->QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::TextDate",
                                    "name": "fromString",
                                    "signature": "const QString &;Qt::DateFormat->QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromString",
                                    "signature": "const QString &;const QString &->QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toTime_t",
                                    "signature": "->uint",
                                    "type": "function"
                                },
                                {
                                    "name": "setTime_t",
                                    "signature": "uint->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fromTime_t",
                                    "signature": "uint->QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromTime_t",
                                    "signature": "uint;Qt::TimeSpec;int->QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromTime_t",
                                    "signature": "uint;const QTimeZone &->QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromMSecsSinceEpoch",
                                    "signature": "qint64->QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "0;Qt::LocalTime",
                                    "name": "fromMSecsSinceEpoch",
                                    "signature": "qint64;Qt::TimeSpec;int->QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromSecsSinceEpoch",
                                    "signature": "qint64;Qt::TimeSpec;int->QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromMSecsSinceEpoch",
                                    "signature": "qint64;const QTimeZone &->QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromSecsSinceEpoch",
                                    "signature": "qint64;const QTimeZone &->QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "currentMSecsSinceEpoch",
                                    "signature": "->qint64",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "currentSecsSinceEpoch",
                                    "signature": "->qint64",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QDateTime",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QDateTime &;QDateTime &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QDate &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QDate &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QTime &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QTime &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QDateTime &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QDateTime &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QDate &->QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QTime &->QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QDateTime &->QDebug",
                            "type": "function"
                        },
                        {
                            "name": "qHash",
                            "signature": "const QDateTime &;uint->uint",
                            "type": "function"
                        },
                        {
                            "name": "qHash",
                            "signature": "const QDate &;uint->uint",
                            "type": "function"
                        },
                        {
                            "name": "qHash",
                            "signature": "const QTime &;uint->uint",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QDateTime>",
                    "name": "datetime",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        "Dirs",
                                        "Files",
                                        "Drives",
                                        "NoSymLinks",
                                        "AllEntries",
                                        "TypeMask",
                                        "Readable",
                                        "Writable",
                                        "Executable",
                                        "PermissionMask",
                                        "Modified",
                                        "Hidden",
                                        "System",
                                        "AccessMask",
                                        "AllDirs",
                                        "CaseSensitive",
                                        "NoDot",
                                        "NoDotDot",
                                        "NoDotAndDotDot",
                                        "NoFilter"
                                    ],
                                    "name": "Filter",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "Name",
                                        "Time",
                                        "Size",
                                        "Unsorted",
                                        "SortByMask",
                                        "DirsFirst",
                                        "Reversed",
                                        "IgnoreCase",
                                        "DirsLast",
                                        "LocaleAware",
                                        "Type",
                                        "NoSort"
                                    ],
                                    "name": "SortFlag",
                                    "type": "enum"
                                },
                                {
                                    "name": "QDir",
                                    "signature": "const QDir &",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "QString()",
                                    "name": "QDir",
                                    "signature": "const QString &",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "QDir::Filters(QDir::AllEntries);QDir::SortFlags(QDir::Name | QDir::IgnoreCase)",
                                    "name": "QDir",
                                    "signature": "const QString &;const QString &;QDir::SortFlags;QDir::Filters",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDir",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QDir &->QDir &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QString &->QDir &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QDir &&->QDir &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QDir &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setPath",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "path",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "absolutePath",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "canonicalPath",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "addResourceSearchPath",
                                    "signature": "const QString &->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setSearchPaths",
                                    "signature": "const QString &;const QStringList &->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "addSearchPath",
                                    "signature": "const QString &;const QString &->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "searchPaths",
                                    "signature": "const QString &->QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dirName",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "filePath",
                                    "signature": "const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "absoluteFilePath",
                                    "signature": "const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "relativeFilePath",
                                    "signature": "const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "toNativeSeparators",
                                    "signature": "const QString &->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromNativeSeparators",
                                    "signature": "const QString &->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "cd",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "cdUp",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nameFilters",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "setNameFilters",
                                    "signature": "const QStringList &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "filter",
                                    "signature": "->QDir::Filters",
                                    "type": "function"
                                },
                                {
                                    "name": "setFilter",
                                    "signature": "QDir::Filters->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sorting",
                                    "signature": "->QDir::SortFlags",
                                    "type": "function"
                                },
                                {
                                    "name": "setSorting",
                                    "signature": "QDir::SortFlags->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "signature": "->uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QDir::Filters(QDir::AllEntries | QDir::NoDotAndDotDot)",
                                    "name": "isEmpty",
                                    "signature": "QDir::Filters->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "signature": "int->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "nameFiltersFromString",
                                    "signature": "const QString &->QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QDir::SortFlags(QDir::NoSort);QDir::Filters(QDir::NoFilter)",
                                    "name": "entryList",
                                    "signature": "QDir::Filters;QDir::SortFlags->QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QDir::SortFlags(QDir::NoSort);QDir::Filters(QDir::NoFilter)",
                                    "name": "entryList",
                                    "signature": "const QStringList &;QDir::Filters;QDir::SortFlags->QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QDir::SortFlags(QDir::NoSort);QDir::Filters(QDir::NoFilter)",
                                    "name": "entryInfoList",
                                    "signature": "QDir::Filters;QDir::SortFlags->QFileInfoList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QDir::SortFlags(QDir::NoSort);QDir::Filters(QDir::NoFilter)",
                                    "name": "entryInfoList",
                                    "signature": "const QStringList &;QDir::Filters;QDir::SortFlags->QFileInfoList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mkdir",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rmdir",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mkpath",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rmpath",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "removeRecursively",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isReadable",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exists",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRoot",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "isRelativePath",
                                    "signature": "const QString &->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isAbsolutePath",
                                    "signature": "const QString &->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRelative",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isAbsolute",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "makeAbsolute",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QDir &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QDir &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "remove",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "rename",
                                    "signature": "const QString &;const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exists",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "drives",
                                    "signature": "->QFileInfoList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "listSeparator",
                                    "signature": "->QChar",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "separator",
                                    "signature": "->QChar",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrent",
                                    "signature": "const QString &->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "current",
                                    "signature": "->QDir",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "currentPath",
                                    "signature": "->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "home",
                                    "signature": "->QDir",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "homePath",
                                    "signature": "->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "root",
                                    "signature": "->QDir",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "rootPath",
                                    "signature": "->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "temp",
                                    "signature": "->QDir",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "tempPath",
                                    "signature": "->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "match",
                                    "signature": "const QStringList &;const QString &->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "match",
                                    "signature": "const QString &;const QString &->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "cleanPath",
                                    "signature": "const QString &->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "refresh",
                                    "signature": "->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QDir",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QDir &;QDir &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QDir::Filter;QDir::Filter->QDir::Filters",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QDir::Filter;QDir::Filters->QDir::Filters",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QDir::Filters::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QDir::SortFlag;QDir::SortFlag->QDir::SortFlags",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QDir::SortFlag;QDir::SortFlags->QDir::SortFlags",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QDir::SortFlags::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;QDir::Filters->QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QDir &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QDir>",
                    "name": "dir",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "name": "QFileInfo",
                                    "signature": "QFileInfoPrivate *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFileInfo",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFileInfo",
                                    "signature": "const QString &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFileInfo",
                                    "signature": "const QFile &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFileInfo",
                                    "signature": "const QDir &;const QString &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFileInfo",
                                    "signature": "const QFileInfo &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFileInfo",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QFileInfo &->QFileInfo &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QFileInfo &&->QFileInfo &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QFileInfo &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QFileInfo &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QFileInfo &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setFile",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setFile",
                                    "signature": "const QFile &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setFile",
                                    "signature": "const QDir &;const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exists",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "exists",
                                    "signature": "const QString &->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "refresh",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "filePath",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "absoluteFilePath",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "canonicalFilePath",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fileName",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "baseName",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "completeBaseName",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "suffix",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bundleName",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "completeSuffix",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "path",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "absolutePath",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "canonicalPath",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dir",
                                    "signature": "->QDir",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "absoluteDir",
                                    "signature": "->QDir",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isReadable",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isWritable",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isExecutable",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isHidden",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNativePath",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRelative",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isAbsolute",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "makeAbsolute",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isFile",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDir",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSymLink",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRoot",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isBundle",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "readLink",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "symLinkTarget",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "owner",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "ownerId",
                                    "signature": "->uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "group",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "groupId",
                                    "signature": "->uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "permission",
                                    "signature": "QFile::Permissions->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "permissions",
                                    "signature": "->QFile::Permissions",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "signature": "->qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "created",
                                    "signature": "->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "birthTime",
                                    "signature": "->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "metadataChangeTime",
                                    "signature": "->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastModified",
                                    "signature": "->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastRead",
                                    "signature": "->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "fileTime",
                                    "signature": "QFile::FileTime->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "caching",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setCaching",
                                    "signature": "bool->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QFileInfo",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QFileInfo &;QFileInfo &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QFileInfo &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QFileInfo>",
                    "name": "fileinfo",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QLine",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLine",
                                    "signature": "const QLine &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QLine",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QLine",
                                    "signature": "const QPoint &;const QPoint &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLine",
                                    "signature": "int;int;int;int",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "p1",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "p2",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x1",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y1",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x2",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y2",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dx",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dy",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "signature": "const QPoint &->QLine",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "signature": "int;int->QLine",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "center",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "name": "setP1",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setP2",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setPoints",
                                    "signature": "const QPoint &;const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setLine",
                                    "signature": "int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QLine &->QLine &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QLine &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QLine &->bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QLine",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QLine &->QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QLine &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QLine &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        "NoIntersection",
                                        "BoundedIntersection",
                                        "UnboundedIntersection"
                                    ],
                                    "name": "IntersectType",
                                    "type": "enum"
                                },
                                {
                                    "name": "QLineF",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLineF",
                                    "signature": "const QLineF &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QLineF",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QLineF",
                                    "signature": "const QPointF &;const QPointF &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLineF",
                                    "signature": "qreal;qreal;qreal;qreal",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLineF",
                                    "signature": "const QLine &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "fromPolar",
                                    "signature": "qreal;qreal->QLineF",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "p1",
                                    "signature": "->QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "p2",
                                    "signature": "->QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x1",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y1",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x2",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y2",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dx",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dy",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "length",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setLength",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "angle",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setAngle",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "angleTo",
                                    "signature": "const QLineF &->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "unitVector",
                                    "signature": "->QLineF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "normalVector",
                                    "signature": "->QLineF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersect",
                                    "signature": "const QLineF &;QPointF *->QLineF::IntersectType",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "angle",
                                    "signature": "const QLineF &->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pointAt",
                                    "signature": "qreal->QPointF",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "signature": "qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "signature": "const QPointF &->QLineF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "signature": "qreal;qreal->QLineF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "center",
                                    "signature": "->QPointF",
                                    "type": "function"
                                },
                                {
                                    "name": "setP1",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setP2",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setPoints",
                                    "signature": "const QPointF &;const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setLine",
                                    "signature": "qreal;qreal;qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QLineF &->QLineF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QLineF &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QLineF &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLine",
                                    "signature": "->QLine",
                                    "type": "function"
                                }
                            ],
                            "name": "QLineF",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QLineF &->QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QLineF &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QLineF &->QDataStream &",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QLine>",
                    "name": "line",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "name": "qHash",
                            "signature": "const QUrl &;uint->uint",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        "TolerantMode",
                                        "StrictMode",
                                        "DecodedMode"
                                    ],
                                    "name": "ParsingMode",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "None",
                                        "RemoveScheme",
                                        "RemovePassword",
                                        "RemoveUserInfo",
                                        "RemovePort",
                                        "RemoveAuthority",
                                        "RemovePath",
                                        "RemoveQuery",
                                        "RemoveFragment",
                                        "PreferLocalFile",
                                        "StripTrailingSlash",
                                        "RemoveFilename",
                                        "NormalizePathSegments"
                                    ],
                                    "name": "UrlFormattingOption",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "PrettyDecoded",
                                        "EncodeSpaces",
                                        "EncodeUnicode",
                                        "EncodeDelimiters",
                                        "EncodeReserved",
                                        "DecodeReserved",
                                        "FullyEncoded",
                                        "FullyDecoded"
                                    ],
                                    "name": "ComponentFormattingOption",
                                    "type": "enum"
                                },
                                {
                                    "name": "QUrl",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QUrl",
                                    "signature": "const QUrl &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QUrl &->QUrl &",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QUrl::TolerantMode",
                                    "name": "QUrl",
                                    "signature": "const QString &;QUrl::ParsingMode",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QString &->QUrl &",
                                    "type": "function"
                                },
                                {
                                    "name": "QUrl",
                                    "signature": "QUrl &&",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QUrl &&->QUrl &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QUrl",
                                    "type": "destructor"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QUrl &->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QUrl::TolerantMode",
                                    "name": "setUrl",
                                    "signature": "const QString &;QUrl::ParsingMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QUrl::FormattingOptions(QUrl::FullyEncoded)",
                                    "name": "url",
                                    "signature": "QUrl::FormattingOptions->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QUrl::FormattingOptions(QUrl::PrettyDecoded)",
                                    "name": "toString",
                                    "signature": "QUrl::FormattingOptions->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QUrl::FormattingOptions(QUrl::PrettyDecoded)",
                                    "name": "toDisplayString",
                                    "signature": "QUrl::FormattingOptions->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "adjusted",
                                    "signature": "QUrl::FormattingOptions->QUrl",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QUrl::FormattingOptions(QUrl::FullyEncoded)",
                                    "name": "toEncoded",
                                    "signature": "QUrl::FormattingOptions->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QUrl::TolerantMode",
                                    "name": "fromEncoded",
                                    "signature": "const QByteArray &;QUrl::ParsingMode->QUrl",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "DefaultResolution",
                                        "AssumeLocalFile"
                                    ],
                                    "name": "UserInputResolutionOption",
                                    "type": "enum"
                                },
                                {
                                    "name": "fromUserInput",
                                    "signature": "const QString &->QUrl",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "QUrl::UserInputResolutionOptions(QUrl::DefaultResolution)",
                                    "name": "fromUserInput",
                                    "signature": "const QString &;const QString &;QUrl::UserInputResolutionOptions->QUrl",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "errorString",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setScheme",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scheme",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QUrl::TolerantMode",
                                    "name": "setAuthority",
                                    "signature": "const QString &;QUrl::ParsingMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QUrl::ComponentFormattingOptions(QUrl::PrettyDecoded)",
                                    "name": "authority",
                                    "signature": "QUrl::ComponentFormattingOptions->QString",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QUrl::TolerantMode",
                                    "name": "setUserInfo",
                                    "signature": "const QString &;QUrl::ParsingMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QUrl::ComponentFormattingOptions(QUrl::PrettyDecoded)",
                                    "name": "userInfo",
                                    "signature": "QUrl::ComponentFormattingOptions->QString",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QUrl::DecodedMode",
                                    "name": "setUserName",
                                    "signature": "const QString &;QUrl::ParsingMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QUrl::ComponentFormattingOptions(QUrl::FullyDecoded)",
                                    "name": "userName",
                                    "signature": "QUrl::ComponentFormattingOptions->QString",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QUrl::DecodedMode",
                                    "name": "setPassword",
                                    "signature": "const QString &;QUrl::ParsingMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QUrl::ComponentFormattingOptions(QUrl::FullyDecoded)",
                                    "name": "password",
                                    "signature": "QUrl::ComponentFormattingOptions->QString",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QUrl::DecodedMode",
                                    "name": "setHost",
                                    "signature": "const QString &;QUrl::ParsingMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QUrl::ComponentFormattingOptions(QUrl::FullyDecoded)",
                                    "name": "host",
                                    "signature": "QUrl::ComponentFormattingOptions->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QUrl::ComponentFormattingOptions(QUrl::FullyDecoded)",
                                    "name": "topLevelDomain",
                                    "signature": "QUrl::ComponentFormattingOptions->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setPort",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "-1",
                                    "name": "port",
                                    "signature": "int->int",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QUrl::DecodedMode",
                                    "name": "setPath",
                                    "signature": "const QString &;QUrl::ParsingMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QUrl::ComponentFormattingOptions(QUrl::FullyDecoded)",
                                    "name": "path",
                                    "signature": "QUrl::ComponentFormattingOptions->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QUrl::ComponentFormattingOptions(QUrl::FullyDecoded)",
                                    "name": "fileName",
                                    "signature": "QUrl::ComponentFormattingOptions->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasQuery",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QUrl::TolerantMode",
                                    "name": "setQuery",
                                    "signature": "const QString &;QUrl::ParsingMode->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setQuery",
                                    "signature": "const QUrlQuery &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QUrl::ComponentFormattingOptions(QUrl::PrettyDecoded)",
                                    "name": "query",
                                    "signature": "QUrl::ComponentFormattingOptions->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasFragment",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QUrl::ComponentFormattingOptions(QUrl::PrettyDecoded)",
                                    "name": "fragment",
                                    "signature": "QUrl::ComponentFormattingOptions->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setFragment",
                                    "signature": "const QString &;QUrl::ParsingMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "resolved",
                                    "signature": "const QUrl &->QUrl",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRelative",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isParentOf",
                                    "signature": "const QUrl &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isLocalFile",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "fromLocalFile",
                                    "signature": "const QString &->QUrl",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLocalFile",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "detach",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "signature": "const QUrl &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QUrl &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QUrl &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matches",
                                    "signature": "const QUrl &;QUrl::FormattingOptions->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "fromPercentEncoding",
                                    "signature": "const QByteArray &->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "QByteArray();QByteArray()",
                                    "name": "toPercentEncoding",
                                    "signature": "const QString &;const QByteArray &;const QByteArray &->QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromAce",
                                    "signature": "const QByteArray &->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "toAce",
                                    "signature": "const QString &->QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "idnWhitelist",
                                    "signature": "->QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "QUrl::FormattingOptions(QUrl::PrettyDecoded)",
                                    "name": "toStringList",
                                    "signature": "const QList<QUrl> &;QUrl::FormattingOptions->QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "QUrl::TolerantMode",
                                    "name": "fromStringList",
                                    "signature": "const QStringList &;QUrl::ParsingMode->QList<QUrl>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setIdnWhitelist",
                                    "signature": "const QStringList &->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "signature": "->QUrl::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QUrl",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QUrl &;QUrl &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QUrl::ComponentFormattingOption;QUrl::ComponentFormattingOption->QUrl::ComponentFormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QUrl::ComponentFormattingOption;QUrl::ComponentFormattingOptions->QUrl::ComponentFormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QUrl::ComponentFormattingOptions::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QUrl::UrlFormattingOption;QUrl::UrlFormattingOption->QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QUrl::UrlFormattingOption;QUrl::FormattingOptions->QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QUrl::UrlFormattingOption;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|=",
                            "signature": "QUrl::FormattingOptions &;QUrl::ComponentFormattingOptions->QUrl::FormattingOptions &",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QUrl::UrlFormattingOption;QUrl::ComponentFormattingOption->QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QUrl::UrlFormattingOption;QUrl::ComponentFormattingOptions->QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QUrl::ComponentFormattingOption;QUrl::UrlFormattingOption->QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QUrl::ComponentFormattingOptions;QUrl::UrlFormattingOption->QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QUrl::FormattingOptions;QUrl::ComponentFormattingOptions->QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QUrl::ComponentFormattingOption;QUrl::FormattingOptions->QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QUrl::ComponentFormattingOptions;QUrl::FormattingOptions->QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QUrl &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QUrl &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QUrl &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QUrl>",
                    "name": "url",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "name": "qHash",
                            "signature": "const QUrlQuery &;uint->uint",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QUrlQuery",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QUrlQuery",
                                    "signature": "const QUrl &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QUrlQuery",
                                    "signature": "const QString &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QUrlQuery",
                                    "signature": "const QUrlQuery &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QUrlQuery &->QUrlQuery &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QUrlQuery &&->QUrlQuery &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QUrlQuery",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QUrlQuery &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QUrlQuery &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QUrlQuery &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QUrl::ComponentFormattingOptions(QUrl::PrettyDecoded)",
                                    "name": "query",
                                    "signature": "QUrl::ComponentFormattingOptions->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setQuery",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QUrl::ComponentFormattingOptions(QUrl::PrettyDecoded)",
                                    "name": "toString",
                                    "signature": "QUrl::ComponentFormattingOptions->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setQueryDelimiters",
                                    "signature": "QChar;QChar->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "queryValueDelimiter",
                                    "signature": "->QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "queryPairDelimiter",
                                    "signature": "->QChar",
                                    "type": "function"
                                },
                                {
                                    "name": "setQueryItems",
                                    "signature": "const QList<QPair<QString, QString> > &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QUrl::ComponentFormattingOptions(QUrl::PrettyDecoded)",
                                    "name": "queryItems",
                                    "signature": "QUrl::ComponentFormattingOptions->QList<QPair<QString, QString> >",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasQueryItem",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "addQueryItem",
                                    "signature": "const QString &;const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "removeQueryItem",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QUrl::ComponentFormattingOptions(QUrl::PrettyDecoded)",
                                    "name": "queryItemValue",
                                    "signature": "const QString &;QUrl::ComponentFormattingOptions->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QUrl::ComponentFormattingOptions(QUrl::PrettyDecoded)",
                                    "name": "allQueryItemValues",
                                    "signature": "const QString &;QUrl::ComponentFormattingOptions->QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "removeAllQueryItems",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "defaultQueryValueDelimiter",
                                    "signature": "->QChar",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "defaultQueryPairDelimiter",
                                    "signature": "->QChar",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "signature": "->QUrlQuery::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QUrlQuery",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QUrlQuery &;QUrlQuery &->void",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QUrlQuery>",
                    "name": "urlquery",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "name": "qHash",
                            "signature": "const QLocale &;uint->uint",
                            "type": "function"
                        },
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "checked": 0,
                                    "name": "qt_check_for_QGADGET_macro",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "AnyLanguage",
                                        "C",
                                        "Abkhazian",
                                        "Oromo",
                                        "Afar",
                                        "Afrikaans",
                                        "Albanian",
                                        "Amharic",
                                        "Arabic",
                                        "Armenian",
                                        "Assamese",
                                        "Aymara",
                                        "Azerbaijani",
                                        "Bashkir",
                                        "Basque",
                                        "Bengali",
                                        "Dzongkha",
                                        "Bihari",
                                        "Bislama",
                                        "Breton",
                                        "Bulgarian",
                                        "Burmese",
                                        "Belarusian",
                                        "Khmer",
                                        "Catalan",
                                        "Chinese",
                                        "Corsican",
                                        "Croatian",
                                        "Czech",
                                        "Danish",
                                        "Dutch",
                                        "English",
                                        "Esperanto",
                                        "Estonian",
                                        "Faroese",
                                        "Fijian",
                                        "Finnish",
                                        "French",
                                        "WesternFrisian",
                                        "Gaelic",
                                        "Galician",
                                        "Georgian",
                                        "German",
                                        "Greek",
                                        "Greenlandic",
                                        "Guarani",
                                        "Gujarati",
                                        "Hausa",
                                        "Hebrew",
                                        "Hindi",
                                        "Hungarian",
                                        "Icelandic",
                                        "Indonesian",
                                        "Interlingua",
                                        "Interlingue",
                                        "Inuktitut",
                                        "Inupiak",
                                        "Irish",
                                        "Italian",
                                        "Japanese",
                                        "Javanese",
                                        "Kannada",
                                        "Kashmiri",
                                        "Kazakh",
                                        "Kinyarwanda",
                                        "Kirghiz",
                                        "Korean",
                                        "Kurdish",
                                        "Rundi",
                                        "Lao",
                                        "Latin",
                                        "Latvian",
                                        "Lingala",
                                        "Lithuanian",
                                        "Macedonian",
                                        "Malagasy",
                                        "Malay",
                                        "Malayalam",
                                        "Maltese",
                                        "Maori",
                                        "Marathi",
                                        "Marshallese",
                                        "Mongolian",
                                        "NauruLanguage",
                                        "Nepali",
                                        "NorwegianBokmal",
                                        "Occitan",
                                        "Oriya",
                                        "Pashto",
                                        "Persian",
                                        "Polish",
                                        "Portuguese",
                                        "Punjabi",
                                        "Quechua",
                                        "Romansh",
                                        "Romanian",
                                        "Russian",
                                        "Samoan",
                                        "Sango",
                                        "Sanskrit",
                                        "Serbian",
                                        "Ossetic",
                                        "SouthernSotho",
                                        "Tswana",
                                        "Shona",
                                        "Sindhi",
                                        "Sinhala",
                                        "Swati",
                                        "Slovak",
                                        "Slovenian",
                                        "Somali",
                                        "Spanish",
                                        "Sundanese",
                                        "Swahili",
                                        "Swedish",
                                        "Sardinian",
                                        "Tajik",
                                        "Tamil",
                                        "Tatar",
                                        "Telugu",
                                        "Thai",
                                        "Tibetan",
                                        "Tigrinya",
                                        "Tongan",
                                        "Tsonga",
                                        "Turkish",
                                        "Turkmen",
                                        "Tahitian",
                                        "Uighur",
                                        "Ukrainian",
                                        "Urdu",
                                        "Uzbek",
                                        "Vietnamese",
                                        "Volapuk",
                                        "Welsh",
                                        "Wolof",
                                        "Xhosa",
                                        "Yiddish",
                                        "Yoruba",
                                        "Zhuang",
                                        "Zulu",
                                        "NorwegianNynorsk",
                                        "Bosnian",
                                        "Divehi",
                                        "Manx",
                                        "Cornish",
                                        "Akan",
                                        "Konkani",
                                        "Ga",
                                        "Igbo",
                                        "Kamba",
                                        "Syriac",
                                        "Blin",
                                        "Geez",
                                        "Koro",
                                        "Sidamo",
                                        "Atsam",
                                        "Tigre",
                                        "Jju",
                                        "Friulian",
                                        "Venda",
                                        "Ewe",
                                        "Walamo",
                                        "Hawaiian",
                                        "Tyap",
                                        "Nyanja",
                                        "Filipino",
                                        "SwissGerman",
                                        "SichuanYi",
                                        "Kpelle",
                                        "LowGerman",
                                        "SouthNdebele",
                                        "NorthernSotho",
                                        "NorthernSami",
                                        "Taroko",
                                        "Gusii",
                                        "Taita",
                                        "Fulah",
                                        "Kikuyu",
                                        "Samburu",
                                        "Sena",
                                        "NorthNdebele",
                                        "Rombo",
                                        "Tachelhit",
                                        "Kabyle",
                                        "Nyankole",
                                        "Bena",
                                        "Vunjo",
                                        "Bambara",
                                        "Embu",
                                        "Cherokee",
                                        "Morisyen",
                                        "Makonde",
                                        "Langi",
                                        "Ganda",
                                        "Bemba",
                                        "Kabuverdianu",
                                        "Meru",
                                        "Kalenjin",
                                        "Nama",
                                        "Machame",
                                        "Colognian",
                                        "Masai",
                                        "Soga",
                                        "Luyia",
                                        "Asu",
                                        "Teso",
                                        "Saho",
                                        "KoyraChiini",
                                        "Rwa",
                                        "Luo",
                                        "Chiga",
                                        "CentralMoroccoTamazight",
                                        "KoyraboroSenni",
                                        "Shambala",
                                        "Bodo",
                                        "Avaric",
                                        "Chamorro",
                                        "Chechen",
                                        "Church",
                                        "Chuvash",
                                        "Cree",
                                        "Haitian",
                                        "Herero",
                                        "HiriMotu",
                                        "Kanuri",
                                        "Komi",
                                        "Kongo",
                                        "Kwanyama",
                                        "Limburgish",
                                        "LubaKatanga",
                                        "Luxembourgish",
                                        "Navaho",
                                        "Ndonga",
                                        "Ojibwa",
                                        "Pali",
                                        "Walloon",
                                        "Aghem",
                                        "Basaa",
                                        "Zarma",
                                        "Duala",
                                        "JolaFonyi",
                                        "Ewondo",
                                        "Bafia",
                                        "MakhuwaMeetto",
                                        "Mundang",
                                        "Kwasio",
                                        "Nuer",
                                        "Sakha",
                                        "Sangu",
                                        "CongoSwahili",
                                        "Tasawaq",
                                        "Vai",
                                        "Walser",
                                        "Yangben",
                                        "Avestan",
                                        "Asturian",
                                        "Ngomba",
                                        "Kako",
                                        "Meta",
                                        "Ngiemboon",
                                        "Aragonese",
                                        "Akkadian",
                                        "AncientEgyptian",
                                        "AncientGreek",
                                        "Aramaic",
                                        "Balinese",
                                        "Bamun",
                                        "BatakToba",
                                        "Buginese",
                                        "Buhid",
                                        "Carian",
                                        "Chakma",
                                        "ClassicalMandaic",
                                        "Coptic",
                                        "Dogri",
                                        "EasternCham",
                                        "EasternKayah",
                                        "Etruscan",
                                        "Gothic",
                                        "Hanunoo",
                                        "Ingush",
                                        "LargeFloweryMiao",
                                        "Lepcha",
                                        "Limbu",
                                        "Lisu",
                                        "Lu",
                                        "Lycian",
                                        "Lydian",
                                        "Mandingo",
                                        "Manipuri",
                                        "Meroitic",
                                        "NorthernThai",
                                        "OldIrish",
                                        "OldNorse",
                                        "OldPersian",
                                        "OldTurkish",
                                        "Pahlavi",
                                        "Parthian",
                                        "Phoenician",
                                        "PrakritLanguage",
                                        "Rejang",
                                        "Sabaean",
                                        "Samaritan",
                                        "Santali",
                                        "Saurashtra",
                                        "Sora",
                                        "Sylheti",
                                        "Tagbanwa",
                                        "TaiDam",
                                        "TaiNua",
                                        "Ugaritic",
                                        "Akoose",
                                        "Lakota",
                                        "StandardMoroccanTamazight",
                                        "Mapuche",
                                        "CentralKurdish",
                                        "LowerSorbian",
                                        "UpperSorbian",
                                        "Kenyang",
                                        "Mohawk",
                                        "Nko",
                                        "Prussian",
                                        "Kiche",
                                        "SouthernSami",
                                        "LuleSami",
                                        "InariSami",
                                        "SkoltSami",
                                        "Warlpiri",
                                        "ManichaeanMiddlePersian",
                                        "Mende",
                                        "AncientNorthArabian",
                                        "LinearA",
                                        "HmongNjua",
                                        "Ho",
                                        "Lezghian",
                                        "Bassa",
                                        "Mono",
                                        "TedimChin",
                                        "Maithili",
                                        "Ahom",
                                        "AmericanSignLanguage",
                                        "ArdhamagadhiPrakrit",
                                        "Bhojpuri",
                                        "HieroglyphicLuwian",
                                        "LiteraryChinese",
                                        "Mazanderani",
                                        "Mru",
                                        "Newari",
                                        "NorthernLuri",
                                        "Palauan",
                                        "Papiamento",
                                        "Saraiki",
                                        "TokelauLanguage",
                                        "TokPisin",
                                        "TuvaluLanguage",
                                        "UncodedLanguages",
                                        "Cantonese",
                                        "Osage",
                                        "Tangut",
                                        "Norwegian",
                                        "Moldavian",
                                        "SerboCroatian",
                                        "Tagalog",
                                        "Twi",
                                        "Afan",
                                        "Byelorussian",
                                        "Bhutani",
                                        "Cambodian",
                                        "Kurundi",
                                        "RhaetoRomance",
                                        "Chewa",
                                        "Frisian",
                                        "Uigur",
                                        "LastLanguage"
                                    ],
                                    "name": "Language",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "AnyScript",
                                        "ArabicScript",
                                        "CyrillicScript",
                                        "DeseretScript",
                                        "GurmukhiScript",
                                        "SimplifiedHanScript",
                                        "TraditionalHanScript",
                                        "LatinScript",
                                        "MongolianScript",
                                        "TifinaghScript",
                                        "ArmenianScript",
                                        "BengaliScript",
                                        "CherokeeScript",
                                        "DevanagariScript",
                                        "EthiopicScript",
                                        "GeorgianScript",
                                        "GreekScript",
                                        "GujaratiScript",
                                        "HebrewScript",
                                        "JapaneseScript",
                                        "KhmerScript",
                                        "KannadaScript",
                                        "KoreanScript",
                                        "LaoScript",
                                        "MalayalamScript",
                                        "MyanmarScript",
                                        "OriyaScript",
                                        "TamilScript",
                                        "TeluguScript",
                                        "ThaanaScript",
                                        "ThaiScript",
                                        "TibetanScript",
                                        "SinhalaScript",
                                        "SyriacScript",
                                        "YiScript",
                                        "VaiScript",
                                        "AvestanScript",
                                        "BalineseScript",
                                        "BamumScript",
                                        "BatakScript",
                                        "BopomofoScript",
                                        "BrahmiScript",
                                        "BugineseScript",
                                        "BuhidScript",
                                        "CanadianAboriginalScript",
                                        "CarianScript",
                                        "ChakmaScript",
                                        "ChamScript",
                                        "CopticScript",
                                        "CypriotScript",
                                        "EgyptianHieroglyphsScript",
                                        "FraserScript",
                                        "GlagoliticScript",
                                        "GothicScript",
                                        "HanScript",
                                        "HangulScript",
                                        "HanunooScript",
                                        "ImperialAramaicScript",
                                        "InscriptionalPahlaviScript",
                                        "InscriptionalParthianScript",
                                        "JavaneseScript",
                                        "KaithiScript",
                                        "KatakanaScript",
                                        "KayahLiScript",
                                        "KharoshthiScript",
                                        "LannaScript",
                                        "LepchaScript",
                                        "LimbuScript",
                                        "LinearBScript",
                                        "LycianScript",
                                        "LydianScript",
                                        "MandaeanScript",
                                        "MeiteiMayekScript",
                                        "MeroiticScript",
                                        "MeroiticCursiveScript",
                                        "NkoScript",
                                        "NewTaiLueScript",
                                        "OghamScript",
                                        "OlChikiScript",
                                        "OldItalicScript",
                                        "OldPersianScript",
                                        "OldSouthArabianScript",
                                        "OrkhonScript",
                                        "OsmanyaScript",
                                        "PhagsPaScript",
                                        "PhoenicianScript",
                                        "PollardPhoneticScript",
                                        "RejangScript",
                                        "RunicScript",
                                        "SamaritanScript",
                                        "SaurashtraScript",
                                        "SharadaScript",
                                        "ShavianScript",
                                        "SoraSompengScript",
                                        "CuneiformScript",
                                        "SundaneseScript",
                                        "SylotiNagriScript",
                                        "TagalogScript",
                                        "TagbanwaScript",
                                        "TaiLeScript",
                                        "TaiVietScript",
                                        "TakriScript",
                                        "UgariticScript",
                                        "BrailleScript",
                                        "HiraganaScript",
                                        "CaucasianAlbanianScript",
                                        "BassaVahScript",
                                        "DuployanScript",
                                        "ElbasanScript",
                                        "GranthaScript",
                                        "PahawhHmongScript",
                                        "KhojkiScript",
                                        "LinearAScript",
                                        "MahajaniScript",
                                        "ManichaeanScript",
                                        "MendeKikakuiScript",
                                        "ModiScript",
                                        "MroScript",
                                        "OldNorthArabianScript",
                                        "NabataeanScript",
                                        "PalmyreneScript",
                                        "PauCinHauScript",
                                        "OldPermicScript",
                                        "PsalterPahlaviScript",
                                        "SiddhamScript",
                                        "KhudawadiScript",
                                        "TirhutaScript",
                                        "VarangKshitiScript",
                                        "AhomScript",
                                        "AnatolianHieroglyphsScript",
                                        "HatranScript",
                                        "MultaniScript",
                                        "OldHungarianScript",
                                        "SignWritingScript",
                                        "AdlamScript",
                                        "BhaiksukiScript",
                                        "MarchenScript",
                                        "NewaScript",
                                        "OsageScript",
                                        "TangutScript",
                                        "HanWithBopomofoScript",
                                        "JamoScript",
                                        "SimplifiedChineseScript",
                                        "TraditionalChineseScript",
                                        "LastScript"
                                    ],
                                    "name": "Script",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "AnyCountry",
                                        "Afghanistan",
                                        "Albania",
                                        "Algeria",
                                        "AmericanSamoa",
                                        "Andorra",
                                        "Angola",
                                        "Anguilla",
                                        "Antarctica",
                                        "AntiguaAndBarbuda",
                                        "Argentina",
                                        "Armenia",
                                        "Aruba",
                                        "Australia",
                                        "Austria",
                                        "Azerbaijan",
                                        "Bahamas",
                                        "Bahrain",
                                        "Bangladesh",
                                        "Barbados",
                                        "Belarus",
                                        "Belgium",
                                        "Belize",
                                        "Benin",
                                        "Bermuda",
                                        "Bhutan",
                                        "Bolivia",
                                        "BosniaAndHerzegowina",
                                        "Botswana",
                                        "BouvetIsland",
                                        "Brazil",
                                        "BritishIndianOceanTerritory",
                                        "Brunei",
                                        "Bulgaria",
                                        "BurkinaFaso",
                                        "Burundi",
                                        "Cambodia",
                                        "Cameroon",
                                        "Canada",
                                        "CapeVerde",
                                        "CaymanIslands",
                                        "CentralAfricanRepublic",
                                        "Chad",
                                        "Chile",
                                        "China",
                                        "ChristmasIsland",
                                        "CocosIslands",
                                        "Colombia",
                                        "Comoros",
                                        "CongoKinshasa",
                                        "CongoBrazzaville",
                                        "CookIslands",
                                        "CostaRica",
                                        "IvoryCoast",
                                        "Croatia",
                                        "Cuba",
                                        "Cyprus",
                                        "CzechRepublic",
                                        "Denmark",
                                        "Djibouti",
                                        "Dominica",
                                        "DominicanRepublic",
                                        "EastTimor",
                                        "Ecuador",
                                        "Egypt",
                                        "ElSalvador",
                                        "EquatorialGuinea",
                                        "Eritrea",
                                        "Estonia",
                                        "Ethiopia",
                                        "FalklandIslands",
                                        "FaroeIslands",
                                        "Fiji",
                                        "Finland",
                                        "France",
                                        "Guernsey",
                                        "FrenchGuiana",
                                        "FrenchPolynesia",
                                        "FrenchSouthernTerritories",
                                        "Gabon",
                                        "Gambia",
                                        "Georgia",
                                        "Germany",
                                        "Ghana",
                                        "Gibraltar",
                                        "Greece",
                                        "Greenland",
                                        "Grenada",
                                        "Guadeloupe",
                                        "Guam",
                                        "Guatemala",
                                        "Guinea",
                                        "GuineaBissau",
                                        "Guyana",
                                        "Haiti",
                                        "HeardAndMcDonaldIslands",
                                        "Honduras",
                                        "HongKong",
                                        "Hungary",
                                        "Iceland",
                                        "India",
                                        "Indonesia",
                                        "Iran",
                                        "Iraq",
                                        "Ireland",
                                        "Israel",
                                        "Italy",
                                        "Jamaica",
                                        "Japan",
                                        "Jordan",
                                        "Kazakhstan",
                                        "Kenya",
                                        "Kiribati",
                                        "NorthKorea",
                                        "SouthKorea",
                                        "Kuwait",
                                        "Kyrgyzstan",
                                        "Laos",
                                        "Latvia",
                                        "Lebanon",
                                        "Lesotho",
                                        "Liberia",
                                        "Libya",
                                        "Liechtenstein",
                                        "Lithuania",
                                        "Luxembourg",
                                        "Macau",
                                        "Macedonia",
                                        "Madagascar",
                                        "Malawi",
                                        "Malaysia",
                                        "Maldives",
                                        "Mali",
                                        "Malta",
                                        "MarshallIslands",
                                        "Martinique",
                                        "Mauritania",
                                        "Mauritius",
                                        "Mayotte",
                                        "Mexico",
                                        "Micronesia",
                                        "Moldova",
                                        "Monaco",
                                        "Mongolia",
                                        "Montserrat",
                                        "Morocco",
                                        "Mozambique",
                                        "Myanmar",
                                        "Namibia",
                                        "NauruCountry",
                                        "Nepal",
                                        "Netherlands",
                                        "CuraSao",
                                        "NewCaledonia",
                                        "NewZealand",
                                        "Nicaragua",
                                        "Niger",
                                        "Nigeria",
                                        "Niue",
                                        "NorfolkIsland",
                                        "NorthernMarianaIslands",
                                        "Norway",
                                        "Oman",
                                        "Pakistan",
                                        "Palau",
                                        "PalestinianTerritories",
                                        "Panama",
                                        "PapuaNewGuinea",
                                        "Paraguay",
                                        "Peru",
                                        "Philippines",
                                        "Pitcairn",
                                        "Poland",
                                        "Portugal",
                                        "PuertoRico",
                                        "Qatar",
                                        "Reunion",
                                        "Romania",
                                        "Russia",
                                        "Rwanda",
                                        "SaintKittsAndNevis",
                                        "SaintLucia",
                                        "SaintVincentAndTheGrenadines",
                                        "Samoa",
                                        "SanMarino",
                                        "SaoTomeAndPrincipe",
                                        "SaudiArabia",
                                        "Senegal",
                                        "Seychelles",
                                        "SierraLeone",
                                        "Singapore",
                                        "Slovakia",
                                        "Slovenia",
                                        "SolomonIslands",
                                        "Somalia",
                                        "SouthAfrica",
                                        "SouthGeorgiaAndTheSouthSandwichIslands",
                                        "Spain",
                                        "SriLanka",
                                        "SaintHelena",
                                        "SaintPierreAndMiquelon",
                                        "Sudan",
                                        "Suriname",
                                        "SvalbardAndJanMayenIslands",
                                        "Swaziland",
                                        "Sweden",
                                        "Switzerland",
                                        "Syria",
                                        "Taiwan",
                                        "Tajikistan",
                                        "Tanzania",
                                        "Thailand",
                                        "Togo",
                                        "TokelauCountry",
                                        "Tonga",
                                        "TrinidadAndTobago",
                                        "Tunisia",
                                        "Turkey",
                                        "Turkmenistan",
                                        "TurksAndCaicosIslands",
                                        "TuvaluCountry",
                                        "Uganda",
                                        "Ukraine",
                                        "UnitedArabEmirates",
                                        "UnitedKingdom",
                                        "UnitedStates",
                                        "UnitedStatesMinorOutlyingIslands",
                                        "Uruguay",
                                        "Uzbekistan",
                                        "Vanuatu",
                                        "VaticanCityState",
                                        "Venezuela",
                                        "Vietnam",
                                        "BritishVirginIslands",
                                        "UnitedStatesVirginIslands",
                                        "WallisAndFutunaIslands",
                                        "WesternSahara",
                                        "Yemen",
                                        "CanaryIslands",
                                        "Zambia",
                                        "Zimbabwe",
                                        "ClippertonIsland",
                                        "Montenegro",
                                        "Serbia",
                                        "SaintBarthelemy",
                                        "SaintMartin",
                                        "LatinAmericaAndTheCaribbean",
                                        "AscensionIsland",
                                        "AlandIslands",
                                        "DiegoGarcia",
                                        "CeutaAndMelilla",
                                        "IsleOfMan",
                                        "Jersey",
                                        "TristanDaCunha",
                                        "SouthSudan",
                                        "Bonaire",
                                        "SintMaarten",
                                        "Kosovo",
                                        "EuropeanUnion",
                                        "OutlyingOceania",
                                        "Tokelau",
                                        "Tuvalu",
                                        "DemocraticRepublicOfCongo",
                                        "PeoplesRepublicOfCongo",
                                        "DemocraticRepublicOfKorea",
                                        "RepublicOfKorea",
                                        "RussianFederation",
                                        "SyrianArabRepublic",
                                        "LastCountry"
                                    ],
                                    "name": "Country",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "MetricSystem",
                                        "ImperialUSSystem",
                                        "ImperialUKSystem",
                                        "ImperialSystem"
                                    ],
                                    "name": "MeasurementSystem",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "LongFormat",
                                        "ShortFormat",
                                        "NarrowFormat"
                                    ],
                                    "name": "FormatType",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "DefaultNumberOptions",
                                        "OmitGroupSeparator",
                                        "RejectGroupSeparator",
                                        "OmitLeadingZeroInExponent",
                                        "RejectLeadingZeroInExponent",
                                        "IncludeTrailingZeroesAfterDot",
                                        "RejectTrailingZeroesAfterDot"
                                    ],
                                    "name": "NumberOption",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "FloatingPointShortest"
                                    ],
                                    "name": "FloatingPointPrecisionOption",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "CurrencyIsoCode",
                                        "CurrencySymbol",
                                        "CurrencyDisplayName"
                                    ],
                                    "name": "CurrencySymbolFormat",
                                    "type": "enum"
                                },
                                {
                                    "checked": 0,
                                    "enumerators": [
                                        "DataSizeBase1000-",
                                        "DataSizeSIQuantifiers-",
                                        "DataSizeIecFormat-",
                                        "DataSizeTraditionalFormat-",
                                        "DataSizeSIFormat-"
                                    ],
                                    "name": "DataSizeFormat",
                                    "type": "enum"
                                },
                                {
                                    "name": "QLocale",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLocale",
                                    "signature": "const QString &",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "QLocale::AnyCountry",
                                    "name": "QLocale",
                                    "signature": "QLocale::Language;QLocale::Country",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLocale",
                                    "signature": "QLocale::Language;QLocale::Script;QLocale::Country",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLocale",
                                    "signature": "const QLocale &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QLocale &&->QLocale &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QLocale &->QLocale &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QLocale",
                                    "type": "destructor"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QLocale &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "language",
                                    "signature": "->QLocale::Language",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "script",
                                    "signature": "->QLocale::Script",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "country",
                                    "signature": "->QLocale::Country",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "name",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bcp47Name",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nativeLanguageName",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nativeCountryName",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toShort",
                                    "signature": "const QString &;bool *->short",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUShort",
                                    "signature": "const QString &;bool *->ushort",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toInt",
                                    "signature": "const QString &;bool *->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUInt",
                                    "signature": "const QString &;bool *->uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLongLong",
                                    "signature": "const QString &;bool *->qlonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toULongLong",
                                    "signature": "const QString &;bool *->qulonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toFloat",
                                    "signature": "const QString &;bool *->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDouble",
                                    "signature": "const QString &;bool *->double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toShort",
                                    "signature": "const QStringRef &;bool *->short",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUShort",
                                    "signature": "const QStringRef &;bool *->ushort",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toInt",
                                    "signature": "const QStringRef &;bool *->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUInt",
                                    "signature": "const QStringRef &;bool *->uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLongLong",
                                    "signature": "const QStringRef &;bool *->qlonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toULongLong",
                                    "signature": "const QStringRef &;bool *->qulonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toFloat",
                                    "signature": "const QStringRef &;bool *->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDouble",
                                    "signature": "const QStringRef &;bool *->double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toShort",
                                    "signature": "QStringView;bool *->short",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUShort",
                                    "signature": "QStringView;bool *->ushort",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toInt",
                                    "signature": "QStringView;bool *->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUInt",
                                    "signature": "QStringView;bool *->uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLongLong",
                                    "signature": "QStringView;bool *->qlonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toULongLong",
                                    "signature": "QStringView;bool *->qulonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toFloat",
                                    "signature": "QStringView;bool *->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDouble",
                                    "signature": "QStringView;bool *->double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "qlonglong->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "qulonglong->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "short->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "ushort->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "int->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "uint->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "6;'g'",
                                    "name": "toString",
                                    "signature": "double;char;int->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "6;'g'",
                                    "name": "toString",
                                    "signature": "float;char;int->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "const QDate &;const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "const QTime &;const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "const QDateTime &;const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "const QDate &;QStringView->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "const QTime &;QStringView->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "const QDateTime &;QStringView->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "const QDate &;QLocale::FormatType->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "const QTime &;QLocale::FormatType->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "const QDateTime &;QLocale::FormatType->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QLocale::LongFormat",
                                    "name": "dateFormat",
                                    "signature": "QLocale::FormatType->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QLocale::LongFormat",
                                    "name": "timeFormat",
                                    "signature": "QLocale::FormatType->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QLocale::LongFormat",
                                    "name": "dateTimeFormat",
                                    "signature": "QLocale::FormatType->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QLocale::LongFormat",
                                    "name": "toDate",
                                    "signature": "const QString &;QLocale::FormatType->QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QLocale::LongFormat",
                                    "name": "toTime",
                                    "signature": "const QString &;QLocale::FormatType->QTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QLocale::LongFormat",
                                    "name": "toDateTime",
                                    "signature": "const QString &;QLocale::FormatType->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDate",
                                    "signature": "const QString &;const QString &->QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toTime",
                                    "signature": "const QString &;const QString &->QTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDateTime",
                                    "signature": "const QString &;const QString &->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "decimalPoint",
                                    "signature": "->QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "groupSeparator",
                                    "signature": "->QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "percent",
                                    "signature": "->QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "zeroDigit",
                                    "signature": "->QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "negativeSign",
                                    "signature": "->QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "positiveSign",
                                    "signature": "->QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exponential",
                                    "signature": "->QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QLocale::LongFormat",
                                    "name": "monthName",
                                    "signature": "int;QLocale::FormatType->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QLocale::LongFormat",
                                    "name": "standaloneMonthName",
                                    "signature": "int;QLocale::FormatType->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QLocale::LongFormat",
                                    "name": "dayName",
                                    "signature": "int;QLocale::FormatType->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QLocale::LongFormat",
                                    "name": "standaloneDayName",
                                    "signature": "int;QLocale::FormatType->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "firstDayOfWeek",
                                    "signature": "->Qt::DayOfWeek",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "weekdays",
                                    "signature": "->QList<Qt::DayOfWeek>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "amText",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pmText",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "measurementSystem",
                                    "signature": "->QLocale::MeasurementSystem",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textDirection",
                                    "signature": "->Qt::LayoutDirection",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUpper",
                                    "signature": "const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLower",
                                    "signature": "const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currencySymbol",
                                    "signature": "QLocale::CurrencySymbolFormat->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "signature": "qlonglong;const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "signature": "qulonglong;const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "signature": "short;const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "signature": "ushort;const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QString()",
                                    "name": "toCurrencyString",
                                    "signature": "int;const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "signature": "uint;const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QString()",
                                    "name": "toCurrencyString",
                                    "signature": "double;const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "signature": "double;const QString &;int->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QString()",
                                    "name": "toCurrencyString",
                                    "signature": "float;const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "signature": "float;const QString &;int->QString",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QLocale::DataSizeIecFormat;2",
                                    "name": "formattedDataSize",
                                    "signature": "qint64;int;QLocale::DataSizeFormats->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "uiLanguages",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QLocale &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QLocale &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "languageToString",
                                    "signature": "QLocale::Language->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "countryToString",
                                    "signature": "QLocale::Country->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "scriptToString",
                                    "signature": "QLocale::Script->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setDefault",
                                    "signature": "const QLocale &->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "c",
                                    "signature": "->QLocale",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "system",
                                    "signature": "->QLocale",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "matchingLocales",
                                    "signature": "QLocale::Language;QLocale::Script;QLocale::Country->QList<QLocale>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "countriesForLanguage",
                                    "signature": "QLocale::Language->QList<QLocale::Country>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setNumberOptions",
                                    "signature": "QLocale::NumberOptions->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "numberOptions",
                                    "signature": "->QLocale::NumberOptions",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "StandardQuotation",
                                        "AlternateQuotation"
                                    ],
                                    "name": "QuotationStyle",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "defaults": "QLocale::StandardQuotation",
                                    "name": "quoteString",
                                    "signature": "const QString &;QLocale::QuotationStyle->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QLocale::StandardQuotation",
                                    "name": "quoteString",
                                    "signature": "const QStringRef &;QLocale::QuotationStyle->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "createSeparatedList",
                                    "signature": "const QStringList &->QString",
                                    "type": "function"
                                }
                            ],
                            "name": "QLocale",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QLocale &;QLocale &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QLocale::NumberOption;QLocale::NumberOption->QLocale::NumberOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QLocale::NumberOption;QLocale::NumberOptions->QLocale::NumberOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QLocale::NumberOptions::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QLocale &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QLocale &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QLocale &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QLocale>",
                    "name": "locale",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "checked": 0,
                                    "enumerators": [
                                        "MinUtcOffsetSecs",
                                        "MaxUtcOffsetSecs"
                                    ],
                                    "name": "",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "StandardTime",
                                        "DaylightTime",
                                        "GenericTime"
                                    ],
                                    "name": "TimeType",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "DefaultName",
                                        "LongName",
                                        "ShortName",
                                        "OffsetName"
                                    ],
                                    "name": "NameType",
                                    "type": "enum"
                                },
                                {
                                    "name": "QTimeZone",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTimeZone",
                                    "signature": "const QByteArray &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTimeZone",
                                    "signature": "int",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "QString();QLocale::AnyCountry",
                                    "name": "QTimeZone",
                                    "signature": "const QByteArray &;int;const QString &;const QString &;QLocale::Country;const QString &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTimeZone",
                                    "signature": "const QTimeZone &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QTimeZone",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QTimeZone &->QTimeZone &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QTimeZone &&->QTimeZone &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QTimeZone &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QTimeZone &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QTimeZone &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "id",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "country",
                                    "signature": "->QLocale::Country",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "comment",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QLocale(); QTimeZone::DefaultName",
                                    "name": "displayName",
                                    "signature": "const QDateTime &;QTimeZone::NameType;const QLocale &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QLocale(); QTimeZone::DefaultName",
                                    "name": "displayName",
                                    "signature": "QTimeZone::TimeType;QTimeZone::NameType;const QLocale &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "abbreviation",
                                    "signature": "const QDateTime &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "offsetFromUtc",
                                    "signature": "const QDateTime &->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "standardTimeOffset",
                                    "signature": "const QDateTime &->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "daylightTimeOffset",
                                    "signature": "const QDateTime &->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasDaylightTime",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDaylightTime",
                                    "signature": "const QDateTime &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "offsetData",
                                    "signature": "const QDateTime &->QTimeZone::OffsetData",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasTransitions",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nextTransition",
                                    "signature": "const QDateTime &->QTimeZone::OffsetData",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "previousTransition",
                                    "signature": "const QDateTime &->QTimeZone::OffsetData",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transitions",
                                    "signature": "const QDateTime &;const QDateTime &->QTimeZone::OffsetDataList",
                                    "type": "function"
                                },
                                {
                                    "name": "systemTimeZoneId",
                                    "signature": "->QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "systemTimeZone",
                                    "signature": "->QTimeZone",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "utc",
                                    "signature": "->QTimeZone",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isTimeZoneIdAvailable",
                                    "signature": "const QByteArray &->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "availableTimeZoneIds",
                                    "signature": "->QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "availableTimeZoneIds",
                                    "signature": "QLocale::Country->QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "availableTimeZoneIds",
                                    "signature": "int->QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "ianaIdToWindowsId",
                                    "signature": "const QByteArray &->QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "windowsIdToDefaultIanaId",
                                    "signature": "const QByteArray &->QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "windowsIdToDefaultIanaId",
                                    "signature": "const QByteArray &;QLocale::Country->QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "windowsIdToIanaIds",
                                    "signature": "const QByteArray &->QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "windowsIdToIanaIds",
                                    "signature": "const QByteArray &;QLocale::Country->QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QTimeZone",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QTimeZone &;QTimeZone &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QTimeZone &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QTimeZone &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QTimeZone &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QTimeZone>",
                    "name": "timezone",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "const": true,
                                    "name": "metaObject",
                                    "signature": "->const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "tr",
                                    "signature": "const char *;const char *;int->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "trUtf8",
                                    "signature": "const char *;const char *;int->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "(QObject*)nullptr",
                                    "name": "QObject",
                                    "signature": "QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QObject",
                                    "type": "destructor"
                                },
                                {
                                    "name": "event",
                                    "signature": "QEvent *->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "eventFilter",
                                    "signature": "QObject *;QEvent *->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "objectName",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setObjectName",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isWidgetType",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isWindowType",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "signalsBlocked",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "blockSignals",
                                    "signature": "bool->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "thread",
                                    "signature": "->QThread *",
                                    "type": "function"
                                },
                                {
                                    "name": "moveToThread",
                                    "signature": "QThread *->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::CoarseTimer",
                                    "name": "startTimer",
                                    "signature": "int;Qt::TimerType->int",
                                    "type": "function"
                                },
                                {
                                    "name": "startTimer",
                                    "signature": "std::chrono::milliseconds;Qt::TimerType->int",
                                    "type": "function"
                                },
                                {
                                    "name": "killTimer",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "children",
                                    "signature": "->const QObjectList &",
                                    "type": "function"
                                },
                                {
                                    "name": "setParent",
                                    "signature": "QObject *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "installEventFilter",
                                    "signature": "QObject *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "removeEventFilter",
                                    "signature": "QObject *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "connect",
                                    "signature": "const QObject *;const char *;const QObject *;const char *;Qt::ConnectionType->QMetaObject::Connection",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "connect",
                                    "signature": "const QObject *;const QMetaMethod &;const QObject *;const QMetaMethod &;Qt::ConnectionType->QMetaObject::Connection",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "connect",
                                    "signature": "const QObject *;const char *;const char *;Qt::ConnectionType->QMetaObject::Connection",
                                    "type": "function"
                                },
                                {
                                    "name": "disconnect",
                                    "signature": "const QObject *;const char *;const QObject *;const char *->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "disconnect",
                                    "signature": "const QObject *;const QMetaMethod &;const QObject *;const QMetaMethod &->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "disconnect",
                                    "signature": "const char *;const QObject *;const char *->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "disconnect",
                                    "signature": "const QObject *;const char *->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "disconnect",
                                    "signature": "const QMetaObject::Connection &->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dumpObjectTree",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dumpObjectInfo",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setProperty",
                                    "signature": "const char *;const QVariant &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "property",
                                    "signature": "const char *->QVariant",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dynamicPropertyNames",
                                    "signature": "->QList<QByteArray>",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "registerUserData",
                                    "signature": "->uint",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "setUserData",
                                    "signature": "uint;QObjectUserData *->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "userData",
                                    "signature": "uint->QObjectUserData *",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "destroyed",
                                    "signature": "QObject *->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "objectNameChanged",
                                    "signature": "const QString &;QObject::QPrivateSignal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "parent",
                                    "signature": "->QObject *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inherits",
                                    "signature": "const char *->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "deleteLater",
                                    "signature": "->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QObject",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QObject *->QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QSignalBlocker",
                                    "signature": "QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSignalBlocker",
                                    "signature": "QObject &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QSignalBlocker",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QSignalBlocker",
                                    "signature": "QSignalBlocker &&",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QSignalBlocker &&->QSignalBlocker &",
                                    "type": "function"
                                },
                                {
                                    "name": "reblock",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "unblock",
                                    "signature": "->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QSignalBlocker",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QObject>",
                    "name": "object",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        "VarUnknown",
                                        "NCS",
                                        "DCE",
                                        "Microsoft",
                                        "Reserved"
                                    ],
                                    "name": "Variant",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "VerUnknown",
                                        "Time",
                                        "EmbeddedPOSIX",
                                        "Md5",
                                        "Name",
                                        "Random",
                                        "Sha1"
                                    ],
                                    "name": "Version",
                                    "type": "enum"
                                },
                                {
                                    "name": "QUuid",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QUuid",
                                    "signature": "const QUuid &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QUuid",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QUuid",
                                    "signature": "uint;ushort;ushort;uchar;uchar;uchar;uchar;uchar;uchar;uchar;uchar",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QUuid",
                                    "signature": "const QString &",
                                    "type": "constructor"
                                },
                                {
                                    "checked": 0,
                                    "name": "fromString",
                                    "signature": "QStringView->QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "fromString",
                                    "signature": "QLatin1String->QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "QUuid",
                                    "signature": "const char *",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "QUuid",
                                    "signature": "const QByteArray &",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "toByteArray",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRfc4122",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "fromRfc4122",
                                    "signature": "const QByteArray &->QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QUuid &->QUuid &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QUuid &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QUuid &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "signature": "const QUuid &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "signature": "const QUuid &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "QUuid",
                                    "signature": "const GUID &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const GUID &->QUuid &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const GUID &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const GUID &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "createUuid",
                                    "signature": "->QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "createUuidV3",
                                    "signature": "const QUuid &;const QByteArray &->QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "createUuidV5",
                                    "signature": "const QUuid &;const QByteArray &->QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "createUuidV3",
                                    "signature": "const QUuid &;const QString &->QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "createUuidV5",
                                    "signature": "const QUuid &;const QString &->QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "variant",
                                    "signature": "->QUuid::Variant",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "version",
                                    "signature": "->QUuid::Version",
                                    "type": "function"
                                }
                            ],
                            "name": "QUuid",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QUuid &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QUuid &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QUuid &->QDebug",
                            "type": "function"
                        },
                        {
                            "name": "qHash",
                            "signature": "const QUuid &;uint->uint",
                            "type": "function"
                        },
                        {
                            "name": "operator<=",
                            "signature": "const QUuid &;const QUuid &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>=",
                            "signature": "const QUuid &;const QUuid &->bool",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QUuid>",
                    "name": "uuid",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "cppincludes": "yasl/core/variant-functions.h",
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        "Invalid",
                                        "Bool",
                                        "Int",
                                        "UInt",
                                        "LongLong",
                                        "ULongLong",
                                        "Double",
                                        "Char",
                                        "Map",
                                        "List",
                                        "String",
                                        "StringList",
                                        "ByteArray",
                                        "BitArray",
                                        "Date",
                                        "Time",
                                        "DateTime",
                                        "Url",
                                        "Locale",
                                        "Rect",
                                        "RectF",
                                        "Size",
                                        "SizeF",
                                        "Line",
                                        "LineF",
                                        "Point",
                                        "PointF",
                                        "RegExp",
                                        "RegularExpression",
                                        "Hash",
                                        "EasingCurve",
                                        "Uuid",
                                        "ModelIndex",
                                        "PersistentModelIndex",
                                        "LastCoreType",
                                        "Font",
                                        "Pixmap",
                                        "Brush",
                                        "Color",
                                        "Palette",
                                        "Image",
                                        "Polygon",
                                        "Region",
                                        "Bitmap",
                                        "Cursor",
                                        "KeySequence",
                                        "Pen",
                                        "TextLength",
                                        "TextFormat",
                                        "Matrix",
                                        "Transform",
                                        "Matrix4x4",
                                        "Vector2D",
                                        "Vector3D",
                                        "Vector4D",
                                        "Quaternion",
                                        "PolygonF",
                                        "Icon",
                                        "LastGuiType",
                                        "SizePolicy",
                                        "UserType",
                                        "LastType"
                                    ],
                                    "name": "Type",
                                    "type": "enum"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QVariant",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "QVariant::Type",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "int;const void *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "int;const void *;uint",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QVariant &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "QDataStream &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "int",
                                    "type": "constructor"
                                },
                                {
                                    "checked": 0,
                                    "name": "QVariant",
                                    "signature": "uint",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "qlonglong",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "qulonglong",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "bool",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "double",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "float",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const char *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QByteArray &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QBitArray &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QString &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "QLatin1String",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QStringList &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "QChar",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QDate &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QTime &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QDateTime &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QList<QVariant> &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QMap<QString, QVariant> &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QHash<QString, QVariant> &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QSize &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QSizeF &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QPoint &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QPointF &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QLine &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QLineF &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QRect &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QRectF &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QLocale &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QRegExp &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QRegularExpression &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QUrl &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QEasingCurve &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QUuid &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QModelIndex &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QPersistentModelIndex &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QJsonValue &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QJsonObject &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QJsonArray &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "const QJsonDocument &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QVariant &->QVariant &",
                                    "type": "function"
                                },
                                {
                                    "name": "QVariant",
                                    "signature": "QVariant &&",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QVariant &&->QVariant &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QVariant &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "type",
                                    "signature": "->QVariant::Type",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "userType",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "typeName",
                                    "signature": "->const char *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "canConvert",
                                    "signature": "int->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "convert",
                                    "signature": "int->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "detach",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toInt",
                                    "signature": "bool *->int",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "va_toInt",
                                    "rename": "toInt",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toUInt",
                                    "signature": "bool *->uint",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toLongLong",
                                    "signature": "bool *->qlonglong",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toULongLong",
                                    "signature": "bool *->qulonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toBool",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toDouble",
                                    "signature": "bool *->double",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "va_toDouble",
                                    "rename": "toDouble",
                                    "signature": "->double",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toFloat",
                                    "signature": "bool *->float",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "va_toFloat",
                                    "rename": "toFloat",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toReal",
                                    "signature": "bool *->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toByteArray",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toBitArray",
                                    "signature": "->QBitArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toStringList",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toChar",
                                    "signature": "->QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDate",
                                    "signature": "->QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toTime",
                                    "signature": "->QTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDateTime",
                                    "signature": "->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toList",
                                    "signature": "->QList<QVariant>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toMap",
                                    "signature": "->QMap<QString, QVariant>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toHash",
                                    "signature": "->QHash<QString, QVariant>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPoint",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPointF",
                                    "signature": "->QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRect",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toSize",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toSizeF",
                                    "signature": "->QSizeF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLine",
                                    "signature": "->QLine",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLineF",
                                    "signature": "->QLineF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRectF",
                                    "signature": "->QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLocale",
                                    "signature": "->QLocale",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRegExp",
                                    "signature": "->QRegExp",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRegularExpression",
                                    "signature": "->QRegularExpression",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUrl",
                                    "signature": "->QUrl",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toEasingCurve",
                                    "signature": "->QEasingCurve",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUuid",
                                    "signature": "->QUuid",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toModelIndex",
                                    "signature": "->QModelIndex",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPersistentModelIndex",
                                    "signature": "->QPersistentModelIndex",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toJsonValue",
                                    "signature": "->QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toJsonObject",
                                    "signature": "->QJsonObject",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toJsonArray",
                                    "signature": "->QJsonArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toJsonDocument",
                                    "signature": "->QJsonDocument",
                                    "type": "function"
                                },
                                {
                                    "name": "load",
                                    "signature": "QDataStream &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "save",
                                    "signature": "QDataStream &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "typeToName",
                                    "signature": "int->const char *",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "nameToType",
                                    "signature": "const char *->QVariant::Type",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "data",
                                    "signature": "->void *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constData",
                                    "signature": "->const void *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "data",
                                    "signature": "->const void *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QVariant &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QVariant &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "signature": "const QVariant &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<=",
                                    "signature": "const QVariant &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "signature": "const QVariant &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>=",
                                    "signature": "const QVariant &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "create",
                                    "signature": "int;const void *->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "compare",
                                    "signature": "const QVariant &->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "convert",
                                    "signature": "const int;void *->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "signature": "->QVariant::DataPtr &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "data_ptr",
                                    "signature": "->const QVariant::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QVariant",
                            "type": "class"
                        },
                        {
                            "checked": 0,
                            "name": "qVariantFromValue",
                            "signature": "const QVariant &->QVariant",
                            "type": "function"
                        },
                        {
                            "checked": 0,
                            "name": "qVariantSetValue",
                            "signature": "QVariant &;const QVariant &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QVariant &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QVariant &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QVariant::Type &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QVariant::Type->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "swap",
                            "signature": "QVariant &;QVariant &->void",
                            "type": "function"
                        },
                        {
                            "checked": 0,
                            "name": "qvariant_cast",
                            "signature": "const QVariant &->QVariant",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QVariant &->QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QVariant::Type->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QVariant>",
                    "name": "variant",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "name": "qHash",
                            "signature": "const QRegularExpression &;uint->uint",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        "NoPatternOption",
                                        "CaseInsensitiveOption",
                                        "DotMatchesEverythingOption",
                                        "MultilineOption",
                                        "ExtendedPatternSyntaxOption",
                                        "InvertedGreedinessOption",
                                        "DontCaptureOption",
                                        "UseUnicodePropertiesOption",
                                        "OptimizeOnFirstUsageOption",
                                        "DontAutomaticallyOptimizeOption"
                                    ],
                                    "name": "PatternOption",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "patternOptions",
                                    "signature": "->QRegularExpression::PatternOptions",
                                    "type": "function"
                                },
                                {
                                    "name": "setPatternOptions",
                                    "signature": "QRegularExpression::PatternOptions->void",
                                    "type": "function"
                                },
                                {
                                    "name": "QRegularExpression",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "QRegularExpression::PatternOptions(QRegularExpression::NoPatternOption)",
                                    "name": "QRegularExpression",
                                    "signature": "const QString &;QRegularExpression::PatternOptions",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRegularExpression",
                                    "signature": "const QRegularExpression &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QRegularExpression",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QRegularExpression &->QRegularExpression &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QRegularExpression &&->QRegularExpression &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QRegularExpression &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pattern",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setPattern",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "patternErrorOffset",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "errorString",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "captureCount",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "namedCaptureGroups",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "NormalMatch",
                                        "PartialPreferCompleteMatch",
                                        "PartialPreferFirstMatch",
                                        "NoMatch"
                                    ],
                                    "name": "MatchType",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "NoMatchOption",
                                        "AnchoredMatchOption",
                                        "DontCheckSubjectStringMatchOption"
                                    ],
                                    "name": "MatchOption",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "defaults": "QRegularExpression::MatchOptions(QRegularExpression::NoMatchOption);QRegularExpression::NormalMatch",
                                    "name": "match",
                                    "signature": "const QString &;int;QRegularExpression::MatchType;QRegularExpression::MatchOptions->QRegularExpressionMatch",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "match",
                                    "signature": "const QStringRef &;int;QRegularExpression::MatchType;QRegularExpression::MatchOptions->QRegularExpressionMatch",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QRegularExpression::MatchOptions(QRegularExpression::NoMatchOption);QRegularExpression::NormalMatch",
                                    "name": "globalMatch",
                                    "signature": "const QString &;int;QRegularExpression::MatchType;QRegularExpression::MatchOptions->QRegularExpressionMatchIterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "optimize",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "escape",
                                    "signature": "const QString &->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QRegularExpression &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QRegularExpression &->bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QRegularExpression",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QRegularExpression &;QRegularExpression &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QRegularExpression::PatternOption;QRegularExpression::PatternOption->QRegularExpression::PatternOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QRegularExpression::PatternOption;QRegularExpression::PatternOptions->QRegularExpression::PatternOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QRegularExpression::PatternOptions::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QRegularExpression::MatchOption;QRegularExpression::MatchOption->QRegularExpression::MatchOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QRegularExpression::MatchOption;QRegularExpression::MatchOptions->QRegularExpression::MatchOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QRegularExpression::MatchOptions::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QRegularExpression &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QRegularExpression &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QRegularExpression &->QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;QRegularExpression::PatternOptions->QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QRegularExpressionMatch",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QRegularExpressionMatch",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QRegularExpressionMatch",
                                    "signature": "const QRegularExpressionMatch &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QRegularExpressionMatch &->QRegularExpressionMatch &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QRegularExpressionMatch &&->QRegularExpressionMatch &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QRegularExpressionMatch &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "regularExpression",
                                    "signature": "->QRegularExpression",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matchType",
                                    "signature": "->QRegularExpression::MatchType",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matchOptions",
                                    "signature": "->QRegularExpression::MatchOptions",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasMatch",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasPartialMatch",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastCapturedIndex",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "captured",
                                    "signature": "int->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedRef",
                                    "signature": "int->QStringRef",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedView",
                                    "signature": "int->QStringView",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "captured",
                                    "signature": "const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedRef",
                                    "signature": "const QString &->QStringRef",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "captured",
                                    "signature": "QStringView->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedRef",
                                    "signature": "QStringView->QStringRef",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedView",
                                    "signature": "QStringView->QStringView",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedTexts",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedStart",
                                    "signature": "int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedLength",
                                    "signature": "int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedEnd",
                                    "signature": "int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedStart",
                                    "signature": "const QString &->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedLength",
                                    "signature": "const QString &->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedEnd",
                                    "signature": "const QString &->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedStart",
                                    "signature": "QStringView->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedLength",
                                    "signature": "QStringView->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedEnd",
                                    "signature": "QStringView->int",
                                    "type": "function"
                                }
                            ],
                            "name": "QRegularExpressionMatch",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QRegularExpressionMatch &;QRegularExpressionMatch &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QRegularExpressionMatch &->QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QRegularExpressionMatchIterator",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QRegularExpressionMatchIterator",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QRegularExpressionMatchIterator",
                                    "signature": "const QRegularExpressionMatchIterator &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QRegularExpressionMatchIterator &->QRegularExpressionMatchIterator &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QRegularExpressionMatchIterator &&->QRegularExpressionMatchIterator &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QRegularExpressionMatchIterator &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasNext",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "next",
                                    "signature": "->QRegularExpressionMatch",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "peekNext",
                                    "signature": "->QRegularExpressionMatch",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "regularExpression",
                                    "signature": "->QRegularExpression",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matchType",
                                    "signature": "->QRegularExpression::MatchType",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matchOptions",
                                    "signature": "->QRegularExpression::MatchOptions",
                                    "type": "function"
                                }
                            ],
                            "name": "QRegularExpressionMatchIterator",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QRegularExpressionMatchIterator &;QRegularExpressionMatchIterator &->void",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QRegularExpression>",
                    "name": "regularexpression",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QObject",
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        "NoError",
                                        "AccessError",
                                        "FormatError"
                                    ],
                                    "name": "Status",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "NativeFormat",
                                        "IniFormat",
                                        "InvalidFormat",
                                        "CustomFormat1",
                                        "CustomFormat2",
                                        "CustomFormat3",
                                        "CustomFormat4",
                                        "CustomFormat5",
                                        "CustomFormat6",
                                        "CustomFormat7",
                                        "CustomFormat8",
                                        "CustomFormat9",
                                        "CustomFormat10",
                                        "CustomFormat11",
                                        "CustomFormat12",
                                        "CustomFormat13",
                                        "CustomFormat14",
                                        "CustomFormat15",
                                        "CustomFormat16"
                                    ],
                                    "name": "Format",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "UserScope",
                                        "SystemScope"
                                    ],
                                    "name": "Scope",
                                    "type": "enum"
                                },
                                {
                                    "defaults": "(QObject*)nullptr;QString()",
                                    "name": "QSettings",
                                    "signature": "const QString &;const QString &;QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QObject*)nullptr;QString()",
                                    "name": "QSettings",
                                    "signature": "QSettings::Scope;const QString &;const QString &;QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QObject*)nullptr;QString()",
                                    "name": "QSettings",
                                    "signature": "QSettings::Format;QSettings::Scope;const QString &;const QString &;QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QObject*)nullptr",
                                    "name": "QSettings",
                                    "signature": "const QString &;QSettings::Format;QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QObject*)nullptr",
                                    "name": "QSettings",
                                    "signature": "QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QSettings",
                                    "type": "destructor"
                                },
                                {
                                    "name": "clear",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "sync",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "status",
                                    "signature": "->QSettings::Status",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "isAtomicSyncRequired",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "setAtomicSyncRequired",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "beginGroup",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "endGroup",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "group",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "beginReadArray",
                                    "signature": "const QString &->int",
                                    "type": "function"
                                },
                                {
                                    "defaults": "-1",
                                    "name": "beginWriteArray",
                                    "signature": "const QString &;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "endArray",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setArrayIndex",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "allKeys",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "childKeys",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "childGroups",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isWritable",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setValue",
                                    "signature": "const QString &;const QVariant &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QVariant()",
                                    "name": "value",
                                    "signature": "const QString &;const QVariant &->QVariant",
                                    "type": "function"
                                },
                                {
                                    "name": "remove",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setFallbacksEnabled",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fallbacksEnabled",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fileName",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "format",
                                    "signature": "->QSettings::Format",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scope",
                                    "signature": "->QSettings::Scope",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "organizationName",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "applicationName",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setIniCodec",
                                    "signature": "QTextCodec *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setIniCodec",
                                    "signature": "const char *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "iniCodec",
                                    "signature": "->QTextCodec *",
                                    "type": "function"
                                },
                                {
                                    "name": "setDefaultFormat",
                                    "signature": "QSettings::Format->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "defaultFormat",
                                    "signature": "->QSettings::Format",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setSystemIniPath",
                                    "signature": "const QString &->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setUserIniPath",
                                    "signature": "const QString &->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setPath",
                                    "signature": "QSettings::Format;QSettings::Scope;const QString &->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "registerFormat",
                                    "signature": "const QString &;QSettings::ReadFunc;QSettings::WriteFunc;Qt::CaseSensitivity->QSettings::Format",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QSettings",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QSettings>",
                    "name": "settings",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QObject",
                            "elements": [
                                {
                                    "defaults": "(QObject*)nullptr",
                                    "name": "QTimer",
                                    "signature": "QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QTimer",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "isActive",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "timerId",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setInterval",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "interval",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "remainingTime",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setTimerType",
                                    "signature": "Qt::TimerType->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "timerType",
                                    "signature": "->Qt::TimerType",
                                    "type": "function"
                                },
                                {
                                    "name": "setSingleShot",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSingleShot",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "singleShot",
                                    "signature": "int;const QObject *;const char *->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "singleShot",
                                    "signature": "int;Qt::TimerType;const QObject *;const char *->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "start",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "start",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "stop",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "timeout",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setInterval",
                                    "signature": "std::chrono::milliseconds->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intervalAsDuration",
                                    "signature": "->std::chrono::milliseconds",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "remainingTimeAsDuration",
                                    "signature": "->std::chrono::milliseconds",
                                    "type": "function"
                                },
                                {
                                    "name": "singleShot",
                                    "signature": "std::chrono::milliseconds;const QObject *;const char *->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "singleShot",
                                    "signature": "std::chrono::milliseconds;Qt::TimerType;const QObject *;const char *->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "start",
                                    "signature": "std::chrono::milliseconds->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QTimer",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QTimer>",
                    "name": "timer",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QObject",
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        "NotOpen",
                                        "ReadOnly",
                                        "WriteOnly",
                                        "ReadWrite",
                                        "Append",
                                        "Truncate",
                                        "Text",
                                        "Unbuffered"
                                    ],
                                    "name": "OpenModeFlag",
                                    "type": "enum"
                                },
                                {
                                    "checked": 0,
                                    "name": "QIODevice",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "checked": 0,
                                    "name": "QIODevice",
                                    "signature": "QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QIODevice",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "openMode",
                                    "signature": "->QIODevice::OpenMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextModeEnabled",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTextModeEnabled",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isOpen",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isReadable",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isWritable",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSequential",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "readChannelCount",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "writeChannelCount",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentReadChannel",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentReadChannel",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentWriteChannel",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentWriteChannel",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "signature": "QIODevice::OpenMode->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "close",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pos",
                                    "signature": "->qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "signature": "->qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "seek",
                                    "signature": "qint64->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "atEnd",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "reset",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bytesAvailable",
                                    "signature": "->qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bytesToWrite",
                                    "signature": "->qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "read",
                                    "signature": "char *;qint64->qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "read",
                                    "signature": "qint64->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "readAll",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "readLine",
                                    "signature": "char *;qint64->qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "readLine",
                                    "signature": "qint64->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "canReadLine",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "startTransaction",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "commitTransaction",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "rollbackTransaction",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTransactionStarted",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "write",
                                    "signature": "const char *;qint64->qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "write",
                                    "signature": "const char *->qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "write",
                                    "signature": "const QByteArray &->qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "peek",
                                    "signature": "char *;qint64->qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "peek",
                                    "signature": "qint64->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "skip",
                                    "signature": "qint64->qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "waitForReadyRead",
                                    "signature": "int->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "waitForBytesWritten",
                                    "signature": "int->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "ungetChar",
                                    "signature": "char->void",
                                    "type": "function"
                                },
                                {
                                    "name": "putChar",
                                    "signature": "char->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "getChar",
                                    "signature": "char *->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "errorString",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "readyRead",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "channelReadyRead",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "bytesWritten",
                                    "signature": "qint64->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "channelBytesWritten",
                                    "signature": "int;qint64->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "aboutToClose",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "readChannelFinished",
                                    "signature": "->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QIODevice",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "signature": "QIODevice::OpenModeFlag;QIODevice::OpenModeFlag->QIODevice::OpenMode",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QIODevice::OpenModeFlag;QIODevice::OpenMode->QIODevice::OpenMode",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QIODevice::OpenMode::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;QIODevice::OpenMode->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QIODevice>",
                    "name": "iodevice",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QIODevice",
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        "NoError",
                                        "ReadError",
                                        "WriteError",
                                        "FatalError",
                                        "ResourceError",
                                        "OpenError",
                                        "AbortError",
                                        "TimeOutError",
                                        "UnspecifiedError",
                                        "RemoveError",
                                        "RenameError",
                                        "PositionError",
                                        "ResizeError",
                                        "PermissionsError",
                                        "CopyError"
                                    ],
                                    "name": "FileError",
                                    "type": "enum"
                                },
                                {
                                    "checked": 0,
                                    "enumerators": [
                                        "FileAccessTime-",
                                        "FileBirthTime-",
                                        "FileMetadataChangeTime-",
                                        "FileModificationTime-"
                                    ],
                                    "name": "FileTime",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "ReadOwner",
                                        "WriteOwner",
                                        "ExeOwner",
                                        "ReadUser",
                                        "WriteUser",
                                        "ExeUser",
                                        "ReadGroup",
                                        "WriteGroup",
                                        "ExeGroup",
                                        "ReadOther",
                                        "WriteOther",
                                        "ExeOther"
                                    ],
                                    "name": "Permission",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "AutoCloseHandle",
                                        "DontCloseHandle"
                                    ],
                                    "name": "FileHandleFlag",
                                    "type": "enum"
                                },
                                {
                                    "name": "~QFileDevice",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "error",
                                    "signature": "->QFileDevice::FileError",
                                    "type": "function"
                                },
                                {
                                    "name": "unsetError",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "close",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSequential",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "handle",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fileName",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pos",
                                    "signature": "->qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "seek",
                                    "signature": "qint64->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "atEnd",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "flush",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "signature": "->qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "resize",
                                    "signature": "qint64->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "permissions",
                                    "signature": "->QFileDevice::Permissions",
                                    "type": "function"
                                },
                                {
                                    "name": "setPermissions",
                                    "signature": "QFileDevice::Permissions->bool",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "NoOptions",
                                        "MapPrivateOption"
                                    ],
                                    "name": "MemoryMapFlags",
                                    "type": "enum"
                                },
                                {
                                    "checked": 0,
                                    "name": "map",
                                    "signature": "qint64;qint64;QFileDevice::MemoryMapFlags->uchar *",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "unmap",
                                    "signature": "uchar *->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fileTime",
                                    "signature": "QFileDevice::FileTime->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "name": "setFileTime",
                                    "signature": "const QDateTime &;QFileDevice::FileTime->bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QFileDevice",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "signature": "QFileDevice::Permission;QFileDevice::Permission->QFileDevice::Permissions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QFileDevice::Permission;QFileDevice::Permissions->QFileDevice::Permissions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QFileDevice::Permissions::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "yasl/core/iodevice.h,<QFileDevice>",
                    "name": "filedevice",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QFileDevice",
                            "elements": [
                                {
                                    "name": "QFile",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFile",
                                    "signature": "const QString &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFile",
                                    "signature": "QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFile",
                                    "signature": "const QString &;QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFile",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "fileName",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setFileName",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "encodeName",
                                    "signature": "const QString &->QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "decodeName",
                                    "signature": "const QByteArray &->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "decodeName",
                                    "signature": "const char *->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exists",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "exists",
                                    "signature": "const QString &->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "readLink",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "readLink",
                                    "signature": "const QString &->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "symLinkTarget",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "symLinkTarget",
                                    "signature": "const QString &->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "remove",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "remove",
                                    "signature": "const QString &->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "rename",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "rename",
                                    "signature": "const QString &;const QString &->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "link",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "link",
                                    "signature": "const QString &;const QString &->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "copy",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "copy",
                                    "signature": "const QString &;const QString &->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "signature": "QIODevice::OpenMode->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "signature": "FILE *;QIODevice::OpenMode;QFileDevice::FileHandleFlags->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "signature": "int;QIODevice::OpenMode;QFileDevice::FileHandleFlags->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "signature": "->qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "resize",
                                    "signature": "qint64->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "resize",
                                    "signature": "const QString &;qint64->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "permissions",
                                    "signature": "->QFileDevice::Permissions",
                                    "type": "function"
                                },
                                {
                                    "name": "permissions",
                                    "signature": "const QString &->QFileDevice::Permissions",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setPermissions",
                                    "signature": "QFileDevice::Permissions->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setPermissions",
                                    "signature": "const QString &;QFileDevice::Permissions->bool",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QFile",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QFile>",
                    "name": "file",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        "None",
                                        "Timer",
                                        "MouseButtonPress",
                                        "MouseButtonRelease",
                                        "MouseButtonDblClick",
                                        "MouseMove",
                                        "KeyPress",
                                        "KeyRelease",
                                        "FocusIn",
                                        "FocusOut",
                                        "FocusAboutToChange",
                                        "Enter",
                                        "Leave",
                                        "Paint",
                                        "Move",
                                        "Resize",
                                        "Create",
                                        "Destroy",
                                        "Show",
                                        "Hide",
                                        "Close",
                                        "Quit",
                                        "ParentChange",
                                        "ParentAboutToChange",
                                        "ThreadChange",
                                        "WindowActivate",
                                        "WindowDeactivate",
                                        "ShowToParent",
                                        "HideToParent",
                                        "Wheel",
                                        "WindowTitleChange",
                                        "WindowIconChange",
                                        "ApplicationWindowIconChange",
                                        "ApplicationFontChange",
                                        "ApplicationLayoutDirectionChange",
                                        "ApplicationPaletteChange",
                                        "PaletteChange",
                                        "Clipboard",
                                        "Speech",
                                        "MetaCall",
                                        "SockAct",
                                        "WinEventAct",
                                        "DeferredDelete",
                                        "DragEnter",
                                        "DragMove",
                                        "DragLeave",
                                        "Drop",
                                        "DragResponse",
                                        "ChildAdded",
                                        "ChildPolished",
                                        "ChildRemoved",
                                        "ShowWindowRequest",
                                        "PolishRequest",
                                        "Polish",
                                        "LayoutRequest",
                                        "UpdateRequest",
                                        "UpdateLater",
                                        "EmbeddingControl",
                                        "ActivateControl",
                                        "DeactivateControl",
                                        "ContextMenu",
                                        "InputMethod",
                                        "TabletMove",
                                        "LocaleChange",
                                        "LanguageChange",
                                        "LayoutDirectionChange",
                                        "Style",
                                        "TabletPress",
                                        "TabletRelease",
                                        "OkRequest",
                                        "HelpRequest",
                                        "IconDrag",
                                        "FontChange",
                                        "EnabledChange",
                                        "ActivationChange",
                                        "StyleChange",
                                        "IconTextChange",
                                        "ModifiedChange",
                                        "MouseTrackingChange",
                                        "WindowBlocked",
                                        "WindowUnblocked",
                                        "WindowStateChange",
                                        "ReadOnlyChange",
                                        "ToolTip",
                                        "WhatsThis",
                                        "StatusTip",
                                        "ActionChanged",
                                        "ActionAdded",
                                        "ActionRemoved",
                                        "FileOpen",
                                        "Shortcut",
                                        "ShortcutOverride",
                                        "WhatsThisClicked",
                                        "ToolBarChange",
                                        "ApplicationActivate",
                                        "ApplicationActivated",
                                        "ApplicationDeactivate",
                                        "ApplicationDeactivated",
                                        "QueryWhatsThis",
                                        "EnterWhatsThisMode",
                                        "LeaveWhatsThisMode",
                                        "ZOrderChange",
                                        "HoverEnter",
                                        "HoverLeave",
                                        "HoverMove",
                                        "AcceptDropsChange",
                                        "ZeroTimerEvent",
                                        "GraphicsSceneMouseMove",
                                        "GraphicsSceneMousePress",
                                        "GraphicsSceneMouseRelease",
                                        "GraphicsSceneMouseDoubleClick",
                                        "GraphicsSceneContextMenu",
                                        "GraphicsSceneHoverEnter",
                                        "GraphicsSceneHoverMove",
                                        "GraphicsSceneHoverLeave",
                                        "GraphicsSceneHelp",
                                        "GraphicsSceneDragEnter",
                                        "GraphicsSceneDragMove",
                                        "GraphicsSceneDragLeave",
                                        "GraphicsSceneDrop",
                                        "GraphicsSceneWheel",
                                        "KeyboardLayoutChange",
                                        "DynamicPropertyChange",
                                        "TabletEnterProximity",
                                        "TabletLeaveProximity",
                                        "NonClientAreaMouseMove",
                                        "NonClientAreaMouseButtonPress",
                                        "NonClientAreaMouseButtonRelease",
                                        "NonClientAreaMouseButtonDblClick",
                                        "MacSizeChange",
                                        "ContentsRectChange",
                                        "MacGLWindowChange",
                                        "FutureCallOut",
                                        "GraphicsSceneResize",
                                        "GraphicsSceneMove",
                                        "CursorChange",
                                        "ToolTipChange",
                                        "NetworkReplyUpdated",
                                        "GrabMouse",
                                        "UngrabMouse",
                                        "GrabKeyboard",
                                        "UngrabKeyboard",
                                        "MacGLClearDrawable",
                                        "StateMachineSignal",
                                        "StateMachineWrapped",
                                        "TouchBegin",
                                        "TouchUpdate",
                                        "TouchEnd",
                                        "NativeGesture",
                                        "RequestSoftwareInputPanel",
                                        "CloseSoftwareInputPanel",
                                        "WinIdChange",
                                        "Gesture",
                                        "GestureOverride",
                                        "ScrollPrepare",
                                        "Scroll",
                                        "Expose",
                                        "InputMethodQuery",
                                        "OrientationChange",
                                        "TouchCancel",
                                        "ThemeChange",
                                        "SockClose",
                                        "PlatformPanel",
                                        "StyleAnimationUpdate",
                                        "ApplicationStateChange",
                                        "WindowChangeInternal",
                                        "ScreenChangeInternal",
                                        "PlatformSurface",
                                        "Pointer",
                                        "TabletTrackingChange",
                                        "User",
                                        "MaxUser"
                                    ],
                                    "name": "Type",
                                    "type": "enum"
                                },
                                {
                                    "name": "QEvent",
                                    "signature": "QEvent::Type",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QEvent",
                                    "signature": "const QEvent &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QEvent",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QEvent &->QEvent &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "type",
                                    "signature": "->QEvent::Type",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "spontaneous",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAccepted",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isAccepted",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "accept",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "ignore",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "registerEventType",
                                    "signature": "int->int",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QEvent",
                            "type": "class"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QTimerEvent",
                                    "signature": "int",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QTimerEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "timerId",
                                    "signature": "->int",
                                    "type": "function"
                                }
                            ],
                            "name": "QTimerEvent",
                            "type": "class"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QChildEvent",
                                    "signature": "QEvent::Type;QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QChildEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "child",
                                    "signature": "->QObject *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "added",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "polished",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "removed",
                                    "signature": "->bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QChildEvent",
                            "type": "class"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QDynamicPropertyChangeEvent",
                                    "signature": "const QByteArray &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDynamicPropertyChangeEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "propertyName",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                }
                            ],
                            "name": "QDynamicPropertyChangeEvent",
                            "type": "class"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QDeferredDeleteEvent",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDeferredDeleteEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "loopLevel",
                                    "signature": "->int",
                                    "type": "function"
                                }
                            ],
                            "name": "QDeferredDeleteEvent",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QEvent>",
                    "name": "event",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        "Null",
                                        "Bool",
                                        "Double",
                                        "String",
                                        "Array",
                                        "Object",
                                        "Undefined"
                                    ],
                                    "name": "Type",
                                    "type": "enum"
                                },
                                {
                                    "defaults": "QJsonValue::Null",
                                    "name": "QJsonValue",
                                    "signature": "QJsonValue::Type",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonValue",
                                    "signature": "bool",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonValue",
                                    "signature": "double",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonValue",
                                    "signature": "int",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonValue",
                                    "signature": "qint64",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonValue",
                                    "signature": "const QString &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonValue",
                                    "signature": "QLatin1String",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonValue",
                                    "signature": "const char *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonValue",
                                    "signature": "const QJsonArray &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonValue",
                                    "signature": "const QJsonObject &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QJsonValue",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QJsonValue",
                                    "signature": "const QJsonValue &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QJsonValue &->QJsonValue &",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "QJsonValue",
                                    "signature": "QJsonValue &&",
                                    "type": "constructor"
                                },
                                {
                                    "checked": 0,
                                    "name": "operator=",
                                    "signature": "QJsonValue &&->QJsonValue &",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "swap",
                                    "signature": "QJsonValue &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fromVariant",
                                    "signature": "const QVariant &->QJsonValue",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVariant",
                                    "signature": "->QVariant",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "type",
                                    "signature": "->QJsonValue::Type",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isBool",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDouble",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isString",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isArray",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isObject",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isUndefined",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "false",
                                    "name": "toBool",
                                    "signature": "bool->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "0",
                                    "name": "toInt",
                                    "signature": "int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "double(0)",
                                    "name": "toDouble",
                                    "signature": "double->double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QString()",
                                    "name": "toString",
                                    "signature": "const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toArray",
                                    "signature": "->QJsonArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QJsonArray()",
                                    "name": "toArray",
                                    "signature": "const QJsonArray &->QJsonArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toObject",
                                    "signature": "->QJsonObject",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toObject",
                                    "signature": "const QJsonObject &->QJsonObject",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "operator[]",
                                    "signature": "const QString &->const QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "operator[]",
                                    "signature": "QLatin1String->const QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "operator[]",
                                    "signature": "int->const QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QJsonValue &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QJsonValue &->bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QJsonValue",
                            "type": "class"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QJsonValueRef",
                                    "signature": "QJsonArray *;int",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonValueRef",
                                    "signature": "QJsonObject *;int",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QJsonValue &->QJsonValueRef &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QJsonValueRef &->QJsonValueRef &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVariant",
                                    "signature": "->QVariant",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "type",
                                    "signature": "->QJsonValue::Type",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isBool",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDouble",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isString",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isArray",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isObject",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isUndefined",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toBool",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toInt",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDouble",
                                    "signature": "->double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toArray",
                                    "signature": "->QJsonArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toObject",
                                    "signature": "->QJsonObject",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toBool",
                                    "signature": "bool->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toInt",
                                    "signature": "int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDouble",
                                    "signature": "double->double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QJsonValue &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QJsonValue &->bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QJsonValueRef",
                            "type": "class"
                        },
                        {
                            "checked": 0,
                            "name": "swap",
                            "signature": "QJsonValue &;QJsonValue &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QJsonValue &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QJsonValue>",
                    "name": "jsonvalue",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "name": "QJsonArray",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonArray",
                                    "signature": "std::initializer_list<QJsonValue>",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QJsonArray",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QJsonArray",
                                    "signature": "const QJsonArray &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QJsonArray &->QJsonArray &",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "QJsonArray",
                                    "signature": "QJsonArray &&",
                                    "type": "constructor"
                                },
                                {
                                    "checked": 0,
                                    "name": "operator=",
                                    "signature": "QJsonArray &&->QJsonArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "fromStringList",
                                    "signature": "const QStringList &->QJsonArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromVariantList",
                                    "signature": "const QVariantList &->QJsonArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVariantList",
                                    "signature": "->QVariantList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "at",
                                    "signature": "int->QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "first",
                                    "signature": "->QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "last",
                                    "signature": "->QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "name": "prepend",
                                    "signature": "const QJsonValue &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "append",
                                    "signature": "const QJsonValue &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "removeAt",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "takeAt",
                                    "signature": "int->QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "name": "removeFirst",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "removeLast",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "signature": "int;const QJsonValue &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "replace",
                                    "signature": "int;const QJsonValue &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "signature": "const QJsonValue &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "operator[]",
                                    "signature": "int->QJsonValueRef",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "signature": "int->QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QJsonArray &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QJsonArray &->bool",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "swap",
                                    "signature": "QJsonArray &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "begin",
                                    "signature": "->QJsonArray::iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "begin",
                                    "signature": "->QJsonArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constBegin",
                                    "signature": "->QJsonArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "end",
                                    "signature": "->QJsonArray::iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "end",
                                    "signature": "->QJsonArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constEnd",
                                    "signature": "->QJsonArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "signature": "QJsonArray::iterator;const QJsonValue &->QJsonArray::iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "erase",
                                    "signature": "QJsonArray::iterator->QJsonArray::iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator+",
                                    "signature": "const QJsonValue &->QJsonArray",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "const QJsonValue &->QJsonArray &",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "operator<<",
                                    "signature": "const QJsonValue &->QJsonArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "push_back",
                                    "signature": "const QJsonValue &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "push_front",
                                    "signature": "const QJsonValue &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "pop_front",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "pop_back",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "empty",
                                    "signature": "->bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QJsonArray",
                            "type": "class"
                        },
                        {
                            "checked": 0,
                            "name": "swap",
                            "signature": "QJsonArray &;QJsonArray &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QJsonArray &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QJsonArray>",
                    "name": "jsonarray",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "name": "QJsonObject",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonObject",
                                    "signature": "std::initializer_list<QPair<QString, QJsonValue> >",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QJsonObject",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QJsonObject",
                                    "signature": "const QJsonObject &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QJsonObject &->QJsonObject &",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "QJsonObject",
                                    "signature": "QJsonObject &&",
                                    "type": "constructor"
                                },
                                {
                                    "checked": 0,
                                    "name": "operator=",
                                    "signature": "QJsonObject &&->QJsonObject &",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "swap",
                                    "signature": "QJsonObject &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fromVariantMap",
                                    "signature": "const QVariantMap &->QJsonObject",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVariantMap",
                                    "signature": "->QVariantMap",
                                    "type": "function"
                                },
                                {
                                    "name": "fromVariantHash",
                                    "signature": "const QVariantHash &->QJsonObject",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVariantHash",
                                    "signature": "->QVariantHash",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "keys",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "length",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "value",
                                    "signature": "const QString &->QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "value",
                                    "signature": "QLatin1String->QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "signature": "const QString &->QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "signature": "QLatin1String->QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "name": "operator[]",
                                    "signature": "const QString &->QJsonValueRef",
                                    "type": "function"
                                },
                                {
                                    "name": "operator[]",
                                    "signature": "QLatin1String->QJsonValueRef",
                                    "type": "function"
                                },
                                {
                                    "name": "remove",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "take",
                                    "signature": "const QString &->QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "signature": "QLatin1String->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QJsonObject &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QJsonObject &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "begin",
                                    "signature": "->QJsonObject::iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "begin",
                                    "signature": "->QJsonObject::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constBegin",
                                    "signature": "->QJsonObject::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "end",
                                    "signature": "->QJsonObject::iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "end",
                                    "signature": "->QJsonObject::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constEnd",
                                    "signature": "->QJsonObject::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "erase",
                                    "signature": "QJsonObject::iterator->QJsonObject::iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "find",
                                    "signature": "const QString &->QJsonObject::iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "find",
                                    "signature": "QLatin1String->QJsonObject::iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "find",
                                    "signature": "const QString &->QJsonObject::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "find",
                                    "signature": "QLatin1String->QJsonObject::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constFind",
                                    "signature": "const QString &->QJsonObject::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constFind",
                                    "signature": "QLatin1String->QJsonObject::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "signature": "const QString &;const QJsonValue &->QJsonObject::iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "empty",
                                    "signature": "->bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QJsonObject",
                            "type": "class"
                        },
                        {
                            "checked": 0,
                            "name": "swap",
                            "signature": "QJsonObject &;QJsonObject &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QJsonObject &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QJsonObject>",
                    "name": "jsonobject",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "name": "QJsonDocument",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonDocument",
                                    "signature": "const QJsonObject &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QJsonDocument",
                                    "signature": "const QJsonArray &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QJsonDocument",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QJsonDocument",
                                    "signature": "const QJsonDocument &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QJsonDocument &->QJsonDocument &",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "QJsonDocument",
                                    "signature": "QJsonDocument &&",
                                    "type": "constructor"
                                },
                                {
                                    "checked": 0,
                                    "name": "operator=",
                                    "signature": "QJsonDocument &&->QJsonDocument &",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "swap",
                                    "signature": "QJsonDocument &->void",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "Validate",
                                        "BypassValidation"
                                    ],
                                    "name": "DataValidation",
                                    "type": "enum"
                                },
                                {
                                    "name": "fromRawData",
                                    "signature": "const char *;int;QJsonDocument::DataValidation->QJsonDocument",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rawData",
                                    "signature": "int *->const char *",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QJsonDocument::Validate",
                                    "name": "fromBinaryData",
                                    "signature": "const QByteArray &;QJsonDocument::DataValidation->QJsonDocument",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toBinaryData",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "fromVariant",
                                    "signature": "const QVariant &->QJsonDocument",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVariant",
                                    "signature": "->QVariant",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "Indented",
                                        "Compact"
                                    ],
                                    "name": "JsonFormat",
                                    "type": "enum"
                                },
                                {
                                    "name": "fromJson",
                                    "signature": "const QByteArray &;QJsonParseError *->QJsonDocument",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toJson",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toJson",
                                    "signature": "QJsonDocument::JsonFormat->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isArray",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isObject",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "object",
                                    "signature": "->QJsonObject",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "array",
                                    "signature": "->QJsonArray",
                                    "type": "function"
                                },
                                {
                                    "name": "setObject",
                                    "signature": "const QJsonObject &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setArray",
                                    "signature": "const QJsonArray &->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "operator[]",
                                    "signature": "const QString &->const QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "operator[]",
                                    "signature": "QLatin1String->const QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "operator[]",
                                    "signature": "int->const QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QJsonDocument &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QJsonDocument &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QJsonDocument",
                            "type": "class"
                        },
                        {
                            "checked": 0,
                            "name": "swap",
                            "signature": "QJsonDocument &;QJsonDocument &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QJsonDocument &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QJsonDocument>",
                    "name": "jsondocument",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        "SystemTime",
                                        "MonotonicClock",
                                        "TickCounter",
                                        "MachAbsoluteTime",
                                        "PerformanceCounter"
                                    ],
                                    "name": "ClockType",
                                    "type": "enum"
                                },
                                {
                                    "name": "QElapsedTimer",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QElapsedTimer",
                                    "type": "destructor"
                                },
                                {
                                    "name": "clockType",
                                    "signature": "->QElapsedTimer::ClockType",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isMonotonic",
                                    "signature": "->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "start",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "restart",
                                    "signature": "->qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "invalidate",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nsecsElapsed",
                                    "signature": "->qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "elapsed",
                                    "signature": "->qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasExpired",
                                    "signature": "qint64->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "msecsSinceReference",
                                    "signature": "->qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "msecsTo",
                                    "signature": "const QElapsedTimer &->qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "secsTo",
                                    "signature": "const QElapsedTimer &->qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QElapsedTimer &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QElapsedTimer &->bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QElapsedTimer",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QElapsedTimer>",
                    "name": "elapsedtimer",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QProcessEnvironment",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QProcessEnvironment",
                                    "signature": "const QProcessEnvironment &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QProcessEnvironment",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QProcessEnvironment &&->QProcessEnvironment &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QProcessEnvironment &->QProcessEnvironment &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QProcessEnvironment &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QProcessEnvironment &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QProcessEnvironment &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "signature": "const QString &;const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "remove",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "value",
                                    "signature": "const QString &;const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toStringList",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "keys",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "signature": "const QProcessEnvironment &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "systemEnvironment",
                                    "signature": "->QProcessEnvironment",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QProcessEnvironment",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QProcessEnvironment &;QProcessEnvironment &->void",
                            "type": "function"
                        },
                        {
                            "base": "QIODevice",
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        "FailedToStart",
                                        "Crashed",
                                        "Timedout",
                                        "ReadError",
                                        "WriteError",
                                        "UnknownError"
                                    ],
                                    "name": "ProcessError",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "NotRunning",
                                        "Starting",
                                        "Running"
                                    ],
                                    "name": "ProcessState",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "StandardOutput",
                                        "StandardError"
                                    ],
                                    "name": "ProcessChannel",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "SeparateChannels",
                                        "MergedChannels",
                                        "ForwardedChannels",
                                        "ForwardedOutputChannel",
                                        "ForwardedErrorChannel"
                                    ],
                                    "name": "ProcessChannelMode",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "ManagedInputChannel",
                                        "ForwardedInputChannel"
                                    ],
                                    "name": "InputChannelMode",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "NormalExit",
                                        "CrashExit"
                                    ],
                                    "name": "ExitStatus",
                                    "type": "enum"
                                },
                                {
                                    "defaults": "(QObject*) nullptr",
                                    "name": "QProcess",
                                    "signature": "QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QProcess",
                                    "type": "destructor"
                                },
                                {
                                    "name": "start",
                                    "signature": "const QString &;const QStringList &;QIODevice::OpenMode->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QIODevice::OpenMode(QIODevice::ReadWrite)",
                                    "name": "start",
                                    "signature": "const QString &;QIODevice::OpenMode->void",
                                    "type": "function"
                                },
                                {
                                    "name": "start",
                                    "signature": "QIODevice::OpenMode->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "startDetached",
                                    "signature": "qint64 *->bool",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QIODevice::OpenMode(QIODevice::ReadWrite)",
                                    "name": "open",
                                    "signature": "QIODevice::OpenMode->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "program",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setProgram",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "arguments",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "setArguments",
                                    "signature": "const QStringList &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "readChannelMode",
                                    "signature": "->QProcess::ProcessChannelMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setReadChannelMode",
                                    "signature": "QProcess::ProcessChannelMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "processChannelMode",
                                    "signature": "->QProcess::ProcessChannelMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setProcessChannelMode",
                                    "signature": "QProcess::ProcessChannelMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inputChannelMode",
                                    "signature": "->QProcess::InputChannelMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setInputChannelMode",
                                    "signature": "QProcess::InputChannelMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "readChannel",
                                    "signature": "->QProcess::ProcessChannel",
                                    "type": "function"
                                },
                                {
                                    "name": "setReadChannel",
                                    "signature": "QProcess::ProcessChannel->void",
                                    "type": "function"
                                },
                                {
                                    "name": "closeReadChannel",
                                    "signature": "QProcess::ProcessChannel->void",
                                    "type": "function"
                                },
                                {
                                    "name": "closeWriteChannel",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setStandardInputFile",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QIODevice::OpenMode(QIODevice::Truncate)",
                                    "name": "setStandardOutputFile",
                                    "signature": "const QString &;QIODevice::OpenMode->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QIODevice::OpenMode(QIODevice::Truncate)",
                                    "name": "setStandardErrorFile",
                                    "signature": "const QString &;QIODevice::OpenMode->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setStandardOutputProcess",
                                    "signature": "QProcess *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "createProcessArgumentsModifier",
                                    "signature": "->QProcess::CreateProcessArgumentModifier",
                                    "type": "function"
                                },
                                {
                                    "name": "setCreateProcessArgumentsModifier",
                                    "signature": "QProcess::CreateProcessArgumentModifier->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "workingDirectory",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setWorkingDirectory",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setEnvironment",
                                    "signature": "const QStringList &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "environment",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "setProcessEnvironment",
                                    "signature": "const QProcessEnvironment &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "processEnvironment",
                                    "signature": "->QProcessEnvironment",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "error",
                                    "signature": "->QProcess::ProcessError",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "state",
                                    "signature": "->QProcess::ProcessState",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pid",
                                    "signature": "->Q_PID",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "processId",
                                    "signature": "->qint64",
                                    "type": "function"
                                },
                                {
                                    "defaults": "30000",
                                    "name": "waitForStarted",
                                    "signature": "int->bool",
                                    "type": "function"
                                },
                                {
                                    "defaults": "30000",
                                    "name": "waitForReadyRead",
                                    "signature": "int->bool",
                                    "type": "function"
                                },
                                {
                                    "defaults": "30000",
                                    "name": "waitForBytesWritten",
                                    "signature": "int->bool",
                                    "type": "function"
                                },
                                {
                                    "defaults": "30000",
                                    "name": "waitForFinished",
                                    "signature": "int->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "readAllStandardOutput",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "readAllStandardError",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exitCode",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exitStatus",
                                    "signature": "->QProcess::ExitStatus",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bytesAvailable",
                                    "signature": "->qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bytesToWrite",
                                    "signature": "->qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSequential",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "canReadLine",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "close",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "atEnd",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "execute",
                                    "signature": "const QString &;const QStringList &->int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "execute",
                                    "signature": "const QString &->int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "startDetached",
                                    "signature": "const QString &;const QStringList &;const QString &;qint64 *->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "startDetached",
                                    "signature": "const QString &;const QStringList &->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "startDetached",
                                    "signature": "const QString &->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "systemEnvironment",
                                    "signature": "->QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "nullDevice",
                                    "signature": "->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "terminate",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "kill",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "started",
                                    "signature": "QProcess::QPrivateSignal->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "finished",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "finished",
                                    "signature": "int;QProcess::ExitStatus->void",
                                    "type": "function"
                                },
                                {
                                    "name": "error",
                                    "signature": "QProcess::ProcessError->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "errorOccurred",
                                    "signature": "QProcess::ProcessError->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "stateChanged",
                                    "signature": "QProcess::ProcessState->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "readyReadStandardOutput",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "readyReadStandardError",
                                    "signature": "->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QProcess",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QProcess>",
                    "name": "process",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "name": "qHash",
                            "signature": "const QMimeType &;uint->uint",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QMimeType",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QMimeType",
                                    "signature": "const QMimeType &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QMimeType &->QMimeType &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QMimeType &&->QMimeType &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QMimeType &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "QMimeType",
                                    "signature": "const QMimeTypePrivate &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QMimeType",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QMimeType &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QMimeType &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDefault",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "name",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "comment",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "genericIconName",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "iconName",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "globPatterns",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "parentMimeTypes",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "allAncestors",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "aliases",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "suffixes",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "preferredSuffix",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inherits",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "filterString",
                                    "signature": "->QString",
                                    "type": "function"
                                }
                            ],
                            "name": "QMimeType",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QMimeType &;QMimeType &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QMimeType &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QMimeType>",
                    "name": "mimetype",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "checked": 1,
                                    "enumerators": [
                                        "Qt_1_0",
                                        "Qt_2_0",
                                        "Qt_2_1",
                                        "Qt_3_0",
                                        "Qt_3_1",
                                        "Qt_3_3",
                                        "Qt_4_0",
                                        "Qt_4_1",
                                        "Qt_4_2",
                                        "Qt_4_3",
                                        "Qt_4_4",
                                        "Qt_4_5",
                                        "Qt_4_6",
                                        "Qt_4_7",
                                        "Qt_4_8",
                                        "Qt_4_9",
                                        "Qt_5_0",
                                        "Qt_5_1",
                                        "Qt_5_2",
                                        "Qt_5_3",
                                        "Qt_5_4",
                                        "Qt_5_5",
                                        "Qt_5_6",
                                        "Qt_5_7",
                                        "Qt_5_8",
                                        "Qt_5_9",
                                        "Qt_5_10-",
                                        "Qt_DefaultCompiledVersion"
                                    ],
                                    "name": "Version",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "BigEndian",
                                        "LittleEndian"
                                    ],
                                    "name": "ByteOrder",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "Ok",
                                        "ReadPastEnd",
                                        "ReadCorruptData",
                                        "WriteFailed"
                                    ],
                                    "name": "Status",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "SinglePrecision",
                                        "DoublePrecision"
                                    ],
                                    "name": "FloatingPointPrecision",
                                    "type": "enum"
                                },
                                {
                                    "name": "QDataStream",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDataStream",
                                    "signature": "QIODevice *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDataStream",
                                    "signature": "QByteArray *;QIODevice::OpenMode",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDataStream",
                                    "signature": "const QByteArray &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDataStream",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "device",
                                    "signature": "->QIODevice *",
                                    "type": "function"
                                },
                                {
                                    "name": "setDevice",
                                    "signature": "QIODevice *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "unsetDevice",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "atEnd",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "status",
                                    "signature": "->QDataStream::Status",
                                    "type": "function"
                                },
                                {
                                    "name": "setStatus",
                                    "signature": "QDataStream::Status->void",
                                    "type": "function"
                                },
                                {
                                    "name": "resetStatus",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "floatingPointPrecision",
                                    "signature": "->QDataStream::FloatingPointPrecision",
                                    "type": "function"
                                },
                                {
                                    "name": "setFloatingPointPrecision",
                                    "signature": "QDataStream::FloatingPointPrecision->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "byteOrder",
                                    "signature": "->QDataStream::ByteOrder",
                                    "type": "function"
                                },
                                {
                                    "name": "setByteOrder",
                                    "signature": "QDataStream::ByteOrder->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "version",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setVersion",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "signature": "qint8 &->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "signature": "quint8 &->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "signature": "qint16 &->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "signature": "quint16 &->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "signature": "qint32 &->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "signature": "quint32 &->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "signature": "qint64 &->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "signature": "quint64 &->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "signature": "std::nullptr_t &->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "signature": "bool &->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "signature": "qfloat16 &->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "signature": "float &->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "signature": "double &->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator>>",
                                    "signature": "char *&->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "signature": "qint8->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "signature": "quint8->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "signature": "qint16->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "signature": "quint16->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "signature": "qint32->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "signature": "quint32->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "signature": "qint64->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "signature": "quint64->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "signature": "std::nullptr_t->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "signature": "bool->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "signature": "qfloat16->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "signature": "float->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "signature": "double->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator<<",
                                    "signature": "const char *->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "readBytes",
                                    "signature": "char *&;uint &->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "readRawData",
                                    "signature": "char *;int->int",
                                    "type": "function"
                                },
                                {
                                    "name": "writeBytes",
                                    "signature": "const char *;uint->QDataStream &",
                                    "type": "function"
                                },
                                {
                                    "name": "writeRawData",
                                    "signature": "const char *;int->int",
                                    "type": "function"
                                },
                                {
                                    "name": "skipRawData",
                                    "signature": "int->int",
                                    "type": "function"
                                },
                                {
                                    "name": "startTransaction",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "commitTransaction",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "rollbackTransaction",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "abortTransaction",
                                    "signature": "->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QDataStream",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QDataStream>",
                    "name": "datastream",
                    "type": "file"
                }
            ],
            "name": "core",
            "type": "module"
        },
        {
            "checked": 1,
            "elements": [
                {
                    "checked": 1,
                    "elements": [
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QColor &->QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QColor &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QColor &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        "Invalid",
                                        "Rgb",
                                        "Hsv",
                                        "Cmyk",
                                        "Hsl"
                                    ],
                                    "name": "Spec",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "HexRgb",
                                        "HexArgb"
                                    ],
                                    "name": "NameFormat",
                                    "type": "enum"
                                },
                                {
                                    "name": "QColor",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QColor",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QColor",
                                    "signature": "Qt::GlobalColor",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "255",
                                    "name": "QColor",
                                    "signature": "int;int;int;int",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "signature": "QRgb",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "signature": "QRgba64",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "signature": "const QString &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "signature": "QStringView",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "signature": "const char *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "signature": "QLatin1String",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "signature": "QColor::Spec",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "signature": "const QColor &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "signature": "QColor &&",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QColor &&->QColor &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QColor &->QColor &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "Qt::GlobalColor->QColor &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "name",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "name",
                                    "signature": "QColor::NameFormat->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setNamedColor",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setNamedColor",
                                    "signature": "QStringView->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setNamedColor",
                                    "signature": "QLatin1String->void",
                                    "type": "function"
                                },
                                {
                                    "name": "colorNames",
                                    "signature": "->QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "spec",
                                    "signature": "->QColor::Spec",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alpha",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlpha",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alphaF",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlphaF",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "red",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "green",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "blue",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setRed",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setGreen",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBlue",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "redF",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "greenF",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "blueF",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setRedF",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setGreenF",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBlueF",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getRgb",
                                    "signature": "int *;int *;int *;int *->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "255",
                                    "name": "setRgb",
                                    "signature": "int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getRgbF",
                                    "signature": "qreal *;qreal *;qreal *;qreal *->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "qreal(1.0)",
                                    "name": "setRgbF",
                                    "signature": "qreal;qreal;qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rgba64",
                                    "signature": "->QRgba64",
                                    "type": "function"
                                },
                                {
                                    "name": "setRgba64",
                                    "signature": "QRgba64->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rgba",
                                    "signature": "->QRgb",
                                    "type": "function"
                                },
                                {
                                    "name": "setRgba",
                                    "signature": "QRgb->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rgb",
                                    "signature": "->QRgb",
                                    "type": "function"
                                },
                                {
                                    "name": "setRgb",
                                    "signature": "QRgb->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hue",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "saturation",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hsvHue",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hsvSaturation",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "value",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hueF",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "saturationF",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hsvHueF",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hsvSaturationF",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "valueF",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getHsv",
                                    "signature": "int *;int *;int *;int *->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "255",
                                    "name": "setHsv",
                                    "signature": "int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getHsvF",
                                    "signature": "qreal *;qreal *;qreal *;qreal *->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "qreal(1.0)",
                                    "name": "setHsvF",
                                    "signature": "qreal;qreal;qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cyan",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "magenta",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "yellow",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "black",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cyanF",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "magentaF",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "yellowF",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "blackF",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "getCmyk",
                                    "signature": "int *;int *;int *;int *;int *->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "255",
                                    "name": "setCmyk",
                                    "signature": "int;int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "getCmykF",
                                    "signature": "qreal *;qreal *;qreal *;qreal *;qreal *->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "qreal(1.0)",
                                    "name": "setCmykF",
                                    "signature": "qreal;qreal;qreal;qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hslHue",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hslSaturation",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lightness",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hslHueF",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hslSaturationF",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lightnessF",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getHsl",
                                    "signature": "int *;int *;int *;int *->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "255",
                                    "name": "setHsl",
                                    "signature": "int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getHslF",
                                    "signature": "qreal *;qreal *;qreal *;qreal *->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "qreal(1.0)",
                                    "name": "setHslF",
                                    "signature": "qreal;qreal;qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRgb",
                                    "signature": "->QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toHsv",
                                    "signature": "->QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCmyk",
                                    "signature": "->QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toHsl",
                                    "signature": "->QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "convertTo",
                                    "signature": "QColor::Spec->QColor",
                                    "type": "function"
                                },
                                {
                                    "name": "fromRgb",
                                    "signature": "QRgb->QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromRgba",
                                    "signature": "QRgb->QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "255",
                                    "name": "fromRgb",
                                    "signature": "int;int;int;int->QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "qreal(1.0)",
                                    "name": "fromRgbF",
                                    "signature": "qreal;qreal;qreal;qreal->QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromRgba64",
                                    "signature": "ushort;ushort;ushort;ushort->QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromRgba64",
                                    "signature": "QRgba64->QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "255",
                                    "name": "fromHsv",
                                    "signature": "int;int;int;int->QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "qreal(1.0)",
                                    "name": "fromHsvF",
                                    "signature": "qreal;qreal;qreal;qreal->QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "255",
                                    "name": "fromCmyk",
                                    "signature": "int;int;int;int;int->QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "qreal(1.0)",
                                    "name": "fromCmykF",
                                    "signature": "qreal;qreal;qreal;qreal;qreal->QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "255",
                                    "name": "fromHsl",
                                    "signature": "int;int;int;int->QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "qreal(1.0)",
                                    "name": "fromHslF",
                                    "signature": "qreal;qreal;qreal;qreal->QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "light",
                                    "signature": "int->QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "150",
                                    "name": "lighter",
                                    "signature": "int->QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dark",
                                    "signature": "int->QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "darker",
                                    "signature": "int->QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QColor &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QColor &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "isValidColor",
                                    "signature": "const QString &->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isValidColor",
                                    "signature": "QStringView->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isValidColor",
                                    "signature": "QLatin1String->bool",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QColor",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QColor>",
                    "name": "color",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        "Helvetica",
                                        "SansSerif",
                                        "Times",
                                        "Serif",
                                        "Courier",
                                        "TypeWriter",
                                        "OldEnglish",
                                        "Decorative",
                                        "System",
                                        "AnyStyle",
                                        "Cursive",
                                        "Monospace",
                                        "Fantasy"
                                    ],
                                    "name": "StyleHint",
                                    "type": "enum"
                                },
                                {
                                    "checked": 1,
                                    "enumerators": [
                                        "PreferDefault",
                                        "PreferBitmap",
                                        "PreferDevice",
                                        "PreferOutline",
                                        "ForceOutline",
                                        "PreferMatch",
                                        "PreferQuality",
                                        "PreferAntialias",
                                        "NoAntialias",
                                        "OpenGLCompatible",
                                        "ForceIntegerMetrics",
                                        "NoSubpixelAntialias",
                                        "PreferNoShaping-",
                                        "NoFontMerging"
                                    ],
                                    "name": "StyleStrategy",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "PreferDefaultHinting",
                                        "PreferNoHinting",
                                        "PreferVerticalHinting",
                                        "PreferFullHinting"
                                    ],
                                    "name": "HintingPreference",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "Thin",
                                        "ExtraLight",
                                        "Light",
                                        "Normal",
                                        "Medium",
                                        "DemiBold",
                                        "Bold",
                                        "ExtraBold",
                                        "Black"
                                    ],
                                    "name": "Weight",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "StyleNormal",
                                        "StyleItalic",
                                        "StyleOblique"
                                    ],
                                    "name": "Style",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "AnyStretch",
                                        "UltraCondensed",
                                        "ExtraCondensed",
                                        "Condensed",
                                        "SemiCondensed",
                                        "Unstretched",
                                        "SemiExpanded",
                                        "Expanded",
                                        "ExtraExpanded",
                                        "UltraExpanded"
                                    ],
                                    "name": "Stretch",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "MixedCase",
                                        "AllUppercase",
                                        "AllLowercase",
                                        "SmallCaps",
                                        "Capitalize"
                                    ],
                                    "name": "Capitalization",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "PercentageSpacing",
                                        "AbsoluteSpacing"
                                    ],
                                    "name": "SpacingType",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "FamilyResolved",
                                        "SizeResolved",
                                        "StyleHintResolved",
                                        "StyleStrategyResolved",
                                        "WeightResolved",
                                        "StyleResolved",
                                        "UnderlineResolved",
                                        "OverlineResolved",
                                        "StrikeOutResolved",
                                        "FixedPitchResolved",
                                        "StretchResolved",
                                        "KerningResolved",
                                        "CapitalizationResolved",
                                        "LetterSpacingResolved",
                                        "WordSpacingResolved",
                                        "HintingPreferenceResolved",
                                        "StyleNameResolved",
                                        "AllPropertiesResolved"
                                    ],
                                    "name": "ResolveProperties",
                                    "type": "enum"
                                },
                                {
                                    "name": "QFont",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "false;-1;-1",
                                    "name": "QFont",
                                    "signature": "const QString &;int;int;bool",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFont",
                                    "signature": "const QFont &;QPaintDevice *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFont",
                                    "signature": "const QFont &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFont",
                                    "type": "destructor"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QFont &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "family",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setFamily",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "styleName",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setStyleName",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pointSize",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setPointSize",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pointSizeF",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setPointSizeF",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixelSize",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setPixelSize",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "weight",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setWeight",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bold",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setBold",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setStyle",
                                    "signature": "QFont::Style->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "style",
                                    "signature": "->QFont::Style",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "italic",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setItalic",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "underline",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setUnderline",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "overline",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setOverline",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "strikeOut",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setStrikeOut",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fixedPitch",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setFixedPitch",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "kerning",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setKerning",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "styleHint",
                                    "signature": "->QFont::StyleHint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "styleStrategy",
                                    "signature": "->QFont::StyleStrategy",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QFont::PreferDefault",
                                    "name": "setStyleHint",
                                    "signature": "QFont::StyleHint;QFont::StyleStrategy->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setStyleStrategy",
                                    "signature": "QFont::StyleStrategy->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "stretch",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setStretch",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "letterSpacing",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "letterSpacingType",
                                    "signature": "->QFont::SpacingType",
                                    "type": "function"
                                },
                                {
                                    "name": "setLetterSpacing",
                                    "signature": "QFont::SpacingType;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "wordSpacing",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setWordSpacing",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setCapitalization",
                                    "signature": "QFont::Capitalization->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capitalization",
                                    "signature": "->QFont::Capitalization",
                                    "type": "function"
                                },
                                {
                                    "name": "setHintingPreference",
                                    "signature": "QFont::HintingPreference->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hintingPreference",
                                    "signature": "->QFont::HintingPreference",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rawMode",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setRawMode",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exactMatch",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QFont &->QFont &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QFont &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QFont &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "signature": "const QFont &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isCopyOf",
                                    "signature": "const QFont &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QFont &&->QFont &",
                                    "type": "function"
                                },
                                {
                                    "name": "setRawName",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rawName",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "key",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "fromString",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "substitute",
                                    "signature": "const QString &->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "substitutes",
                                    "signature": "const QString &->QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "substitutions",
                                    "signature": "->QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "insertSubstitution",
                                    "signature": "const QString &;const QString &->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "insertSubstitutions",
                                    "signature": "const QString &;const QStringList &->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "removeSubstitutions",
                                    "signature": "const QString &->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "initialize",
                                    "signature": "->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "cleanup",
                                    "signature": "->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "cacheStatistics",
                                    "signature": "->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "defaultFamily",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastResortFamily",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastResortFont",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "resolve",
                                    "signature": "const QFont &->QFont",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "resolve",
                                    "signature": "->uint",
                                    "type": "function"
                                },
                                {
                                    "name": "resolve",
                                    "signature": "uint->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QFont",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QFont &;QFont &->void",
                            "type": "function"
                        },
                        {
                            "name": "qHash",
                            "signature": "const QFont &;uint->uint",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QFont &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QFont &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QFont &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QFont>",
                    "name": "font",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        "Any",
                                        "Latin",
                                        "Greek",
                                        "Cyrillic",
                                        "Armenian",
                                        "Hebrew",
                                        "Arabic",
                                        "Syriac",
                                        "Thaana",
                                        "Devanagari",
                                        "Bengali",
                                        "Gurmukhi",
                                        "Gujarati",
                                        "Oriya",
                                        "Tamil",
                                        "Telugu",
                                        "Kannada",
                                        "Malayalam",
                                        "Sinhala",
                                        "Thai",
                                        "Lao",
                                        "Tibetan",
                                        "Myanmar",
                                        "Georgian",
                                        "Khmer",
                                        "SimplifiedChinese",
                                        "TraditionalChinese",
                                        "Japanese",
                                        "Korean",
                                        "Vietnamese",
                                        "Symbol",
                                        "Other",
                                        "Ogham",
                                        "Runic",
                                        "Nko",
                                        "WritingSystemsCount"
                                    ],
                                    "name": "WritingSystem",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "GeneralFont",
                                        "FixedFont",
                                        "TitleFont",
                                        "SmallestReadableFont"
                                    ],
                                    "name": "SystemFont",
                                    "type": "enum"
                                },
                                {
                                    "name": "standardSizes",
                                    "signature": "->QList<int>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "QFontDatabase",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "writingSystems",
                                    "signature": "->QList<QFontDatabase::WritingSystem>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "writingSystems",
                                    "signature": "const QString &->QList<QFontDatabase::WritingSystem>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QFontDatabase::Any",
                                    "name": "families",
                                    "signature": "QFontDatabase::WritingSystem->QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "styles",
                                    "signature": "const QString &->QStringList",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QString()",
                                    "name": "pointSizes",
                                    "signature": "const QString &;const QString &->QList<int>",
                                    "type": "function"
                                },
                                {
                                    "name": "smoothSizes",
                                    "signature": "const QString &;const QString &->QList<int>",
                                    "type": "function"
                                },
                                {
                                    "name": "styleString",
                                    "signature": "const QFont &->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "styleString",
                                    "signature": "const QFontInfo &->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "font",
                                    "signature": "const QString &;const QString &;int->QFont",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QString()",
                                    "name": "isBitmapScalable",
                                    "signature": "const QString &;const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QString()",
                                    "name": "isSmoothlyScalable",
                                    "signature": "const QString &;const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QString()",
                                    "name": "isScalable",
                                    "signature": "const QString &;const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QString()",
                                    "name": "isFixedPitch",
                                    "signature": "const QString &;const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "italic",
                                    "signature": "const QString &;const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bold",
                                    "signature": "const QString &;const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "weight",
                                    "signature": "const QString &;const QString &->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasFamily",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isPrivateFamily",
                                    "signature": "const QString &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "writingSystemName",
                                    "signature": "QFontDatabase::WritingSystem->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "writingSystemSample",
                                    "signature": "QFontDatabase::WritingSystem->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "addApplicationFont",
                                    "signature": "const QString &->int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "addApplicationFontFromData",
                                    "signature": "const QByteArray &->int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "applicationFontFamilies",
                                    "signature": "int->QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "removeApplicationFont",
                                    "signature": "int->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "removeAllApplicationFonts",
                                    "signature": "->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "supportsThreadedFontRendering",
                                    "signature": "->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "systemFont",
                                    "signature": "QFontDatabase::SystemFont->QFont",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QFontDatabase",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QFontDatabase>",
                    "name": "fontdatabase",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QFontInfo",
                                    "signature": "const QFont &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFontInfo",
                                    "signature": "const QFontInfo &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFontInfo",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QFontInfo &->QFontInfo &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QFontInfo &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "family",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "styleName",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixelSize",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pointSize",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pointSizeF",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "italic",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "style",
                                    "signature": "->QFont::Style",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "weight",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bold",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "underline",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "overline",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "strikeOut",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fixedPitch",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "styleHint",
                                    "signature": "->QFont::StyleHint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rawMode",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exactMatch",
                                    "signature": "->bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QFontInfo",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QFontInfo &;QFontInfo &->void",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QFontInfo>",
                    "name": "fontinfo",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QFontMetrics",
                                    "signature": "const QFont &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFontMetrics",
                                    "signature": "const QFont &;QPaintDevice *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFontMetrics",
                                    "signature": "const QFontMetrics &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFontMetrics",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QFontMetrics &->QFontMetrics &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QFontMetrics &&->QFontMetrics &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QFontMetrics &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "ascent",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capHeight",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "descent",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "leading",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lineSpacing",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minLeftBearing",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minRightBearing",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maxWidth",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "xHeight",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "averageCharWidth",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inFont",
                                    "signature": "QChar->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inFontUcs4",
                                    "signature": "uint->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "leftBearing",
                                    "signature": "QChar->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rightBearing",
                                    "signature": "QChar->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "-1",
                                    "name": "width",
                                    "signature": "const QString &;int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "signature": "const QString &;int;int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "signature": "QChar->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "charWidth",
                                    "signature": "const QString &;int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "signature": "QChar->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "signature": "const QString &->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "signature": "const QRect &;int;const QString &;int;int *->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "signature": "int;int;int;int;int;const QString &;int;int *->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "signature": "int;const QString &;int;int *->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tightBoundingRect",
                                    "signature": "const QString &->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "0",
                                    "name": "elidedText",
                                    "signature": "const QString &;Qt::TextElideMode;int;int->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "underlinePos",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "overlinePos",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "strikeOutPos",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lineWidth",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QFontMetrics &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QFontMetrics &->bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QFontMetrics",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QFontMetrics &;QFontMetrics &->void",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QFontMetricsF",
                                    "signature": "const QFont &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFontMetricsF",
                                    "signature": "const QFont &;QPaintDevice *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFontMetricsF",
                                    "signature": "const QFontMetrics &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFontMetricsF",
                                    "signature": "const QFontMetricsF &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFontMetricsF",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QFontMetricsF &->QFontMetricsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QFontMetrics &->QFontMetricsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QFontMetricsF &&->QFontMetricsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QFontMetricsF &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "ascent",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capHeight",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "descent",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "leading",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lineSpacing",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minLeftBearing",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minRightBearing",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maxWidth",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "xHeight",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "averageCharWidth",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inFont",
                                    "signature": "QChar->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inFontUcs4",
                                    "signature": "uint->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "leftBearing",
                                    "signature": "QChar->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rightBearing",
                                    "signature": "QChar->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "signature": "const QString &->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "signature": "QChar->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "signature": "const QString &->QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "signature": "QChar->QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "signature": "const QRectF &;int;const QString &;int;int *->QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "signature": "int;const QString &;int;int *->QSizeF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tightBoundingRect",
                                    "signature": "const QString &->QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "0",
                                    "name": "elidedText",
                                    "signature": "const QString &;Qt::TextElideMode;qreal;int->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "underlinePos",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "overlinePos",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "strikeOutPos",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lineWidth",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QFontMetricsF &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QFontMetricsF &->bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QFontMetricsF",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QFontMetricsF &;QFontMetricsF &->void",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QFontMetrics>",
                    "name": "fontmetrics",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QCursor",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QCursor",
                                    "signature": "Qt::CursorShape",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "-1;-1",
                                    "name": "QCursor",
                                    "signature": "const QBitmap &;const QBitmap &;int;int",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "-1;-1",
                                    "name": "QCursor",
                                    "signature": "const QPixmap &;int;int",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QCursor",
                                    "signature": "const QCursor &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QCursor",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QCursor &->QCursor &",
                                    "type": "function"
                                },
                                {
                                    "name": "QCursor",
                                    "signature": "QCursor &&",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QCursor &&->QCursor &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QCursor &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "shape",
                                    "signature": "->Qt::CursorShape",
                                    "type": "function"
                                },
                                {
                                    "name": "setShape",
                                    "signature": "Qt::CursorShape->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bitmap",
                                    "signature": "->const QBitmap *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mask",
                                    "signature": "->const QBitmap *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixmap",
                                    "signature": "->QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hotSpot",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "name": "pos",
                                    "signature": "->QPoint",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "pos",
                                    "signature": "const QScreen *->QPoint",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setPos",
                                    "signature": "int;int->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setPos",
                                    "signature": "QScreen *;int;int->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setPos",
                                    "signature": "const QPoint &->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setPos",
                                    "signature": "QScreen *;const QPoint &->void",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QCursor",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QCursor &;QCursor &->void",
                            "type": "function"
                        },
                        {
                            "checked": 0,
                            "name": "operator==",
                            "signature": "const QCursor &;const QCursor &->bool",
                            "type": "function"
                        },
                        {
                            "checked": 0,
                            "name": "operator!=",
                            "signature": "const QCursor &;const QCursor &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QCursor &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QCursor &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QCursor &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QCursor>",
                    "name": "cursor",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QPixmap",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPixmap",
                                    "signature": "QPlatformPixmap *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPixmap",
                                    "signature": "int;int",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPixmap",
                                    "signature": "const QSize &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPixmap",
                                    "signature": "const QString &;const char *;Qt::ImageConversionFlags",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPixmap",
                                    "signature": "const char *const []",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPixmap",
                                    "signature": "const QPixmap &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPixmap",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QPixmap &->QPixmap &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QPixmap &&->QPixmap &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QPixmap &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "devType",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rect",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "depth",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "defaultDepth",
                                    "signature": "->int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "QColor(Qt::white)",
                                    "name": "fill",
                                    "signature": "const QColor &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fill",
                                    "signature": "const QPaintDevice *;const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fill",
                                    "signature": "const QPaintDevice *;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mask",
                                    "signature": "->QBitmap",
                                    "type": "function"
                                },
                                {
                                    "name": "setMask",
                                    "signature": "const QBitmap &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "devicePixelRatio",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setDevicePixelRatio",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasAlpha",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasAlphaChannel",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "true",
                                    "name": "createHeuristicMask",
                                    "signature": "bool->QBitmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "Qt::MaskInColor",
                                    "name": "createMaskFromColor",
                                    "signature": "const QColor &;Qt::MaskMode->QBitmap",
                                    "type": "function"
                                },
                                {
                                    "name": "grabWindow",
                                    "signature": "WId;int;int;int;int->QPixmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "grabWidget",
                                    "signature": "QObject *;const QRect &->QPixmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "grabWidget",
                                    "signature": "QObject *;int;int;int;int->QPixmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "Qt::FastTransformation;Qt::IgnoreAspectRatio",
                                    "name": "scaled",
                                    "signature": "int;int;Qt::AspectRatioMode;Qt::TransformationMode->QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "Qt::FastTransformation;Qt::IgnoreAspectRatio",
                                    "name": "scaled",
                                    "signature": "const QSize &;Qt::AspectRatioMode;Qt::TransformationMode->QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "Qt::FastTransformation",
                                    "name": "scaledToWidth",
                                    "signature": "int;Qt::TransformationMode->QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "Qt::FastTransformation",
                                    "name": "scaledToHeight",
                                    "signature": "int;Qt::TransformationMode->QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "Qt::FastTransformation",
                                    "name": "transformed",
                                    "signature": "const QMatrix &;Qt::TransformationMode->QPixmap",
                                    "type": "function"
                                },
                                {
                                    "name": "trueMatrix",
                                    "signature": "const QMatrix &;int;int->QMatrix",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "Qt::FastTransformation",
                                    "name": "transformed",
                                    "signature": "const QTransform &;Qt::TransformationMode->QPixmap",
                                    "type": "function"
                                },
                                {
                                    "name": "trueMatrix",
                                    "signature": "const QTransform &;int;int->QTransform",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toImage",
                                    "signature": "->QImage",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::ImageConversionFlags(Qt::AutoColor)",
                                    "name": "fromImage",
                                    "signature": "const QImage &;Qt::ImageConversionFlags->QPixmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::ImageConversionFlags(Qt::AutoColor)",
                                    "name": "fromImageReader",
                                    "signature": "QImageReader *;Qt::ImageConversionFlags->QPixmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::ImageConversionFlags(Qt::AutoColor)",
                                    "name": "fromImage",
                                    "signature": "QImage &&;Qt::ImageConversionFlags->QPixmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "load",
                                    "signature": "const QString &;const char *;Qt::ImageConversionFlags->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "loadFromData",
                                    "signature": "const uchar *;uint;const char *;Qt::ImageConversionFlags->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "loadFromData",
                                    "signature": "const QByteArray &;const char *;Qt::ImageConversionFlags->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "save",
                                    "signature": "const QString &;const char *;int->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "save",
                                    "signature": "QIODevice *;const char *;int->bool",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::ImageConversionFlags(Qt::AutoColor)",
                                    "name": "convertFromImage",
                                    "signature": "const QImage &;Qt::ImageConversionFlags->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "copy",
                                    "signature": "int;int;int;int->QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QRect()",
                                    "name": "copy",
                                    "signature": "const QRect &->QPixmap",
                                    "type": "function"
                                },
                                {
                                    "name": "scroll",
                                    "signature": "int;int;int;int;int;int;QRegion *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "scroll",
                                    "signature": "int;int;const QRect &;QRegion *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cacheKey",
                                    "signature": "->qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "detach",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isQBitmap",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "paintEngine",
                                    "signature": "->QPaintEngine *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "handle",
                                    "signature": "->QPlatformPixmap *",
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "signature": "->QPixmap::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QPixmap",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QPixmap &;QPixmap &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QPixmap &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QPixmap &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QPixmap &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QPixmap>",
                    "name": "pixmap",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QPixmap",
                            "elements": [
                                {
                                    "name": "QBitmap",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBitmap",
                                    "signature": "const QPixmap &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBitmap",
                                    "signature": "int;int",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBitmap",
                                    "signature": "const QSize &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBitmap",
                                    "signature": "const QString &;const char *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBitmap",
                                    "signature": "const QBitmap &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QBitmap &->QBitmap &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QBitmap &&->QBitmap &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QBitmap",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QPixmap &->QBitmap &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QBitmap &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::ImageConversionFlags(Qt::AutoColor)",
                                    "name": "fromImage",
                                    "signature": "const QImage &;Qt::ImageConversionFlags->QBitmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromData",
                                    "signature": "const QSize &;const uchar *;QImage::Format->QBitmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transformed",
                                    "signature": "const QMatrix &->QBitmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transformed",
                                    "signature": "const QTransform &->QBitmap",
                                    "type": "function"
                                }
                            ],
                            "name": "QBitmap",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QBitmap &;QBitmap &->void",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QBitmap>",
                    "name": "bitmap",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        "Normal",
                                        "Disabled",
                                        "Active",
                                        "Selected"
                                    ],
                                    "name": "Mode",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "On",
                                        "Off"
                                    ],
                                    "name": "State",
                                    "type": "enum"
                                },
                                {
                                    "name": "QIcon",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QIcon",
                                    "signature": "const QPixmap &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QIcon",
                                    "signature": "const QIcon &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QIcon",
                                    "signature": "QIcon &&",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QIcon",
                                    "signature": "const QString &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QIcon",
                                    "signature": "QIconEngine *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QIcon",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QIcon &->QIcon &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QIcon &&->QIcon &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QIcon &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QIcon::Off;QIcon::Normal",
                                    "name": "pixmap",
                                    "signature": "const QSize &;QIcon::Mode;QIcon::State->QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QIcon::Off;QIcon::Normal",
                                    "name": "pixmap",
                                    "signature": "int;int;QIcon::Mode;QIcon::State->QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QIcon::Off;QIcon::Normal",
                                    "name": "pixmap",
                                    "signature": "int;QIcon::Mode;QIcon::State->QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QIcon::Off;QIcon::Normal",
                                    "name": "pixmap",
                                    "signature": "QWindow *;const QSize &;QIcon::Mode;QIcon::State->QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QIcon::Off;QIcon::Normal",
                                    "name": "actualSize",
                                    "signature": "const QSize &;QIcon::Mode;QIcon::State->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QIcon::Off;QIcon::Normal",
                                    "name": "actualSize",
                                    "signature": "QWindow *;const QSize &;QIcon::Mode;QIcon::State->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "name",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QIcon::Off;QIcon::Normal;Qt::Alignment(Qt::AlignCenter)",
                                    "name": "paint",
                                    "signature": "QPainter *;const QRect &;Qt::Alignment;QIcon::Mode;QIcon::State->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QIcon::Off;QIcon::Normal;Qt::Alignment(Qt::AlignCenter)",
                                    "name": "paint",
                                    "signature": "QPainter *;int;int;int;int;Qt::Alignment;QIcon::Mode;QIcon::State->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "detach",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cacheKey",
                                    "signature": "->qint64",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QIcon::Off;QIcon::Normal",
                                    "name": "addPixmap",
                                    "signature": "const QPixmap &;QIcon::Mode;QIcon::State->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QIcon::Off;QIcon::Normal;QSize()",
                                    "name": "addFile",
                                    "signature": "const QString &;const QSize &;QIcon::Mode;QIcon::State->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QIcon::Off;QIcon::Normal",
                                    "name": "availableSizes",
                                    "signature": "QIcon::Mode;QIcon::State->QList<QSize>",
                                    "type": "function"
                                },
                                {
                                    "name": "setIsMask",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isMask",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "fromTheme",
                                    "signature": "const QString &->QIcon",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromTheme",
                                    "signature": "const QString &;const QIcon &->QIcon",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "hasThemeIcon",
                                    "signature": "const QString &->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "themeSearchPaths",
                                    "signature": "->QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setThemeSearchPaths",
                                    "signature": "const QStringList &->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "themeName",
                                    "signature": "->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setThemeName",
                                    "signature": "const QString &->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "signature": "->QIcon::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QIcon",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QIcon &;QIcon &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QIcon &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QIcon &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QIcon &->QDebug",
                            "type": "function"
                        },
                        {
                            "name": "qt_findAtNxFile",
                            "signature": "const QString &;qreal;qreal *->QString",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QIcon>",
                    "name": "icon",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "cppincludes": "yasl/gui/image-functions.h",
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        "InvertRgb",
                                        "InvertRgba"
                                    ],
                                    "name": "InvertMode",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "Format_Invalid",
                                        "Format_Mono",
                                        "Format_MonoLSB",
                                        "Format_Indexed8",
                                        "Format_RGB32",
                                        "Format_ARGB32",
                                        "Format_ARGB32_Premultiplied",
                                        "Format_RGB16",
                                        "Format_ARGB8565_Premultiplied",
                                        "Format_RGB666",
                                        "Format_ARGB6666_Premultiplied",
                                        "Format_RGB555",
                                        "Format_ARGB8555_Premultiplied",
                                        "Format_RGB888",
                                        "Format_RGB444",
                                        "Format_ARGB4444_Premultiplied",
                                        "Format_RGBX8888",
                                        "Format_RGBA8888",
                                        "Format_RGBA8888_Premultiplied",
                                        "Format_BGR30",
                                        "Format_A2BGR30_Premultiplied",
                                        "Format_RGB30",
                                        "Format_A2RGB30_Premultiplied",
                                        "Format_Alpha8",
                                        "Format_Grayscale8",
                                        "NImageFormats"
                                    ],
                                    "name": "Format",
                                    "type": "enum"
                                },
                                {
                                    "name": "QImage",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QImage",
                                    "signature": "const QSize &;QImage::Format",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QImage",
                                    "signature": "int;int;QImage::Format",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QImage",
                                    "signature": "uchar *;int;int;QImage::Format;QImageCleanupFunction;void *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QImage",
                                    "signature": "const uchar *;int;int;QImage::Format;QImageCleanupFunction;void *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QImage",
                                    "signature": "uchar *;int;int;int;QImage::Format;QImageCleanupFunction;void *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QImage",
                                    "signature": "const uchar *;int;int;int;QImage::Format;QImageCleanupFunction;void *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QImage",
                                    "signature": "const char *const []",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QImage",
                                    "signature": "const QString &;const char *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QImage",
                                    "signature": "const QImage &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QImage",
                                    "signature": "QImage &&",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QImage",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QImage &->QImage &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QImage &&->QImage &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QImage &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "devType",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QImage &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QImage &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "detach",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QRect()",
                                    "name": "copy",
                                    "signature": "const QRect &->QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "copy",
                                    "signature": "int;int;int;int->QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "format",
                                    "signature": "->QImage::Format",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "convertToFormat",
                                    "signature": "QImage::Format;Qt::ImageConversionFlags->QImage",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "defaults": "Qt::ImageConversionFlags(Qt::AutoColor)",
                                    "name": "img_convertToFormat",
                                    "rename": "convertToFormat",
                                    "signature": "QImage::Format;Qt::ImageConversionFlags->QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "Qt::ImageConversionFlags(Qt::AutoColor)",
                                    "name": "convertToFormat",
                                    "signature": "QImage::Format;const QVector<QRgb> &;Qt::ImageConversionFlags->QImage",
                                    "type": "function"
                                },
                                {
                                    "name": "reinterpretAsFormat",
                                    "signature": "QImage::Format->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rect",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "depth",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "colorCount",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bitPlaneCount",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "color",
                                    "signature": "int->QRgb",
                                    "type": "function"
                                },
                                {
                                    "name": "setColor",
                                    "signature": "int;QRgb->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setColorCount",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "allGray",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isGrayscale",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "bits",
                                    "signature": "->uchar *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bits",
                                    "signature": "->const uchar *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constBits",
                                    "signature": "->const uchar *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "byteCount",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeInBytes",
                                    "signature": "->qsizetype",
                                    "type": "function"
                                },
                                {
                                    "name": "scanLine",
                                    "signature": "int->uchar *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scanLine",
                                    "signature": "int->const uchar *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constScanLine",
                                    "signature": "int->const uchar *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bytesPerLine",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "valid",
                                    "signature": "int;int->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "valid",
                                    "signature": "const QPoint &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixelIndex",
                                    "signature": "int;int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixelIndex",
                                    "signature": "const QPoint &->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixel",
                                    "signature": "int;int->QRgb",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixel",
                                    "signature": "const QPoint &->QRgb",
                                    "type": "function"
                                },
                                {
                                    "name": "setPixel",
                                    "signature": "int;int;uint->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setPixel",
                                    "signature": "const QPoint &;uint->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixelColor",
                                    "signature": "int;int->QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixelColor",
                                    "signature": "const QPoint &->QColor",
                                    "type": "function"
                                },
                                {
                                    "name": "setPixelColor",
                                    "signature": "int;int;const QColor &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setPixelColor",
                                    "signature": "const QPoint &;const QColor &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "colorTable",
                                    "signature": "->QVector<QRgb>",
                                    "type": "function"
                                },
                                {
                                    "name": "setColorTable",
                                    "signature": "const QVector<QRgb>->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "devicePixelRatio",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setDevicePixelRatio",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fill",
                                    "signature": "uint->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fill",
                                    "signature": "const QColor &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fill",
                                    "signature": "Qt::GlobalColor->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasAlphaChannel",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlphaChannel",
                                    "signature": "const QImage &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alphaChannel",
                                    "signature": "->QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "Qt::ImageConversionFlags(Qt::AutoColor)",
                                    "name": "createAlphaMask",
                                    "signature": "Qt::ImageConversionFlags->QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "true",
                                    "name": "createHeuristicMask",
                                    "signature": "bool->QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "Qt::MaskInColor",
                                    "name": "createMaskFromColor",
                                    "signature": "QRgb;Qt::MaskMode->QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "Qt::FastTransformation;Qt::IgnoreAspectRatio",
                                    "name": "scaled",
                                    "signature": "int;int;Qt::AspectRatioMode;Qt::TransformationMode->QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "Qt::FastTransformation;Qt::IgnoreAspectRatio",
                                    "name": "scaled",
                                    "signature": "const QSize &;Qt::AspectRatioMode;Qt::TransformationMode->QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "Qt::FastTransformation",
                                    "name": "scaledToWidth",
                                    "signature": "int;Qt::TransformationMode->QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "Qt::FastTransformation",
                                    "name": "scaledToHeight",
                                    "signature": "int;Qt::TransformationMode->QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "Qt::FastTransformation",
                                    "name": "transformed",
                                    "signature": "const QMatrix &;Qt::TransformationMode->QImage",
                                    "type": "function"
                                },
                                {
                                    "name": "trueMatrix",
                                    "signature": "const QMatrix &;int;int->QMatrix",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "Qt::FastTransformation",
                                    "name": "transformed",
                                    "signature": "const QTransform &;Qt::TransformationMode->QImage",
                                    "type": "function"
                                },
                                {
                                    "name": "trueMatrix",
                                    "signature": "const QTransform &;int;int->QTransform",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "mirrored",
                                    "signature": "bool;bool->QImage",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "defaults": "true;false",
                                    "name": "img_mirrored",
                                    "rename": "mirrored",
                                    "signature": "bool;bool->QImage",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "rgbSwapped",
                                    "signature": "->QImage",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "img_rgbSwapped",
                                    "rename": "rgbSwapped",
                                    "signature": "->QImage",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QImage::InvertRgb",
                                    "name": "invertPixels",
                                    "signature": "QImage::InvertMode->void",
                                    "type": "function"
                                },
                                {
                                    "name": "load",
                                    "signature": "QIODevice *;const char *->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "load",
                                    "signature": "const QString &;const char *->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "loadFromData",
                                    "signature": "const uchar *;int;const char *->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "loadFromData",
                                    "signature": "const QByteArray &;const char *->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "save",
                                    "signature": "const QString &;const char *;int->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "save",
                                    "signature": "QIODevice *;const char *;int->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "fromData",
                                    "signature": "const uchar *;int;const char *->QImage",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromData",
                                    "signature": "const QByteArray &;const char *->QImage",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cacheKey",
                                    "signature": "->qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "paintEngine",
                                    "signature": "->QPaintEngine *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dotsPerMeterX",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dotsPerMeterY",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setDotsPerMeterX",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setDotsPerMeterY",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "offset",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "name": "setOffset",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textKeys",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "signature": "const QString &->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setText",
                                    "signature": "const QString &;const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixelFormat",
                                    "signature": "->QPixelFormat",
                                    "type": "function"
                                },
                                {
                                    "name": "toPixelFormat",
                                    "signature": "QImage::Format->QPixelFormat",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "toImageFormat",
                                    "signature": "QPixelFormat->QImage::Format",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "signature": "->QImage::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QImage",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QImage &;QImage &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QImage &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QImage &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QImage &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QImage>",
                    "name": "image",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        "TxNone",
                                        "TxTranslate",
                                        "TxScale",
                                        "TxRotate",
                                        "TxShear",
                                        "TxProject"
                                    ],
                                    "name": "TransformationType",
                                    "type": "enum"
                                },
                                {
                                    "name": "QTransform",
                                    "signature": "Qt::Initialization",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTransform",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "checked": 0,
                                    "defaults": "qreal(1.0)",
                                    "name": "QTransform",
                                    "signature": "qreal;qreal;qreal;qreal;qreal;qreal;qreal;qreal;qreal",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTransform",
                                    "signature": "qreal;qreal;qreal;qreal;qreal;qreal",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTransform",
                                    "signature": "const QMatrix &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QTransform &&->QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QTransform &->QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "QTransform",
                                    "signature": "QTransform &&",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTransform",
                                    "signature": "const QTransform &",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isAffine",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isIdentity",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isInvertible",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isScaling",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRotating",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTranslating",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "type",
                                    "signature": "->QTransform::TransformationType",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "determinant",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "det",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "m11",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "m12",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "m13",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "m21",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "m22",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "m23",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "m31",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "m32",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "m33",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dx",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dy",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "setMatrix",
                                    "signature": "qreal;qreal;qreal;qreal;qreal;qreal;qreal;qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inverted",
                                    "signature": "bool *->QTransform",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "adjoint",
                                    "signature": "->QTransform",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transposed",
                                    "signature": "->QTransform",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "signature": "qreal;qreal->QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "scale",
                                    "signature": "qreal;qreal->QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "shear",
                                    "signature": "qreal;qreal->QTransform &",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::ZAxis",
                                    "name": "rotate",
                                    "signature": "qreal;Qt::Axis->QTransform &",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::ZAxis",
                                    "name": "rotateRadians",
                                    "signature": "qreal;Qt::Axis->QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "squareToQuad",
                                    "signature": "const QPolygonF &;QTransform &->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "quadToSquare",
                                    "signature": "const QPolygonF &;QTransform &->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "quadToQuad",
                                    "signature": "const QPolygonF &;const QPolygonF &;QTransform &->bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QTransform &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QTransform &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "signature": "const QTransform &->QTransform &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator*",
                                    "signature": "const QTransform &->QTransform",
                                    "type": "function"
                                },
                                {
                                    "name": "reset",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "map",
                                    "signature": "const QPoint &->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "map",
                                    "signature": "const QPointF &->QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "map",
                                    "signature": "const QLine &->QLine",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "map",
                                    "signature": "const QLineF &->QLineF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "map",
                                    "signature": "const QPolygonF &->QPolygonF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "map",
                                    "signature": "const QPolygon &->QPolygon",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "map",
                                    "signature": "const QRegion &->QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "map",
                                    "signature": "const QPainterPath &->QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapToPolygon",
                                    "signature": "const QRect &->QPolygon",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapRect",
                                    "signature": "const QRect &->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapRect",
                                    "signature": "const QRectF &->QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "map",
                                    "signature": "int;int;int *;int *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "map",
                                    "signature": "qreal;qreal;qreal *;qreal *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toAffine",
                                    "signature": "->const QMatrix &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "signature": "qreal->QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "signature": "qreal->QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "qreal->QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "signature": "qreal->QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "fromTranslate",
                                    "signature": "qreal;qreal->QTransform",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromScale",
                                    "signature": "qreal;qreal->QTransform",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QTransform",
                            "type": "class"
                        },
                        {
                            "name": "qHash",
                            "signature": "const QTransform &;uint->uint",
                            "type": "function"
                        },
                        {
                            "name": "qFuzzyCompare",
                            "signature": "const QTransform &;const QTransform &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QTransform &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QTransform &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QTransform &->QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QPoint &;const QTransform &->QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QPointF &;const QTransform &->QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QLineF &;const QTransform &->QLineF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QLine &;const QTransform &->QLine",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QPolygon &;const QTransform &->QPolygon",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QPolygonF &;const QTransform &->QPolygonF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QRegion &;const QTransform &->QRegion",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QPainterPath &;const QTransform &->QPainterPath",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QTransform &;qreal->QTransform",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "signature": "const QTransform &;qreal->QTransform",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QTransform &;qreal->QTransform",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QTransform &;qreal->QTransform",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QTransform>",
                    "name": "transform",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "name": "QVector2D",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector2D",
                                    "signature": "Qt::Initialization",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector2D",
                                    "signature": "const QVector2D &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QVector2D",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QVector2D &->QVector2D &",
                                    "type": "function"
                                },
                                {
                                    "name": "QVector2D",
                                    "signature": "float;float",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector2D",
                                    "signature": "const QPoint &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector2D",
                                    "signature": "const QPointF &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector2D",
                                    "signature": "const QVector3D &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector2D",
                                    "signature": "const QVector4D &",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "signature": "float->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "signature": "float->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "operator[]",
                                    "signature": "int->float &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "signature": "int->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "length",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lengthSquared",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "normalized",
                                    "signature": "->QVector2D",
                                    "type": "function"
                                },
                                {
                                    "name": "normalize",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "distanceToPoint",
                                    "signature": "const QVector2D &->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "distanceToLine",
                                    "signature": "const QVector2D &;const QVector2D &->float",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "const QVector2D &->QVector2D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "signature": "const QVector2D &->QVector2D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "signature": "float->QVector2D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "signature": "const QVector2D &->QVector2D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "signature": "float->QVector2D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "signature": "const QVector2D &->QVector2D &",
                                    "type": "function"
                                },
                                {
                                    "name": "dotProduct",
                                    "signature": "const QVector2D &;const QVector2D &->float",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVector3D",
                                    "signature": "->QVector3D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVector4D",
                                    "signature": "->QVector4D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPoint",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPointF",
                                    "signature": "->QPointF",
                                    "type": "function"
                                }
                            ],
                            "name": "QVector2D",
                            "type": "class"
                        },
                        {
                            "name": "operator==",
                            "signature": "const QVector2D &;const QVector2D &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "signature": "const QVector2D &;const QVector2D &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QVector2D &;const QVector2D &->const QVector2D",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QVector2D &;const QVector2D &->const QVector2D",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "float;const QVector2D &->const QVector2D",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QVector2D &;float->const QVector2D",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QVector2D &;const QVector2D &->const QVector2D",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QVector2D &->const QVector2D",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "signature": "const QVector2D &;float->const QVector2D",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "signature": "const QVector2D &;const QVector2D &->const QVector2D",
                            "type": "function"
                        },
                        {
                            "name": "qFuzzyCompare",
                            "signature": "const QVector2D &;const QVector2D &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QVector2D &->QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QVector2D &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QVector2D &->QDataStream &",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QVector2D>",
                    "name": "vector2d",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "name": "QVector3D",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector3D",
                                    "signature": "const QVector3D &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QVector3D",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QVector3D &->QVector3D &",
                                    "type": "function"
                                },
                                {
                                    "name": "QVector3D",
                                    "signature": "Qt::Initialization",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector3D",
                                    "signature": "float;float;float",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector3D",
                                    "signature": "const QPoint &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector3D",
                                    "signature": "const QPointF &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector3D",
                                    "signature": "const QVector2D &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector3D",
                                    "signature": "const QVector2D &;float",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector3D",
                                    "signature": "const QVector4D &",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "z",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "signature": "float->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "signature": "float->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setZ",
                                    "signature": "float->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "operator[]",
                                    "signature": "int->float &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "signature": "int->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "length",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lengthSquared",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "normalized",
                                    "signature": "->QVector3D",
                                    "type": "function"
                                },
                                {
                                    "name": "normalize",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "const QVector3D &->QVector3D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "signature": "const QVector3D &->QVector3D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "signature": "float->QVector3D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "signature": "const QVector3D &->QVector3D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "signature": "float->QVector3D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "signature": "const QVector3D &->QVector3D &",
                                    "type": "function"
                                },
                                {
                                    "name": "dotProduct",
                                    "signature": "const QVector3D &;const QVector3D &->float",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "crossProduct",
                                    "signature": "const QVector3D &;const QVector3D &->QVector3D",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "normal",
                                    "signature": "const QVector3D &;const QVector3D &->QVector3D",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "normal",
                                    "signature": "const QVector3D &;const QVector3D &;const QVector3D &->QVector3D",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "project",
                                    "signature": "const QMatrix4x4 &;const QMatrix4x4 &;const QRect &->QVector3D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "unproject",
                                    "signature": "const QMatrix4x4 &;const QMatrix4x4 &;const QRect &->QVector3D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "distanceToPoint",
                                    "signature": "const QVector3D &->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "distanceToPlane",
                                    "signature": "const QVector3D &;const QVector3D &->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "distanceToPlane",
                                    "signature": "const QVector3D &;const QVector3D &;const QVector3D &->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "distanceToLine",
                                    "signature": "const QVector3D &;const QVector3D &->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVector2D",
                                    "signature": "->QVector2D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVector4D",
                                    "signature": "->QVector4D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPoint",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPointF",
                                    "signature": "->QPointF",
                                    "type": "function"
                                }
                            ],
                            "name": "QVector3D",
                            "type": "class"
                        },
                        {
                            "name": "operator==",
                            "signature": "const QVector3D &;const QVector3D &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "signature": "const QVector3D &;const QVector3D &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QVector3D &;const QVector3D &->const QVector3D",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QVector3D &;const QVector3D &->const QVector3D",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "float;const QVector3D &->const QVector3D",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QVector3D &;float->const QVector3D",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QVector3D &;const QVector3D &->const QVector3D",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QVector3D &->const QVector3D",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "signature": "const QVector3D &;float->const QVector3D",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "signature": "const QVector3D &;const QVector3D &->const QVector3D",
                            "type": "function"
                        },
                        {
                            "name": "qFuzzyCompare",
                            "signature": "const QVector3D &;const QVector3D &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QVector3D &->QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QVector3D &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QVector3D &->QDataStream &",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QVector3D>",
                    "name": "vector3d",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "name": "QVector4D",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector4D",
                                    "signature": "const QVector4D &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QVector4D",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QVector4D &->QVector4D &",
                                    "type": "function"
                                },
                                {
                                    "name": "QVector4D",
                                    "signature": "Qt::Initialization",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector4D",
                                    "signature": "float;float;float;float",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector4D",
                                    "signature": "const QPoint &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector4D",
                                    "signature": "const QPointF &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector4D",
                                    "signature": "const QVector2D &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector4D",
                                    "signature": "const QVector2D &;float;float",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector4D",
                                    "signature": "const QVector3D &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVector4D",
                                    "signature": "const QVector3D &;float",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "z",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "w",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "signature": "float->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "signature": "float->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setZ",
                                    "signature": "float->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setW",
                                    "signature": "float->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "operator[]",
                                    "signature": "int->float &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "signature": "int->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "length",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lengthSquared",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "normalized",
                                    "signature": "->QVector4D",
                                    "type": "function"
                                },
                                {
                                    "name": "normalize",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "const QVector4D &->QVector4D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "signature": "const QVector4D &->QVector4D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "signature": "float->QVector4D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "signature": "const QVector4D &->QVector4D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "signature": "float->QVector4D &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "signature": "const QVector4D &->QVector4D &",
                                    "type": "function"
                                },
                                {
                                    "name": "dotProduct",
                                    "signature": "const QVector4D &;const QVector4D &->float",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVector2D",
                                    "signature": "->QVector2D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVector2DAffine",
                                    "signature": "->QVector2D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVector3D",
                                    "signature": "->QVector3D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVector3DAffine",
                                    "signature": "->QVector3D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPoint",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPointF",
                                    "signature": "->QPointF",
                                    "type": "function"
                                }
                            ],
                            "name": "QVector4D",
                            "type": "class"
                        },
                        {
                            "name": "operator==",
                            "signature": "const QVector4D &;const QVector4D &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "signature": "const QVector4D &;const QVector4D &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QVector4D &;const QVector4D &->const QVector4D",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QVector4D &;const QVector4D &->const QVector4D",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "float;const QVector4D &->const QVector4D",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QVector4D &;float->const QVector4D",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QVector4D &;const QVector4D &->const QVector4D",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QVector4D &->const QVector4D",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "signature": "const QVector4D &;float->const QVector4D",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "signature": "const QVector4D &;const QVector4D &->const QVector4D",
                            "type": "function"
                        },
                        {
                            "name": "qFuzzyCompare",
                            "signature": "const QVector4D &;const QVector4D &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QVector4D &->QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QVector4D &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QVector4D &->QDataStream &",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QVector4D>",
                    "name": "vector4d",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QQuaternion",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QQuaternion",
                                    "signature": "const QQuaternion &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QQuaternion",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QQuaternion &->QQuaternion &",
                                    "type": "function"
                                },
                                {
                                    "name": "QQuaternion",
                                    "signature": "Qt::Initialization",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QQuaternion",
                                    "signature": "float;float;float;float",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QQuaternion",
                                    "signature": "float;const QVector3D &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QQuaternion",
                                    "signature": "const QVector4D &",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isIdentity",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "vector",
                                    "signature": "->QVector3D",
                                    "type": "function"
                                },
                                {
                                    "name": "setVector",
                                    "signature": "const QVector3D &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setVector",
                                    "signature": "float;float;float->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "z",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scalar",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "signature": "float->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "signature": "float->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setZ",
                                    "signature": "float->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setScalar",
                                    "signature": "float->void",
                                    "type": "function"
                                },
                                {
                                    "name": "dotProduct",
                                    "signature": "const QQuaternion &;const QQuaternion &->float",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "length",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lengthSquared",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "normalized",
                                    "signature": "->QQuaternion",
                                    "type": "function"
                                },
                                {
                                    "name": "normalize",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inverted",
                                    "signature": "->QQuaternion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "conjugated",
                                    "signature": "->QQuaternion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "conjugate",
                                    "signature": "->QQuaternion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rotatedVector",
                                    "signature": "const QVector3D &->QVector3D",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "const QQuaternion &->QQuaternion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "signature": "const QQuaternion &->QQuaternion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "signature": "float->QQuaternion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "signature": "const QQuaternion &->QQuaternion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "signature": "float->QQuaternion &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toVector4D",
                                    "signature": "->QVector4D",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getAxisAndAngle",
                                    "signature": "QVector3D *;float *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fromAxisAndAngle",
                                    "signature": "const QVector3D &;float->QQuaternion",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getAxisAndAngle",
                                    "signature": "float *;float *;float *;float *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fromAxisAndAngle",
                                    "signature": "float;float;float;float->QQuaternion",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toEulerAngles",
                                    "signature": "->QVector3D",
                                    "type": "function"
                                },
                                {
                                    "name": "fromEulerAngles",
                                    "signature": "const QVector3D &->QQuaternion",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getEulerAngles",
                                    "signature": "float *;float *;float *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fromEulerAngles",
                                    "signature": "float;float;float->QQuaternion",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRotationMatrix",
                                    "signature": "->QMatrix3x3",
                                    "type": "function"
                                },
                                {
                                    "name": "fromRotationMatrix",
                                    "signature": "const QMatrix3x3 &->QQuaternion",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getAxes",
                                    "signature": "QVector3D *;QVector3D *;QVector3D *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fromAxes",
                                    "signature": "const QVector3D &;const QVector3D &;const QVector3D &->QQuaternion",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromDirection",
                                    "signature": "const QVector3D &;const QVector3D &->QQuaternion",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "rotationTo",
                                    "signature": "const QVector3D &;const QVector3D &->QQuaternion",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "slerp",
                                    "signature": "const QQuaternion &;const QQuaternion &;float->QQuaternion",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "nlerp",
                                    "signature": "const QQuaternion &;const QQuaternion &;float->QQuaternion",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QQuaternion",
                            "type": "class"
                        },
                        {
                            "name": "operator==",
                            "signature": "const QQuaternion &;const QQuaternion &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QQuaternion &;const QQuaternion &->const QQuaternion",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "signature": "const QQuaternion &;const QQuaternion &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "signature": "const QQuaternion &;const QQuaternion &->const QQuaternion",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QQuaternion &;const QQuaternion &->const QQuaternion",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "float;const QQuaternion &->const QQuaternion",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QQuaternion &;float->const QQuaternion",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "signature": "const QQuaternion &->const QQuaternion",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "signature": "const QQuaternion &;float->const QQuaternion",
                            "type": "function"
                        },
                        {
                            "name": "qFuzzyCompare",
                            "signature": "const QQuaternion &;const QQuaternion &->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "signature": "const QQuaternion &;const QVector3D &->QVector3D",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QQuaternion &->QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QQuaternion &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QQuaternion &->QDataStream &",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QQuaternion>",
                    "name": "quaternion",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        "Rectangle",
                                        "Ellipse"
                                    ],
                                    "name": "RegionType",
                                    "type": "enum"
                                },
                                {
                                    "name": "QRegion",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "QRegion::Rectangle",
                                    "name": "QRegion",
                                    "signature": "int;int;int;int;QRegion::RegionType",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "QRegion::Rectangle",
                                    "name": "QRegion",
                                    "signature": "const QRect &;QRegion::RegionType",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "Qt::OddEvenFill",
                                    "name": "QRegion",
                                    "signature": "const QPolygon &;Qt::FillRule",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRegion",
                                    "signature": "const QRegion &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRegion",
                                    "signature": "QRegion &&",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRegion",
                                    "signature": "const QBitmap &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QRegion",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QRegion &->QRegion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QRegion &&->QRegion &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QRegion &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "begin",
                                    "signature": "->QRegion::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cbegin",
                                    "signature": "->QRegion::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "end",
                                    "signature": "->QRegion::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cend",
                                    "signature": "->QRegion::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rbegin",
                                    "signature": "->QRegion::const_reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "crbegin",
                                    "signature": "->QRegion::const_reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rend",
                                    "signature": "->QRegion::const_reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "crend",
                                    "signature": "->QRegion::const_reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "signature": "const QPoint &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "signature": "const QRect &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "signature": "int;int->QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "signature": "const QPoint &->QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "united",
                                    "signature": "const QRegion &->QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "united",
                                    "signature": "const QRect &->QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersected",
                                    "signature": "const QRegion &->QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersected",
                                    "signature": "const QRect &->QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "subtracted",
                                    "signature": "const QRegion &->QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "xored",
                                    "signature": "const QRegion &->QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersects",
                                    "signature": "const QRegion &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersects",
                                    "signature": "const QRect &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rects",
                                    "signature": "->QVector<QRect>",
                                    "type": "function"
                                },
                                {
                                    "name": "setRects",
                                    "signature": "const QRect *;int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rectCount",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator|",
                                    "signature": "const QRegion &->const QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator+",
                                    "signature": "const QRegion &->const QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator+",
                                    "signature": "const QRect &->const QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator&",
                                    "signature": "const QRegion &->const QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator&",
                                    "signature": "const QRect &->const QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator-",
                                    "signature": "const QRegion &->const QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator^",
                                    "signature": "const QRegion &->const QRegion",
                                    "type": "function"
                                },
                                {
                                    "name": "operator|=",
                                    "signature": "const QRegion &->QRegion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "const QRegion &->QRegion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "const QRect &->QRegion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator&=",
                                    "signature": "const QRegion &->QRegion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator&=",
                                    "signature": "const QRect &->QRegion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "signature": "const QRegion &->QRegion &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator^=",
                                    "signature": "const QRegion &->QRegion &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QRegion &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QRegion &->bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QRegion",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QRegion &;QRegion &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QRegion &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QRegion &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QRegion &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QRegion>",
                    "name": "region",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QObject",
                            "elements": [
                                {
                                    "enumerators": [
                                        "Clipboard",
                                        "Selection",
                                        "FindBuffer",
                                        "LastMode"
                                    ],
                                    "name": "Mode",
                                    "type": "enum"
                                },
                                {
                                    "defaults": "QClipboard::Clipboard",
                                    "name": "clear",
                                    "signature": "QClipboard::Mode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "supportsSelection",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "supportsFindBuffer",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "ownsSelection",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "ownsClipboard",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "ownsFindBuffer",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QClipboard::Clipboard",
                                    "name": "text",
                                    "signature": "QClipboard::Mode->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QClipboard::Clipboard",
                                    "name": "text",
                                    "signature": "QString &;QClipboard::Mode->QString",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QClipboard::Clipboard",
                                    "name": "setText",
                                    "signature": "const QString &;QClipboard::Mode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QClipboard::Clipboard",
                                    "name": "mimeData",
                                    "signature": "QClipboard::Mode->const QMimeData *",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QClipboard::Clipboard",
                                    "name": "setMimeData",
                                    "signature": "QMimeData *;QClipboard::Mode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QClipboard::Clipboard",
                                    "name": "image",
                                    "signature": "QClipboard::Mode->QImage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QClipboard::Clipboard",
                                    "name": "pixmap",
                                    "signature": "QClipboard::Mode->QPixmap",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QClipboard::Clipboard",
                                    "name": "setImage",
                                    "signature": "const QImage &;QClipboard::Mode->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QClipboard::Clipboard",
                                    "name": "setPixmap",
                                    "signature": "const QPixmap &;QClipboard::Mode->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "changed",
                                    "signature": "QClipboard::Mode->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "selectionChanged",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "findBufferChanged",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "dataChanged",
                                    "signature": "->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QClipboard",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QClipboard>",
                    "name": "clipboard",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QKeySequence &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QKeySequence &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "qHash",
                            "signature": "const QKeySequence &;uint->uint",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        "UnknownKey",
                                        "HelpContents",
                                        "WhatsThis",
                                        "Open",
                                        "Close",
                                        "Save",
                                        "New",
                                        "Delete",
                                        "Cut",
                                        "Copy",
                                        "Paste",
                                        "Undo",
                                        "Redo",
                                        "Back",
                                        "Forward",
                                        "Refresh",
                                        "ZoomIn",
                                        "ZoomOut",
                                        "Print",
                                        "AddTab",
                                        "NextChild",
                                        "PreviousChild",
                                        "Find",
                                        "FindNext",
                                        "FindPrevious",
                                        "Replace",
                                        "SelectAll",
                                        "Bold",
                                        "Italic",
                                        "Underline",
                                        "MoveToNextChar",
                                        "MoveToPreviousChar",
                                        "MoveToNextWord",
                                        "MoveToPreviousWord",
                                        "MoveToNextLine",
                                        "MoveToPreviousLine",
                                        "MoveToNextPage",
                                        "MoveToPreviousPage",
                                        "MoveToStartOfLine",
                                        "MoveToEndOfLine",
                                        "MoveToStartOfBlock",
                                        "MoveToEndOfBlock",
                                        "MoveToStartOfDocument",
                                        "MoveToEndOfDocument",
                                        "SelectNextChar",
                                        "SelectPreviousChar",
                                        "SelectNextWord",
                                        "SelectPreviousWord",
                                        "SelectNextLine",
                                        "SelectPreviousLine",
                                        "SelectNextPage",
                                        "SelectPreviousPage",
                                        "SelectStartOfLine",
                                        "SelectEndOfLine",
                                        "SelectStartOfBlock",
                                        "SelectEndOfBlock",
                                        "SelectStartOfDocument",
                                        "SelectEndOfDocument",
                                        "DeleteStartOfWord",
                                        "DeleteEndOfWord",
                                        "DeleteEndOfLine",
                                        "InsertParagraphSeparator",
                                        "InsertLineSeparator",
                                        "SaveAs",
                                        "Preferences",
                                        "Quit",
                                        "FullScreen",
                                        "Deselect",
                                        "DeleteCompleteLine",
                                        "Backspace",
                                        "Cancel"
                                    ],
                                    "name": "StandardKey",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "NativeText",
                                        "PortableText"
                                    ],
                                    "name": "SequenceFormat",
                                    "type": "enum"
                                },
                                {
                                    "name": "QKeySequence",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "QKeySequence::NativeText",
                                    "name": "QKeySequence",
                                    "signature": "const QString &;QKeySequence::SequenceFormat",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "0;0;0",
                                    "name": "QKeySequence",
                                    "signature": "int;int;int;int",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QKeySequence",
                                    "signature": "const QKeySequence &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QKeySequence",
                                    "signature": "QKeySequence::StandardKey",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QKeySequence",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "NoMatch",
                                        "PartialMatch",
                                        "ExactMatch"
                                    ],
                                    "name": "SequenceMatch",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "defaults": "QKeySequence::PortableText",
                                    "name": "toString",
                                    "signature": "QKeySequence::SequenceFormat->QString",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QKeySequence::PortableText",
                                    "name": "fromString",
                                    "signature": "const QString &;QKeySequence::SequenceFormat->QKeySequence",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "QKeySequence::PortableText",
                                    "name": "listFromString",
                                    "signature": "const QString &;QKeySequence::SequenceFormat->QList<QKeySequence>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "defaults": "QKeySequence::PortableText",
                                    "name": "listToString",
                                    "signature": "const QList<QKeySequence> &;QKeySequence::SequenceFormat->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matches",
                                    "signature": "const QKeySequence &->QKeySequence::SequenceMatch",
                                    "type": "function"
                                },
                                {
                                    "name": "mnemonic",
                                    "signature": "const QString &->QKeySequence",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "keyBindings",
                                    "signature": "QKeySequence::StandardKey->QList<QKeySequence>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "signature": "uint->int",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QKeySequence &->QKeySequence &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QKeySequence &&->QKeySequence &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QKeySequence &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QKeySequence &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QKeySequence &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "signature": "const QKeySequence &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "signature": "const QKeySequence &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<=",
                                    "signature": "const QKeySequence &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>=",
                                    "signature": "const QKeySequence &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "signature": "->QKeySequence::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QKeySequence",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QKeySequence &;QKeySequence &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QKeySequence &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QKeySequence>",
                    "name": "keysequence",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QBrush",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBrush",
                                    "signature": "Qt::BrushStyle",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "Qt::SolidPattern",
                                    "name": "QBrush",
                                    "signature": "const QColor &;Qt::BrushStyle",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "Qt::SolidPattern",
                                    "name": "QBrush",
                                    "signature": "Qt::GlobalColor;Qt::BrushStyle",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBrush",
                                    "signature": "const QColor &;const QPixmap &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBrush",
                                    "signature": "Qt::GlobalColor;const QPixmap &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBrush",
                                    "signature": "const QPixmap &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBrush",
                                    "signature": "const QImage &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBrush",
                                    "signature": "const QBrush &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBrush",
                                    "signature": "const QGradient &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QBrush",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QBrush &->QBrush &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QBrush &&->QBrush &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QBrush &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "style",
                                    "signature": "->Qt::BrushStyle",
                                    "type": "function"
                                },
                                {
                                    "name": "setStyle",
                                    "signature": "Qt::BrushStyle->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matrix",
                                    "signature": "->const QMatrix &",
                                    "type": "function"
                                },
                                {
                                    "name": "setMatrix",
                                    "signature": "const QMatrix &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transform",
                                    "signature": "->QTransform",
                                    "type": "function"
                                },
                                {
                                    "name": "setTransform",
                                    "signature": "const QTransform &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "texture",
                                    "signature": "->QPixmap",
                                    "type": "function"
                                },
                                {
                                    "name": "setTexture",
                                    "signature": "const QPixmap &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textureImage",
                                    "signature": "->QImage",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextureImage",
                                    "signature": "const QImage &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "color",
                                    "signature": "->const QColor &",
                                    "type": "function"
                                },
                                {
                                    "name": "setColor",
                                    "signature": "const QColor &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setColor",
                                    "signature": "Qt::GlobalColor->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "gradient",
                                    "signature": "->const QGradient *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isOpaque",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QBrush &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QBrush &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "signature": "->QBrush::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QBrush",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QBrush &;QBrush &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QBrush &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QBrush &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QBrush &->QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        "LinearGradient",
                                        "RadialGradient",
                                        "ConicalGradient",
                                        "NoGradient"
                                    ],
                                    "name": "Type",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "PadSpread",
                                        "ReflectSpread",
                                        "RepeatSpread"
                                    ],
                                    "name": "Spread",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "LogicalMode",
                                        "StretchToDeviceMode",
                                        "ObjectBoundingMode"
                                    ],
                                    "name": "CoordinateMode",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "ColorInterpolation",
                                        "ComponentInterpolation"
                                    ],
                                    "name": "InterpolationMode",
                                    "type": "enum"
                                },
                                {
                                    "name": "QGradient",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "type",
                                    "signature": "->QGradient::Type",
                                    "type": "function"
                                },
                                {
                                    "name": "setSpread",
                                    "signature": "QGradient::Spread->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "spread",
                                    "signature": "->QGradient::Spread",
                                    "type": "function"
                                },
                                {
                                    "name": "setColorAt",
                                    "signature": "qreal;const QColor &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setStops",
                                    "signature": "const QGradientStops &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "stops",
                                    "signature": "->QGradientStops",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "coordinateMode",
                                    "signature": "->QGradient::CoordinateMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setCoordinateMode",
                                    "signature": "QGradient::CoordinateMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "interpolationMode",
                                    "signature": "->QGradient::InterpolationMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setInterpolationMode",
                                    "signature": "QGradient::InterpolationMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QGradient &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QGradient &->bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QGradient",
                            "type": "class"
                        },
                        {
                            "base": "QGradient",
                            "elements": [
                                {
                                    "name": "QLinearGradient",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLinearGradient",
                                    "signature": "const QLinearGradient &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QLinearGradient",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QLinearGradient &->QLinearGradient &",
                                    "type": "function"
                                },
                                {
                                    "name": "QLinearGradient",
                                    "signature": "const QPointF &;const QPointF &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLinearGradient",
                                    "signature": "qreal;qreal;qreal;qreal",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "start",
                                    "signature": "->QPointF",
                                    "type": "function"
                                },
                                {
                                    "name": "setStart",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setStart",
                                    "signature": "qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "finalStop",
                                    "signature": "->QPointF",
                                    "type": "function"
                                },
                                {
                                    "name": "setFinalStop",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setFinalStop",
                                    "signature": "qreal;qreal->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QLinearGradient",
                            "type": "class"
                        },
                        {
                            "base": "QGradient",
                            "elements": [
                                {
                                    "name": "QRadialGradient",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRadialGradient",
                                    "signature": "const QRadialGradient &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QRadialGradient &->QRadialGradient &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QRadialGradient",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QRadialGradient",
                                    "signature": "const QPointF &;qreal;const QPointF &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRadialGradient",
                                    "signature": "qreal;qreal;qreal;qreal;qreal",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRadialGradient",
                                    "signature": "const QPointF &;qreal",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRadialGradient",
                                    "signature": "qreal;qreal;qreal",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRadialGradient",
                                    "signature": "const QPointF &;qreal;const QPointF &;qreal",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRadialGradient",
                                    "signature": "qreal;qreal;qreal;qreal;qreal;qreal",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "center",
                                    "signature": "->QPointF",
                                    "type": "function"
                                },
                                {
                                    "name": "setCenter",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setCenter",
                                    "signature": "qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "focalPoint",
                                    "signature": "->QPointF",
                                    "type": "function"
                                },
                                {
                                    "name": "setFocalPoint",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setFocalPoint",
                                    "signature": "qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "radius",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setRadius",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "centerRadius",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setCenterRadius",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "focalRadius",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setFocalRadius",
                                    "signature": "qreal->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QRadialGradient",
                            "type": "class"
                        },
                        {
                            "base": "QGradient",
                            "elements": [
                                {
                                    "name": "QConicalGradient",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QConicalGradient",
                                    "signature": "const QConicalGradient &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QConicalGradient &->QConicalGradient &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QConicalGradient",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QConicalGradient",
                                    "signature": "const QPointF &;qreal",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QConicalGradient",
                                    "signature": "qreal;qreal;qreal",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "center",
                                    "signature": "->QPointF",
                                    "type": "function"
                                },
                                {
                                    "name": "setCenter",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setCenter",
                                    "signature": "qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "angle",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setAngle",
                                    "signature": "qreal->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QConicalGradient",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QBrush>",
                    "name": "brush",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        "Overline",
                                        "Underline",
                                        "StrikeOut",
                                        "RightToLeft",
                                        "SplitLigature"
                                    ],
                                    "name": "GlyphRunFlag",
                                    "type": "enum"
                                },
                                {
                                    "name": "QGlyphRun",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QGlyphRun",
                                    "signature": "const QGlyphRun &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QGlyphRun &&->QGlyphRun &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QGlyphRun &->QGlyphRun &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QGlyphRun",
                                    "type": "destructor"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QGlyphRun &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rawFont",
                                    "signature": "->QRawFont",
                                    "type": "function"
                                },
                                {
                                    "name": "setRawFont",
                                    "signature": "const QRawFont &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRawData",
                                    "signature": "const quint32 *;const QPointF *;int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "glyphIndexes",
                                    "signature": "->QVector<quint32>",
                                    "type": "function"
                                },
                                {
                                    "name": "setGlyphIndexes",
                                    "signature": "const QVector<quint32> &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "positions",
                                    "signature": "->QVector<QPointF>",
                                    "type": "function"
                                },
                                {
                                    "name": "setPositions",
                                    "signature": "const QVector<QPointF> &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QGlyphRun &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QGlyphRun &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setOverline",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "overline",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setUnderline",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "underline",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setStrikeOut",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "strikeOut",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setRightToLeft",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRightToLeft",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "defaults": "true",
                                    "name": "setFlag",
                                    "signature": "QGlyphRun::GlyphRunFlag;bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setFlags",
                                    "signature": "QGlyphRun::GlyphRunFlags->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "flags",
                                    "signature": "->QGlyphRun::GlyphRunFlags",
                                    "type": "function"
                                },
                                {
                                    "name": "setBoundingRect",
                                    "signature": "const QRectF &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "signature": "->QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "signature": "->bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QGlyphRun",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QGlyphRun &;QGlyphRun &->void",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QGlyphRun>",
                    "name": "glyphrun",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        "Antialiasing",
                                        "TextAntialiasing",
                                        "SmoothPixmapTransform",
                                        "HighQualityAntialiasing",
                                        "NonCosmeticDefaultPen",
                                        "Qt4CompatiblePainting"
                                    ],
                                    "name": "RenderHint",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "OpaqueHint"
                                    ],
                                    "name": "PixmapFragmentHint",
                                    "type": "enum"
                                },
                                {
                                    "name": "QPainter",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPainter",
                                    "signature": "QPaintDevice *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPainter",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "device",
                                    "signature": "->QPaintDevice *",
                                    "type": "function"
                                },
                                {
                                    "name": "begin",
                                    "signature": "QPaintDevice *->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "end",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isActive",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "initFrom",
                                    "signature": "const QPaintDevice *->void",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "CompositionMode_SourceOver",
                                        "CompositionMode_DestinationOver",
                                        "CompositionMode_Clear",
                                        "CompositionMode_Source",
                                        "CompositionMode_Destination",
                                        "CompositionMode_SourceIn",
                                        "CompositionMode_DestinationIn",
                                        "CompositionMode_SourceOut",
                                        "CompositionMode_DestinationOut",
                                        "CompositionMode_SourceAtop",
                                        "CompositionMode_DestinationAtop",
                                        "CompositionMode_Xor",
                                        "CompositionMode_Plus",
                                        "CompositionMode_Multiply",
                                        "CompositionMode_Screen",
                                        "CompositionMode_Overlay",
                                        "CompositionMode_Darken",
                                        "CompositionMode_Lighten",
                                        "CompositionMode_ColorDodge",
                                        "CompositionMode_ColorBurn",
                                        "CompositionMode_HardLight",
                                        "CompositionMode_SoftLight",
                                        "CompositionMode_Difference",
                                        "CompositionMode_Exclusion",
                                        "RasterOp_SourceOrDestination",
                                        "RasterOp_SourceAndDestination",
                                        "RasterOp_SourceXorDestination",
                                        "RasterOp_NotSourceAndNotDestination",
                                        "RasterOp_NotSourceOrNotDestination",
                                        "RasterOp_NotSourceXorDestination",
                                        "RasterOp_NotSource",
                                        "RasterOp_NotSourceAndDestination",
                                        "RasterOp_SourceAndNotDestination",
                                        "RasterOp_NotSourceOrDestination",
                                        "RasterOp_SourceOrNotDestination",
                                        "RasterOp_ClearDestination",
                                        "RasterOp_SetDestination",
                                        "RasterOp_NotDestination"
                                    ],
                                    "name": "CompositionMode",
                                    "type": "enum"
                                },
                                {
                                    "name": "setCompositionMode",
                                    "signature": "QPainter::CompositionMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "compositionMode",
                                    "signature": "->QPainter::CompositionMode",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "font",
                                    "signature": "->const QFont &",
                                    "type": "function"
                                },
                                {
                                    "name": "setFont",
                                    "signature": "const QFont &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fontMetrics",
                                    "signature": "->QFontMetrics",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fontInfo",
                                    "signature": "->QFontInfo",
                                    "type": "function"
                                },
                                {
                                    "name": "setPen",
                                    "signature": "const QColor &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setPen",
                                    "signature": "const QPen &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setPen",
                                    "signature": "Qt::PenStyle->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pen",
                                    "signature": "->const QPen &",
                                    "type": "function"
                                },
                                {
                                    "name": "setBrush",
                                    "signature": "const QBrush &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBrush",
                                    "signature": "Qt::BrushStyle->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "brush",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "name": "setBackgroundMode",
                                    "signature": "Qt::BGMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "backgroundMode",
                                    "signature": "->Qt::BGMode",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "brushOrigin",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "name": "setBrushOrigin",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBrushOrigin",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBrushOrigin",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBackground",
                                    "signature": "const QBrush &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "background",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "opacity",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setOpacity",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "clipRegion",
                                    "signature": "->QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "clipPath",
                                    "signature": "->QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::ReplaceClip",
                                    "name": "setClipRect",
                                    "signature": "const QRectF &;Qt::ClipOperation->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::ReplaceClip",
                                    "name": "setClipRect",
                                    "signature": "const QRect &;Qt::ClipOperation->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::ReplaceClip",
                                    "name": "setClipRect",
                                    "signature": "int;int;int;int;Qt::ClipOperation->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::ReplaceClip",
                                    "name": "setClipRegion",
                                    "signature": "const QRegion &;Qt::ClipOperation->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::ReplaceClip",
                                    "name": "setClipPath",
                                    "signature": "const QPainterPath &;Qt::ClipOperation->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setClipping",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasClipping",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "clipBoundingRect",
                                    "signature": "->QRectF",
                                    "type": "function"
                                },
                                {
                                    "name": "save",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "restore",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMatrix",
                                    "signature": "const QMatrix &;bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matrix",
                                    "signature": "->const QMatrix &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "deviceMatrix",
                                    "signature": "->const QMatrix &",
                                    "type": "function"
                                },
                                {
                                    "name": "resetMatrix",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "false",
                                    "name": "setTransform",
                                    "signature": "const QTransform &;bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transform",
                                    "signature": "->const QTransform &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "deviceTransform",
                                    "signature": "->const QTransform &",
                                    "type": "function"
                                },
                                {
                                    "name": "resetTransform",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setWorldMatrix",
                                    "signature": "const QMatrix &;bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "worldMatrix",
                                    "signature": "->const QMatrix &",
                                    "type": "function"
                                },
                                {
                                    "defaults": "false",
                                    "name": "setWorldTransform",
                                    "signature": "const QTransform &;bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "worldTransform",
                                    "signature": "->const QTransform &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "combinedMatrix",
                                    "signature": "->QMatrix",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "combinedTransform",
                                    "signature": "->QTransform",
                                    "type": "function"
                                },
                                {
                                    "name": "setMatrixEnabled",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matrixEnabled",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setWorldMatrixEnabled",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "worldMatrixEnabled",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "scale",
                                    "signature": "qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "shear",
                                    "signature": "qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "rotate",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "signature": "qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "window",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindow",
                                    "signature": "const QRect &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindow",
                                    "signature": "int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "viewport",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "setViewport",
                                    "signature": "const QRect &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setViewport",
                                    "signature": "int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setViewTransformEnabled",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "viewTransformEnabled",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "strokePath",
                                    "signature": "const QPainterPath &;const QPen &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fillPath",
                                    "signature": "const QPainterPath &;const QBrush &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPath",
                                    "signature": "const QPainterPath &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPoint",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPoint",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPoint",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPoints",
                                    "signature": "const QPointF *;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPoints",
                                    "signature": "const QPolygonF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPoints",
                                    "signature": "const QPoint *;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPoints",
                                    "signature": "const QPolygon &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawLine",
                                    "signature": "const QLineF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawLine",
                                    "signature": "const QLine &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawLine",
                                    "signature": "int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawLine",
                                    "signature": "const QPoint &;const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawLine",
                                    "signature": "const QPointF &;const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawLines",
                                    "signature": "const QLineF *;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawLines",
                                    "signature": "const QVector<QLineF> &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawLines",
                                    "signature": "const QPointF *;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawLines",
                                    "signature": "const QVector<QPointF> &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawLines",
                                    "signature": "const QLine *;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawLines",
                                    "signature": "const QVector<QLine> &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawLines",
                                    "signature": "const QPoint *;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawLines",
                                    "signature": "const QVector<QPoint> &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawRect",
                                    "signature": "const QRectF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawRect",
                                    "signature": "int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawRect",
                                    "signature": "const QRect &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawRects",
                                    "signature": "const QRectF *;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawRects",
                                    "signature": "const QVector<QRectF> &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawRects",
                                    "signature": "const QRect *;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawRects",
                                    "signature": "const QVector<QRect> &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawEllipse",
                                    "signature": "const QRectF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawEllipse",
                                    "signature": "const QRect &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawEllipse",
                                    "signature": "int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawEllipse",
                                    "signature": "const QPointF &;qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawEllipse",
                                    "signature": "const QPoint &;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPolyline",
                                    "signature": "const QPointF *;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPolyline",
                                    "signature": "const QPolygonF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPolyline",
                                    "signature": "const QPoint *;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPolyline",
                                    "signature": "const QPolygon &->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::OddEvenFill",
                                    "name": "drawPolygon",
                                    "signature": "const QPointF *;int;Qt::FillRule->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::OddEvenFill",
                                    "name": "drawPolygon",
                                    "signature": "const QPolygonF &;Qt::FillRule->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::OddEvenFill",
                                    "name": "drawPolygon",
                                    "signature": "const QPoint *;int;Qt::FillRule->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::OddEvenFill",
                                    "name": "drawPolygon",
                                    "signature": "const QPolygon &;Qt::FillRule->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawConvexPolygon",
                                    "signature": "const QPointF *;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawConvexPolygon",
                                    "signature": "const QPolygonF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawConvexPolygon",
                                    "signature": "const QPoint *;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawConvexPolygon",
                                    "signature": "const QPolygon &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawArc",
                                    "signature": "const QRectF &;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawArc",
                                    "signature": "const QRect &;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawArc",
                                    "signature": "int;int;int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPie",
                                    "signature": "const QRectF &;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPie",
                                    "signature": "int;int;int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPie",
                                    "signature": "const QRect &;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawChord",
                                    "signature": "const QRectF &;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawChord",
                                    "signature": "int;int;int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawChord",
                                    "signature": "const QRect &;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::AbsoluteSize",
                                    "name": "drawRoundedRect",
                                    "signature": "const QRectF &;qreal;qreal;Qt::SizeMode->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "defaults": "Qt::AbsoluteSize",
                                    "name": "drawRoundedRect",
                                    "signature": "int;int;int;int;qreal;qreal;Qt::SizeMode->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::AbsoluteSize",
                                    "name": "drawRoundedRect",
                                    "signature": "const QRect &;qreal;qreal;Qt::SizeMode->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawRoundRect",
                                    "signature": "const QRectF &;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawRoundRect",
                                    "signature": "int;int;int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawRoundRect",
                                    "signature": "const QRect &;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QPointF()",
                                    "name": "drawTiledPixmap",
                                    "signature": "const QRectF &;const QPixmap &;const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "defaults": "0;0",
                                    "name": "drawTiledPixmap",
                                    "signature": "int;int;int;int;const QPixmap &;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QPoint()",
                                    "name": "drawTiledPixmap",
                                    "signature": "const QRect &;const QPixmap &;const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPicture",
                                    "signature": "const QPointF &;const QPicture &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPicture",
                                    "signature": "int;int;const QPicture &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPicture",
                                    "signature": "const QPoint &;const QPicture &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPixmap",
                                    "signature": "const QRectF &;const QPixmap &;const QRectF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPixmap",
                                    "signature": "const QRect &;const QPixmap &;const QRect &->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "drawPixmap",
                                    "signature": "int;int;int;int;const QPixmap &;int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "drawPixmap",
                                    "signature": "int;int;const QPixmap &;int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPixmap",
                                    "signature": "const QPointF &;const QPixmap &;const QRectF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPixmap",
                                    "signature": "const QPoint &;const QPixmap &;const QRect &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPixmap",
                                    "signature": "const QPointF &;const QPixmap &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPixmap",
                                    "signature": "const QPoint &;const QPixmap &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPixmap",
                                    "signature": "int;int;const QPixmap &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPixmap",
                                    "signature": "const QRect &;const QPixmap &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPixmap",
                                    "signature": "int;int;int;int;const QPixmap &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawPixmapFragments",
                                    "signature": "const QPainter::PixmapFragment *;int;const QPixmap &;QPainter::PixmapFragmentHints->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::ImageConversionFlags(Qt::AutoColor)",
                                    "name": "drawImage",
                                    "signature": "const QRectF &;const QImage &;const QRectF &;Qt::ImageConversionFlags->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::ImageConversionFlags(Qt::AutoColor)",
                                    "name": "drawImage",
                                    "signature": "const QRect &;const QImage &;const QRect &;Qt::ImageConversionFlags->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::ImageConversionFlags(Qt::AutoColor)",
                                    "name": "drawImage",
                                    "signature": "const QPointF &;const QImage &;const QRectF &;Qt::ImageConversionFlags->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::ImageConversionFlags(Qt::AutoColor)",
                                    "name": "drawImage",
                                    "signature": "const QPoint &;const QImage &;const QRect &;Qt::ImageConversionFlags->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawImage",
                                    "signature": "const QRectF &;const QImage &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawImage",
                                    "signature": "const QRect &;const QImage &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawImage",
                                    "signature": "const QPointF &;const QImage &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawImage",
                                    "signature": "const QPoint &;const QImage &->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "defaults": "Qt::ImageConversionFlags(Qt::AutoColor);-1;-1;0;0",
                                    "name": "drawImage",
                                    "signature": "int;int;const QImage &;int;int;int;int;Qt::ImageConversionFlags->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setLayoutDirection",
                                    "signature": "Qt::LayoutDirection->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "layoutDirection",
                                    "signature": "->Qt::LayoutDirection",
                                    "type": "function"
                                },
                                {
                                    "name": "drawGlyphRun",
                                    "signature": "const QPointF &;const QGlyphRun &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawStaticText",
                                    "signature": "const QPointF &;const QStaticText &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawStaticText",
                                    "signature": "const QPoint &;const QStaticText &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawStaticText",
                                    "signature": "int;int;const QStaticText &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawText",
                                    "signature": "const QPointF &;const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawText",
                                    "signature": "const QPoint &;const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawText",
                                    "signature": "int;int;const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawText",
                                    "signature": "const QPointF &;const QString &;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawText",
                                    "signature": "const QRectF &;int;const QString &;QRectF *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawText",
                                    "signature": "const QRect &;int;const QString &;QRect *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawText",
                                    "signature": "int;int;int;int;int;const QString &;QRect *->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QTextOption()",
                                    "name": "drawText",
                                    "signature": "const QRectF &;const QString &;const QTextOption &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "boundingRect",
                                    "signature": "const QRectF &;int;const QString &->QRectF",
                                    "type": "function"
                                },
                                {
                                    "name": "boundingRect",
                                    "signature": "const QRect &;int;const QString &->QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "boundingRect",
                                    "signature": "int;int;int;int;int;const QString &->QRect",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QTextOption()",
                                    "name": "boundingRect",
                                    "signature": "const QRectF &;const QString &;const QTextOption &->QRectF",
                                    "type": "function"
                                },
                                {
                                    "name": "drawTextItem",
                                    "signature": "const QPointF &;const QTextItem &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawTextItem",
                                    "signature": "int;int;const QTextItem &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "drawTextItem",
                                    "signature": "const QPoint &;const QTextItem &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "signature": "const QRectF &;const QBrush &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "signature": "int;int;int;int;const QBrush &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "signature": "const QRect &;const QBrush &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "signature": "const QRectF &;const QColor &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "signature": "int;int;int;int;const QColor &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "signature": "const QRect &;const QColor &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "signature": "int;int;int;int;Qt::GlobalColor->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "signature": "const QRect &;Qt::GlobalColor->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "signature": "const QRectF &;Qt::GlobalColor->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "signature": "int;int;int;int;Qt::BrushStyle->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "signature": "const QRect &;Qt::BrushStyle->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fillRect",
                                    "signature": "const QRectF &;Qt::BrushStyle->void",
                                    "type": "function"
                                },
                                {
                                    "name": "eraseRect",
                                    "signature": "const QRectF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "eraseRect",
                                    "signature": "int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "eraseRect",
                                    "signature": "const QRect &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRenderHint",
                                    "signature": "QPainter::RenderHint;bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRenderHints",
                                    "signature": "QPainter::RenderHints;bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "renderHints",
                                    "signature": "->QPainter::RenderHints",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "testRenderHint",
                                    "signature": "QPainter::RenderHint->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "paintEngine",
                                    "signature": "->QPaintEngine *",
                                    "type": "function"
                                },
                                {
                                    "name": "setRedirected",
                                    "signature": "const QPaintDevice *;QPaintDevice *;const QPoint &->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "redirected",
                                    "signature": "const QPaintDevice *;QPoint *->QPaintDevice *",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "restoreRedirected",
                                    "signature": "const QPaintDevice *->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "beginNativePainting",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "endNativePainting",
                                    "signature": "->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QPainter",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "signature": "QPainter::RenderHints::enum_type;QPainter::RenderHints::enum_type->QFlags<QPainter::RenderHints::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QPainter::RenderHints::enum_type;QFlags<QPainter::RenderHints::enum_type>->QFlags<QPainter::RenderHints::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QPainter::RenderHints::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QPainter>",
                    "name": "painter",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        "MoveToElement",
                                        "LineToElement",
                                        "CurveToElement",
                                        "CurveToDataElement"
                                    ],
                                    "name": "ElementType",
                                    "type": "enum"
                                },
                                {
                                    "name": "QPainterPath",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPainterPath",
                                    "signature": "const QPointF &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPainterPath",
                                    "signature": "const QPainterPath &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QPainterPath &->QPainterPath &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QPainterPath &&->QPainterPath &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QPainterPath",
                                    "type": "destructor"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QPainterPath &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "closeSubpath",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTo",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTo",
                                    "signature": "qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "lineTo",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "lineTo",
                                    "signature": "qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "arcMoveTo",
                                    "signature": "const QRectF &;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "arcMoveTo",
                                    "signature": "qreal;qreal;qreal;qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "arcTo",
                                    "signature": "const QRectF &;qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "arcTo",
                                    "signature": "qreal;qreal;qreal;qreal;qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "cubicTo",
                                    "signature": "const QPointF &;const QPointF &;const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "cubicTo",
                                    "signature": "qreal;qreal;qreal;qreal;qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "quadTo",
                                    "signature": "const QPointF &;const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "quadTo",
                                    "signature": "qreal;qreal;qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentPosition",
                                    "signature": "->QPointF",
                                    "type": "function"
                                },
                                {
                                    "name": "addRect",
                                    "signature": "const QRectF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addRect",
                                    "signature": "qreal;qreal;qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addEllipse",
                                    "signature": "const QRectF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addEllipse",
                                    "signature": "qreal;qreal;qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addEllipse",
                                    "signature": "const QPointF &;qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addPolygon",
                                    "signature": "const QPolygonF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addText",
                                    "signature": "const QPointF &;const QFont &;const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addText",
                                    "signature": "qreal;qreal;const QFont &;const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addPath",
                                    "signature": "const QPainterPath &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addRegion",
                                    "signature": "const QRegion &->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::AbsoluteSize",
                                    "name": "addRoundedRect",
                                    "signature": "const QRectF &;qreal;qreal;Qt::SizeMode->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "defaults": "Qt::AbsoluteSize",
                                    "name": "addRoundedRect",
                                    "signature": "qreal;qreal;qreal;qreal;qreal;qreal;Qt::SizeMode->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addRoundRect",
                                    "signature": "const QRectF &;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addRoundRect",
                                    "signature": "qreal;qreal;qreal;qreal;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addRoundRect",
                                    "signature": "const QRectF &;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addRoundRect",
                                    "signature": "qreal;qreal;qreal;qreal;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "connectPath",
                                    "signature": "const QPainterPath &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "signature": "const QPointF &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "signature": "const QRectF &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersects",
                                    "signature": "const QRectF &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "signature": "qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "signature": "qreal;qreal->QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "signature": "const QPointF &->QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "signature": "->QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "controlPointRect",
                                    "signature": "->QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fillRule",
                                    "signature": "->Qt::FillRule",
                                    "type": "function"
                                },
                                {
                                    "name": "setFillRule",
                                    "signature": "Qt::FillRule->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toReversed",
                                    "signature": "->QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toSubpathPolygons",
                                    "signature": "const QMatrix &->QList<QPolygonF>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toFillPolygons",
                                    "signature": "const QMatrix &->QList<QPolygonF>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toFillPolygon",
                                    "signature": "const QMatrix &->QPolygonF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toSubpathPolygons",
                                    "signature": "const QTransform &->QList<QPolygonF>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toFillPolygons",
                                    "signature": "const QTransform &->QList<QPolygonF>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toFillPolygon",
                                    "signature": "const QTransform &->QPolygonF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "elementCount",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "elementAt",
                                    "signature": "int->QPainterPath::Element",
                                    "type": "function"
                                },
                                {
                                    "name": "setElementPositionAt",
                                    "signature": "int;qreal;qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "length",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "percentAtLength",
                                    "signature": "qreal->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pointAtPercent",
                                    "signature": "qreal->QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "angleAtPercent",
                                    "signature": "qreal->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "slopeAtPercent",
                                    "signature": "qreal->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersects",
                                    "signature": "const QPainterPath &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "signature": "const QPainterPath &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "united",
                                    "signature": "const QPainterPath &->QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersected",
                                    "signature": "const QPainterPath &->QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "subtracted",
                                    "signature": "const QPainterPath &->QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "subtractedInverted",
                                    "signature": "const QPainterPath &->QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "simplified",
                                    "signature": "->QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QPainterPath &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QPainterPath &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator&",
                                    "signature": "const QPainterPath &->QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator|",
                                    "signature": "const QPainterPath &->QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator+",
                                    "signature": "const QPainterPath &->QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator-",
                                    "signature": "const QPainterPath &->QPainterPath",
                                    "type": "function"
                                },
                                {
                                    "name": "operator&=",
                                    "signature": "const QPainterPath &->QPainterPath &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator|=",
                                    "signature": "const QPainterPath &->QPainterPath &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "signature": "const QPainterPath &->QPainterPath &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "signature": "const QPainterPath &->QPainterPath &",
                                    "type": "function"
                                }
                            ],
                            "name": "QPainterPath",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QPainterPath &;QPainterPath &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QPainterPath &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QPainterPath &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QPainterPathStroker",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPainterPathStroker",
                                    "signature": "const QPen &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPainterPathStroker",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setWidth",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setCapStyle",
                                    "signature": "Qt::PenCapStyle->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capStyle",
                                    "signature": "->Qt::PenCapStyle",
                                    "type": "function"
                                },
                                {
                                    "name": "setJoinStyle",
                                    "signature": "Qt::PenJoinStyle->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "joinStyle",
                                    "signature": "->Qt::PenJoinStyle",
                                    "type": "function"
                                },
                                {
                                    "name": "setMiterLimit",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "miterLimit",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurveThreshold",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "curveThreshold",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setDashPattern",
                                    "signature": "Qt::PenStyle->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setDashPattern",
                                    "signature": "const QVector<qreal> &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dashPattern",
                                    "signature": "->QVector<qreal>",
                                    "type": "function"
                                },
                                {
                                    "name": "setDashOffset",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dashOffset",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "createStroke",
                                    "signature": "const QPainterPath &->QPainterPath",
                                    "type": "function"
                                }
                            ],
                            "name": "QPainterPathStroker",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QPainterPath &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QPainterPath>",
                    "name": "painterpath",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "name": "QPalette",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPalette",
                                    "signature": "const QColor &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPalette",
                                    "signature": "Qt::GlobalColor",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPalette",
                                    "signature": "const QColor &;const QColor &",
                                    "type": "constructor"
                                },
                                {
                                    "checked": 0,
                                    "name": "QPalette",
                                    "signature": "const QBrush &;const QBrush &;const QBrush &;const QBrush &;const QBrush &;const QBrush &;const QBrush &;const QBrush &;const QBrush &",
                                    "type": "constructor"
                                },
                                {
                                    "checked": 0,
                                    "name": "QPalette",
                                    "signature": "const QColor &;const QColor &;const QColor &;const QColor &;const QColor &;const QColor &;const QColor &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPalette",
                                    "signature": "const QPalette &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPalette",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QPalette &->QPalette &",
                                    "type": "function"
                                },
                                {
                                    "name": "QPalette",
                                    "signature": "QPalette &&",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QPalette &&->QPalette &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QPalette &->void",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "Active",
                                        "Disabled",
                                        "Inactive",
                                        "NColorGroups",
                                        "Current",
                                        "All",
                                        "Normal"
                                    ],
                                    "name": "ColorGroup",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "WindowText",
                                        "Button",
                                        "Light",
                                        "Midlight",
                                        "Dark",
                                        "Mid",
                                        "Text",
                                        "BrightText",
                                        "ButtonText",
                                        "Base",
                                        "Window",
                                        "Shadow",
                                        "Highlight",
                                        "HighlightedText",
                                        "Link",
                                        "LinkVisited",
                                        "AlternateBase",
                                        "NoRole",
                                        "ToolTipBase",
                                        "ToolTipText",
                                        "NColorRoles",
                                        "Foreground",
                                        "Background"
                                    ],
                                    "name": "ColorRole",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "currentColorGroup",
                                    "signature": "->QPalette::ColorGroup",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentColorGroup",
                                    "signature": "QPalette::ColorGroup->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "color",
                                    "signature": "QPalette::ColorGroup;QPalette::ColorRole->const QColor &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "brush",
                                    "signature": "QPalette::ColorGroup;QPalette::ColorRole->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "name": "setColor",
                                    "signature": "QPalette::ColorGroup;QPalette::ColorRole;const QColor &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setColor",
                                    "signature": "QPalette::ColorRole;const QColor &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBrush",
                                    "signature": "QPalette::ColorRole;const QBrush &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isBrushSet",
                                    "signature": "QPalette::ColorGroup;QPalette::ColorRole->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setBrush",
                                    "signature": "QPalette::ColorGroup;QPalette::ColorRole;const QBrush &->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "setColorGroup",
                                    "signature": "QPalette::ColorGroup;const QBrush &;const QBrush &;const QBrush &;const QBrush &;const QBrush &;const QBrush &;const QBrush &;const QBrush &;const QBrush &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEqual",
                                    "signature": "QPalette::ColorGroup;QPalette::ColorGroup->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "color",
                                    "signature": "QPalette::ColorRole->const QColor &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "brush",
                                    "signature": "QPalette::ColorRole->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "foreground",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowText",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "button",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "light",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dark",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mid",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "base",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alternateBase",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toolTipBase",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toolTipText",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "background",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "window",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "midlight",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "brightText",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "buttonText",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "shadow",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "highlight",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "highlightedText",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "link",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "linkVisited",
                                    "signature": "->const QBrush &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QPalette &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QPalette &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isCopyOf",
                                    "signature": "const QPalette &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cacheKey",
                                    "signature": "->qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "resolve",
                                    "signature": "const QPalette &->QPalette",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "resolve",
                                    "signature": "->uint",
                                    "type": "function"
                                },
                                {
                                    "name": "resolve",
                                    "signature": "uint->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QPalette",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QPalette &;QPalette &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QPalette &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QPalette &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QPalette &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QPalette>",
                    "name": "palette",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QPen &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QPen &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QPen",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPen",
                                    "signature": "Qt::PenStyle",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPen",
                                    "signature": "const QColor &",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "Qt::BevelJoin;Qt::SquareCap;Qt::SolidLine",
                                    "name": "QPen",
                                    "signature": "const QBrush &;qreal;Qt::PenStyle;Qt::PenCapStyle;Qt::PenJoinStyle",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPen",
                                    "signature": "const QPen &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPen",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QPen &->QPen &",
                                    "type": "function"
                                },
                                {
                                    "name": "QPen",
                                    "signature": "QPen &&",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QPen &&->QPen &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QPen &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "style",
                                    "signature": "->Qt::PenStyle",
                                    "type": "function"
                                },
                                {
                                    "name": "setStyle",
                                    "signature": "Qt::PenStyle->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dashPattern",
                                    "signature": "->QVector<qreal>",
                                    "type": "function"
                                },
                                {
                                    "name": "setDashPattern",
                                    "signature": "const QVector<qreal> &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dashOffset",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setDashOffset",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "miterLimit",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setMiterLimit",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "widthF",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setWidthF",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setWidth",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "color",
                                    "signature": "->QColor",
                                    "type": "function"
                                },
                                {
                                    "name": "setColor",
                                    "signature": "const QColor &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "brush",
                                    "signature": "->QBrush",
                                    "type": "function"
                                },
                                {
                                    "name": "setBrush",
                                    "signature": "const QBrush &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSolid",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capStyle",
                                    "signature": "->Qt::PenCapStyle",
                                    "type": "function"
                                },
                                {
                                    "name": "setCapStyle",
                                    "signature": "Qt::PenCapStyle->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "joinStyle",
                                    "signature": "->Qt::PenJoinStyle",
                                    "type": "function"
                                },
                                {
                                    "name": "setJoinStyle",
                                    "signature": "Qt::PenJoinStyle->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isCosmetic",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setCosmetic",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QPen &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QPen &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "isDetached",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "signature": "->QPen::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QPen",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QPen &;QPen &->void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QPen &->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QPen>",
                    "name": "pen",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "defaults": "-1",
                                    "name": "QPicture",
                                    "signature": "int",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPicture",
                                    "signature": "const QPicture &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPicture",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "devType",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "signature": "->uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "data",
                                    "signature": "->const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "setData",
                                    "signature": "const char *;uint->void",
                                    "type": "function"
                                },
                                {
                                    "name": "play",
                                    "signature": "QPainter *->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "load",
                                    "signature": "QIODevice *;const char *->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "load",
                                    "signature": "const QString &;const char *->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "save",
                                    "signature": "QIODevice *;const char *->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "save",
                                    "signature": "const QString &;const char *->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "setBoundingRect",
                                    "signature": "const QRect &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QPicture &->QPicture &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QPicture &&->QPicture &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QPicture &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "detach",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "pictureFormat",
                                    "signature": "const QString &->const char *",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "inputFormats",
                                    "signature": "->QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "outputFormats",
                                    "signature": "->QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "inputFormatList",
                                    "signature": "->QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "outputFormatList",
                                    "signature": "->QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "paintEngine",
                                    "signature": "->QPaintEngine *",
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "signature": "->QPicture::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QPicture",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QPicture &;QPicture &->void",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QPictureIO",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPictureIO",
                                    "signature": "QIODevice *;const char *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPictureIO",
                                    "signature": "const QString &;const char *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPictureIO",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "picture",
                                    "signature": "->const QPicture &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "status",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "format",
                                    "signature": "->const char *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "ioDevice",
                                    "signature": "->QIODevice *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fileName",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "quality",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "description",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "parameters",
                                    "signature": "->const char *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "gamma",
                                    "signature": "->float",
                                    "type": "function"
                                },
                                {
                                    "name": "setPicture",
                                    "signature": "const QPicture &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setStatus",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setFormat",
                                    "signature": "const char *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setIODevice",
                                    "signature": "QIODevice *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setFileName",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setQuality",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setDescription",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setParameters",
                                    "signature": "const char *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setGamma",
                                    "signature": "float->void",
                                    "type": "function"
                                },
                                {
                                    "name": "read",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "write",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "pictureFormat",
                                    "signature": "const QString &->QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "pictureFormat",
                                    "signature": "QIODevice *->QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "inputFormats",
                                    "signature": "->QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "outputFormats",
                                    "signature": "->QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "defineIOHandler",
                                    "signature": "const char *;const char *;const char *;picture_io_handler;picture_io_handler->void",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QPictureIO",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDataStream &;const QPicture &->QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "signature": "QDataStream &;QPicture &->QDataStream &",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QPicture>",
                    "name": "picture",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        "RGB",
                                        "BGR",
                                        "Indexed",
                                        "Grayscale",
                                        "CMYK",
                                        "HSL",
                                        "HSV",
                                        "YUV",
                                        "Alpha"
                                    ],
                                    "name": "ColorModel",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "UsesAlpha",
                                        "IgnoresAlpha"
                                    ],
                                    "name": "AlphaUsage",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "AtBeginning",
                                        "AtEnd"
                                    ],
                                    "name": "AlphaPosition",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "NotPremultiplied",
                                        "Premultiplied"
                                    ],
                                    "name": "AlphaPremultiplied",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "UnsignedInteger",
                                        "UnsignedShort",
                                        "UnsignedByte",
                                        "FloatingPoint"
                                    ],
                                    "name": "TypeInterpretation",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "YUV444",
                                        "YUV422",
                                        "YUV411",
                                        "YUV420P",
                                        "YUV420SP",
                                        "YV12",
                                        "UYVY",
                                        "YUYV",
                                        "NV12",
                                        "NV21",
                                        "IMC1",
                                        "IMC2",
                                        "IMC3",
                                        "IMC4",
                                        "Y8",
                                        "Y16"
                                    ],
                                    "name": "YUVLayout",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "LittleEndian",
                                        "BigEndian",
                                        "CurrentSystemEndian"
                                    ],
                                    "name": "ByteOrder",
                                    "type": "enum"
                                },
                                {
                                    "name": "QPixelFormat",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPixelFormat",
                                    "signature": "const QPixelFormat &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPixelFormat",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QPixelFormat &->QPixelFormat &",
                                    "type": "function"
                                },
                                {
                                    "name": "QPixelFormat",
                                    "signature": "QPixelFormat::ColorModel;uchar;uchar;uchar;uchar;uchar;uchar;QPixelFormat::AlphaUsage;QPixelFormat::AlphaPosition;QPixelFormat::AlphaPremultiplied;QPixelFormat::TypeInterpretation;QPixelFormat::ByteOrder;uchar",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "colorModel",
                                    "signature": "->QPixelFormat::ColorModel",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "channelCount",
                                    "signature": "->uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "redSize",
                                    "signature": "->uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "greenSize",
                                    "signature": "->uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "blueSize",
                                    "signature": "->uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cyanSize",
                                    "signature": "->uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "magentaSize",
                                    "signature": "->uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "yellowSize",
                                    "signature": "->uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "blackSize",
                                    "signature": "->uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hueSize",
                                    "signature": "->uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "saturationSize",
                                    "signature": "->uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lightnessSize",
                                    "signature": "->uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "brightnessSize",
                                    "signature": "->uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alphaSize",
                                    "signature": "->uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bitsPerPixel",
                                    "signature": "->uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alphaUsage",
                                    "signature": "->QPixelFormat::AlphaUsage",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alphaPosition",
                                    "signature": "->QPixelFormat::AlphaPosition",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "premultiplied",
                                    "signature": "->QPixelFormat::AlphaPremultiplied",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "typeInterpretation",
                                    "signature": "->QPixelFormat::TypeInterpretation",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "byteOrder",
                                    "signature": "->QPixelFormat::ByteOrder",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "yuvLayout",
                                    "signature": "->QPixelFormat::YUVLayout",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "subEnum",
                                    "signature": "->uchar",
                                    "type": "function"
                                }
                            ],
                            "name": "QPixelFormat",
                            "type": "class"
                        },
                        {
                            "name": "qPixelFormatRgba",
                            "signature": "uchar;uchar;uchar;uchar;QPixelFormat::AlphaUsage;QPixelFormat::AlphaPosition;QPixelFormat::AlphaPremultiplied;QPixelFormat::TypeInterpretation->QPixelFormat",
                            "type": "function"
                        },
                        {
                            "name": "qPixelFormatGrayscale",
                            "signature": "uchar;QPixelFormat::TypeInterpretation->QPixelFormat",
                            "type": "function"
                        },
                        {
                            "name": "qPixelFormatAlpha",
                            "signature": "uchar;QPixelFormat::TypeInterpretation->QPixelFormat",
                            "type": "function"
                        },
                        {
                            "name": "qPixelFormatCmyk",
                            "signature": "uchar;uchar;QPixelFormat::AlphaUsage;QPixelFormat::AlphaPosition;QPixelFormat::TypeInterpretation->QPixelFormat",
                            "type": "function"
                        },
                        {
                            "name": "qPixelFormatHsl",
                            "signature": "uchar;uchar;QPixelFormat::AlphaUsage;QPixelFormat::AlphaPosition;QPixelFormat::TypeInterpretation->QPixelFormat",
                            "type": "function"
                        },
                        {
                            "name": "qPixelFormatHsv",
                            "signature": "uchar;uchar;QPixelFormat::AlphaUsage;QPixelFormat::AlphaPosition;QPixelFormat::TypeInterpretation->QPixelFormat",
                            "type": "function"
                        },
                        {
                            "name": "qPixelFormatYuv",
                            "signature": "QPixelFormat::YUVLayout;uchar;QPixelFormat::AlphaUsage;QPixelFormat::AlphaPosition;QPixelFormat::AlphaPremultiplied;QPixelFormat::TypeInterpretation;QPixelFormat::ByteOrder->QPixelFormat",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QPixelFormat>",
                    "name": "pixelformat",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QObject",
                            "elements": [
                                {
                                    "name": "~QScreen",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "handle",
                                    "signature": "->QPlatformScreen *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "name",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "manufacturer",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "model",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "serialNumber",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "depth",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "geometry",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "physicalSize",
                                    "signature": "->QSizeF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "physicalDotsPerInchX",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "physicalDotsPerInchY",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "physicalDotsPerInch",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "logicalDotsPerInchX",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "logicalDotsPerInchY",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "logicalDotsPerInch",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "devicePixelRatio",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "availableSize",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "availableGeometry",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "virtualSiblings",
                                    "signature": "->QList<QScreen *>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "virtualSize",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "virtualGeometry",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "availableVirtualSize",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "availableVirtualGeometry",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "primaryOrientation",
                                    "signature": "->Qt::ScreenOrientation",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "orientation",
                                    "signature": "->Qt::ScreenOrientation",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nativeOrientation",
                                    "signature": "->Qt::ScreenOrientation",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "orientationUpdateMask",
                                    "signature": "->Qt::ScreenOrientations",
                                    "type": "function"
                                },
                                {
                                    "name": "setOrientationUpdateMask",
                                    "signature": "Qt::ScreenOrientations->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "angleBetween",
                                    "signature": "Qt::ScreenOrientation;Qt::ScreenOrientation->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transformBetween",
                                    "signature": "Qt::ScreenOrientation;Qt::ScreenOrientation;const QRect &->QTransform",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapBetween",
                                    "signature": "Qt::ScreenOrientation;Qt::ScreenOrientation;const QRect &->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isPortrait",
                                    "signature": "Qt::ScreenOrientation->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isLandscape",
                                    "signature": "Qt::ScreenOrientation->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "grabWindow",
                                    "signature": "WId;int;int;int;int->QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "refreshRate",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "geometryChanged",
                                    "signature": "const QRect &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "availableGeometryChanged",
                                    "signature": "const QRect &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "physicalSizeChanged",
                                    "signature": "const QSizeF &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "physicalDotsPerInchChanged",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "logicalDotsPerInchChanged",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "name": "virtualGeometryChanged",
                                    "signature": "const QRect &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "primaryOrientationChanged",
                                    "signature": "Qt::ScreenOrientation->void",
                                    "type": "function"
                                },
                                {
                                    "name": "orientationChanged",
                                    "signature": "Qt::ScreenOrientation->void",
                                    "type": "function"
                                },
                                {
                                    "name": "refreshRateChanged",
                                    "signature": "qreal->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QScreen",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QScreen *->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QScreen>",
                    "name": "screen",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        "ModerateCaching",
                                        "AggressiveCaching"
                                    ],
                                    "name": "PerformanceHint",
                                    "type": "enum"
                                },
                                {
                                    "name": "QStaticText",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QStaticText",
                                    "signature": "const QString &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QStaticText",
                                    "signature": "const QStaticText &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "QStaticText &&->QStaticText &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QStaticText &->QStaticText &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QStaticText",
                                    "type": "destructor"
                                },
                                {
                                    "name": "swap",
                                    "signature": "QStaticText &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setText",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextFormat",
                                    "signature": "Qt::TextFormat->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textFormat",
                                    "signature": "->Qt::TextFormat",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextWidth",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textWidth",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextOption",
                                    "signature": "const QTextOption &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textOption",
                                    "signature": "->QTextOption",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "signature": "->QSizeF",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QFont();QTransform()",
                                    "name": "prepare",
                                    "signature": "const QTransform &;const QFont &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setPerformanceHint",
                                    "signature": "QStaticText::PerformanceHint->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "performanceHint",
                                    "signature": "->QStaticText::PerformanceHint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "signature": "const QStaticText &->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "signature": "const QStaticText &->bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QStaticText",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "signature": "QStaticText &;QStaticText &->void",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QStaticText>",
                    "name": "statictext",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        "LeftTab",
                                        "RightTab",
                                        "CenterTab",
                                        "DelimiterTab"
                                    ],
                                    "name": "TabType",
                                    "type": "enum"
                                },
                                {
                                    "name": "QTextOption",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTextOption",
                                    "signature": "Qt::Alignment",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QTextOption",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QTextOption",
                                    "signature": "const QTextOption &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "signature": "const QTextOption &->QTextOption &",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlignment",
                                    "signature": "Qt::Alignment->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alignment",
                                    "signature": "->Qt::Alignment",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextDirection",
                                    "signature": "Qt::LayoutDirection->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textDirection",
                                    "signature": "->Qt::LayoutDirection",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "NoWrap",
                                        "WordWrap",
                                        "ManualWrap",
                                        "WrapAnywhere",
                                        "WrapAtWordBoundaryOrAnywhere"
                                    ],
                                    "name": "WrapMode",
                                    "type": "enum"
                                },
                                {
                                    "name": "setWrapMode",
                                    "signature": "QTextOption::WrapMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "wrapMode",
                                    "signature": "->QTextOption::WrapMode",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "ShowTabsAndSpaces",
                                        "ShowLineAndParagraphSeparators",
                                        "AddSpaceForLineAndParagraphSeparators",
                                        "SuppressColors",
                                        "ShowDocumentTerminator",
                                        "IncludeTrailingSpaces"
                                    ],
                                    "name": "Flag",
                                    "type": "enum"
                                },
                                {
                                    "name": "setFlags",
                                    "signature": "QTextOption::Flags->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "flags",
                                    "signature": "->QTextOption::Flags",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabStop",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tabStop",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "setTabStopDistance",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "tabStopDistance",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabArray",
                                    "signature": "const QList<qreal> &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tabArray",
                                    "signature": "->QList<qreal>",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabs",
                                    "signature": "const QList<QTextOption::Tab> &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tabs",
                                    "signature": "->QList<QTextOption::Tab>",
                                    "type": "function"
                                },
                                {
                                    "name": "setUseDesignMetrics",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "useDesignMetrics",
                                    "signature": "->bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QTextOption",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "signature": "QTextOption::Flags::enum_type;QTextOption::Flags::enum_type->QFlags<QTextOption::Flags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QTextOption::Flags::enum_type;QFlags<QTextOption::Flags::enum_type>->QFlags<QTextOption::Flags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QTextOption::Flags::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QTextOption>",
                    "name": "textoption",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QObject",
                            "checked": 1,
                            "elements": [
                                {
                                    "checked": 0,
                                    "name": "QValidator",
                                    "signature": "QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QValidator",
                                    "type": "destructor"
                                },
                                {
                                    "enumerators": [
                                        "Invalid",
                                        "Intermediate",
                                        "Acceptable"
                                    ],
                                    "name": "State",
                                    "type": "enum"
                                },
                                {
                                    "name": "setLocale",
                                    "signature": "const QLocale &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "locale",
                                    "signature": "->QLocale",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "validate",
                                    "signature": "QString &;int &->QValidator::State",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fixup",
                                    "signature": "QString &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "changed",
                                    "signature": "->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QValidator",
                            "type": "class"
                        },
                        {
                            "base": "QValidator",
                            "elements": [
                                {
                                    "defaults": "(QObject*)nullptr",
                                    "name": "QIntValidator",
                                    "signature": "QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QObject*)nullptr",
                                    "name": "QIntValidator",
                                    "signature": "int;int;QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QIntValidator",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "validate",
                                    "signature": "QString &;int &->QValidator::State",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fixup",
                                    "signature": "QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBottom",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTop",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRange",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottom",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "top",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "bottomChanged",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "topChanged",
                                    "signature": "int->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QIntValidator",
                            "type": "class"
                        },
                        {
                            "base": "QValidator",
                            "elements": [
                                {
                                    "defaults": "(QObject*)nullptr",
                                    "name": "QDoubleValidator",
                                    "signature": "QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QObject*)nullptr",
                                    "name": "QDoubleValidator",
                                    "signature": "double;double;int;QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDoubleValidator",
                                    "type": "destructor"
                                },
                                {
                                    "enumerators": [
                                        "StandardNotation",
                                        "ScientificNotation"
                                    ],
                                    "name": "Notation",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "validate",
                                    "signature": "QString &;int &->QValidator::State",
                                    "type": "function"
                                },
                                {
                                    "defaults": "0",
                                    "name": "setRange",
                                    "signature": "double;double;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBottom",
                                    "signature": "double->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTop",
                                    "signature": "double->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setDecimals",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setNotation",
                                    "signature": "QDoubleValidator::Notation->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottom",
                                    "signature": "->double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "top",
                                    "signature": "->double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "decimals",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "notation",
                                    "signature": "->QDoubleValidator::Notation",
                                    "type": "function"
                                },
                                {
                                    "name": "bottomChanged",
                                    "signature": "double->void",
                                    "type": "function"
                                },
                                {
                                    "name": "topChanged",
                                    "signature": "double->void",
                                    "type": "function"
                                },
                                {
                                    "name": "decimalsChanged",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "notationChanged",
                                    "signature": "QDoubleValidator::Notation->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QDoubleValidator",
                            "type": "class"
                        },
                        {
                            "base": "QValidator",
                            "elements": [
                                {
                                    "defaults": "(QObject*)nullptr",
                                    "name": "QRegularExpressionValidator",
                                    "signature": "QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QObject*)nullptr",
                                    "name": "QRegularExpressionValidator",
                                    "signature": "const QRegularExpression &;QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QRegularExpressionValidator",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "validate",
                                    "signature": "QString &;int &->QValidator::State",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "regularExpression",
                                    "signature": "->QRegularExpression",
                                    "type": "function"
                                },
                                {
                                    "name": "setRegularExpression",
                                    "signature": "const QRegularExpression &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "regularExpressionChanged",
                                    "signature": "const QRegularExpression &->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QRegularExpressionValidator",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QValidator>",
                    "name": "validator",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QObject",
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        "Hidden",
                                        "AutomaticVisibility",
                                        "Windowed",
                                        "Minimized",
                                        "Maximized",
                                        "FullScreen"
                                    ],
                                    "name": "Visibility",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "ExcludeTransients",
                                        "IncludeTransients"
                                    ],
                                    "name": "AncestorMode",
                                    "type": "enum"
                                },
                                {
                                    "defaults": "(QScreen*)nullptr",
                                    "name": "QWindow",
                                    "signature": "QScreen *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QWindow",
                                    "signature": "QWindow *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QWindow",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setSurfaceType",
                                    "signature": "QSurface::SurfaceType->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "surfaceType",
                                    "signature": "->QSurface::SurfaceType",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isVisible",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "visibility",
                                    "signature": "->QWindow::Visibility",
                                    "type": "function"
                                },
                                {
                                    "name": "setVisibility",
                                    "signature": "QWindow::Visibility->void",
                                    "type": "function"
                                },
                                {
                                    "name": "create",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "winId",
                                    "signature": "->WId",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "parent",
                                    "signature": "QWindow::AncestorMode->QWindow *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "parent",
                                    "signature": "->QWindow *",
                                    "type": "function"
                                },
                                {
                                    "name": "setParent",
                                    "signature": "QWindow *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTopLevel",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isModal",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "modality",
                                    "signature": "->Qt::WindowModality",
                                    "type": "function"
                                },
                                {
                                    "name": "setModality",
                                    "signature": "Qt::WindowModality->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setFormat",
                                    "signature": "const QSurfaceFormat &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "format",
                                    "signature": "->QSurfaceFormat",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "requestedFormat",
                                    "signature": "->QSurfaceFormat",
                                    "type": "function"
                                },
                                {
                                    "name": "setFlags",
                                    "signature": "Qt::WindowFlags->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "flags",
                                    "signature": "->Qt::WindowFlags",
                                    "type": "function"
                                },
                                {
                                    "defaults": "true",
                                    "name": "setFlag",
                                    "signature": "Qt::WindowType;bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "type",
                                    "signature": "->Qt::WindowType",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "title",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setOpacity",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "opacity",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setMask",
                                    "signature": "const QRegion &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mask",
                                    "signature": "->QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isActive",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "reportContentOrientationChange",
                                    "signature": "Qt::ScreenOrientation->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contentOrientation",
                                    "signature": "->Qt::ScreenOrientation",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "devicePixelRatio",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowState",
                                    "signature": "->Qt::WindowState",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowStates",
                                    "signature": "->Qt::WindowStates",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowState",
                                    "signature": "Qt::WindowState->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowStates",
                                    "signature": "Qt::WindowStates->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTransientParent",
                                    "signature": "QWindow *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transientParent",
                                    "signature": "->QWindow *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "QWindow::IncludeTransients",
                                    "name": "isAncestorOf",
                                    "signature": "const QWindow *;QWindow::AncestorMode->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isExposed",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumWidth",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumHeight",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximumWidth",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximumHeight",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSize",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximumSize",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "baseSize",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeIncrement",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumSize",
                                    "signature": "const QSize &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximumSize",
                                    "signature": "const QSize &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBaseSize",
                                    "signature": "const QSize &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setSizeIncrement",
                                    "signature": "const QSize &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "geometry",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "frameMargins",
                                    "signature": "->QMargins",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "frameGeometry",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "framePosition",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "name": "setFramePosition",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "position",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "name": "setPosition",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setPosition",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "resize",
                                    "signature": "const QSize &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "resize",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setFilePath",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "filePath",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setIcon",
                                    "signature": "const QIcon &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "icon",
                                    "signature": "->QIcon",
                                    "type": "function"
                                },
                                {
                                    "name": "destroy",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "handle",
                                    "signature": "->QPlatformWindow *",
                                    "type": "function"
                                },
                                {
                                    "name": "setKeyboardGrabEnabled",
                                    "signature": "bool->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setMouseGrabEnabled",
                                    "signature": "bool->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "screen",
                                    "signature": "->QScreen *",
                                    "type": "function"
                                },
                                {
                                    "name": "setScreen",
                                    "signature": "QScreen *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "accessibleRoot",
                                    "signature": "->QAccessibleInterface *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "focusObject",
                                    "signature": "->QObject *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapToGlobal",
                                    "signature": "const QPoint &->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapFromGlobal",
                                    "signature": "const QPoint &->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cursor",
                                    "signature": "->QCursor",
                                    "type": "function"
                                },
                                {
                                    "name": "setCursor",
                                    "signature": "const QCursor &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "unsetCursor",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "fromWinId",
                                    "signature": "WId->QWindow *",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setVulkanInstance",
                                    "signature": "QVulkanInstance *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "vulkanInstance",
                                    "signature": "->QVulkanInstance *",
                                    "type": "function"
                                },
                                {
                                    "name": "requestActivate",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setVisible",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "show",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "hide",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "showMinimized",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "showMaximized",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "showFullScreen",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "showNormal",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "close",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "raise",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "lower",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTitle",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setWidth",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setHeight",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setGeometry",
                                    "signature": "int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setGeometry",
                                    "signature": "const QRect &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumWidth",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumHeight",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximumWidth",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximumHeight",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "alert",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "requestUpdate",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "checked": 0,
                                    "name": "screenChanged",
                                    "signature": "QScreen *->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "modalityChanged",
                                    "signature": "Qt::WindowModality->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "windowStateChanged",
                                    "signature": "Qt::WindowState->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "windowTitleChanged",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "xChanged",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "yChanged",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "widthChanged",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "heightChanged",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "minimumWidthChanged",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "minimumHeightChanged",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "maximumWidthChanged",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "maximumHeightChanged",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "visibleChanged",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "visibilityChanged",
                                    "signature": "QWindow::Visibility->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "activeChanged",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "contentOrientationChanged",
                                    "signature": "Qt::ScreenOrientation->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "focusObjectChanged",
                                    "signature": "QObject *->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "opacityChanged",
                                    "signature": "qreal->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QWindow",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QWindow *->QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QWindow>",
                    "name": "window",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QEvent",
                            "elements": [
                                {
                                    "name": "QMouseEvent",
                                    "signature": "QEvent::Type;const QPointF &;Qt::MouseButton;Qt::MouseButtons;Qt::KeyboardModifiers",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QMouseEvent",
                                    "signature": "QEvent::Type;const QPointF &;const QPointF &;Qt::MouseButton;Qt::MouseButtons;Qt::KeyboardModifiers",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QMouseEvent",
                                    "signature": "QEvent::Type;const QPointF &;const QPointF &;const QPointF &;Qt::MouseButton;Qt::MouseButtons;Qt::KeyboardModifiers",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QMouseEvent",
                                    "signature": "QEvent::Type;const QPointF &;const QPointF &;const QPointF &;Qt::MouseButton;Qt::MouseButtons;Qt::KeyboardModifiers;Qt::MouseEventSource",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QMouseEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "pos",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "globalPos",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "globalX",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "globalY",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "localPos",
                                    "signature": "->const QPointF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowPos",
                                    "signature": "->const QPointF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "screenPos",
                                    "signature": "->const QPointF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "button",
                                    "signature": "->Qt::MouseButton",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "buttons",
                                    "signature": "->Qt::MouseButtons",
                                    "type": "function"
                                },
                                {
                                    "name": "setLocalPos",
                                    "signature": "const QPointF &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "source",
                                    "signature": "->Qt::MouseEventSource",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "flags",
                                    "signature": "->Qt::MouseEventFlags",
                                    "type": "function"
                                }
                            ],
                            "name": "QMouseEvent",
                            "type": "class"
                        },
                        {
                            "base": "QEvent",
                            "checked": 1,
                            "elements": [
                                {
                                    "checked": 0,
                                    "enumerators": [
                                        "DefaultDeltasPerStep"
                                    ],
                                    "name": "",
                                    "type": "enum"
                                },
                                {
                                    "name": "QWheelEvent",
                                    "signature": "const QPointF &;int;Qt::MouseButtons;Qt::KeyboardModifiers;Qt::Orientation",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QWheelEvent",
                                    "signature": "const QPointF &;const QPointF &;int;Qt::MouseButtons;Qt::KeyboardModifiers;Qt::Orientation",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QWheelEvent",
                                    "signature": "const QPointF &;const QPointF &;QPoint;QPoint;int;Qt::Orientation;Qt::MouseButtons;Qt::KeyboardModifiers",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QWheelEvent",
                                    "signature": "const QPointF &;const QPointF &;QPoint;QPoint;int;Qt::Orientation;Qt::MouseButtons;Qt::KeyboardModifiers;Qt::ScrollPhase",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QWheelEvent",
                                    "signature": "const QPointF &;const QPointF &;QPoint;QPoint;int;Qt::Orientation;Qt::MouseButtons;Qt::KeyboardModifiers;Qt::ScrollPhase;Qt::MouseEventSource",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QWheelEvent",
                                    "signature": "const QPointF &;const QPointF &;QPoint;QPoint;int;Qt::Orientation;Qt::MouseButtons;Qt::KeyboardModifiers;Qt::ScrollPhase;Qt::MouseEventSource;bool",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QWheelEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "pixelDelta",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "angleDelta",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "delta",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "orientation",
                                    "signature": "->Qt::Orientation",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pos",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "globalPos",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "globalX",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "globalY",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "posF",
                                    "signature": "->const QPointF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "globalPosF",
                                    "signature": "->const QPointF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "buttons",
                                    "signature": "->Qt::MouseButtons",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "phase",
                                    "signature": "->Qt::ScrollPhase",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inverted",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "source",
                                    "signature": "->Qt::MouseEventSource",
                                    "type": "function"
                                }
                            ],
                            "name": "QWheelEvent",
                            "type": "class"
                        },
                        {
                            "base": "QEvent",
                            "elements": [
                                {
                                    "name": "QKeyEvent",
                                    "signature": "QEvent::Type;int;Qt::KeyboardModifiers;const QString &;bool;ushort",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QKeyEvent",
                                    "signature": "QEvent::Type;int;Qt::KeyboardModifiers;quint32;quint32;quint32;const QString &;bool;ushort",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QKeyEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "key",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matches",
                                    "signature": "QKeySequence::StandardKey->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "modifiers",
                                    "signature": "->Qt::KeyboardModifiers",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isAutoRepeat",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nativeScanCode",
                                    "signature": "->quint32",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nativeVirtualKey",
                                    "signature": "->quint32",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nativeModifiers",
                                    "signature": "->quint32",
                                    "type": "function"
                                }
                            ],
                            "name": "QKeyEvent",
                            "type": "class"
                        },
                        {
                            "base": "QEvent",
                            "elements": [
                                {
                                    "name": "QPaintEvent",
                                    "signature": "const QRegion &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPaintEvent",
                                    "signature": "const QRect &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPaintEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "rect",
                                    "signature": "->const QRect &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "region",
                                    "signature": "->const QRegion &",
                                    "type": "function"
                                }
                            ],
                            "name": "QPaintEvent",
                            "type": "class"
                        },
                        {
                            "base": "QEvent",
                            "elements": [
                                {
                                    "name": "QMoveEvent",
                                    "signature": "const QPoint &;const QPoint &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QMoveEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "pos",
                                    "signature": "->const QPoint &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "oldPos",
                                    "signature": "->const QPoint &",
                                    "type": "function"
                                }
                            ],
                            "name": "QMoveEvent",
                            "type": "class"
                        },
                        {
                            "base": "QEvent",
                            "elements": [
                                {
                                    "name": "QResizeEvent",
                                    "signature": "const QSize &;const QSize &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QResizeEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "signature": "->const QSize &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "oldSize",
                                    "signature": "->const QSize &",
                                    "type": "function"
                                }
                            ],
                            "name": "QResizeEvent",
                            "type": "class"
                        },
                        {
                            "base": "QEvent",
                            "elements": [
                                {
                                    "name": "QCloseEvent",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QCloseEvent",
                                    "type": "destructor"
                                }
                            ],
                            "name": "QCloseEvent",
                            "type": "class"
                        },
                        {
                            "base": "QEvent",
                            "elements": [
                                {
                                    "name": "QShowEvent",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QShowEvent",
                                    "type": "destructor"
                                }
                            ],
                            "name": "QShowEvent",
                            "type": "class"
                        },
                        {
                            "base": "QEvent",
                            "elements": [
                                {
                                    "name": "QHideEvent",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QHideEvent",
                                    "type": "destructor"
                                }
                            ],
                            "name": "QHideEvent",
                            "type": "class"
                        },
                        {
                            "name": "operator==",
                            "signature": "QKeyEvent *;QKeySequence::StandardKey->bool",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "signature": "QKeySequence::StandardKey;QKeyEvent *->bool",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<qevent.h>,yasl/core/event.h",
                    "name": "guievent",
                    "type": "file"
                }
            ],
            "name": "gui",
            "type": "module"
        },
        {
            "checked": 1,
            "elements": [
                {
                    "elements": [
                        {
                            "base": "QObject",
                            "elements": [
                                {
                                    "enumerators": [
                                        "DrawWindowBackground",
                                        "DrawChildren",
                                        "IgnoreMask"
                                    ],
                                    "name": "RenderFlag",
                                    "type": "enum"
                                },
                                {
                                    "defaults": "Qt::WindowFlags();(QWidget*)nullptr",
                                    "name": "QWidget",
                                    "signature": "QWidget *;Qt::WindowFlags",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QWidget",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "devType",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "winId",
                                    "signature": "->WId",
                                    "type": "function"
                                },
                                {
                                    "name": "createWinId",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "internalWinId",
                                    "signature": "->WId",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "effectiveWinId",
                                    "signature": "->WId",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "style",
                                    "signature": "->QStyle *",
                                    "type": "function"
                                },
                                {
                                    "name": "setStyle",
                                    "signature": "QStyle *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTopLevel",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isWindow",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isModal",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowModality",
                                    "signature": "->Qt::WindowModality",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowModality",
                                    "signature": "Qt::WindowModality->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEnabled",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEnabledTo",
                                    "signature": "const QWidget *->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEnabledToTLW",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setEnabled",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setDisabled",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowModified",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "frameGeometry",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "geometry",
                                    "signature": "->const QRect &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "normalGeometry",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pos",
                                    "signature": "->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "frameSize",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rect",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "childrenRect",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "childrenRegion",
                                    "signature": "->QRegion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSize",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximumSize",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumWidth",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumHeight",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximumWidth",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximumHeight",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumSize",
                                    "signature": "const QSize &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumSize",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximumSize",
                                    "signature": "const QSize &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximumSize",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumWidth",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumHeight",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximumWidth",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximumHeight",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeIncrement",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setSizeIncrement",
                                    "signature": "const QSize &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setSizeIncrement",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "baseSize",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setBaseSize",
                                    "signature": "const QSize &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBaseSize",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setFixedSize",
                                    "signature": "const QSize &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setFixedSize",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setFixedWidth",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setFixedHeight",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapToGlobal",
                                    "signature": "const QPoint &->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapFromGlobal",
                                    "signature": "const QPoint &->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapToParent",
                                    "signature": "const QPoint &->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapFromParent",
                                    "signature": "const QPoint &->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapTo",
                                    "signature": "const QWidget *;const QPoint &->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mapFrom",
                                    "signature": "const QWidget *;const QPoint &->QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "window",
                                    "signature": "->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nativeParentWidget",
                                    "signature": "->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "topLevelWidget",
                                    "signature": "->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "palette",
                                    "signature": "->const QPalette &",
                                    "type": "function"
                                },
                                {
                                    "name": "setPalette",
                                    "signature": "const QPalette &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBackgroundRole",
                                    "signature": "QPalette::ColorRole->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "backgroundRole",
                                    "signature": "->QPalette::ColorRole",
                                    "type": "function"
                                },
                                {
                                    "name": "setForegroundRole",
                                    "signature": "QPalette::ColorRole->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "foregroundRole",
                                    "signature": "->QPalette::ColorRole",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "font",
                                    "signature": "->const QFont &",
                                    "type": "function"
                                },
                                {
                                    "name": "setFont",
                                    "signature": "const QFont &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fontMetrics",
                                    "signature": "->QFontMetrics",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fontInfo",
                                    "signature": "->QFontInfo",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cursor",
                                    "signature": "->QCursor",
                                    "type": "function"
                                },
                                {
                                    "name": "setCursor",
                                    "signature": "const QCursor &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "unsetCursor",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMouseTracking",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasMouseTracking",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "underMouse",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabletTracking",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasTabletTracking",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setMask",
                                    "signature": "const QBitmap &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMask",
                                    "signature": "const QRegion &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mask",
                                    "signature": "->QRegion",
                                    "type": "function"
                                },
                                {
                                    "name": "clearMask",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "render",
                                    "signature": "QPaintDevice *;const QPoint &;const QRegion &;QWidget::RenderFlags->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QWidget::RenderFlags(QWidget::DrawWindowBackground | QWidget::DrawChildren)",
                                    "name": "render",
                                    "signature": "QPainter *;const QPoint &;const QRegion &;QWidget::RenderFlags->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QRect(QPoint(0, 0), QSize(-1, -1))",
                                    "name": "grab",
                                    "signature": "const QRect &->QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "graphicsEffect",
                                    "signature": "->QGraphicsEffect *",
                                    "type": "function"
                                },
                                {
                                    "name": "setGraphicsEffect",
                                    "signature": "QGraphicsEffect *->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::GestureFlags()",
                                    "name": "grabGesture",
                                    "signature": "Qt::GestureType;Qt::GestureFlags->void",
                                    "type": "function"
                                },
                                {
                                    "name": "ungrabGesture",
                                    "signature": "Qt::GestureType->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowTitle",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setStyleSheet",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "styleSheet",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowTitle",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowIcon",
                                    "signature": "const QIcon &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowIcon",
                                    "signature": "->QIcon",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowIconText",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowIconText",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowRole",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowRole",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowFilePath",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowFilePath",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowOpacity",
                                    "signature": "qreal->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowOpacity",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isWindowModified",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setToolTip",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toolTip",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setToolTipDuration",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toolTipDuration",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setStatusTip",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "statusTip",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setWhatsThis",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "whatsThis",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "accessibleName",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setAccessibleName",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "accessibleDescription",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setAccessibleDescription",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setLayoutDirection",
                                    "signature": "Qt::LayoutDirection->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "layoutDirection",
                                    "signature": "->Qt::LayoutDirection",
                                    "type": "function"
                                },
                                {
                                    "name": "unsetLayoutDirection",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setLocale",
                                    "signature": "const QLocale &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "locale",
                                    "signature": "->QLocale",
                                    "type": "function"
                                },
                                {
                                    "name": "unsetLocale",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRightToLeft",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isLeftToRight",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setFocus",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isActiveWindow",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "activateWindow",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "clearFocus",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setFocus",
                                    "signature": "Qt::FocusReason->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "focusPolicy",
                                    "signature": "->Qt::FocusPolicy",
                                    "type": "function"
                                },
                                {
                                    "name": "setFocusPolicy",
                                    "signature": "Qt::FocusPolicy->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasFocus",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabOrder",
                                    "signature": "QWidget *;QWidget *->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setFocusProxy",
                                    "signature": "QWidget *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "focusProxy",
                                    "signature": "->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contextMenuPolicy",
                                    "signature": "->Qt::ContextMenuPolicy",
                                    "type": "function"
                                },
                                {
                                    "name": "setContextMenuPolicy",
                                    "signature": "Qt::ContextMenuPolicy->void",
                                    "type": "function"
                                },
                                {
                                    "name": "grabMouse",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "grabMouse",
                                    "signature": "const QCursor &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "releaseMouse",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "grabKeyboard",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "releaseKeyboard",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::WindowShortcut",
                                    "name": "grabShortcut",
                                    "signature": "const QKeySequence &;Qt::ShortcutContext->int",
                                    "type": "function"
                                },
                                {
                                    "name": "releaseShortcut",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "true",
                                    "name": "setShortcutEnabled",
                                    "signature": "int;bool->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "true",
                                    "name": "setShortcutAutoRepeat",
                                    "signature": "int;bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "mouseGrabber",
                                    "signature": "->QWidget *",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "keyboardGrabber",
                                    "signature": "->QWidget *",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "updatesEnabled",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setUpdatesEnabled",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "graphicsProxyWidget",
                                    "signature": "->QGraphicsProxyWidget *",
                                    "type": "function"
                                },
                                {
                                    "name": "update",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "repaint",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "update",
                                    "signature": "int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "update",
                                    "signature": "const QRect &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "update",
                                    "signature": "const QRegion &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "repaint",
                                    "signature": "int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "repaint",
                                    "signature": "const QRect &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "repaint",
                                    "signature": "const QRegion &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setVisible",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setHidden",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "show",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "hide",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "showMinimized",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "showMaximized",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "showFullScreen",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "showNormal",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "close",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "raise",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "lower",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "stackUnder",
                                    "signature": "QWidget *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "move",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "move",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "resize",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "resize",
                                    "signature": "const QSize &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setGeometry",
                                    "signature": "int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setGeometry",
                                    "signature": "const QRect &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "saveGeometry",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "restoreGeometry",
                                    "signature": "const QByteArray &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "adjustSize",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isVisible",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isVisibleTo",
                                    "signature": "const QWidget *->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isHidden",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isMinimized",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isMaximized",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isFullScreen",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowState",
                                    "signature": "->Qt::WindowStates",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowState",
                                    "signature": "Qt::WindowStates->void",
                                    "type": "function"
                                },
                                {
                                    "name": "overrideWindowState",
                                    "signature": "Qt::WindowStates->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizePolicy",
                                    "signature": "->QSizePolicy",
                                    "type": "function"
                                },
                                {
                                    "name": "setSizePolicy",
                                    "signature": "QSizePolicy->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setSizePolicy",
                                    "signature": "QSizePolicy::Policy;QSizePolicy::Policy->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "heightForWidth",
                                    "signature": "int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasHeightForWidth",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "visibleRegion",
                                    "signature": "->QRegion",
                                    "type": "function"
                                },
                                {
                                    "name": "setContentsMargins",
                                    "signature": "int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setContentsMargins",
                                    "signature": "const QMargins &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getContentsMargins",
                                    "signature": "int *;int *;int *;int *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contentsMargins",
                                    "signature": "->QMargins",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contentsRect",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "layout",
                                    "signature": "->QLayout *",
                                    "type": "function"
                                },
                                {
                                    "name": "setLayout",
                                    "signature": "QLayout *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "updateGeometry",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setParent",
                                    "signature": "QWidget *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setParent",
                                    "signature": "QWidget *;Qt::WindowFlags->void",
                                    "type": "function"
                                },
                                {
                                    "name": "scroll",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "scroll",
                                    "signature": "int;int;const QRect &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "focusWidget",
                                    "signature": "->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nextInFocusChain",
                                    "signature": "->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "previousInFocusChain",
                                    "signature": "->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "acceptDrops",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAcceptDrops",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addAction",
                                    "signature": "QAction *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addActions",
                                    "signature": "QList<QAction *>->void",
                                    "type": "function"
                                },
                                {
                                    "name": "insertActions",
                                    "signature": "QAction *;QList<QAction *>->void",
                                    "type": "function"
                                },
                                {
                                    "name": "insertAction",
                                    "signature": "QAction *;QAction *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "removeAction",
                                    "signature": "QAction *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "actions",
                                    "signature": "->QList<QAction *>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "parentWidget",
                                    "signature": "->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowFlags",
                                    "signature": "Qt::WindowFlags->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowFlags",
                                    "signature": "->Qt::WindowFlags",
                                    "type": "function"
                                },
                                {
                                    "defaults": "true",
                                    "name": "setWindowFlag",
                                    "signature": "Qt::WindowType;bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "overrideWindowFlags",
                                    "signature": "Qt::WindowFlags->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowType",
                                    "signature": "->Qt::WindowType",
                                    "type": "function"
                                },
                                {
                                    "name": "find",
                                    "signature": "WId->QWidget *",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "childAt",
                                    "signature": "int;int->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "childAt",
                                    "signature": "const QPoint &->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "defaults": "true",
                                    "name": "setAttribute",
                                    "signature": "Qt::WidgetAttribute;bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "testAttribute",
                                    "signature": "Qt::WidgetAttribute->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "paintEngine",
                                    "signature": "->QPaintEngine *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "ensurePolished",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isAncestorOf",
                                    "signature": "const QWidget *->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoFillBackground",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoFillBackground",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "backingStore",
                                    "signature": "->QBackingStore *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "windowHandle",
                                    "signature": "->QWindow *",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::WindowFlags();(QWidget*)nullptr",
                                    "name": "createWindowContainer",
                                    "signature": "QWindow *;QWidget *;Qt::WindowFlags->QWidget *",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "windowTitleChanged",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "windowIconChanged",
                                    "signature": "const QIcon &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "windowIconTextChanged",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "customContextMenuRequested",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inputMethodQuery",
                                    "signature": "Qt::InputMethodQuery->QVariant",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inputMethodHints",
                                    "signature": "->Qt::InputMethodHints",
                                    "type": "function"
                                },
                                {
                                    "name": "setInputMethodHints",
                                    "signature": "Qt::InputMethodHints->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QWidget",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "signature": "QWidget::RenderFlags::enum_type;QWidget::RenderFlags::enum_type->QFlags<QWidget::RenderFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QWidget::RenderFlags::enum_type;QFlags<QWidget::RenderFlags::enum_type>->QFlags<QWidget::RenderFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QWidget::RenderFlags::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QWidget *->QDebug",
                            "type": "function"
                        },
                        {
                            "type": "statement",
                            "value": "void register_newwidget_file(script::Namespace n); // defined in newwidget.cpp"
                        },
                        {
                            "type": "statement",
                            "value": "register_newwidget_file(widgets);"
                        }
                    ],
                    "hincludes": "<QWidget>",
                    "name": "widget",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "name": "~QAbstractButton",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setText",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setIcon",
                                    "signature": "const QIcon &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "icon",
                                    "signature": "->QIcon",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "iconSize",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setShortcut",
                                    "signature": "const QKeySequence &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "shortcut",
                                    "signature": "->QKeySequence",
                                    "type": "function"
                                },
                                {
                                    "name": "setCheckable",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isCheckable",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isChecked",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setDown",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDown",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoRepeat",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoRepeat",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoRepeatDelay",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoRepeatDelay",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoRepeatInterval",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoRepeatInterval",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoExclusive",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoExclusive",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "group",
                                    "signature": "->QButtonGroup *",
                                    "type": "function"
                                },
                                {
                                    "name": "setIconSize",
                                    "signature": "const QSize &->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "100",
                                    "name": "animateClick",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "click",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "toggle",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setChecked",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "pressed",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "released",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "clicked",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "toggled",
                                    "signature": "bool->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QAbstractButton",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QAbstractButton>",
                    "name": "abstractbutton",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QAbstractButton",
                            "elements": [
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QPushButton",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QPushButton",
                                    "signature": "const QString &;QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QPushButton",
                                    "signature": "const QIcon &;const QString &;QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPushButton",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoDefault",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoDefault",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDefault",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setDefault",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMenu",
                                    "signature": "QMenu *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "menu",
                                    "signature": "->QMenu *",
                                    "type": "function"
                                },
                                {
                                    "name": "setFlat",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isFlat",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "showMenu",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "clicked",
                                    "signature": "->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QPushButton",
                            "type": "class"
                        },
                        {
                            "type": "statement",
                            "value": "void register_newpushbutton_file(script::Namespace n); // defined in newpushbutton.cpp"
                        },
                        {
                            "type": "statement",
                            "value": "register_newpushbutton_file(widgets);"
                        }
                    ],
                    "hincludes": "<QPushButton>",
                    "name": "pushbutton",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "defaults": "Qt::WindowFlags();(QWidget*)nullptr",
                                    "name": "QFrame",
                                    "signature": "QWidget *;Qt::WindowFlags",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFrame",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "frameStyle",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setFrameStyle",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "frameWidth",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "NoFrame",
                                        "Box",
                                        "Panel",
                                        "WinPanel",
                                        "HLine",
                                        "VLine",
                                        "StyledPanel"
                                    ],
                                    "name": "Shape",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "Plain",
                                        "Raised",
                                        "Sunken"
                                    ],
                                    "name": "Shadow",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "Shadow_Mask",
                                        "Shape_Mask"
                                    ],
                                    "name": "StyleMask",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "frameShape",
                                    "signature": "->QFrame::Shape",
                                    "type": "function"
                                },
                                {
                                    "name": "setFrameShape",
                                    "signature": "QFrame::Shape->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "frameShadow",
                                    "signature": "->QFrame::Shadow",
                                    "type": "function"
                                },
                                {
                                    "name": "setFrameShadow",
                                    "signature": "QFrame::Shadow->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lineWidth",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setLineWidth",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "midLineWidth",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMidLineWidth",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "frameRect",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "setFrameRect",
                                    "signature": "const QRect &->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QFrame",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QFrame>",
                    "name": "frame",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QFrame",
                            "elements": [
                                {
                                    "defaults": "Qt::WindowFlags();(QWidget*)nullptr",
                                    "name": "QLabel",
                                    "signature": "QWidget *;Qt::WindowFlags",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "Qt::WindowFlags();(QWidget*)nullptr",
                                    "name": "QLabel",
                                    "signature": "const QString &;QWidget *;Qt::WindowFlags",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QLabel",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixmap",
                                    "signature": "->const QPixmap *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "picture",
                                    "signature": "->const QPicture *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "movie",
                                    "signature": "->QMovie *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textFormat",
                                    "signature": "->Qt::TextFormat",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextFormat",
                                    "signature": "Qt::TextFormat->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alignment",
                                    "signature": "->Qt::Alignment",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlignment",
                                    "signature": "Qt::Alignment->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setWordWrap",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "wordWrap",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "indent",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setIndent",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "margin",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMargin",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasScaledContents",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setScaledContents",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setBuddy",
                                    "signature": "QWidget *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "buddy",
                                    "signature": "->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "heightForWidth",
                                    "signature": "int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "openExternalLinks",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setOpenExternalLinks",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextInteractionFlags",
                                    "signature": "Qt::TextInteractionFlags->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textInteractionFlags",
                                    "signature": "->Qt::TextInteractionFlags",
                                    "type": "function"
                                },
                                {
                                    "name": "setSelection",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasSelectedText",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectedText",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectionStart",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setText",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setPixmap",
                                    "signature": "const QPixmap &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setPicture",
                                    "signature": "const QPicture &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMovie",
                                    "signature": "QMovie *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "signature": "double->void",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "linkActivated",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "linkHovered",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QLabel",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newLabel",
                            "signature": "QWidget*->QLabel&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newLabel",
                            "signature": "const QString&;QWidget*->QLabel&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QLabel>",
                    "name": "label",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QTabWidget",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QTabWidget",
                                    "type": "destructor"
                                },
                                {
                                    "name": "addTab",
                                    "signature": "QWidget *;const QString &->int",
                                    "type": "function"
                                },
                                {
                                    "name": "addTab",
                                    "signature": "QWidget *;const QIcon &;const QString &->int",
                                    "type": "function"
                                },
                                {
                                    "name": "insertTab",
                                    "signature": "int;QWidget *;const QString &->int",
                                    "type": "function"
                                },
                                {
                                    "name": "insertTab",
                                    "signature": "int;QWidget *;const QIcon &;const QString &->int",
                                    "type": "function"
                                },
                                {
                                    "name": "removeTab",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTabEnabled",
                                    "signature": "int->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabEnabled",
                                    "signature": "int;bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tabText",
                                    "signature": "int->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabText",
                                    "signature": "int;const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tabIcon",
                                    "signature": "int->QIcon",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabIcon",
                                    "signature": "int;const QIcon &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabToolTip",
                                    "signature": "int;const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tabToolTip",
                                    "signature": "int->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabWhatsThis",
                                    "signature": "int;const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tabWhatsThis",
                                    "signature": "int->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentIndex",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentWidget",
                                    "signature": "->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "widget",
                                    "signature": "int->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "indexOf",
                                    "signature": "QWidget *->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "North",
                                        "South",
                                        "West",
                                        "East"
                                    ],
                                    "name": "TabPosition",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "tabPosition",
                                    "signature": "->QTabWidget::TabPosition",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabPosition",
                                    "signature": "QTabWidget::TabPosition->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tabsClosable",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabsClosable",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isMovable",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setMovable",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "Rounded",
                                        "Triangular"
                                    ],
                                    "name": "TabShape",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "tabShape",
                                    "signature": "->QTabWidget::TabShape",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabShape",
                                    "signature": "QTabWidget::TabShape->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "heightForWidth",
                                    "signature": "int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasHeightForWidth",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::TopRightCorner",
                                    "name": "setCornerWidget",
                                    "signature": "QWidget *;Qt::Corner->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "Qt::TopRightCorner",
                                    "name": "cornerWidget",
                                    "signature": "Qt::Corner->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "elideMode",
                                    "signature": "->Qt::TextElideMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setElideMode",
                                    "signature": "Qt::TextElideMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "iconSize",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setIconSize",
                                    "signature": "const QSize &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "usesScrollButtons",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setUsesScrollButtons",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "documentMode",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setDocumentMode",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tabBarAutoHide",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setTabBarAutoHide",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tabBar",
                                    "signature": "->QTabBar *",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentIndex",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentWidget",
                                    "signature": "QWidget *->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "currentChanged",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "tabCloseRequested",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "tabBarClicked",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "tabBarDoubleClicked",
                                    "signature": "int->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QTabWidget",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newTabWidget",
                            "signature": "QWidget*->QTabWidget&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QTabWidget>",
                    "name": "tabwidget",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QWidget",
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        "LeadingPosition",
                                        "TrailingPosition"
                                    ],
                                    "name": "ActionPosition",
                                    "type": "enum"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QLineEdit",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QLineEdit",
                                    "signature": "const QString &;QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QLineEdit",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "displayText",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "placeholderText",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setPlaceholderText",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maxLength",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaxLength",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setFrame",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasFrame",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setClearButtonEnabled",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isClearButtonEnabled",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "Normal",
                                        "NoEcho",
                                        "Password",
                                        "PasswordEchoOnEdit"
                                    ],
                                    "name": "EchoMode",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "echoMode",
                                    "signature": "->QLineEdit::EchoMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setEchoMode",
                                    "signature": "QLineEdit::EchoMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isReadOnly",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setReadOnly",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setValidator",
                                    "signature": "const QValidator *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "validator",
                                    "signature": "->const QValidator *",
                                    "type": "function"
                                },
                                {
                                    "name": "setCompleter",
                                    "signature": "QCompleter *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "completer",
                                    "signature": "->QCompleter *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cursorPosition",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setCursorPosition",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "cursorPositionAt",
                                    "signature": "const QPoint &->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlignment",
                                    "signature": "Qt::Alignment->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alignment",
                                    "signature": "->Qt::Alignment",
                                    "type": "function"
                                },
                                {
                                    "defaults": "1",
                                    "name": "cursorForward",
                                    "signature": "bool;int->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "1",
                                    "name": "cursorBackward",
                                    "signature": "bool;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "cursorWordForward",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "cursorWordBackward",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "backspace",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "del",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "home",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "end",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isModified",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setModified",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setSelection",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasSelectedText",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectedText",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectionStart",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "selectionEnd",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "selectionLength",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isUndoAvailable",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRedoAvailable",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setDragEnabled",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dragEnabled",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setCursorMoveStyle",
                                    "signature": "Qt::CursorMoveStyle->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cursorMoveStyle",
                                    "signature": "->Qt::CursorMoveStyle",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inputMask",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setInputMask",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasAcceptableInput",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextMargins",
                                    "signature": "int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextMargins",
                                    "signature": "const QMargins &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getTextMargins",
                                    "signature": "int *;int *;int *;int *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textMargins",
                                    "signature": "->QMargins",
                                    "type": "function"
                                },
                                {
                                    "name": "addAction",
                                    "signature": "QAction *;QLineEdit::ActionPosition->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addAction",
                                    "signature": "const QIcon &;QLineEdit::ActionPosition->QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "setText",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "selectAll",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "undo",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "redo",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "cut",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "copy",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "paste",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "deselect",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "createStandardContextMenu",
                                    "signature": "->QMenu *",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "textChanged",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "textEdited",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "cursorPositionChanged",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "returnPressed",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "editingFinished",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "selectionChanged",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inputMethodQuery",
                                    "signature": "Qt::InputMethodQuery->QVariant",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inputMethodQuery",
                                    "signature": "Qt::InputMethodQuery;QVariant->QVariant",
                                    "type": "function"
                                },
                                {
                                    "name": "event",
                                    "signature": "QEvent *->bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QLineEdit",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newLineEdit",
                            "signature": "QWidget*->QLineEdit&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newLineEdit",
                            "signature": "const QString &;QWidget*->QLineEdit&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QLineEdit>",
                    "name": "lineedit",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QGroupBox",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QGroupBox",
                                    "signature": "const QString &;QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QGroupBox",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "title",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setTitle",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alignment",
                                    "signature": "->Qt::Alignment",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlignment",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isFlat",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setFlat",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isCheckable",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setCheckable",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isChecked",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setChecked",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "clicked",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "toggled",
                                    "signature": "bool->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QGroupBox",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newGroupBox",
                            "signature": "QWidget*->QGroupBox&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newGroupBox",
                            "signature": "const QString &;QWidget*->QGroupBox&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QGroupBox>",
                    "name": "groupbox",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QComboBox",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QComboBox",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "maxVisibleItems",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaxVisibleItems",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaxCount",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maxCount",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoCompletion",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoCompletion",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoCompletionCaseSensitivity",
                                    "signature": "->Qt::CaseSensitivity",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoCompletionCaseSensitivity",
                                    "signature": "Qt::CaseSensitivity->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "duplicatesEnabled",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setDuplicatesEnabled",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setFrame",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasFrame",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "static_cast<Qt::MatchFlags>(Qt::MatchExactly | Qt::MatchCaseSensitive)",
                                    "name": "findText",
                                    "signature": "const QString &;Qt::MatchFlags->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "static_cast<Qt::MatchFlags>(Qt::MatchExactly | Qt::MatchCaseSensitive)",
                                    "name": "findData",
                                    "signature": "const QVariant &;int;Qt::MatchFlags->int",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "NoInsert",
                                        "InsertAtTop",
                                        "InsertAtCurrent",
                                        "InsertAtBottom",
                                        "InsertAfterCurrent",
                                        "InsertBeforeCurrent",
                                        "InsertAlphabetically"
                                    ],
                                    "name": "InsertPolicy",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "insertPolicy",
                                    "signature": "->QComboBox::InsertPolicy",
                                    "type": "function"
                                },
                                {
                                    "name": "setInsertPolicy",
                                    "signature": "QComboBox::InsertPolicy->void",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "AdjustToContents",
                                        "AdjustToContentsOnFirstShow",
                                        "AdjustToMinimumContentsLength",
                                        "AdjustToMinimumContentsLengthWithIcon"
                                    ],
                                    "name": "SizeAdjustPolicy",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "sizeAdjustPolicy",
                                    "signature": "->QComboBox::SizeAdjustPolicy",
                                    "type": "function"
                                },
                                {
                                    "name": "setSizeAdjustPolicy",
                                    "signature": "QComboBox::SizeAdjustPolicy->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumContentsLength",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumContentsLength",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "iconSize",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setIconSize",
                                    "signature": "const QSize &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEditable",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setEditable",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setLineEdit",
                                    "signature": "QLineEdit *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lineEdit",
                                    "signature": "->QLineEdit *",
                                    "type": "function"
                                },
                                {
                                    "name": "setValidator",
                                    "signature": "const QValidator *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "validator",
                                    "signature": "->const QValidator *",
                                    "type": "function"
                                },
                                {
                                    "name": "setCompleter",
                                    "signature": "QCompleter *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "completer",
                                    "signature": "->QCompleter *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "itemDelegate",
                                    "signature": "->QAbstractItemDelegate *",
                                    "type": "function"
                                },
                                {
                                    "name": "setItemDelegate",
                                    "signature": "QAbstractItemDelegate *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "model",
                                    "signature": "->QAbstractItemModel *",
                                    "type": "function"
                                },
                                {
                                    "name": "setModel",
                                    "signature": "QAbstractItemModel *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rootModelIndex",
                                    "signature": "->QModelIndex",
                                    "type": "function"
                                },
                                {
                                    "name": "setRootModelIndex",
                                    "signature": "const QModelIndex &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "modelColumn",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setModelColumn",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentIndex",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentText",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "int(Qt::UserRole)",
                                    "name": "currentData",
                                    "signature": "int->QVariant",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "itemText",
                                    "signature": "int->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "itemIcon",
                                    "signature": "int->QIcon",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "defaults": "int(Qt::UserRole)",
                                    "name": "itemData",
                                    "signature": "int;int->QVariant",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QVariant()",
                                    "name": "addItem",
                                    "signature": "const QString &;const QVariant &->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QVariant()",
                                    "name": "addItem",
                                    "signature": "const QIcon &;const QString &;const QVariant &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addItems",
                                    "signature": "const QStringList &->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QVariant()",
                                    "name": "insertItem",
                                    "signature": "int;const QString &;const QVariant &->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QVariant()",
                                    "name": "insertItem",
                                    "signature": "int;const QIcon &;const QString &;const QVariant &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "insertItems",
                                    "signature": "int;const QStringList &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "insertSeparator",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "removeItem",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setItemText",
                                    "signature": "int;const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setItemIcon",
                                    "signature": "int;const QIcon &->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "int(Qt::UserRole)",
                                    "name": "setItemData",
                                    "signature": "int;const QVariant &;int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "view",
                                    "signature": "->QAbstractItemView *",
                                    "type": "function"
                                },
                                {
                                    "name": "setView",
                                    "signature": "QAbstractItemView *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "showPopup",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "hidePopup",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "event",
                                    "signature": "QEvent *->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inputMethodQuery",
                                    "signature": "Qt::InputMethodQuery->QVariant",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inputMethodQuery",
                                    "signature": "Qt::InputMethodQuery;const QVariant &->QVariant",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "clearEditText",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setEditText",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentIndex",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentText",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "editTextChanged",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "activated",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "activated",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "highlighted",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "highlighted",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "currentIndexChanged",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "currentIndexChanged",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "currentTextChanged",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QComboBox",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newComboBox",
                            "signature": "QWidget*->QComboBox&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QComboBox>",
                    "name": "combobox",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QComboBox",
                            "elements": [
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QFontComboBox",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFontComboBox",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setWritingSystem",
                                    "signature": "QFontDatabase::WritingSystem->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "writingSystem",
                                    "signature": "->QFontDatabase::WritingSystem",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "AllFonts",
                                        "ScalableFonts",
                                        "NonScalableFonts",
                                        "MonospacedFonts",
                                        "ProportionalFonts"
                                    ],
                                    "name": "FontFilter",
                                    "type": "enum"
                                },
                                {
                                    "name": "setFontFilters",
                                    "signature": "QFontComboBox::FontFilters->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fontFilters",
                                    "signature": "->QFontComboBox::FontFilters",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentFont",
                                    "signature": "->QFont",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentFont",
                                    "signature": "const QFont &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "currentFontChanged",
                                    "signature": "const QFont &->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QFontComboBox",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "signature": "QFontComboBox::FontFilters::enum_type;QFontComboBox::FontFilters::enum_type->QFlags<QFontComboBox::FontFilters::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QFontComboBox::FontFilters::enum_type;QFlags<QFontComboBox::FontFilters::enum_type>->QFlags<QFontComboBox::FontFilters::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QFontComboBox::FontFilters::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newFontComboBox",
                            "signature": "QWidget*->QFontComboBox&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QFontComboBox>",
                    "name": "fontcombobox",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QAbstractSlider",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QAbstractSlider",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "orientation",
                                    "signature": "->Qt::Orientation",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimum",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimum",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximum",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximum",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setSingleStep",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "singleStep",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setPageStep",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pageStep",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setTracking",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasTracking",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setSliderDown",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSliderDown",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setSliderPosition",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sliderPosition",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setInvertedAppearance",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "invertedAppearance",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setInvertedControls",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "invertedControls",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "SliderNoAction",
                                        "SliderSingleStepAdd",
                                        "SliderSingleStepSub",
                                        "SliderPageStepAdd",
                                        "SliderPageStepSub",
                                        "SliderToMinimum",
                                        "SliderToMaximum",
                                        "SliderMove"
                                    ],
                                    "name": "SliderAction",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "value",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "triggerAction",
                                    "signature": "QAbstractSlider::SliderAction->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setValue",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setOrientation",
                                    "signature": "Qt::Orientation->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRange",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "valueChanged",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "sliderPressed",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "sliderMoved",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "sliderReleased",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "rangeChanged",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "actionTriggered",
                                    "signature": "int->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QAbstractSlider",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QAbstractSlider>",
                    "name": "abstractslider",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QAbstractSlider",
                            "elements": [
                                {
                                    "enumerators": [
                                        "NoTicks",
                                        "TicksAbove",
                                        "TicksLeft",
                                        "TicksBelow",
                                        "TicksRight",
                                        "TicksBothSides"
                                    ],
                                    "name": "TickPosition",
                                    "type": "enum"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QSlider",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSlider",
                                    "signature": "Qt::Orientation;QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QSlider",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setTickPosition",
                                    "signature": "QSlider::TickPosition->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tickPosition",
                                    "signature": "->QSlider::TickPosition",
                                    "type": "function"
                                },
                                {
                                    "name": "setTickInterval",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tickInterval",
                                    "signature": "->int",
                                    "type": "function"
                                }
                            ],
                            "name": "QSlider",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newSlider",
                            "signature": "QWidget*->QSlider&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newSlider",
                            "signature": "Qt::Orientation;QWidget*->QSlider&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QSlider>",
                    "name": "slider",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QAbstractSlider",
                            "elements": [
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QScrollBar",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QScrollBar",
                                    "signature": "Qt::Orientation;QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QScrollBar",
                                    "type": "destructor"
                                }
                            ],
                            "name": "QScrollBar",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "defaults": "(QWidget*)nullptr",
                            "name": "newScrollBar",
                            "signature": "QWidget*->QScrollBar&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "defaults": "(QWidget*)nullptr",
                            "name": "newScrollBar",
                            "signature": "Qt::Orientation;QWidget*->QScrollBar&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QScrollBar>",
                    "name": "scrollbar",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QAbstractSlider",
                            "elements": [
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QDial",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDial",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "wrapping",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "notchSize",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setNotchTarget",
                                    "signature": "double->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "notchTarget",
                                    "signature": "->qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "notchesVisible",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setNotchesVisible",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setWrapping",
                                    "signature": "bool->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QDial",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "defaults": "(QWidget*)nullptr",
                            "name": "newDial",
                            "signature": "QWidget*->QDial&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QDial>",
                    "name": "dial",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QAbstractSpinBox",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QAbstractSpinBox",
                                    "type": "destructor"
                                },
                                {
                                    "enumerators": [
                                        "StepNone",
                                        "StepUpEnabled",
                                        "StepDownEnabled"
                                    ],
                                    "name": "StepEnabledFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "UpDownArrows",
                                        "PlusMinus",
                                        "NoButtons"
                                    ],
                                    "name": "ButtonSymbols",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "buttonSymbols",
                                    "signature": "->QAbstractSpinBox::ButtonSymbols",
                                    "type": "function"
                                },
                                {
                                    "name": "setButtonSymbols",
                                    "signature": "QAbstractSpinBox::ButtonSymbols->void",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "CorrectToPreviousValue",
                                        "CorrectToNearestValue"
                                    ],
                                    "name": "CorrectionMode",
                                    "type": "enum"
                                },
                                {
                                    "name": "setCorrectionMode",
                                    "signature": "QAbstractSpinBox::CorrectionMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "correctionMode",
                                    "signature": "->QAbstractSpinBox::CorrectionMode",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasAcceptableInput",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "specialValueText",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setSpecialValueText",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "wrapping",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setWrapping",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setReadOnly",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isReadOnly",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setKeyboardTracking",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "keyboardTracking",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlignment",
                                    "signature": "Qt::Alignment->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alignment",
                                    "signature": "->Qt::Alignment",
                                    "type": "function"
                                },
                                {
                                    "name": "setFrame",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasFrame",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAccelerated",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isAccelerated",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setGroupSeparatorShown",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isGroupSeparatorShown",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "interpretText",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "event",
                                    "signature": "QEvent *->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inputMethodQuery",
                                    "signature": "Qt::InputMethodQuery->QVariant",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "validate",
                                    "signature": "QString &;int &->QValidator::State",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fixup",
                                    "signature": "QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "stepBy",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "stepUp",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "stepDown",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "selectAll",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "editingFinished",
                                    "signature": "->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QAbstractSpinBox",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "signature": "QAbstractSpinBox::StepEnabled::enum_type;QAbstractSpinBox::StepEnabled::enum_type->QFlags<QAbstractSpinBox::StepEnabled::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QAbstractSpinBox::StepEnabled::enum_type;QFlags<QAbstractSpinBox::StepEnabled::enum_type>->QFlags<QAbstractSpinBox::StepEnabled::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QAbstractSpinBox::StepEnabled::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QAbstractSpinBox>",
                    "name": "abstractspinbox",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QAbstractSpinBox",
                            "elements": [
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QSpinBox",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QSpinBox",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "value",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "prefix",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setPrefix",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "suffix",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setSuffix",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cleanText",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "singleStep",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setSingleStep",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimum",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimum",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximum",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximum",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRange",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "displayIntegerBase",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setDisplayIntegerBase",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setValue",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "valueChanged",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "valueChanged",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QSpinBox",
                            "type": "class"
                        },
                        {
                            "base": "QAbstractSpinBox",
                            "elements": [
                                {
                                    "name": "QDoubleSpinBox",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDoubleSpinBox",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "value",
                                    "signature": "->double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "prefix",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setPrefix",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "suffix",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setSuffix",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cleanText",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "singleStep",
                                    "signature": "->double",
                                    "type": "function"
                                },
                                {
                                    "name": "setSingleStep",
                                    "signature": "double->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimum",
                                    "signature": "->double",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimum",
                                    "signature": "double->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximum",
                                    "signature": "->double",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximum",
                                    "signature": "double->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRange",
                                    "signature": "double;double->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "decimals",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setDecimals",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "validate",
                                    "signature": "QString &;int &->QValidator::State",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "valueFromText",
                                    "signature": "const QString &->double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textFromValue",
                                    "signature": "double->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fixup",
                                    "signature": "QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setValue",
                                    "signature": "double->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "valueChanged",
                                    "signature": "double->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "valueChanged",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QDoubleSpinBox",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newSpinBox",
                            "signature": "QWidget*->QSpinBox&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newDoubleSpinBox",
                            "signature": "QWidget*->QDoubleSpinBox&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QSpinBox>",
                    "name": "spinbox",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QAbstractSpinBox",
                            "elements": [
                                {
                                    "enumerators": [
                                        "NoSection",
                                        "AmPmSection",
                                        "MSecSection",
                                        "SecondSection",
                                        "MinuteSection",
                                        "HourSection",
                                        "DaySection",
                                        "MonthSection",
                                        "YearSection",
                                        "TimeSections_Mask",
                                        "DateSections_Mask"
                                    ],
                                    "name": "Section",
                                    "type": "enum"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QDateTimeEdit",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QDateTimeEdit",
                                    "signature": "const QDateTime &;QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QDateTimeEdit",
                                    "signature": "const QDate &;QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QDateTimeEdit",
                                    "signature": "const QTime &;QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDateTimeEdit",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "dateTime",
                                    "signature": "->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "date",
                                    "signature": "->QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "time",
                                    "signature": "->QTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumDateTime",
                                    "signature": "->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "name": "clearMinimumDateTime",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumDateTime",
                                    "signature": "const QDateTime &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximumDateTime",
                                    "signature": "->QDateTime",
                                    "type": "function"
                                },
                                {
                                    "name": "clearMaximumDateTime",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximumDateTime",
                                    "signature": "const QDateTime &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setDateTimeRange",
                                    "signature": "const QDateTime &;const QDateTime &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumDate",
                                    "signature": "->QDate",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumDate",
                                    "signature": "const QDate &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "clearMinimumDate",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximumDate",
                                    "signature": "->QDate",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximumDate",
                                    "signature": "const QDate &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "clearMaximumDate",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setDateRange",
                                    "signature": "const QDate &;const QDate &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumTime",
                                    "signature": "->QTime",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumTime",
                                    "signature": "const QTime &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "clearMinimumTime",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximumTime",
                                    "signature": "->QTime",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximumTime",
                                    "signature": "const QTime &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "clearMaximumTime",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTimeRange",
                                    "signature": "const QTime &;const QTime &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "displayedSections",
                                    "signature": "->QDateTimeEdit::Sections",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentSection",
                                    "signature": "->QDateTimeEdit::Section",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sectionAt",
                                    "signature": "int->QDateTimeEdit::Section",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentSection",
                                    "signature": "QDateTimeEdit::Section->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentSectionIndex",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentSectionIndex",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "calendarWidget",
                                    "signature": "->QCalendarWidget *",
                                    "type": "function"
                                },
                                {
                                    "name": "setCalendarWidget",
                                    "signature": "QCalendarWidget *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sectionCount",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setSelectedSection",
                                    "signature": "QDateTimeEdit::Section->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sectionText",
                                    "signature": "QDateTimeEdit::Section->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "displayFormat",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setDisplayFormat",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "calendarPopup",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setCalendarPopup",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "timeSpec",
                                    "signature": "->Qt::TimeSpec",
                                    "type": "function"
                                },
                                {
                                    "name": "setTimeSpec",
                                    "signature": "Qt::TimeSpec->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "stepBy",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "event",
                                    "signature": "QEvent *->bool",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "dateTimeChanged",
                                    "signature": "const QDateTime &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "timeChanged",
                                    "signature": "const QTime &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "dateChanged",
                                    "signature": "const QDate &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setDateTime",
                                    "signature": "const QDateTime &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setDate",
                                    "signature": "const QDate &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTime",
                                    "signature": "const QTime &->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QDateTimeEdit",
                            "type": "class"
                        },
                        {
                            "base": "QDateTimeEdit",
                            "elements": [
                                {
                                    "name": "QTimeEdit",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTimeEdit",
                                    "signature": "const QTime &;QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QTimeEdit",
                                    "type": "destructor"
                                },
                                {
                                    "binding": "signals",
                                    "name": "userTimeChanged",
                                    "signature": "const QTime &->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QTimeEdit",
                            "type": "class"
                        },
                        {
                            "base": "QDateTimeEdit",
                            "elements": [
                                {
                                    "name": "QDateEdit",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateEdit",
                                    "signature": "const QDate &;QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDateEdit",
                                    "type": "destructor"
                                },
                                {
                                    "binding": "signals",
                                    "name": "userDateChanged",
                                    "signature": "const QDate &->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QDateEdit",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "signature": "QDateTimeEdit::Sections::enum_type;QDateTimeEdit::Sections::enum_type->QFlags<QDateTimeEdit::Sections::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QDateTimeEdit::Sections::enum_type;QFlags<QDateTimeEdit::Sections::enum_type>->QFlags<QDateTimeEdit::Sections::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QDateTimeEdit::Sections::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newDateTimeEdit",
                            "signature": "QWidget*->QDateTimeEdit&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newDateTimeEdit",
                            "signature": "const QDateTime&;QWidget*->QDateTimeEdit&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newDateTimeEdit",
                            "signature": "const QDate&;QWidget*->QDateTimeEdit&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newDateTimeEdit",
                            "signature": "const QTime&;QWidget*->QDateTimeEdit&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newDateEdit",
                            "signature": "QWidget*->QDateEdit&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newDateEdit",
                            "signature": "const QDate&;QWidget*->QDateEdit&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newTimeEdit",
                            "signature": "QWidget*->QTimeEdit&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newTimeEdit",
                            "signature": "const QTime&;QWidget*->QTimeEdit&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QDateTimeEdit>",
                    "name": "datetimeedit",
                    "type": "file"
                },
                {
                    "cppincludes": "checkbox.inc",
                    "elements": [
                        {
                            "base": "QAbstractButton",
                            "elements": [
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QCheckBox",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QCheckBox",
                                    "signature": "const QString &;QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QCheckBox",
                                    "type": "destructor"
                                },
                                {
                                    "defaults": "true",
                                    "name": "setTristate",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTristate",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "checkState",
                                    "signature": "->Qt::CheckState",
                                    "type": "function"
                                },
                                {
                                    "name": "setCheckState",
                                    "signature": "Qt::CheckState->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "stateChanged",
                                    "signature": "int->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QCheckBox",
                            "type": "class"
                        },
                        {
                            "type": "statement",
                            "value": "register_newcheckbox_functions(widgets);"
                        }
                    ],
                    "hincludes": "<QCheckBox>",
                    "name": "checkbox",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QAbstractButton",
                            "elements": [
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QRadioButton",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QRadioButton",
                                    "signature": "const QString &;QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QRadioButton",
                                    "type": "destructor"
                                }
                            ],
                            "name": "QRadioButton",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "defaults": "(QWidget*)nullptr",
                            "name": "newRadioButton",
                            "signature": "QWidget*->QRadioButton&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "defaults": "(QWidget*)nullptr",
                            "name": "newRadioButton",
                            "signature": "const QString&;QWidget*->QRadioButton&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QRadioButton>",
                    "name": "radiobutton",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QAbstractButton",
                            "elements": [
                                {
                                    "enumerators": [
                                        "DelayedPopup",
                                        "MenuButtonPopup",
                                        "InstantPopup"
                                    ],
                                    "name": "ToolButtonPopupMode",
                                    "type": "enum"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QToolButton",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QToolButton",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toolButtonStyle",
                                    "signature": "->Qt::ToolButtonStyle",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "arrowType",
                                    "signature": "->Qt::ArrowType",
                                    "type": "function"
                                },
                                {
                                    "name": "setArrowType",
                                    "signature": "Qt::ArrowType->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMenu",
                                    "signature": "QMenu *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "menu",
                                    "signature": "->QMenu *",
                                    "type": "function"
                                },
                                {
                                    "name": "setPopupMode",
                                    "signature": "QToolButton::ToolButtonPopupMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "popupMode",
                                    "signature": "->QToolButton::ToolButtonPopupMode",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "defaultAction",
                                    "signature": "->QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoRaise",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoRaise",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "showMenu",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setToolButtonStyle",
                                    "signature": "Qt::ToolButtonStyle->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setDefaultAction",
                                    "signature": "QAction *->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "triggered",
                                    "signature": "QAction *->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QToolButton",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "defaults": "(QWidget*)nullptr",
                            "name": "newToolButton",
                            "signature": "QWidget*->QToolButton&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QToolButton>",
                    "name": "toolbutton",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QObject",
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        "NoRole",
                                        "TextHeuristicRole",
                                        "ApplicationSpecificRole",
                                        "AboutQtRole",
                                        "AboutRole",
                                        "PreferencesRole",
                                        "QuitRole"
                                    ],
                                    "name": "MenuRole",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "LowPriority",
                                        "NormalPriority",
                                        "HighPriority"
                                    ],
                                    "name": "Priority",
                                    "type": "enum"
                                },
                                {
                                    "defaults": "(QObject*)nullptr",
                                    "name": "QAction",
                                    "signature": "QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QObject*)nullptr",
                                    "name": "QAction",
                                    "signature": "const QString &;QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QObject*)nullptr",
                                    "name": "QAction",
                                    "signature": "const QIcon &;const QString &;QObject *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QAction",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setActionGroup",
                                    "signature": "QActionGroup *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "actionGroup",
                                    "signature": "->QActionGroup *",
                                    "type": "function"
                                },
                                {
                                    "name": "setIcon",
                                    "signature": "const QIcon &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "icon",
                                    "signature": "->QIcon",
                                    "type": "function"
                                },
                                {
                                    "name": "setText",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setIconText",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "iconText",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setToolTip",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toolTip",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setStatusTip",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "statusTip",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setWhatsThis",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "whatsThis",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setPriority",
                                    "signature": "QAction::Priority->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "priority",
                                    "signature": "->QAction::Priority",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "menu",
                                    "signature": "->QMenu *",
                                    "type": "function"
                                },
                                {
                                    "name": "setMenu",
                                    "signature": "QMenu *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setSeparator",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSeparator",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setShortcut",
                                    "signature": "const QKeySequence &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "shortcut",
                                    "signature": "->QKeySequence",
                                    "type": "function"
                                },
                                {
                                    "name": "setShortcuts",
                                    "signature": "const QList<QKeySequence> &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setShortcuts",
                                    "signature": "QKeySequence::StandardKey->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "shortcuts",
                                    "signature": "->QList<QKeySequence>",
                                    "type": "function"
                                },
                                {
                                    "name": "setShortcutContext",
                                    "signature": "Qt::ShortcutContext->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "shortcutContext",
                                    "signature": "->Qt::ShortcutContext",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoRepeat",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoRepeat",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setFont",
                                    "signature": "const QFont &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "font",
                                    "signature": "->QFont",
                                    "type": "function"
                                },
                                {
                                    "name": "setCheckable",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isCheckable",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "data",
                                    "signature": "->QVariant",
                                    "type": "function"
                                },
                                {
                                    "name": "setData",
                                    "signature": "const QVariant &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isChecked",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEnabled",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isVisible",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        "Trigger",
                                        "Hover"
                                    ],
                                    "name": "ActionEvent",
                                    "type": "enum"
                                },
                                {
                                    "name": "activate",
                                    "signature": "QAction::ActionEvent->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "showStatusText",
                                    "signature": "QWidget *->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setMenuRole",
                                    "signature": "QAction::MenuRole->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "menuRole",
                                    "signature": "->QAction::MenuRole",
                                    "type": "function"
                                },
                                {
                                    "name": "setIconVisibleInMenu",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isIconVisibleInMenu",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "setShortcutVisibleInContextMenu",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "isShortcutVisibleInContextMenu",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "parentWidget",
                                    "signature": "->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "associatedWidgets",
                                    "signature": "->QList<QWidget *>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "associatedGraphicsWidgets",
                                    "signature": "->QList<QGraphicsWidget *>",
                                    "type": "function"
                                },
                                {
                                    "name": "trigger",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "hover",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setChecked",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "toggle",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setEnabled",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setDisabled",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setVisible",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "changed",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "triggered",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "hovered",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "toggled",
                                    "signature": "bool->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QAction",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "signature": "QDebug;const QAction *->QDebug",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newAction",
                            "signature": "QObject*->QAction&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newAction",
                            "signature": "const QString&;QObject*->QAction&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newAction",
                            "signature": "const QIcon&;const QString&;QObject*->QAction&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QAction>",
                    "name": "action",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QMenu",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QMenu",
                                    "signature": "const QString &;QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QMenu",
                                    "type": "destructor"
                                },
                                {
                                    "name": "addAction",
                                    "signature": "const QString &->QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addAction",
                                    "signature": "const QIcon &;const QString &->QAction *",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QKeySequence()",
                                    "name": "addAction",
                                    "signature": "const QString &;const QObject *;const char *;const QKeySequence &->QAction *",
                                    "type": "function"
                                },
                                {
                                    "defaults": "QKeySequence()",
                                    "name": "addAction",
                                    "signature": "const QIcon &;const QString &;const QObject *;const char *;const QKeySequence &->QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addMenu",
                                    "signature": "QMenu *->QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addMenu",
                                    "signature": "const QString &->QMenu *",
                                    "type": "function"
                                },
                                {
                                    "name": "addMenu",
                                    "signature": "const QIcon &;const QString &->QMenu *",
                                    "type": "function"
                                },
                                {
                                    "name": "addSeparator",
                                    "signature": "->QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addSection",
                                    "signature": "const QString &->QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addSection",
                                    "signature": "const QIcon &;const QString &->QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "insertMenu",
                                    "signature": "QAction *;QMenu *->QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "insertSeparator",
                                    "signature": "QAction *->QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "insertSection",
                                    "signature": "QAction *;const QString &->QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "insertSection",
                                    "signature": "QAction *;const QIcon &;const QString &->QAction *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTearOffEnabled",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTearOffEnabled",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTearOffMenuVisible",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "showTearOffMenu",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "showTearOffMenu",
                                    "signature": "const QPoint &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "hideTearOffMenu",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setDefaultAction",
                                    "signature": "QAction *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "defaultAction",
                                    "signature": "->QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "setActiveAction",
                                    "signature": "QAction *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "activeAction",
                                    "signature": "->QAction *",
                                    "type": "function"
                                },
                                {
                                    "defaults": "(QAction*)nullptr",
                                    "name": "popup",
                                    "signature": "const QPoint &;QAction *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "exec",
                                    "signature": "->QAction *",
                                    "type": "function"
                                },
                                {
                                    "defaults": "(QAction*)nullptr",
                                    "name": "exec",
                                    "signature": "const QPoint &;QAction *->QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "exec",
                                    "signature": "QList<QAction *>;const QPoint &;QAction *;QWidget *->QAction *",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "actionGeometry",
                                    "signature": "QAction *->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "actionAt",
                                    "signature": "const QPoint &->QAction *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "menuAction",
                                    "signature": "->QAction *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "title",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setTitle",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "icon",
                                    "signature": "->QIcon",
                                    "type": "function"
                                },
                                {
                                    "name": "setIcon",
                                    "signature": "const QIcon &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setNoReplayFor",
                                    "signature": "QWidget *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "platformMenu",
                                    "signature": "->QPlatformMenu *",
                                    "type": "function"
                                },
                                {
                                    "name": "setPlatformMenu",
                                    "signature": "QPlatformMenu *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "separatorsCollapsible",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setSeparatorsCollapsible",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toolTipsVisible",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setToolTipsVisible",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "aboutToShow",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "aboutToHide",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "triggered",
                                    "signature": "QAction *->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "hovered",
                                    "signature": "QAction *->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QMenu",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newMenu",
                            "signature": "QWidget*->QMenu&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newMenu",
                            "signature": "const QString&;QWidget*->QMenu&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QMenu>",
                    "name": "menu",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QObject",
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        "SetDefaultConstraint",
                                        "SetNoConstraint",
                                        "SetMinimumSize",
                                        "SetFixedSize",
                                        "SetMaximumSize",
                                        "SetMinAndMaxSize"
                                    ],
                                    "name": "SizeConstraint",
                                    "type": "enum"
                                },
                                {
                                    "checked": 0,
                                    "name": "QLayout",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "checked": 0,
                                    "name": "QLayout",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QLayout",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "margin",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "spacing",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setMargin",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setSpacing",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setContentsMargins",
                                    "signature": "int;int;int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setContentsMargins",
                                    "signature": "const QMargins &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getContentsMargins",
                                    "signature": "int *;int *;int *;int *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contentsMargins",
                                    "signature": "->QMargins",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contentsRect",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlignment",
                                    "signature": "QWidget *;Qt::Alignment->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlignment",
                                    "signature": "QLayout *;Qt::Alignment->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setSizeConstraint",
                                    "signature": "QLayout::SizeConstraint->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeConstraint",
                                    "signature": "->QLayout::SizeConstraint",
                                    "type": "function"
                                },
                                {
                                    "name": "setMenuBar",
                                    "signature": "QWidget *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "menuBar",
                                    "signature": "->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "parentWidget",
                                    "signature": "->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "name": "invalidate",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "geometry",
                                    "signature": "->QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "activate",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "update",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addWidget",
                                    "signature": "QWidget *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addItem",
                                    "signature": "QLayoutItem *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "removeWidget",
                                    "signature": "QWidget *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "removeItem",
                                    "signature": "QLayoutItem *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "expandingDirections",
                                    "signature": "->Qt::Orientations",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSize",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximumSize",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setGeometry",
                                    "signature": "const QRect &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "itemAt",
                                    "signature": "int->QLayoutItem *",
                                    "type": "function"
                                },
                                {
                                    "name": "takeAt",
                                    "signature": "int->QLayoutItem *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "indexOf",
                                    "signature": "QWidget *->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "controlTypes",
                                    "signature": "->QSizePolicy::ControlTypes",
                                    "type": "function"
                                },
                                {
                                    "name": "replaceWidget",
                                    "signature": "QWidget *;QWidget *;Qt::FindChildOptions->QLayoutItem *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "totalHeightForWidth",
                                    "signature": "int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "totalMinimumSize",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "totalMaximumSize",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "totalSizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "layout",
                                    "signature": "->QLayout *",
                                    "type": "function"
                                },
                                {
                                    "name": "setEnabled",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEnabled",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "closestAcceptableSize",
                                    "signature": "const QWidget *;const QSize &->QSize",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QLayout",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QLayout>",
                    "name": "layout",
                    "type": "file"
                },
                {
                    "cppincludes": "boxlayout.inc",
                    "elements": [
                        {
                            "base": "QLayout",
                            "elements": [
                                {
                                    "enumerators": [
                                        "LeftToRight",
                                        "RightToLeft",
                                        "TopToBottom",
                                        "BottomToTop",
                                        "Down",
                                        "Up"
                                    ],
                                    "name": "Direction",
                                    "type": "enum"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QBoxLayout",
                                    "signature": "QBoxLayout::Direction;QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QBoxLayout",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "direction",
                                    "signature": "->QBoxLayout::Direction",
                                    "type": "function"
                                },
                                {
                                    "name": "setDirection",
                                    "signature": "QBoxLayout::Direction->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addSpacing",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "0",
                                    "name": "addStretch",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addSpacerItem",
                                    "signature": "QSpacerItem *->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::Alignment();0",
                                    "name": "addWidget",
                                    "signature": "QWidget *;int;Qt::Alignment->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "0",
                                    "name": "addLayout",
                                    "signature": "QLayout *;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addStrut",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "insertSpacing",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "0",
                                    "name": "insertStretch",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "insertSpacerItem",
                                    "signature": "int;QSpacerItem *->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::Alignment();0",
                                    "name": "insertWidget",
                                    "signature": "int;QWidget *;int;Qt::Alignment->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "0",
                                    "name": "insertLayout",
                                    "signature": "int;QLayout *;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "insertItem",
                                    "signature": "int;QLayoutItem *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "spacing",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setSpacing",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setStretchFactor",
                                    "signature": "QWidget *;int->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setStretchFactor",
                                    "signature": "QLayout *;int->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setStretch",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "stretch",
                                    "signature": "int->int",
                                    "type": "function"
                                }
                            ],
                            "name": "QBoxLayout",
                            "type": "class"
                        },
                        {
                            "base": "QBoxLayout",
                            "elements": [
                                {
                                    "name": "QHBoxLayout",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QHBoxLayout",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QHBoxLayout",
                                    "type": "destructor"
                                }
                            ],
                            "name": "QHBoxLayout",
                            "type": "class"
                        },
                        {
                            "base": "QBoxLayout",
                            "elements": [
                                {
                                    "name": "QVBoxLayout",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVBoxLayout",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QVBoxLayout",
                                    "type": "destructor"
                                }
                            ],
                            "name": "QVBoxLayout",
                            "type": "class"
                        },
                        {
                            "type": "statement",
                            "value": "register_newlayout_functions(widgets);"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newHBoxLayout",
                            "signature": "->QHBoxLayout&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newHBoxLayout",
                            "signature": "QWidget*->QHBoxLayout&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newVBoxLayout",
                            "signature": "->QVBoxLayout&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newVBoxLayout",
                            "signature": "QWidget*->QVBoxLayout&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QBoxLayout>",
                    "name": "boxlayout",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QLayout",
                            "elements": [
                                {
                                    "enumerators": [
                                        "FieldsStayAtSizeHint",
                                        "ExpandingFieldsGrow",
                                        "AllNonFixedFieldsGrow"
                                    ],
                                    "name": "FieldGrowthPolicy",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "DontWrapRows",
                                        "WrapLongRows",
                                        "WrapAllRows"
                                    ],
                                    "name": "RowWrapPolicy",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "LabelRole",
                                        "FieldRole",
                                        "SpanningRole"
                                    ],
                                    "name": "ItemRole",
                                    "type": "enum"
                                },
                                {
                                    "name": "QFormLayout",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFormLayout",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setFieldGrowthPolicy",
                                    "signature": "QFormLayout::FieldGrowthPolicy->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fieldGrowthPolicy",
                                    "signature": "->QFormLayout::FieldGrowthPolicy",
                                    "type": "function"
                                },
                                {
                                    "name": "setRowWrapPolicy",
                                    "signature": "QFormLayout::RowWrapPolicy->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rowWrapPolicy",
                                    "signature": "->QFormLayout::RowWrapPolicy",
                                    "type": "function"
                                },
                                {
                                    "name": "setLabelAlignment",
                                    "signature": "Qt::Alignment->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "labelAlignment",
                                    "signature": "->Qt::Alignment",
                                    "type": "function"
                                },
                                {
                                    "name": "setFormAlignment",
                                    "signature": "Qt::Alignment->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "formAlignment",
                                    "signature": "->Qt::Alignment",
                                    "type": "function"
                                },
                                {
                                    "name": "setHorizontalSpacing",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "horizontalSpacing",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setVerticalSpacing",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "verticalSpacing",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "spacing",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setSpacing",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addRow",
                                    "signature": "QWidget *;QWidget *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addRow",
                                    "signature": "QWidget *;QLayout *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addRow",
                                    "signature": "const QString &;QWidget *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addRow",
                                    "signature": "const QString &;QLayout *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addRow",
                                    "signature": "QWidget *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addRow",
                                    "signature": "QLayout *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "insertRow",
                                    "signature": "int;QWidget *;QWidget *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "insertRow",
                                    "signature": "int;QWidget *;QLayout *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "insertRow",
                                    "signature": "int;const QString &;QWidget *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "insertRow",
                                    "signature": "int;const QString &;QLayout *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "insertRow",
                                    "signature": "int;QWidget *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "insertRow",
                                    "signature": "int;QLayout *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "removeRow",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "removeRow",
                                    "signature": "QWidget *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "removeRow",
                                    "signature": "QLayout *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "takeRow",
                                    "signature": "int->QFormLayout::TakeRowResult",
                                    "type": "function"
                                },
                                {
                                    "name": "takeRow",
                                    "signature": "QWidget *->QFormLayout::TakeRowResult",
                                    "type": "function"
                                },
                                {
                                    "name": "takeRow",
                                    "signature": "QLayout *->QFormLayout::TakeRowResult",
                                    "type": "function"
                                },
                                {
                                    "name": "setItem",
                                    "signature": "int;QFormLayout::ItemRole;QLayoutItem *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setWidget",
                                    "signature": "int;QFormLayout::ItemRole;QWidget *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setLayout",
                                    "signature": "int;QFormLayout::ItemRole;QLayout *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "itemAt",
                                    "signature": "int;QFormLayout::ItemRole->QLayoutItem *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getItemPosition",
                                    "signature": "int;int *;QFormLayout::ItemRole *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getWidgetPosition",
                                    "signature": "QWidget *;int *;QFormLayout::ItemRole *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getLayoutPosition",
                                    "signature": "QLayout *;int *;QFormLayout::ItemRole *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "labelForField",
                                    "signature": "QWidget *->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "labelForField",
                                    "signature": "QLayout *->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "name": "addItem",
                                    "signature": "QLayoutItem *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "itemAt",
                                    "signature": "int->QLayoutItem *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rowCount",
                                    "signature": "->int",
                                    "type": "function"
                                }
                            ],
                            "name": "QFormLayout",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newFormLayout",
                            "signature": "QWidget*->QFormLayout&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QFormLayout>",
                    "name": "formlayout",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QLayout",
                            "checked": 1,
                            "elements": [
                                {
                                    "name": "QGridLayout",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QGridLayout",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QGridLayout",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setHorizontalSpacing",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "horizontalSpacing",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setVerticalSpacing",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "verticalSpacing",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setSpacing",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "spacing",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setRowStretch",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setColumnStretch",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rowStretch",
                                    "signature": "int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "columnStretch",
                                    "signature": "int->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setRowMinimumHeight",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setColumnMinimumWidth",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rowMinimumHeight",
                                    "signature": "int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "columnMinimumWidth",
                                    "signature": "int->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "columnCount",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rowCount",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cellRect",
                                    "signature": "int;int->QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "addWidget",
                                    "signature": "QWidget *->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::Alignment()",
                                    "name": "addWidget",
                                    "signature": "QWidget *;int;int;Qt::Alignment->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "addWidget",
                                    "signature": "QWidget *;int;int;int;int;Qt::Alignment->void",
                                    "type": "function"
                                },
                                {
                                    "defaults": "Qt::Alignment()",
                                    "name": "addLayout",
                                    "signature": "QLayout *;int;int;Qt::Alignment->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "addLayout",
                                    "signature": "QLayout *;int;int;int;int;Qt::Alignment->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setOriginCorner",
                                    "signature": "Qt::Corner->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "originCorner",
                                    "signature": "->Qt::Corner",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "itemAtPosition",
                                    "signature": "int;int->QLayoutItem *",
                                    "type": "function"
                                },
                                {
                                    "name": "setGeometry",
                                    "signature": "const QRect &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addItem",
                                    "signature": "QLayoutItem *;int;int;int;int;Qt::Alignment->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setDefaultPositioning",
                                    "signature": "int;Qt::Orientation->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getItemPosition",
                                    "signature": "int;int *;int *;int *;int *->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QGridLayout",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newGridLayout",
                            "signature": "QWidget*->QGridLayout&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newGridLayout",
                            "signature": "->QGridLayout&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QGridLayout>",
                    "name": "gridlayout",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QLayout",
                            "elements": [
                                {
                                    "enumerators": [
                                        "StackOne",
                                        "StackAll"
                                    ],
                                    "name": "StackingMode",
                                    "type": "enum"
                                },
                                {
                                    "name": "QStackedLayout",
                                    "signature": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QStackedLayout",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QStackedLayout",
                                    "signature": "QLayout *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QStackedLayout",
                                    "type": "destructor"
                                },
                                {
                                    "name": "addWidget",
                                    "signature": "QWidget *->int",
                                    "type": "function"
                                },
                                {
                                    "name": "insertWidget",
                                    "signature": "int;QWidget *->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentWidget",
                                    "signature": "->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentIndex",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "widget",
                                    "signature": "int->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "stackingMode",
                                    "signature": "->QStackedLayout::StackingMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setStackingMode",
                                    "signature": "QStackedLayout::StackingMode->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addItem",
                                    "signature": "QLayoutItem *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSize",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "itemAt",
                                    "signature": "int->QLayoutItem *",
                                    "type": "function"
                                },
                                {
                                    "name": "takeAt",
                                    "signature": "int->QLayoutItem *",
                                    "type": "function"
                                },
                                {
                                    "name": "setGeometry",
                                    "signature": "const QRect &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasHeightForWidth",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "heightForWidth",
                                    "signature": "int->int",
                                    "type": "function"
                                },
                                {
                                    "name": "widgetRemoved",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "currentChanged",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentIndex",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentWidget",
                                    "signature": "QWidget *->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QStackedLayout",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newStackedLayout",
                            "signature": "->QStackedLayout&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newStackedLayout",
                            "signature": "QWidget*->QStackedLayout&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newStackedLayout",
                            "signature": "QLayout*->QStackedLayout&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QStackedLayout>",
                    "name": "stackedlayout",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "defaults": "Qt::WindowFlags();(QWidget*)nullptr",
                                    "name": "QDialog",
                                    "signature": "QWidget *;Qt::WindowFlags",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDialog",
                                    "type": "destructor"
                                },
                                {
                                    "enumerators": [
                                        "Rejected",
                                        "Accepted"
                                    ],
                                    "name": "DialogCode",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "result",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setVisible",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setOrientation",
                                    "signature": "Qt::Orientation->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "orientation",
                                    "signature": "->Qt::Orientation",
                                    "type": "function"
                                },
                                {
                                    "name": "setExtension",
                                    "signature": "QWidget *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "extension",
                                    "signature": "->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setSizeGripEnabled",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSizeGripEnabled",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setModal",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setResult",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "finished",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "accepted",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "rejected",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "exec",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "done",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "accept",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "reject",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "showExtension",
                                    "signature": "bool->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QDialog",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QDialog>",
                    "name": "dialog",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QDialog",
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        "NoIcon",
                                        "Information",
                                        "Warning",
                                        "Critical",
                                        "Question"
                                    ],
                                    "name": "Icon",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "InvalidRole",
                                        "AcceptRole",
                                        "RejectRole",
                                        "DestructiveRole",
                                        "ActionRole",
                                        "HelpRole",
                                        "YesRole",
                                        "NoRole",
                                        "ResetRole",
                                        "ApplyRole",
                                        "NRoles"
                                    ],
                                    "name": "ButtonRole",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "NoButton",
                                        "Ok",
                                        "Save",
                                        "SaveAll",
                                        "Open",
                                        "Yes",
                                        "YesToAll",
                                        "No",
                                        "NoToAll",
                                        "Abort",
                                        "Retry",
                                        "Ignore",
                                        "Close",
                                        "Cancel",
                                        "Discard",
                                        "Help",
                                        "Apply",
                                        "Reset",
                                        "RestoreDefaults",
                                        "FirstButton",
                                        "LastButton",
                                        "YesAll",
                                        "NoAll",
                                        "Default",
                                        "Escape",
                                        "FlagMask",
                                        "ButtonMask"
                                    ],
                                    "name": "StandardButton",
                                    "type": "enum"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QMessageBox",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "Qt::WindowFlags(Qt::Dialog | Qt::MSWindowsFixedSizeDialogHint);(QWidget*)nullptr;QMessageBox::StandardButtons(QMessageBox::NoButton)",
                                    "name": "QMessageBox",
                                    "signature": "QMessageBox::Icon;const QString &;const QString &;QMessageBox::StandardButtons;QWidget *;Qt::WindowFlags",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QMessageBox",
                                    "type": "destructor"
                                },
                                {
                                    "name": "addButton",
                                    "signature": "QAbstractButton *;QMessageBox::ButtonRole->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addButton",
                                    "signature": "const QString &;QMessageBox::ButtonRole->QPushButton *",
                                    "type": "function"
                                },
                                {
                                    "name": "addButton",
                                    "signature": "QMessageBox::StandardButton->QPushButton *",
                                    "type": "function"
                                },
                                {
                                    "name": "removeButton",
                                    "signature": "QAbstractButton *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "signature": "QObject *;const char *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "buttons",
                                    "signature": "->QList<QAbstractButton *>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "buttonRole",
                                    "signature": "QAbstractButton *->QMessageBox::ButtonRole",
                                    "type": "function"
                                },
                                {
                                    "name": "setStandardButtons",
                                    "signature": "QMessageBox::StandardButtons->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "standardButtons",
                                    "signature": "->QMessageBox::StandardButtons",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "standardButton",
                                    "signature": "QAbstractButton *->QMessageBox::StandardButton",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "button",
                                    "signature": "QMessageBox::StandardButton->QAbstractButton *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "defaultButton",
                                    "signature": "->QPushButton *",
                                    "type": "function"
                                },
                                {
                                    "name": "setDefaultButton",
                                    "signature": "QPushButton *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setDefaultButton",
                                    "signature": "QMessageBox::StandardButton->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "escapeButton",
                                    "signature": "->QAbstractButton *",
                                    "type": "function"
                                },
                                {
                                    "name": "setEscapeButton",
                                    "signature": "QAbstractButton *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setEscapeButton",
                                    "signature": "QMessageBox::StandardButton->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "clickedButton",
                                    "signature": "->QAbstractButton *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setText",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "icon",
                                    "signature": "->QMessageBox::Icon",
                                    "type": "function"
                                },
                                {
                                    "name": "setIcon",
                                    "signature": "QMessageBox::Icon->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "iconPixmap",
                                    "signature": "->QPixmap",
                                    "type": "function"
                                },
                                {
                                    "name": "setIconPixmap",
                                    "signature": "const QPixmap &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textFormat",
                                    "signature": "->Qt::TextFormat",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextFormat",
                                    "signature": "Qt::TextFormat->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextInteractionFlags",
                                    "signature": "Qt::TextInteractionFlags->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textInteractionFlags",
                                    "signature": "->Qt::TextInteractionFlags",
                                    "type": "function"
                                },
                                {
                                    "name": "setCheckBox",
                                    "signature": "QCheckBox *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "checkBox",
                                    "signature": "->QCheckBox *",
                                    "type": "function"
                                },
                                {
                                    "name": "information",
                                    "signature": "QWidget *;const QString &;const QString &;QMessageBox::StandardButtons;QMessageBox::StandardButton->QMessageBox::StandardButton",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "question",
                                    "signature": "QWidget *;const QString &;const QString &;QMessageBox::StandardButtons;QMessageBox::StandardButton->QMessageBox::StandardButton",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "warning",
                                    "signature": "QWidget *;const QString &;const QString &;QMessageBox::StandardButtons;QMessageBox::StandardButton->QMessageBox::StandardButton",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "critical",
                                    "signature": "QWidget *;const QString &;const QString &;QMessageBox::StandardButtons;QMessageBox::StandardButton->QMessageBox::StandardButton",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "about",
                                    "signature": "QWidget *;const QString &;const QString &->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "aboutQt",
                                    "signature": "QWidget *;const QString &->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "QMessageBox",
                                    "signature": "const QString &;const QString &;QMessageBox::Icon;int;int;int;QWidget *;Qt::WindowFlags",
                                    "type": "constructor"
                                },
                                {
                                    "checked": 0,
                                    "name": "information",
                                    "signature": "QWidget *;const QString &;const QString &;int;int;int->int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "information",
                                    "signature": "QWidget *;const QString &;const QString &;const QString &;const QString &;const QString &;int;int->int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "information",
                                    "signature": "QWidget *;const QString &;const QString &;QMessageBox::StandardButton;QMessageBox::StandardButton->QMessageBox::StandardButton",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "question",
                                    "signature": "QWidget *;const QString &;const QString &;int;int;int->int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "question",
                                    "signature": "QWidget *;const QString &;const QString &;const QString &;const QString &;const QString &;int;int->int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "question",
                                    "signature": "QWidget *;const QString &;const QString &;QMessageBox::StandardButton;QMessageBox::StandardButton->int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "warning",
                                    "signature": "QWidget *;const QString &;const QString &;int;int;int->int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "warning",
                                    "signature": "QWidget *;const QString &;const QString &;const QString &;const QString &;const QString &;int;int->int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "warning",
                                    "signature": "QWidget *;const QString &;const QString &;QMessageBox::StandardButton;QMessageBox::StandardButton->int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "critical",
                                    "signature": "QWidget *;const QString &;const QString &;int;int;int->int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "critical",
                                    "signature": "QWidget *;const QString &;const QString &;const QString &;const QString &;const QString &;int;int->int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "critical",
                                    "signature": "QWidget *;const QString &;const QString &;QMessageBox::StandardButton;QMessageBox::StandardButton->int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "buttonText",
                                    "signature": "int->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setButtonText",
                                    "signature": "int;const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "informativeText",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setInformativeText",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "detailedText",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setDetailedText",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowTitle",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setWindowModality",
                                    "signature": "Qt::WindowModality->void",
                                    "type": "function"
                                },
                                {
                                    "name": "standardIcon",
                                    "signature": "QMessageBox::Icon->QPixmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "buttonClicked",
                                    "signature": "QAbstractButton *->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QMessageBox",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "signature": "QMessageBox::StandardButtons::enum_type;QMessageBox::StandardButtons::enum_type->QFlags<QMessageBox::StandardButtons::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QMessageBox::StandardButtons::enum_type;QFlags<QMessageBox::StandardButtons::enum_type>->QFlags<QMessageBox::StandardButtons::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QMessageBox::StandardButtons::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QMessageBox>",
                    "name": "messagebox",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QDialog",
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        "Detail",
                                        "List"
                                    ],
                                    "name": "ViewMode",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "AnyFile",
                                        "ExistingFile",
                                        "Directory",
                                        "ExistingFiles",
                                        "DirectoryOnly"
                                    ],
                                    "name": "FileMode",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "AcceptOpen",
                                        "AcceptSave"
                                    ],
                                    "name": "AcceptMode",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "LookIn",
                                        "FileName",
                                        "FileType",
                                        "Accept",
                                        "Reject"
                                    ],
                                    "name": "DialogLabel",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "ShowDirsOnly",
                                        "DontResolveSymlinks",
                                        "DontConfirmOverwrite",
                                        "DontUseSheet",
                                        "DontUseNativeDialog",
                                        "ReadOnly",
                                        "HideNameFilterDetails",
                                        "DontUseCustomDirectoryIcons"
                                    ],
                                    "name": "Option",
                                    "type": "enum"
                                },
                                {
                                    "name": "QFileDialog",
                                    "signature": "QWidget *;Qt::WindowFlags",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFileDialog",
                                    "signature": "QWidget *;const QString &;const QString &;const QString &",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFileDialog",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setDirectory",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setDirectory",
                                    "signature": "const QDir &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "directory",
                                    "signature": "->QDir",
                                    "type": "function"
                                },
                                {
                                    "name": "setDirectoryUrl",
                                    "signature": "const QUrl &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "directoryUrl",
                                    "signature": "->QUrl",
                                    "type": "function"
                                },
                                {
                                    "name": "selectFile",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectedFiles",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "selectUrl",
                                    "signature": "const QUrl &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectedUrls",
                                    "signature": "->QList<QUrl>",
                                    "type": "function"
                                },
                                {
                                    "name": "setNameFilterDetailsVisible",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNameFilterDetailsVisible",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setNameFilter",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setNameFilters",
                                    "signature": "const QStringList &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nameFilters",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "selectNameFilter",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectedMimeTypeFilter",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectedNameFilter",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setMimeTypeFilters",
                                    "signature": "const QStringList &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mimeTypeFilters",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "selectMimeTypeFilter",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "filter",
                                    "signature": "->QDir::Filters",
                                    "type": "function"
                                },
                                {
                                    "name": "setFilter",
                                    "signature": "QDir::Filters->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setViewMode",
                                    "signature": "QFileDialog::ViewMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "viewMode",
                                    "signature": "->QFileDialog::ViewMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setFileMode",
                                    "signature": "QFileDialog::FileMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fileMode",
                                    "signature": "->QFileDialog::FileMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setAcceptMode",
                                    "signature": "QFileDialog::AcceptMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "acceptMode",
                                    "signature": "->QFileDialog::AcceptMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setReadOnly",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isReadOnly",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setResolveSymlinks",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "resolveSymlinks",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setSidebarUrls",
                                    "signature": "const QList<QUrl> &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sidebarUrls",
                                    "signature": "->QList<QUrl>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "saveState",
                                    "signature": "->QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "restoreState",
                                    "signature": "const QByteArray &->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setConfirmOverwrite",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "confirmOverwrite",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setDefaultSuffix",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "defaultSuffix",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setHistory",
                                    "signature": "const QStringList &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "history",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "setItemDelegate",
                                    "signature": "QAbstractItemDelegate *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "itemDelegate",
                                    "signature": "->QAbstractItemDelegate *",
                                    "type": "function"
                                },
                                {
                                    "name": "setIconProvider",
                                    "signature": "QFileIconProvider *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "iconProvider",
                                    "signature": "->QFileIconProvider *",
                                    "type": "function"
                                },
                                {
                                    "name": "setLabelText",
                                    "signature": "QFileDialog::DialogLabel;const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "labelText",
                                    "signature": "QFileDialog::DialogLabel->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setSupportedSchemes",
                                    "signature": "const QStringList &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "supportedSchemes",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "setProxyModel",
                                    "signature": "QAbstractProxyModel *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "proxyModel",
                                    "signature": "->QAbstractProxyModel *",
                                    "type": "function"
                                },
                                {
                                    "name": "setOption",
                                    "signature": "QFileDialog::Option;bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "testOption",
                                    "signature": "QFileDialog::Option->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setOptions",
                                    "signature": "QFileDialog::Options->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "options",
                                    "signature": "->QFileDialog::Options",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "signature": "QObject *;const char *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setVisible",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "fileSelected",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "checked": 0,
                                    "name": "filesSelected",
                                    "signature": "const QStringList &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "currentChanged",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "directoryEntered",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "checked": 0,
                                    "name": "urlSelected",
                                    "signature": "const QUrl &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "checked": 0,
                                    "name": "urlsSelected",
                                    "signature": "const QList<QUrl> &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "checked": 0,
                                    "name": "currentUrlChanged",
                                    "signature": "const QUrl &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "checked": 0,
                                    "name": "directoryUrlEntered",
                                    "signature": "const QUrl &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "filterSelected",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "getOpenFileName",
                                    "signature": "QWidget *;const QString &;const QString &;const QString &;QString *;QFileDialog::Options->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getOpenFileUrl",
                                    "signature": "QWidget *;const QString &;const QUrl &;const QString &;QString *;QFileDialog::Options;const QStringList &->QUrl",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getSaveFileName",
                                    "signature": "QWidget *;const QString &;const QString &;const QString &;QString *;QFileDialog::Options->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getSaveFileUrl",
                                    "signature": "QWidget *;const QString &;const QUrl &;const QString &;QString *;QFileDialog::Options;const QStringList &->QUrl",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getExistingDirectory",
                                    "signature": "QWidget *;const QString &;const QString &;QFileDialog::Options->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getExistingDirectoryUrl",
                                    "signature": "QWidget *;const QString &;const QUrl &;QFileDialog::Options;const QStringList &->QUrl",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getOpenFileNames",
                                    "signature": "QWidget *;const QString &;const QString &;const QString &;QString *;QFileDialog::Options->QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getOpenFileUrls",
                                    "signature": "QWidget *;const QString &;const QUrl &;const QString &;QString *;QFileDialog::Options;const QStringList &->QList<QUrl>",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QFileDialog",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "signature": "QFileDialog::Options::enum_type;QFileDialog::Options::enum_type->QFlags<QFileDialog::Options::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QFileDialog::Options::enum_type;QFlags<QFileDialog::Options::enum_type>->QFlags<QFileDialog::Options::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QFileDialog::Options::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QFileDialog>",
                    "name": "filedialog",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QDialog",
                            "elements": [
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QErrorMessage",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QErrorMessage",
                                    "type": "destructor"
                                },
                                {
                                    "name": "showMessage",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "showMessage",
                                    "signature": "const QString &;const QString &->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QErrorMessage",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QErrorMessage>",
                    "name": "errormessage",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QDialog",
                            "elements": [
                                {
                                    "enumerators": [
                                        "ShowAlphaChannel",
                                        "NoButtons",
                                        "DontUseNativeDialog"
                                    ],
                                    "name": "ColorDialogOption",
                                    "type": "enum"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QColorDialog",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QColorDialog",
                                    "signature": "const QColor &;QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QColorDialog",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setCurrentColor",
                                    "signature": "const QColor &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentColor",
                                    "signature": "->QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectedColor",
                                    "signature": "->QColor",
                                    "type": "function"
                                },
                                {
                                    "defaults": "true",
                                    "name": "setOption",
                                    "signature": "QColorDialog::ColorDialogOption;bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "testOption",
                                    "signature": "QColorDialog::ColorDialogOption->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setOptions",
                                    "signature": "QColorDialog::ColorDialogOptions->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "options",
                                    "signature": "->QColorDialog::ColorDialogOptions",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "signature": "QObject *;const char *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setVisible",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "getColor",
                                    "signature": "const QColor &;QWidget *;const QString &;QColorDialog::ColorDialogOptions->QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getRgba",
                                    "signature": "QRgb;bool *;QWidget *->QRgb",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "customCount",
                                    "signature": "->int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "customColor",
                                    "signature": "int->QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setCustomColor",
                                    "signature": "int;QColor->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "standardColor",
                                    "signature": "int->QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setStandardColor",
                                    "signature": "int;QColor->void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "currentColorChanged",
                                    "signature": "const QColor &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "colorSelected",
                                    "signature": "const QColor &->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QColorDialog",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "signature": "QColorDialog::ColorDialogOption;QColorDialog::ColorDialogOption->QColorDialog::ColorDialogOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QColorDialog::ColorDialogOption;QColorDialog::ColorDialogOptions->QColorDialog::ColorDialogOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QColorDialog::ColorDialogOptions::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QColorDialog>",
                    "name": "colordialog",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QDialog",
                            "elements": [
                                {
                                    "enumerators": [
                                        "NoButtons",
                                        "DontUseNativeDialog",
                                        "ScalableFonts",
                                        "NonScalableFonts",
                                        "MonospacedFonts",
                                        "ProportionalFonts"
                                    ],
                                    "name": "FontDialogOption",
                                    "type": "enum"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QFontDialog",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QFontDialog",
                                    "signature": "const QFont &;QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFontDialog",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setCurrentFont",
                                    "signature": "const QFont &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentFont",
                                    "signature": "->QFont",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "selectedFont",
                                    "signature": "->QFont",
                                    "type": "function"
                                },
                                {
                                    "defaults": "true",
                                    "name": "setOption",
                                    "signature": "QFontDialog::FontDialogOption;bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "testOption",
                                    "signature": "QFontDialog::FontDialogOption->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setOptions",
                                    "signature": "QFontDialog::FontDialogOptions->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "options",
                                    "signature": "->QFontDialog::FontDialogOptions",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "signature": "QObject *;const char *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setVisible",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "getFont",
                                    "signature": "bool *;QWidget *->QFont",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getFont",
                                    "signature": "bool *;const QFont &;QWidget *;const QString &;QFontDialog::FontDialogOptions->QFont",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "currentFontChanged",
                                    "signature": "const QFont &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "fontSelected",
                                    "signature": "const QFont &->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QFontDialog",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "signature": "QFontDialog::FontDialogOption;QFontDialog::FontDialogOption->QFontDialog::FontDialogOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QFontDialog::FontDialogOption;QFontDialog::FontDialogOptions->QFontDialog::FontDialogOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QFontDialog::FontDialogOptions::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QFontDialog>",
                    "name": "fontdialog",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QDialog",
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        "NoButtons",
                                        "UseListViewForComboBoxItems",
                                        "UsePlainTextEditForTextInput"
                                    ],
                                    "name": "InputDialogOption",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "TextInput",
                                        "IntInput",
                                        "DoubleInput"
                                    ],
                                    "name": "InputMode",
                                    "type": "enum"
                                },
                                {
                                    "defaults": "Qt::WindowFlags();(QWidget*)nullptr",
                                    "name": "QInputDialog",
                                    "signature": "QWidget *;Qt::WindowFlags",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QInputDialog",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setInputMode",
                                    "signature": "QInputDialog::InputMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inputMode",
                                    "signature": "->QInputDialog::InputMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setLabelText",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "labelText",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "defaults": "true",
                                    "name": "setOption",
                                    "signature": "QInputDialog::InputDialogOption;bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "testOption",
                                    "signature": "QInputDialog::InputDialogOption->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setOptions",
                                    "signature": "QInputDialog::InputDialogOptions->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "options",
                                    "signature": "->QInputDialog::InputDialogOptions",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextValue",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textValue",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextEchoMode",
                                    "signature": "QLineEdit::EchoMode->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textEchoMode",
                                    "signature": "->QLineEdit::EchoMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setComboBoxEditable",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isComboBoxEditable",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setComboBoxItems",
                                    "signature": "const QStringList &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "comboBoxItems",
                                    "signature": "->QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "setIntValue",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intValue",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setIntMinimum",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intMinimum",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setIntMaximum",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intMaximum",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setIntRange",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setIntStep",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intStep",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setDoubleValue",
                                    "signature": "double->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "doubleValue",
                                    "signature": "->double",
                                    "type": "function"
                                },
                                {
                                    "name": "setDoubleMinimum",
                                    "signature": "double->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "doubleMinimum",
                                    "signature": "->double",
                                    "type": "function"
                                },
                                {
                                    "name": "setDoubleMaximum",
                                    "signature": "double->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "doubleMaximum",
                                    "signature": "->double",
                                    "type": "function"
                                },
                                {
                                    "name": "setDoubleRange",
                                    "signature": "double;double->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setDoubleDecimals",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "doubleDecimals",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setOkButtonText",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "okButtonText",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setCancelButtonText",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cancelButtonText",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "signature": "QObject *;const char *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "setVisible",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "name": "getText",
                                    "signature": "QWidget *;const QString &;const QString &;QLineEdit::EchoMode;const QString &;bool *;Qt::WindowFlags;Qt::InputMethodHints->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getMultiLineText",
                                    "signature": "QWidget *;const QString &;const QString &;const QString &;bool *;Qt::WindowFlags;Qt::InputMethodHints->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getItem",
                                    "signature": "QWidget *;const QString &;const QString &;const QStringList &;int;bool;bool *;Qt::WindowFlags;Qt::InputMethodHints->QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getInt",
                                    "signature": "QWidget *;const QString &;const QString &;int;int;int;int;bool *;Qt::WindowFlags->int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getDouble",
                                    "signature": "QWidget *;const QString &;const QString &;double;double;double;int;bool *;Qt::WindowFlags->double",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "getDouble",
                                    "signature": "QWidget *;const QString &;const QString &;double;double;double;int;bool *;Qt::WindowFlags;double->double",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "setDoubleStep",
                                    "signature": "double->void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "doubleStep",
                                    "signature": "->double",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "textValueChanged",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "textValueSelected",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "intValueChanged",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "intValueSelected",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "doubleValueChanged",
                                    "signature": "double->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "doubleValueSelected",
                                    "signature": "double->void",
                                    "type": "function"
                                },
                                {
                                    "name": "done",
                                    "signature": "int->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QInputDialog",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "signature": "QInputDialog::InputDialogOption;QInputDialog::InputDialogOption->QInputDialog::InputDialogOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QInputDialog::InputDialogOption;QInputDialog::InputDialogOptions->QInputDialog::InputDialogOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QInputDialog::InputDialogOptions::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QInputDialog>",
                    "name": "inputdialog",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QDialog",
                            "elements": [
                                {
                                    "defaults": "Qt::WindowFlags();(QWidget*)nullptr",
                                    "name": "QProgressDialog",
                                    "signature": "QWidget *;Qt::WindowFlags",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "Qt::WindowFlags();(QWidget*)nullptr",
                                    "name": "QProgressDialog",
                                    "signature": "const QString &;const QString &;int;int;QWidget *;Qt::WindowFlags",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QProgressDialog",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setLabel",
                                    "signature": "QLabel *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setCancelButton",
                                    "signature": "QPushButton *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBar",
                                    "signature": "QProgressBar *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "wasCanceled",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimum",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximum",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "value",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "labelText",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumDuration",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoReset",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoReset",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAutoClose",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "autoClose",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "signature": "QObject *;const char *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "cancel",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "reset",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximum",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimum",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRange",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setValue",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setLabelText",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setCancelButtonText",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimumDuration",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "canceled",
                                    "signature": "->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QProgressDialog",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QProgressDialog>",
                    "name": "progressdialog",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QDialog",
                            "elements": [
                                {
                                    "enumerators": [
                                        "BackButton",
                                        "NextButton",
                                        "CommitButton",
                                        "FinishButton",
                                        "CancelButton",
                                        "HelpButton",
                                        "CustomButton1",
                                        "CustomButton2",
                                        "CustomButton3",
                                        "Stretch",
                                        "NoButton",
                                        "NStandardButtons",
                                        "NButtons"
                                    ],
                                    "name": "WizardButton",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "WatermarkPixmap",
                                        "LogoPixmap",
                                        "BannerPixmap",
                                        "BackgroundPixmap",
                                        "NPixmaps"
                                    ],
                                    "name": "WizardPixmap",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "ClassicStyle",
                                        "ModernStyle",
                                        "MacStyle",
                                        "AeroStyle",
                                        "NStyles"
                                    ],
                                    "name": "WizardStyle",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        "IndependentPages",
                                        "IgnoreSubTitles",
                                        "ExtendedWatermarkPixmap",
                                        "NoDefaultButton",
                                        "NoBackButtonOnStartPage",
                                        "NoBackButtonOnLastPage",
                                        "DisabledBackButtonOnLastPage",
                                        "HaveNextButtonOnLastPage",
                                        "HaveFinishButtonOnEarlyPages",
                                        "NoCancelButton",
                                        "CancelButtonOnLeft",
                                        "HaveHelpButton",
                                        "HelpButtonOnRight",
                                        "HaveCustomButton1",
                                        "HaveCustomButton2",
                                        "HaveCustomButton3",
                                        "NoCancelButtonOnLastPage"
                                    ],
                                    "name": "WizardOption",
                                    "type": "enum"
                                },
                                {
                                    "defaults": "Qt::WindowFlags();(QWidget*)nullptr",
                                    "name": "QWizard",
                                    "signature": "QWidget *;Qt::WindowFlags",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QWizard",
                                    "type": "destructor"
                                },
                                {
                                    "name": "addPage",
                                    "signature": "QWizardPage *->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setPage",
                                    "signature": "int;QWizardPage *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "removePage",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "page",
                                    "signature": "int->QWizardPage *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasVisitedPage",
                                    "signature": "int->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "visitedPages",
                                    "signature": "->QList<int>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pageIds",
                                    "signature": "->QList<int>",
                                    "type": "function"
                                },
                                {
                                    "name": "setStartId",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "startId",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentPage",
                                    "signature": "->QWizardPage *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentId",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "validateCurrentPage",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nextId",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "name": "setField",
                                    "signature": "const QString &;const QVariant &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "field",
                                    "signature": "const QString &->QVariant",
                                    "type": "function"
                                },
                                {
                                    "name": "setWizardStyle",
                                    "signature": "QWizard::WizardStyle->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "wizardStyle",
                                    "signature": "->QWizard::WizardStyle",
                                    "type": "function"
                                },
                                {
                                    "name": "setOption",
                                    "signature": "QWizard::WizardOption;bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "testOption",
                                    "signature": "QWizard::WizardOption->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setOptions",
                                    "signature": "QWizard::WizardOptions->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "options",
                                    "signature": "->QWizard::WizardOptions",
                                    "type": "function"
                                },
                                {
                                    "name": "setButtonText",
                                    "signature": "QWizard::WizardButton;const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "buttonText",
                                    "signature": "QWizard::WizardButton->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setButtonLayout",
                                    "signature": "const QList<QWizard::WizardButton> &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setButton",
                                    "signature": "QWizard::WizardButton;QAbstractButton *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "button",
                                    "signature": "QWizard::WizardButton->QAbstractButton *",
                                    "type": "function"
                                },
                                {
                                    "name": "setTitleFormat",
                                    "signature": "Qt::TextFormat->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "titleFormat",
                                    "signature": "->Qt::TextFormat",
                                    "type": "function"
                                },
                                {
                                    "name": "setSubTitleFormat",
                                    "signature": "Qt::TextFormat->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "subTitleFormat",
                                    "signature": "->Qt::TextFormat",
                                    "type": "function"
                                },
                                {
                                    "name": "setPixmap",
                                    "signature": "QWizard::WizardPixmap;const QPixmap &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixmap",
                                    "signature": "QWizard::WizardPixmap->QPixmap",
                                    "type": "function"
                                },
                                {
                                    "name": "setSideWidget",
                                    "signature": "QWidget *->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sideWidget",
                                    "signature": "->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "name": "setDefaultProperty",
                                    "signature": "const char *;const char *;const char *->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setVisible",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "currentIdChanged",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "helpRequested",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "customButtonClicked",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "pageAdded",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "pageRemoved",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "back",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "next",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "restart",
                                    "signature": "->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QWizard",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "signature": "QWizard::WizardOption;QWizard::WizardOption->QWizard::WizardOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QWizard::WizardOption;QWizard::WizardOptions->QWizard::WizardOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "signature": "QWizard::WizardOptions::enum_type;int->QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QWizardPage",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QWizardPage",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setTitle",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "title",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setSubTitle",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "subTitle",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setPixmap",
                                    "signature": "QWizard::WizardPixmap;const QPixmap &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixmap",
                                    "signature": "QWizard::WizardPixmap->QPixmap",
                                    "type": "function"
                                },
                                {
                                    "name": "setFinalPage",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isFinalPage",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setCommitPage",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isCommitPage",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setButtonText",
                                    "signature": "QWizard::WizardButton;const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "buttonText",
                                    "signature": "QWizard::WizardButton->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "initializePage",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "cleanupPage",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "validatePage",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isComplete",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nextId",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "completeChanged",
                                    "signature": "->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QWizardPage",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QWizard>",
                    "name": "wizard",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QToolBar",
                                    "signature": "const QString &;QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QToolBar",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QToolBar",
                                    "type": "destructor"
                                },
                                {
                                    "name": "setMovable",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isMovable",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAllowedAreas",
                                    "signature": "Qt::ToolBarAreas->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "allowedAreas",
                                    "signature": "->Qt::ToolBarAreas",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isAreaAllowed",
                                    "signature": "Qt::ToolBarArea->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setOrientation",
                                    "signature": "Qt::Orientation->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "orientation",
                                    "signature": "->Qt::Orientation",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "addAction",
                                    "signature": "const QString &->QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addAction",
                                    "signature": "const QIcon &;const QString &->QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addAction",
                                    "signature": "const QString &;const QObject *;const char *->QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addAction",
                                    "signature": "const QIcon &;const QString &;const QObject *;const char *->QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addSeparator",
                                    "signature": "->QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "insertSeparator",
                                    "signature": "QAction *->QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "addWidget",
                                    "signature": "QWidget *->QAction *",
                                    "type": "function"
                                },
                                {
                                    "name": "insertWidget",
                                    "signature": "QAction *;QWidget *->QAction *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "actionGeometry",
                                    "signature": "QAction *->QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "actionAt",
                                    "signature": "const QPoint &->QAction *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "actionAt",
                                    "signature": "int;int->QAction *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toggleViewAction",
                                    "signature": "->QAction *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "iconSize",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toolButtonStyle",
                                    "signature": "->Qt::ToolButtonStyle",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "widgetForAction",
                                    "signature": "QAction *->QWidget *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isFloatable",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setFloatable",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isFloating",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setIconSize",
                                    "signature": "const QSize &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setToolButtonStyle",
                                    "signature": "Qt::ToolButtonStyle->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "actionTriggered",
                                    "signature": "QAction *->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "movableChanged",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "allowedAreasChanged",
                                    "signature": "Qt::ToolBarAreas->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "orientationChanged",
                                    "signature": "Qt::Orientation->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "iconSizeChanged",
                                    "signature": "const QSize &->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "toolButtonStyleChanged",
                                    "signature": "Qt::ToolButtonStyle->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "topLevelChanged",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "visibilityChanged",
                                    "signature": "bool->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QToolBar",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newToolBar",
                            "signature": "const QString&;QWidget*->QToolBar&",
                            "type": "function"
                        },
                        {
                            "binding": "newfunction",
                            "name": "newToolBar",
                            "signature": "QWidget*->QToolBar&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QToolBar>",
                    "name": "toolbar",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QWidget",
                            "elements": [
                                {
                                    "enumerators": [
                                        "TopToBottom",
                                        "BottomToTop"
                                    ],
                                    "name": "Direction",
                                    "type": "enum"
                                },
                                {
                                    "defaults": "(QWidget*)nullptr",
                                    "name": "QProgressBar",
                                    "signature": "QWidget *",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QProgressBar",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "minimum",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maximum",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "value",
                                    "signature": "->int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "text",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextVisible",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTextVisible",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alignment",
                                    "signature": "->Qt::Alignment",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlignment",
                                    "signature": "Qt::Alignment->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minimumSizeHint",
                                    "signature": "->QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "orientation",
                                    "signature": "->Qt::Orientation",
                                    "type": "function"
                                },
                                {
                                    "name": "setInvertedAppearance",
                                    "signature": "bool->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "invertedAppearance",
                                    "signature": "->bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextDirection",
                                    "signature": "QProgressBar::Direction->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textDirection",
                                    "signature": "->QProgressBar::Direction",
                                    "type": "function"
                                },
                                {
                                    "name": "setFormat",
                                    "signature": "const QString &->void",
                                    "type": "function"
                                },
                                {
                                    "name": "resetFormat",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "format",
                                    "signature": "->QString",
                                    "type": "function"
                                },
                                {
                                    "name": "reset",
                                    "signature": "->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRange",
                                    "signature": "int;int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMinimum",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMaximum",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setValue",
                                    "signature": "int->void",
                                    "type": "function"
                                },
                                {
                                    "name": "setOrientation",
                                    "signature": "Qt::Orientation->void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "valueChanged",
                                    "signature": "int->void",
                                    "type": "function"
                                }
                            ],
                            "name": "QProgressBar",
                            "type": "class"
                        },
                        {
                            "binding": "newfunction",
                            "defaults": "(QWidget*)nullptr",
                            "name": "newProgressBar",
                            "signature": "QWidget*->QProgressBar&",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QProgressBar>",
                    "name": "progressbar",
                    "type": "file"
                }
            ],
            "name": "widgets",
            "type": "module"
        }
    ],
    "types": {
        "classes": [
            {
                "header": "yasl/core/enums.h",
                "id": "QtAlignment",
                "name": "Qt::Alignment",
                "rename": "Alignment"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtImageConversionFlags",
                "name": "Qt::ImageConversionFlags",
                "rename": "ImageConversionFlags"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtKeyboardModifiers",
                "name": "Qt::KeyboardModifiers",
                "rename": "KeyboardModifiers"
            },
            {
                "header": "yasl/core/bytearray.h",
                "id": "QByteArray",
                "links": "proxy@Proxy<QByteArray>;list@QList<QByteArray>",
                "name": "QByteArray",
                "rename": "ByteArray"
            },
            {
                "header": "yasl/core/bytearray.h",
                "id": "ProxyQByteArray",
                "name": "Proxy<QByteArray>"
            },
            {
                "header": "yasl/core/bytearray.h",
                "id": "QListQByteArray",
                "name": "QList<QByteArray>"
            },
            {
                "header": "yasl/core/bytearray.h",
                "id": "QByteArrayBase64Options",
                "name": "QByteArray::Base64Options",
                "rename": "Base64Options"
            },
            {
                "header": "yasl/core/bytearray.h",
                "id": "QByteRef",
                "name": "QByteRef",
                "rename": "ByteRef"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QChar",
                "name": "QChar",
                "rename": "Char"
            },
            {
                "header": "yasl/core/event.h",
                "id": "QChildEvent",
                "name": "QChildEvent",
                "rename": "ChildEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/core/datastream.h",
                "id": "QDataStream",
                "name": "QDataStream",
                "rename": "DataStream"
            },
            {
                "header": "yasl/core/datetime.h",
                "id": "QDate",
                "name": "QDate",
                "rename": "Date"
            },
            {
                "header": "yasl/core/datetime.h",
                "id": "QDateTime",
                "name": "QDateTime",
                "rename": "DateTime"
            },
            {
                "header": "yasl/core/event.h",
                "id": "QDeferredDeleteEvent",
                "name": "QDeferredDeleteEvent",
                "rename": "DeferredDeleteEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/core/dir.h",
                "id": "QDir",
                "name": "QDir",
                "rename": "Dir"
            },
            {
                "header": "yasl/core/dir.h",
                "id": "QDirFilters",
                "name": "QDir::Filters",
                "rename": "Filters"
            },
            {
                "header": "yasl/core/dir.h",
                "id": "QDirSortFlags",
                "name": "QDir::SortFlags",
                "rename": "SortFlags"
            },
            {
                "header": "yasl/core/event.h",
                "id": "QDynamicPropertyChangeEvent",
                "name": "QDynamicPropertyChangeEvent",
                "rename": "DynamicPropertyChangeEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/core/elapsedtimer.h",
                "id": "QElapsedTimer",
                "name": "QElapsedTimer",
                "rename": "ElapsedTimer"
            },
            {
                "header": "yasl/core/event.h",
                "id": "QEvent",
                "name": "QEvent",
                "rename": "Event",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/core/file.h",
                "id": "QFile",
                "name": "QFile",
                "rename": "File",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDevice",
                "name": "QFileDevice",
                "rename": "FileDevice",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDevicePermissions",
                "name": "QFileDevice::Permissions",
                "rename": "Permissions"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDeviceFileHandleFlags",
                "name": "QFileDevice::FileHandleFlags",
                "rename": "FileHandleFlags"
            },
            {
                "header": "yasl/core/fileinfo.h",
                "id": "QFileInfo",
                "name": "QFileInfo",
                "rename": "FileInfo"
            },
            {
                "header": "yasl/core/iodevice.h",
                "id": "QIODevice",
                "name": "QIODevice",
                "rename": "IODevice",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/iodevice.h",
                "id": "QIODeviceOpenMode",
                "name": "QIODevice::OpenMode",
                "rename": "OpenMode"
            },
            {
                "header": "yasl/core/line.h",
                "id": "QLine",
                "metatype": "QMetaType::QLine",
                "name": "QLine",
                "rename": "Line"
            },
            {
                "header": "yasl/core/line.h",
                "id": "QLineF",
                "name": "QLineF",
                "rename": "LineF"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocale",
                "links": "proxy@Proxy<QLocale>;list@QList<QLocale>",
                "name": "QLocale",
                "rename": "Locale"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "ProxyQLocale",
                "name": "Proxy<QLocale>"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QListQLocale",
                "name": "QList<QLocale>"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleNumberOptions",
                "name": "QLocale::NumberOptions",
                "rename": "NumberOptions"
            },
            {
                "header": "yasl/core/margins.h",
                "id": "QMargins",
                "name": "QMargins",
                "rename": "Margins"
            },
            {
                "header": "yasl/core/margins.h",
                "id": "QMarginsF",
                "name": "QMarginsF",
                "rename": "MarginsF"
            },
            {
                "header": "yasl/core/mimetype.h",
                "id": "QMimeType",
                "name": "QMimeType",
                "rename": "MimeType"
            },
            {
                "header": "yasl/core/point.h",
                "id": "QPoint",
                "name": "QPoint",
                "rename": "Point"
            },
            {
                "header": "yasl/core/point.h",
                "id": "QPointF",
                "name": "QPointF",
                "rename": "PointF"
            },
            {
                "header": "yasl/core/object.h",
                "id": "QObject",
                "links": "ref@QObject*;proxy@Proxy<QObject*>;list@QList<QObject*>",
                "name": "QObject",
                "rename": "Object",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/object.h",
                "id": "QObjectStar",
                "name": "QObject*"
            },
            {
                "header": "yasl/core/object.h",
                "id": "ProxyQObject",
                "name": "Proxy<QObject*>"
            },
            {
                "header": "yasl/core/object.h",
                "id": "QListQObject",
                "name": "QList<QObject*>"
            },
            {
                "header": "yasl/core/object.h",
                "id": "QListQObject",
                "name": "QObjectList"
            },
            {
                "header": "yasl/core/process.h",
                "id": "QProcess",
                "name": "QProcess",
                "rename": "Process",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/process.h",
                "id": "QProcessEnvironment",
                "name": "QProcessEnvironment",
                "rename": "ProcessEnvironment"
            },
            {
                "header": "yasl/core/rect.h",
                "id": "QRect",
                "name": "QRect",
                "rename": "Rect"
            },
            {
                "header": "yasl/core/rect.h",
                "id": "QRectF",
                "name": "QRectF",
                "rename": "RectF"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpression",
                "name": "QRegularExpression",
                "rename": "RegularExpression"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpressionMatchOptions",
                "name": "QRegularExpression::MatchOptions",
                "rename": "MatchOptions"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpressionPatternOptions",
                "name": "QRegularExpression::PatternOptions",
                "rename": "PatternOptions"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpressionMatch",
                "name": "QRegularExpressionMatch",
                "rename": "RegularExpressionMatch"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpressionMatchIterator",
                "name": "QRegularExpressionMatchIterator",
                "rename": "RegularExpressionMatchIterator"
            },
            {
                "header": "yasl/core/settings.h",
                "id": "QSettings",
                "name": "QSettings",
                "rename": "Settings",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/object.h",
                "id": "QSignalBlocker",
                "name": "QSignalBlocker",
                "rename": "SignalBlocker"
            },
            {
                "header": "yasl/core/size.h",
                "id": "QSize",
                "name": "QSize",
                "rename": "Size"
            },
            {
                "header": "yasl/core/size.h",
                "id": "QSizeF",
                "name": "QSizeF",
                "rename": "SizeF"
            },
            {
                "header": "yasl/core/datetime.h",
                "id": "QTime",
                "name": "QTime",
                "rename": "Time"
            },
            {
                "header": "yasl/core/timer.h",
                "id": "QTimer",
                "name": "QTimer",
                "rename": "Timer",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/event.h",
                "id": "QTimerEvent",
                "name": "QTimerEvent",
                "rename": "TimerEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/core/timezone.h",
                "id": "QTimeZone",
                "name": "QTimeZone",
                "rename": "TimeZone"
            },
            {
                "header": "yasl/core/url.h",
                "id": "QUrl",
                "name": "QUrl",
                "rename": "Url"
            },
            {
                "header": "yasl/core/url.h",
                "id": "QUrlComponentFormattingOptions",
                "name": "QUrl::ComponentFormattingOptions",
                "rename": "ComponentFormattingOptions"
            },
            {
                "header": "yasl/core/url.h",
                "id": "QUrlUserInputResolutionOptions",
                "name": "QUrl::UserInputResolutionOptions",
                "rename": "UserInputResolutionOptions"
            },
            {
                "header": "yasl/core/urlquery.h",
                "id": "QUrlQuery",
                "name": "QUrlQuery",
                "rename": "UrlQuery"
            },
            {
                "header": "yasl/core/uuid.h",
                "id": "QUuid",
                "name": "QUuid",
                "rename": "Uuid"
            },
            {
                "header": "yasl/core/variant.h",
                "id": "QVariant",
                "name": "QVariant",
                "rename": "Variant"
            },
            {
                "header": "yasl/gui/color.h",
                "id": "QColor",
                "name": "QColor",
                "rename": "Color"
            },
            {
                "header": "yasl/gui/cursor.h",
                "id": "QCursor",
                "name": "QCursor",
                "rename": "Cursor"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFont",
                "name": "QFont",
                "rename": "Font"
            },
            {
                "header": "yasl/gui/fontdatabase.h",
                "id": "QFontDatabase",
                "name": "QFontDatabase",
                "rename": "FontDatabase"
            },
            {
                "header": "yasl/gui/fontinfo.h",
                "id": "QFontInfo",
                "name": "QFontInfo",
                "rename": "FontInfo"
            },
            {
                "header": "yasl/gui/fontmetrics.h",
                "id": "QFontMetrics",
                "name": "QFontMetrics",
                "rename": "FontMetrics"
            },
            {
                "header": "yasl/gui/fontmetrics.h",
                "id": "QFontMetricsF",
                "name": "QFontMetricsF",
                "rename": "FontMetricsF"
            },
            {
                "header": "yasl/gui/pixmap.h",
                "id": "QPixmap",
                "name": "QPixmap",
                "rename": "Pixmap"
            },
            {
                "header": "yasl/gui/bitmap.h",
                "id": "QBitmap",
                "name": "QBitmap",
                "rename": "Bitmap"
            },
            {
                "header": "yasl/gui/icon.h",
                "id": "QIcon",
                "name": "QIcon",
                "rename": "Icon"
            },
            {
                "header": "yasl/gui/image.h",
                "id": "QImage",
                "name": "QImage",
                "rename": "Image"
            },
            {
                "header": "yasl/gui/transform.h",
                "id": "QTransform",
                "name": "QTransform",
                "rename": "Transform"
            },
            {
                "header": "yasl/gui/vector2d.h",
                "id": "QVector2D",
                "name": "QVector2D",
                "rename": "Vector2D"
            },
            {
                "header": "yasl/gui/vector3d.h",
                "id": "QVector3D",
                "name": "QVector3D",
                "rename": "Vector3D"
            },
            {
                "header": "yasl/gui/vector4d.h",
                "id": "QVector4D",
                "name": "QVector4D",
                "rename": "Vector4D"
            },
            {
                "header": "yasl/gui/quaternion.h",
                "id": "QQuaternion",
                "name": "QQuaternion",
                "rename": "Quaternion"
            },
            {
                "header": "yasl/gui/region.h",
                "id": "QRegion",
                "name": "QRegion",
                "rename": "Region"
            },
            {
                "header": "yasl/gui/clipboard.h",
                "id": "QClipboard",
                "name": "QClipboard",
                "rename": "Clipboard",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/gui/keysequence.h",
                "id": "QKeySequence",
                "name": "QKeySequence",
                "rename": "KeySequence"
            },
            {
                "header": "yasl/gui/brush.h",
                "id": "QBrush",
                "name": "QBrush",
                "rename": "Brush"
            },
            {
                "header": "yasl/gui/brush.h",
                "id": "QGradient",
                "name": "QGradient",
                "rename": "Gradient"
            },
            {
                "header": "yasl/gui/brush.h",
                "id": "QLinearGradient",
                "name": "QLinearGradient",
                "rename": "LinearGradient"
            },
            {
                "header": "yasl/gui/brush.h",
                "id": "QRadialGradient",
                "name": "QRadialGradient",
                "rename": "RadialGradient"
            },
            {
                "header": "yasl/gui/brush.h",
                "id": "QConicalGradient",
                "name": "QConicalGradient",
                "rename": "ConicalGradient"
            },
            {
                "header": "yasl/gui/glyphrun.h",
                "id": "QGlyphRun",
                "name": "QGlyphRun",
                "rename": "GlyphRun"
            },
            {
                "header": "yasl/gui/painter.h",
                "id": "QPainter",
                "name": "QPainter",
                "rename": "Painter"
            },
            {
                "header": "yasl/gui/painter.h",
                "id": "QPainterRenderHints",
                "name": "QPainter::RenderHints",
                "rename": "RenderHints"
            },
            {
                "header": "yasl/gui/painter.h",
                "id": "QPainterPixmapFragmentHints",
                "name": "QPainter::PixmapFragmentHints",
                "rename": "PixmapFragmentHints"
            },
            {
                "header": "yasl/gui/painterpath.h",
                "id": "QPainterPath",
                "name": "QPainterPath",
                "rename": "PainterPath"
            },
            {
                "header": "yasl/gui/painterpath.h",
                "id": "QPainterPathStroker",
                "name": "QPainterPathStroker",
                "rename": "PainterPathStroker"
            },
            {
                "header": "yasl/gui/palette.h",
                "id": "QPalette",
                "name": "QPalette",
                "rename": "Palette"
            },
            {
                "header": "yasl/gui/pen.h",
                "id": "QPen",
                "name": "QPen",
                "rename": "Pen"
            },
            {
                "header": "yasl/gui/picture.h",
                "id": "QPicture",
                "name": "QPicture",
                "rename": "Picture"
            },
            {
                "header": "yasl/gui/picture.h",
                "id": "QPictureIO",
                "name": "QPictureIO",
                "rename": "PictureIO"
            },
            {
                "header": "yasl/gui/pixelformat.h",
                "id": "QPixelFormat",
                "name": "QPixelFormat",
                "rename": "PixelFormat"
            },
            {
                "header": "yasl/gui/screen.h",
                "id": "QScreen",
                "name": "QScreen",
                "rename": "Screen",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/gui/statictext.h",
                "id": "QStaticText",
                "name": "QStaticText",
                "rename": "StaticText"
            },
            {
                "header": "yasl/gui/textoption.h",
                "id": "QTextOption",
                "name": "QTextOption",
                "rename": "TextOption"
            },
            {
                "header": "yasl/gui/textoption.h",
                "id": "QTextOptionFlags",
                "name": "QTextOption::Flags",
                "rename": "Flags"
            },
            {
                "header": "yasl/gui/validator.h",
                "id": "QValidator",
                "name": "QValidator",
                "rename": "Validator",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/gui/validator.h",
                "id": "QIntValidator",
                "name": "QIntValidator",
                "rename": "IntValidator",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/gui/validator.h",
                "id": "QDoubleValidator",
                "name": "QDoubleValidator",
                "rename": "DoubleValidator",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/gui/validator.h",
                "id": "QRegularExpressionValidator",
                "name": "QRegularExpressionValidator",
                "rename": "RegularExpressionValidator",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/gui/window.h",
                "id": "QWindow",
                "links": "ref@QWindow*",
                "name": "QWindow",
                "rename": "Window",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/gui/window.h",
                "id": "QWindowStar",
                "name": "QWindow*"
            },
            {
                "header": "yasl/gui/guievent.h",
                "id": "QMouseEvent",
                "name": "QMouseEvent",
                "rename": "MouseEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/gui/guievent.h",
                "id": "QWheelEvent",
                "name": "QWheelEvent",
                "rename": "WheelEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/gui/guievent.h",
                "id": "QKeyEvent",
                "name": "QKeyEvent",
                "rename": "KeyEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/gui/guievent.h",
                "id": "QPaintEvent",
                "name": "QPaintEvent",
                "rename": "PaintEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/gui/guievent.h",
                "id": "QMoveEvent",
                "name": "QMoveEvent",
                "rename": "MoveEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/gui/guievent.h",
                "id": "QResizeEvent",
                "name": "QResizeEvent",
                "rename": "ResizeEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/gui/guievent.h",
                "id": "QCloseEvent",
                "name": "QCloseEvent",
                "rename": "CloseEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/gui/guievent.h",
                "id": "QShowEvent",
                "name": "QShowEvent",
                "rename": "ShowEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/gui/guievent.h",
                "id": "QHideEvent",
                "name": "QHideEvent",
                "rename": "HideEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/widgets/widget.h",
                "id": "QWidget",
                "links": "ref@QWidget*;proxy@Proxy<QWidget*>;list@QList<QWidget*>",
                "name": "QWidget",
                "rename": "Widget",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/widget.h",
                "id": "QWidgetStar",
                "name": "QWidget*"
            },
            {
                "header": "yasl/widgets/widget.h",
                "id": "ProxyQWidget",
                "name": "Proxy<QWidget*>"
            },
            {
                "header": "yasl/widgets/widget.h",
                "id": "QListQWidget",
                "name": "QList<QWidget*>"
            },
            {
                "header": "yasl/widgets/abstractbutton.h",
                "id": "QAbstractButton",
                "name": "QAbstractButton",
                "rename": "AbstractButton",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/pushbutton.h",
                "id": "QPushButton",
                "name": "QPushButton",
                "rename": "PushButton",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/frame.h",
                "id": "QFrame",
                "name": "QFrame",
                "rename": "Frame",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/label.h",
                "id": "QLabel",
                "name": "QLabel",
                "rename": "Label",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/tabwidget.h",
                "id": "QTabWidget",
                "name": "QTabWidget",
                "rename": "TabWidget",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/lineedit.h",
                "id": "QLineEdit",
                "name": "QLineEdit",
                "rename": "LineEdit",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/jsonvalue.h",
                "id": "QJsonValue",
                "name": "QJsonValue",
                "rename": "JsonValue"
            },
            {
                "header": "yasl/core/jsonvalue.h",
                "id": "QJsonValueRef",
                "name": "QJsonValueRef",
                "rename": "JsonValueRef"
            },
            {
                "header": "yasl/core/jsonarray.h",
                "id": "QJsonArray",
                "name": "QJsonArray",
                "rename": "JsonArray"
            },
            {
                "header": "yasl/core/jsonobject.h",
                "id": "QJsonObject",
                "name": "QJsonObject",
                "rename": "JsonObject"
            },
            {
                "header": "yasl/core/jsondocument.h",
                "id": "QJsonDocument",
                "name": "QJsonDocument",
                "rename": "JsonDocument"
            },
            {
                "header": "yasl/widgets/groupbox.h",
                "id": "QGroupBox",
                "name": "QGroupBox",
                "rename": "GroupBox",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/combobox.h",
                "id": "QComboBox",
                "name": "QComboBox",
                "rename": "ComboBox",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/fontcombobox.h",
                "id": "QFontComboBox",
                "name": "QFontComboBox",
                "rename": "FontComboBox",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/fontcombobox.h",
                "id": "QFontComboBoxFontFilters",
                "name": "QFontComboBox::FontFilters",
                "rename": "FontFilters"
            },
            {
                "header": "yasl/widgets/abstractslider.h",
                "id": "QAbstractSlider",
                "name": "QAbstractSlider",
                "rename": "AbstractSlider",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/slider.h",
                "id": "QSlider",
                "name": "QSlider",
                "rename": "Slider",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/scrollbar.h",
                "id": "QScrollBar",
                "name": "QScrollBar",
                "rename": "ScrollBar",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/dial.h",
                "id": "QDial",
                "name": "QDial",
                "rename": "Dial",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/abstractspinbox.h",
                "id": "QAbstractSpinBox",
                "name": "QAbstractSpinBox",
                "rename": "AbstractSpinBox",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/abstractspinbox.h",
                "id": "QAbstractSpinBoxStepEnabled",
                "name": "QAbstractSpinBox::StepEnabled",
                "rename": "StepEnabled"
            },
            {
                "header": "yasl/widgets/spinbox.h",
                "id": "QSpinBox",
                "name": "QSpinBox",
                "rename": "SpinBox",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/spinbox.h",
                "id": "QDoubleSpinBox",
                "name": "QDoubleSpinBox",
                "rename": "DoubleSpinBox",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/datetimeedit.h",
                "id": "QDateTimeEdit",
                "name": "QDateTimeEdit",
                "rename": "DateTimeEdit",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/datetimeedit.h",
                "id": "QTimeEdit",
                "name": "QTimeEdit",
                "rename": "TimeEdit",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/datetimeedit.h",
                "id": "QDateEdit",
                "name": "QDateEdit",
                "rename": "DateEdit",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/datetimeedit.h",
                "id": "QDateTimeEditSections",
                "name": "QDateTimeEdit::Sections",
                "rename": "Sections"
            },
            {
                "header": "yasl/widgets/checkbox.h",
                "id": "QCheckBox",
                "name": "QCheckBox",
                "rename": "CheckBox",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/radiobutton.h",
                "id": "QRadioButton",
                "name": "QRadioButton",
                "rename": "RadioButton",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/toolbutton.h",
                "id": "QToolButton",
                "name": "QToolButton",
                "rename": "ToolButton",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/action.h",
                "id": "QAction",
                "links": "ref@QAction*;proxy@Proxy<QAction*>;list@QList<QAction*>",
                "name": "QAction",
                "rename": "Action",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/action.h",
                "id": "QActionStar",
                "name": "QAction*"
            },
            {
                "header": "yasl/widgets/action.h",
                "id": "ProxyQAction",
                "name": "Proxy<QAction*>"
            },
            {
                "header": "yasl/widgets/action.h",
                "id": "QListQAction",
                "name": "QList<QAction*>"
            },
            {
                "header": "yasl/widgets/menu.h",
                "id": "QMenu",
                "links": "ref@QMenu*",
                "name": "QMenu",
                "rename": "Menu",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/menu.h",
                "id": "QMenuStar",
                "name": "QMenu*"
            },
            {
                "header": "yasl/widgets/layout.h",
                "id": "QLayout",
                "links": "ref@QLayout*",
                "name": "QLayout",
                "rename": "Layout",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/layout.h",
                "id": "QLayoutStar",
                "name": "QLayout*"
            },
            {
                "header": "yasl/widgets/boxlayout.h",
                "id": "QBoxLayout",
                "name": "QBoxLayout",
                "rename": "BoxLayout",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/boxlayout.h",
                "id": "QHBoxLayout",
                "name": "QHBoxLayout",
                "rename": "QHBoxLayout",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/boxlayout.h",
                "id": "QVBoxLayout",
                "name": "QVBoxLayout",
                "rename": "QVBoxLayout",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/formlayout.h",
                "id": "QFormLayout",
                "name": "QFormLayout",
                "rename": "FormLayout",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/gridlayout.h",
                "id": "QGridLayout",
                "name": "QGridLayout",
                "rename": "GridLayout",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/stackedlayout.h",
                "id": "QStackedLayout",
                "name": "QStackedLayout",
                "rename": "StackedLayout",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/dialog.h",
                "id": "QDialog",
                "name": "QDialog",
                "rename": "Dialog",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/messagebox.h",
                "id": "QMessageBox",
                "name": "QMessageBox",
                "rename": "MessageBox",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/messagebox.h",
                "id": "QMessageBoxStandardButtons",
                "name": "QMessageBox::StandardButtons",
                "rename": "StandardButtons"
            },
            {
                "header": "yasl/widgets/filedialog.h",
                "id": "QFileDialog",
                "name": "QFileDialog",
                "rename": "FileDialog",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/filedialog.h",
                "id": "QFileDialogOptions",
                "name": "QFileDialog::Options",
                "rename": "Options"
            },
            {
                "header": "yasl/widgets/errormessage.h",
                "id": "QErrorMessage",
                "name": "QErrorMessage",
                "rename": "ErrorMessage",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/colordialog.h",
                "id": "QColorDialog",
                "name": "QColorDialog",
                "rename": "ColorDialog",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/colordialog.h",
                "id": "QColorDialogColorDialogOptions",
                "name": "QColorDialog::ColorDialogOptions",
                "rename": "ColorDialogOptions"
            },
            {
                "header": "yasl/widgets/fontdialog.h",
                "id": "QFontDialog",
                "name": "QFontDialog",
                "rename": "FontDialog",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/fontdialog.h",
                "id": "QFontDialogFontDialogOptions",
                "name": "QFontDialog::FontDialogOptions",
                "rename": "FontDialogOptions"
            },
            {
                "header": "yasl/widgets/inputdialog.h",
                "id": "QInputDialog",
                "name": "QInputDialog",
                "rename": "InputDialog",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/inputdialog.h",
                "id": "QInputDialogInputDialogOptions",
                "name": "QInputDialog::InputDialogOptions",
                "rename": "InputDialogOptions"
            },
            {
                "header": "yasl/widgets/progressdialog.h",
                "id": "QProgressDialog",
                "name": "QProgressDialog",
                "rename": "ProgressDialog",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/wizard.h",
                "id": "QWizard",
                "name": "QWizard",
                "rename": "Wizard",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/wizard.h",
                "id": "QWizardPage",
                "name": "QWizardPage",
                "rename": "WizardPage",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/widgets/wizard.h",
                "id": "QWizardWizardOptions",
                "name": "QWizard::WizardOptions",
                "rename": "WizardOptions"
            },
            {
                "header": "yasl/widgets/toolbar.h",
                "id": "QToolBar",
                "name": "QToolBar",
                "rename": "ToolBar",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtToolBarAreas",
                "name": "Qt::ToolBarAreas",
                "rename": "ToolBarAreas"
            },
            {
                "header": "yasl/widgets/progressbar.h",
                "id": "QProgressBar",
                "name": "QProgressBar",
                "rename": "ProgressBar",
                "tag": "qobject_tag"
            }
        ],
        "enums": [
            {
                "header": "yasl/core/bytearray.h",
                "id": "QByteArrayBase64Option",
                "links": "flags@QByteArray::Base64Options",
                "name": "QByteArray::Base64Option"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtGlobalColor",
                "name": "Qt::GlobalColor"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtKeyboardModifier",
                "links": "flags@Qt::KeyboardModifiers",
                "name": "Qt::KeyboardModifier"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtModifier",
                "name": "Qt::Modifier"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtMouseButton",
                "name": "Qt::MouseButton"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtOrientation",
                "name": "Qt::Orientation"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtFocusPolicy",
                "name": "Qt::FocusPolicy"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTabFocusBehavior",
                "name": "Qt::TabFocusBehavior"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtSortOrder",
                "name": "Qt::SortOrder"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTileRule",
                "name": "Qt::TileRule"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtAlignmentFlag",
                "links": "flags@Qt::Alignment",
                "name": "Qt::AlignmentFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTextFlag",
                "name": "Qt::TextFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTextElideMode",
                "name": "Qt::TextElideMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtWhiteSpaceMode",
                "name": "Qt::WhiteSpaceMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtHitTestAccuracy",
                "name": "Qt::HitTestAccuracy"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtWindowType",
                "name": "Qt::WindowType"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtWindowState",
                "name": "Qt::WindowState"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtApplicationState",
                "name": "Qt::ApplicationState"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtScreenOrientation",
                "name": "Qt::ScreenOrientation"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtWidgetAttribute",
                "name": "Qt::WidgetAttribute"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtApplicationAttribute",
                "name": "Qt::ApplicationAttribute"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtImageConversionFlag",
                "links": "flags@Qt::ImageConversionFlags",
                "name": "Qt::ImageConversionFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtBGMode",
                "name": "Qt::BGMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtKey",
                "name": "Qt::Key"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtArrowType",
                "name": "Qt::ArrowType"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtPenStyle",
                "name": "Qt::PenStyle"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtPenCapStyle",
                "name": "Qt::PenCapStyle"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtPenJoinStyle",
                "name": "Qt::PenJoinStyle"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtBrushStyle",
                "name": "Qt::BrushStyle"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtSizeMode",
                "name": "Qt::SizeMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtUIEffect",
                "name": "Qt::UIEffect"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtCursorShape",
                "name": "Qt::CursorShape"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTextFormat",
                "name": "Qt::TextFormat"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtAspectRatioMode",
                "name": "Qt::AspectRatioMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtDockWidgetArea",
                "name": "Qt::DockWidgetArea"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtDockWidgetAreaSizes",
                "name": "Qt::DockWidgetAreaSizes"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtToolBarArea",
                "links": "flags@Qt::ToolBarAreas",
                "name": "Qt::ToolBarArea"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtToolBarAreaSizes",
                "name": "Qt::ToolBarAreaSizes"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtDateFormat",
                "name": "Qt::DateFormat"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTimeSpec",
                "name": "Qt::TimeSpec"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtDayOfWeek",
                "name": "Qt::DayOfWeek"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtScrollBarPolicy",
                "name": "Qt::ScrollBarPolicy"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtCaseSensitivity",
                "name": "Qt::CaseSensitivity"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtCorner",
                "name": "Qt::Corner"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtEdge",
                "name": "Qt::Edge"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtConnectionType",
                "name": "Qt::ConnectionType"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtShortcutContext",
                "name": "Qt::ShortcutContext"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtFillRule",
                "name": "Qt::FillRule"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtMaskMode",
                "name": "Qt::MaskMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtClipOperation",
                "name": "Qt::ClipOperation"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtItemSelectionMode",
                "name": "Qt::ItemSelectionMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtItemSelectionOperation",
                "name": "Qt::ItemSelectionOperation"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTransformationMode",
                "name": "Qt::TransformationMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtAxis",
                "name": "Qt::Axis"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtFocusReason",
                "name": "Qt::FocusReason"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtContextMenuPolicy",
                "name": "Qt::ContextMenuPolicy"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtInputMethodQuery",
                "name": "Qt::InputMethodQuery"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtInputMethodHint",
                "name": "Qt::InputMethodHint"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtEnterKeyType",
                "name": "Qt::EnterKeyType"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtToolButtonStyle",
                "name": "Qt::ToolButtonStyle"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtLayoutDirection",
                "name": "Qt::LayoutDirection"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtAnchorPoint",
                "name": "Qt::AnchorPoint"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtFindChildOption",
                "name": "Qt::FindChildOption"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtDropAction",
                "name": "Qt::DropAction"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtCheckState",
                "name": "Qt::CheckState"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtItemDataRole",
                "name": "Qt::ItemDataRole"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtItemFlag",
                "name": "Qt::ItemFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtMatchFlag",
                "name": "Qt::MatchFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtWindowModality",
                "name": "Qt::WindowModality"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTextInteractionFlag",
                "name": "Qt::TextInteractionFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtEventPriority",
                "name": "Qt::EventPriority"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtSizeHint",
                "name": "Qt::SizeHint"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtWindowFrameSection",
                "name": "Qt::WindowFrameSection"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtInitialization",
                "name": "Qt::Initialization"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtCoordinateSystem",
                "name": "Qt::CoordinateSystem"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTouchPointState",
                "name": "Qt::TouchPointState"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtGestureState",
                "name": "Qt::GestureState"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtGestureType",
                "name": "Qt::GestureType"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtGestureFlag",
                "name": "Qt::GestureFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtNativeGestureType",
                "name": "Qt::NativeGestureType"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtNavigationMode",
                "name": "Qt::NavigationMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtCursorMoveStyle",
                "name": "Qt::CursorMoveStyle"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTimerType",
                "name": "Qt::TimerType"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtScrollPhase",
                "name": "Qt::ScrollPhase"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtMouseEventSource",
                "name": "Qt::MouseEventSource"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtMouseEventFlag",
                "name": "Qt::MouseEventFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtChecksumType",
                "name": "Qt::ChecksumType"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharSpecialCharacter",
                "name": "QChar::SpecialCharacter"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharCategory",
                "name": "QChar::Category"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharScript",
                "name": "QChar::Script"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharDirection",
                "name": "QChar::Direction"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharDecomposition",
                "name": "QChar::Decomposition"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharJoiningType",
                "name": "QChar::JoiningType"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharJoining",
                "name": "QChar::Joining"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharCombiningClass",
                "name": "QChar::CombiningClass"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharUnicodeVersion",
                "name": "QChar::UnicodeVersion"
            },
            {
                "header": "yasl/core/datastream.h",
                "id": "QDataStreamVersion",
                "name": "QDataStream::Version"
            },
            {
                "header": "yasl/core/datastream.h",
                "id": "QDataStreamByteOrder",
                "name": "QDataStream::ByteOrder"
            },
            {
                "header": "yasl/core/datastream.h",
                "id": "QDataStreamStatus",
                "name": "QDataStream::Status"
            },
            {
                "header": "yasl/core/datastream.h",
                "id": "QDataStreamFloatingPointPrecision",
                "name": "QDataStream::FloatingPointPrecision"
            },
            {
                "header": "yasl/core/datetime.h",
                "id": "QDateMonthNameType",
                "name": "QDate::MonthNameType"
            },
            {
                "header": "yasl/core/dir.h",
                "id": "QDirFilter",
                "links": "flags@QDir::Filters",
                "name": "QDir::Filter"
            },
            {
                "header": "yasl/core/dir.h",
                "id": "QDirSortFlag",
                "links": "flags@QDir::SortFlags",
                "name": "QDir::SortFlag"
            },
            {
                "header": "yasl/core/elapsedtimer.h",
                "id": "QElapsedTimerClockType",
                "name": "QElapsedTimer::ClockType"
            },
            {
                "header": "yasl/core/event.h",
                "id": "QEventType",
                "name": "QEvent::Type"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDeviceFileError",
                "name": "QFileDevice::FileError"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDevicePermission",
                "links": "flags@QFileDevice::Permissions",
                "name": "QFileDevice::Permission"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDeviceFileHandleFlag",
                "links": "flags@QFileDevice::FileHandleFlags",
                "name": "QFileDevice::FileHandleFlag"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDeviceMemoryMapFlags",
                "name": "QFileDevice::MemoryMapFlags"
            },
            {
                "header": "yasl/core/iodevice.h",
                "id": "QIODeviceOpenModeFlag",
                "links": "flags@QIODevice::OpenMode",
                "name": "QIODevice::OpenModeFlag"
            },
            {
                "header": "yasl/core/line.h",
                "id": "QLineFIntersectType",
                "name": "QLineF::IntersectType"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleLanguage",
                "name": "QLocale::Language"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleScript",
                "name": "QLocale::Script"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleCountry",
                "name": "QLocale::Country"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleMeasurementSystem",
                "name": "QLocale::MeasurementSystem"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleFormatType",
                "name": "QLocale::FormatType"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleNumberOption",
                "links": "flags@QLocale::NumberOptions",
                "name": "QLocale::NumberOption"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleFloatingPointPrecisionOption",
                "name": "QLocale::FloatingPointPrecisionOption"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleCurrencySymbolFormat",
                "name": "QLocale::CurrencySymbolFormat"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleQuotationStyle",
                "name": "QLocale::QuotationStyle"
            },
            {
                "header": "yasl/core/process.h",
                "id": "QProcessProcessError",
                "name": "QProcess::ProcessError"
            },
            {
                "header": "yasl/core/process.h",
                "id": "QProcessProcessState",
                "name": "QProcess::ProcessState"
            },
            {
                "header": "yasl/core/process.h",
                "id": "QProcessProcessChannel",
                "name": "QProcess::ProcessChannel"
            },
            {
                "header": "yasl/core/process.h",
                "id": "QProcessProcessChannelMode",
                "name": "QProcess::ProcessChannelMode"
            },
            {
                "header": "yasl/core/process.h",
                "id": "QProcessInputChannelMode",
                "name": "QProcess::InputChannelMode"
            },
            {
                "header": "yasl/core/process.h",
                "id": "QProcessExitStatus",
                "name": "QProcess::ExitStatus"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpressionPatternOption",
                "links": "flags@QRegularExpression::PatternOptions",
                "name": "QRegularExpression::PatternOption"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpressionMatchType",
                "name": "QRegularExpression::MatchType"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpressionMatchOption",
                "links": "flags@QRegularExpression::MatchOptions",
                "name": "QRegularExpression::MatchOption"
            },
            {
                "header": "yasl/core/settings.h",
                "id": "QSettingsStatus",
                "name": "QSettings::Status"
            },
            {
                "header": "yasl/core/settings.h",
                "id": "QSettingsFormat",
                "name": "QSettings::Format"
            },
            {
                "header": "yasl/core/settings.h",
                "id": "QSettingsScope",
                "name": "QSettings::Scope"
            },
            {
                "header": "yasl/core/timezone.h",
                "id": "QTimeZoneTimeType",
                "name": "QTimeZone::TimeType"
            },
            {
                "header": "yasl/core/timezone.h",
                "id": "QTimeZoneNameType",
                "name": "QTimeZone::NameType"
            },
            {
                "header": "yasl/core/url.h",
                "id": "QUrlParsingMode",
                "name": "QUrl::ParsingMode"
            },
            {
                "header": "yasl/core/url.h",
                "id": "QUrlUrlFormattingOption",
                "name": "QUrl::UrlFormattingOption"
            },
            {
                "header": "yasl/core/url.h",
                "id": "QUrlComponentFormattingOption",
                "links": "flags@QUrl::ComponentFormattingOptions",
                "name": "QUrl::ComponentFormattingOption"
            },
            {
                "header": "yasl/core/url.h",
                "id": "QUrlUserInputResolutionOption",
                "links": "flags@QUrl::UserInputResolutionOptions",
                "name": "QUrl::UserInputResolutionOption"
            },
            {
                "header": "yasl/core/uuid.h",
                "id": "QUuidVariant",
                "name": "QUuid::Variant"
            },
            {
                "header": "yasl/core/uuid.h",
                "id": "QUuidVersion",
                "name": "QUuid::Version"
            },
            {
                "header": "yasl/core/variant.h",
                "id": "QVariantType",
                "name": "QVariant::Type"
            },
            {
                "header": "yasl/gui/color.h",
                "id": "QColorSpec",
                "name": "QColor::Spec"
            },
            {
                "header": "yasl/gui/color.h",
                "id": "QColorNameFormat",
                "name": "QColor::NameFormat"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontStyleHint",
                "name": "QFont::StyleHint"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontStyleStrategy",
                "name": "QFont::StyleStrategy"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontHintingPreference",
                "name": "QFont::HintingPreference"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontWeight",
                "name": "QFont::Weight"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontStyle",
                "name": "QFont::Style"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontStretch",
                "name": "QFont::Stretch"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontCapitalization",
                "name": "QFont::Capitalization"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontSpacingType",
                "name": "QFont::SpacingType"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontResolveProperties",
                "name": "QFont::ResolveProperties"
            },
            {
                "header": "yasl/gui/fontdatabase.h",
                "id": "QFontDatabaseWritingSystem",
                "name": "QFontDatabase::WritingSystem"
            },
            {
                "header": "yasl/gui/fontdatabase.h",
                "id": "QFontDatabaseSystemFont",
                "name": "QFontDatabase::SystemFont"
            },
            {
                "header": "yasl/gui/icon.h",
                "id": "QIconMode",
                "name": "QIcon::Mode"
            },
            {
                "header": "yasl/gui/icon.h",
                "id": "QIconState",
                "name": "QIcon::State"
            },
            {
                "header": "yasl/gui/image.h",
                "id": "QImageInvertMode",
                "name": "QImage::InvertMode"
            },
            {
                "header": "yasl/gui/image.h",
                "id": "QImageFormat",
                "name": "QImage::Format"
            },
            {
                "header": "yasl/gui/transform.h",
                "id": "QTransformTransformationType",
                "name": "QTransform::TransformationType"
            },
            {
                "header": "yasl/gui/region.h",
                "id": "QRegionRegionType",
                "name": "QRegion::RegionType"
            },
            {
                "header": "yasl/gui/clipboard.h",
                "id": "QClipboardMode",
                "name": "QClipboard::Mode"
            },
            {
                "header": "yasl/gui/keysequence.h",
                "id": "QKeySequenceStandardKey",
                "name": "QKeySequence::StandardKey"
            },
            {
                "header": "yasl/gui/keysequence.h",
                "id": "QKeySequenceSequenceFormat",
                "name": "QKeySequence::SequenceFormat"
            },
            {
                "header": "yasl/gui/keysequence.h",
                "id": "QKeySequenceSequenceMatch",
                "name": "QKeySequence::SequenceMatch"
            },
            {
                "header": "yasl/gui/brush.h",
                "id": "QGradientType",
                "name": "QGradient::Type"
            },
            {
                "header": "yasl/gui/brush.h",
                "id": "QGradientSpread",
                "name": "QGradient::Spread"
            },
            {
                "header": "yasl/gui/brush.h",
                "id": "QGradientCoordinateMode",
                "name": "QGradient::CoordinateMode"
            },
            {
                "header": "yasl/gui/brush.h",
                "id": "QGradientInterpolationMode",
                "name": "QGradient::InterpolationMode"
            },
            {
                "header": "yasl/gui/glyphrun.h",
                "id": "QGlyphRunGlyphRunFlag",
                "name": "QGlyphRun::GlyphRunFlag"
            },
            {
                "header": "yasl/gui/painter.h",
                "id": "QPainterRenderHint",
                "links": "flags@QPainter::RenderHints",
                "name": "QPainter::RenderHint"
            },
            {
                "header": "yasl/gui/painter.h",
                "id": "QPainterPixmapFragmentHint",
                "links": "flags@QPainter::PixmapFragmentHints",
                "name": "QPainter::PixmapFragmentHint"
            },
            {
                "header": "yasl/gui/painter.h",
                "id": "QPainterCompositionMode",
                "name": "QPainter::CompositionMode"
            },
            {
                "header": "yasl/gui/painterpath.h",
                "id": "QPainterPathElementType",
                "name": "QPainterPath::ElementType"
            },
            {
                "header": "yasl/gui/palette.h",
                "id": "QPaletteColorGroup",
                "name": "QPalette::ColorGroup"
            },
            {
                "header": "yasl/gui/palette.h",
                "id": "QPaletteColorRole",
                "name": "QPalette::ColorRole"
            },
            {
                "header": "yasl/gui/pixelformat.h",
                "id": "QPixelFormatColorModel",
                "name": "QPixelFormat::ColorModel"
            },
            {
                "header": "yasl/gui/pixelformat.h",
                "id": "QPixelFormatAlphaUsage",
                "name": "QPixelFormat::AlphaUsage"
            },
            {
                "header": "yasl/gui/pixelformat.h",
                "id": "QPixelFormatAlphaPosition",
                "name": "QPixelFormat::AlphaPosition"
            },
            {
                "header": "yasl/gui/pixelformat.h",
                "id": "QPixelFormatAlphaPremultiplied",
                "name": "QPixelFormat::AlphaPremultiplied"
            },
            {
                "header": "yasl/gui/pixelformat.h",
                "id": "QPixelFormatTypeInterpretation",
                "name": "QPixelFormat::TypeInterpretation"
            },
            {
                "header": "yasl/gui/pixelformat.h",
                "id": "QPixelFormatYUVLayout",
                "name": "QPixelFormat::YUVLayout"
            },
            {
                "header": "yasl/gui/pixelformat.h",
                "id": "QPixelFormatByteOrder",
                "name": "QPixelFormat::ByteOrder"
            },
            {
                "header": "yasl/gui/statictext.h",
                "id": "QStaticTextPerformanceHint",
                "name": "QStaticText::PerformanceHint"
            },
            {
                "header": "yasl/gui/textoption.h",
                "id": "QTextOptionTabType",
                "name": "QTextOption::TabType"
            },
            {
                "header": "yasl/gui/textoption.h",
                "id": "QTextOptionWrapMode",
                "name": "QTextOption::WrapMode"
            },
            {
                "header": "yasl/gui/textoption.h",
                "id": "QTextOptionFlag",
                "links": "flags@QTextOption::Flags",
                "name": "QTextOption::Flag"
            },
            {
                "header": "yasl/gui/validator.h",
                "id": "QValidatorState",
                "name": "QValidator::State"
            },
            {
                "header": "yasl/gui/validator.h",
                "id": "QDoubleValidatorNotation",
                "name": "QDoubleValidator::Notation"
            },
            {
                "header": "yasl/gui/window.h",
                "id": "QWindowVisibility",
                "name": "QWindow::Visibility"
            },
            {
                "header": "yasl/gui/window.h",
                "id": "QWindowAncestorMode",
                "name": "QWindow::AncestorMode"
            },
            {
                "header": "yasl/widgets/widget.h",
                "id": "QWidgetRenderFlag",
                "name": "QWidget::RenderFlag"
            },
            {
                "header": "yasl/widgets/frame.h",
                "id": "QFrameShape",
                "name": "QFrame::Shape"
            },
            {
                "header": "yasl/widgets/frame.h",
                "id": "QFrameShadow",
                "name": "QFrame::Shadow"
            },
            {
                "header": "yasl/widgets/frame.h",
                "id": "QFrameStyleMask",
                "name": "QFrame::StyleMask"
            },
            {
                "header": "yasl/widgets/tabwidget.h",
                "id": "QTabWidgetTabPosition",
                "name": "QTabWidget::TabPosition"
            },
            {
                "header": "yasl/widgets/tabwidget.h",
                "id": "QTabWidgetTabShape",
                "name": "QTabWidget::TabShape"
            },
            {
                "header": "yasl/widgets/lineedit.h",
                "id": "QLineEditActionPosition",
                "name": "QLineEdit::ActionPosition"
            },
            {
                "header": "yasl/widgets/lineedit.h",
                "id": "QLineEditEchoMode",
                "name": "QLineEdit::EchoMode"
            },
            {
                "header": "yasl/core/jsonvalue.h",
                "id": "QJsonValueType",
                "name": "QJsonValue::Type"
            },
            {
                "header": "yasl/core/jsondocument.h",
                "id": "QJsonDocumentDataValidation",
                "name": "QJsonDocument::DataValidation"
            },
            {
                "header": "yasl/core/jsondocument.h",
                "id": "QJsonDocumentJsonFormat",
                "name": "QJsonDocument::JsonFormat"
            },
            {
                "header": "yasl/widgets/combobox.h",
                "id": "QComboBoxInsertPolicy",
                "name": "QComboBox::InsertPolicy"
            },
            {
                "header": "yasl/widgets/combobox.h",
                "id": "QComboBoxSizeAdjustPolicy",
                "name": "QComboBox::SizeAdjustPolicy"
            },
            {
                "header": "yasl/widgets/fontcombobox.h",
                "id": "QFontComboBoxFontFilter",
                "links": "flags@QFontComboBox::FontFilters",
                "name": "QFontComboBox::FontFilter"
            },
            {
                "header": "yasl/widgets/abstractslider.h",
                "id": "QAbstractSliderSliderAction",
                "name": "QAbstractSlider::SliderAction"
            },
            {
                "header": "yasl/widgets/slider.h",
                "id": "QSliderTickPosition",
                "name": "QSlider::TickPosition"
            },
            {
                "header": "yasl/widgets/abstractspinbox.h",
                "id": "QAbstractSpinBoxStepEnabledFlag",
                "links": "flags@QAbstractSpinBox::StepEnabled",
                "name": "QAbstractSpinBox::StepEnabledFlag"
            },
            {
                "header": "yasl/widgets/abstractspinbox.h",
                "id": "QAbstractSpinBoxButtonSymbols",
                "name": "QAbstractSpinBox::ButtonSymbols"
            },
            {
                "header": "yasl/widgets/abstractspinbox.h",
                "id": "QAbstractSpinBoxCorrectionMode",
                "name": "QAbstractSpinBox::CorrectionMode"
            },
            {
                "header": "yasl/widgets/datetimeedit.h",
                "id": "QDateTimeEditSection",
                "links": "flags@QDateTimeEdit::Sections",
                "name": "QDateTimeEdit::Section"
            },
            {
                "header": "yasl/widgets/toolbutton.h",
                "id": "QToolButtonToolButtonPopupMode",
                "name": "QToolButton::ToolButtonPopupMode"
            },
            {
                "header": "yasl/widgets/action.h",
                "id": "QActionMenuRole",
                "name": "QAction::MenuRole"
            },
            {
                "header": "yasl/widgets/action.h",
                "id": "QActionPriority",
                "name": "QAction::Priority"
            },
            {
                "header": "yasl/widgets/action.h",
                "id": "QActionActionEvent",
                "name": "QAction::ActionEvent"
            },
            {
                "header": "yasl/widgets/layout.h",
                "id": "QLayoutSizeConstraint",
                "name": "QLayout::SizeConstraint"
            },
            {
                "header": "yasl/widgets/boxlayout.h",
                "id": "QBoxLayoutDirection",
                "name": "QBoxLayout::Direction"
            },
            {
                "header": "yasl/widgets/formlayout.h",
                "id": "QFormLayoutFieldGrowthPolicy",
                "name": "QFormLayout::FieldGrowthPolicy"
            },
            {
                "header": "yasl/widgets/formlayout.h",
                "id": "QFormLayoutRowWrapPolicy",
                "name": "QFormLayout::RowWrapPolicy"
            },
            {
                "header": "yasl/widgets/formlayout.h",
                "id": "QFormLayoutItemRole",
                "name": "QFormLayout::ItemRole"
            },
            {
                "header": "yasl/widgets/stackedlayout.h",
                "id": "QStackedLayoutStackingMode",
                "name": "QStackedLayout::StackingMode"
            },
            {
                "header": "yasl/widgets/dialog.h",
                "id": "QDialogDialogCode",
                "name": "QDialog::DialogCode"
            },
            {
                "header": "yasl/widgets/messagebox.h",
                "id": "QMessageBoxIcon",
                "name": "QMessageBox::Icon"
            },
            {
                "header": "yasl/widgets/messagebox.h",
                "id": "QMessageBoxButtonRole",
                "name": "QMessageBox::ButtonRole"
            },
            {
                "header": "yasl/widgets/messagebox.h",
                "id": "QMessageBoxStandardButton",
                "links": "flags@QMessageBox::StandardButtons",
                "name": "QMessageBox::StandardButton"
            },
            {
                "header": "yasl/widgets/filedialog.h",
                "id": "QFileDialogViewMode",
                "name": "QFileDialog::ViewMode"
            },
            {
                "header": "yasl/widgets/filedialog.h",
                "id": "QFileDialogFileMode",
                "name": "QFileDialog::FileMode"
            },
            {
                "header": "yasl/widgets/filedialog.h",
                "id": "QFileDialogAcceptMode",
                "name": "QFileDialog::AcceptMode"
            },
            {
                "header": "yasl/widgets/filedialog.h",
                "id": "QFileDialogDialogLabel",
                "name": "QFileDialog::DialogLabel"
            },
            {
                "header": "yasl/widgets/filedialog.h",
                "id": "QFileDialogOption",
                "links": "flags@QFileDialog::Options",
                "name": "QFileDialog::Option"
            },
            {
                "header": "yasl/widgets/colordialog.h",
                "id": "QColorDialogColorDialogOption",
                "links": "flags@QColorDialog::ColorDialogOptions",
                "name": "QColorDialog::ColorDialogOption"
            },
            {
                "header": "yasl/widgets/fontdialog.h",
                "id": "QFontDialogFontDialogOption",
                "links": "flags@QFontDialog::FontDialogOptions",
                "name": "QFontDialog::FontDialogOption"
            },
            {
                "header": "yasl/widgets/inputdialog.h",
                "id": "QInputDialogInputDialogOption",
                "links": "flags@QInputDialog::InputDialogOptions",
                "name": "QInputDialog::InputDialogOption"
            },
            {
                "header": "yasl/widgets/inputdialog.h",
                "id": "QInputDialogInputMode",
                "name": "QInputDialog::InputMode"
            },
            {
                "header": "yasl/widgets/wizard.h",
                "id": "QWizardWizardButton",
                "name": "QWizard::WizardButton"
            },
            {
                "header": "yasl/widgets/wizard.h",
                "id": "QWizardWizardPixmap",
                "name": "QWizard::WizardPixmap"
            },
            {
                "header": "yasl/widgets/wizard.h",
                "id": "QWizardWizardStyle",
                "name": "QWizard::WizardStyle"
            },
            {
                "header": "yasl/widgets/wizard.h",
                "id": "QWizardWizardOption",
                "links": "flags@QWizard::WizardOptions",
                "name": "QWizard::WizardOption"
            },
            {
                "header": "yasl/widgets/progressbar.h",
                "id": "QProgressBarDirection",
                "name": "QProgressBar::Direction"
            }
        ],
        "fundamentals": [
            {
                "id": "Void",
                "name": "void"
            },
            {
                "id": "Boolean",
                "name": "bool"
            },
            {
                "id": "Char",
                "name": "char"
            },
            {
                "id": "Int",
                "name": "int"
            },
            {
                "id": "Float",
                "name": "float"
            },
            {
                "id": "Double",
                "name": "double"
            },
            {
                "id": "String",
                "name": "QString",
                "rename": "String"
            },
            {
                "id": "",
                "name": "qreal"
            },
            {
                "id": "",
                "name": "uint"
            }
        ]
    }
}
