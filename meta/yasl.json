{
    "modules": [
        {
            "checked": 1,
            "elements": [
                {
                    "checked": 1,
                    "cppincludes": "yasl/core/bytearray-functions.h",
                    "elements": [
                        {
                            "name": "qstrcmp",
                            "parameters": [
                                "const QByteArray &",
                                "const QByteArray &"
                            ],
                            "rename": "strcmp",
                            "returns": "int",
                            "type": "function"
                        },
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Base64Encoding"
                                        },
                                        {
                                            "name": "Base64UrlEncoding"
                                        },
                                        {
                                            "name": "KeepTrailingEquals"
                                        },
                                        {
                                            "name": "OmitTrailingEquals"
                                        }
                                    ],
                                    "name": "Base64Option",
                                    "type": "enum"
                                },
                                {
                                    "name": "QByteArray",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QByteArray",
                                    "parameters": [
                                        "int",
                                        "char"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QByteArray",
                                    "parameters": [
                                        "int",
                                        "Qt::Initialization"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QByteArray",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QByteArray",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "QByteArray",
                                    "parameters": [
                                        "QByteArray &&"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QByteArray &&"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QByteArray &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "resize",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "fill",
                                    "parameters": [
                                        "char",
                                        "int"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capacity",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "reserve",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "squeeze",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "detach",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSharedWith",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "at",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "char",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "char",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "operator[]",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "char",
                                    "type": "function"
                                },
                                {
                                    "name": "operator[]",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QByteRef",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "operator[]",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "QByteRef",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "front",
                                    "parameters": [
                                    ],
                                    "returns": "char",
                                    "type": "function"
                                },
                                {
                                    "name": "front",
                                    "parameters": [
                                    ],
                                    "returns": "QByteRef",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "back",
                                    "parameters": [
                                    ],
                                    "returns": "char",
                                    "type": "function"
                                },
                                {
                                    "name": "back",
                                    "parameters": [
                                    ],
                                    "returns": "QByteRef",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "indexOf",
                                    "parameters": [
                                        "char",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "indexOf",
                                    "parameters": [
                                        "const QByteArray &",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastIndexOf",
                                    "parameters": [
                                        "char",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastIndexOf",
                                    "parameters": [
                                        "const QByteArray &",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "left",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "right",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mid",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "chopped",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "startsWith",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "startsWith",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "endsWith",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "endsWith",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "truncate",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "chop",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toLower",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "toLower",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "ba_toLower",
                                    "parameters": [
                                    ],
                                    "rename": "toLower",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toUpper",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "toUpper",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "ba_toUpper",
                                    "parameters": [
                                    ],
                                    "rename": "toUpper",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "trimmed",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "trimmed",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "ba_trimmed",
                                    "parameters": [
                                    ],
                                    "rename": "trimmed",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "simplified",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "ba_simplified",
                                    "parameters": [
                                    ],
                                    "rename": "simplified",
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "leftJustified",
                                    "parameters": [
                                        "int",
                                        "char",
                                        "bool"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rightJustified",
                                    "parameters": [
                                        "int",
                                        "char",
                                        "bool"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "prepend",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "prepend",
                                    "parameters": [
                                        "int",
                                        "char"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "prepend",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "append",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "append",
                                    "parameters": [
                                        "int",
                                        "char"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "append",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "parameters": [
                                        "int",
                                        "char"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "char"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "parameters": [
                                        "int",
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "remove",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "replace",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "replace",
                                    "parameters": [
                                        "char",
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "replace",
                                    "parameters": [
                                        "const QByteArray &",
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "replace",
                                    "parameters": [
                                        "char",
                                        "char"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "split",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "QList<QByteArray>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "repeated",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "append",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "insert",
                                    "parameters": [
                                        "int",
                                        "const QString &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "replace",
                                    "parameters": [
                                        "char",
                                        "const QString &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "replace",
                                    "parameters": [
                                        "const QString &",
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "indexOf",
                                    "parameters": [
                                        "const QString &",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastIndexOf",
                                    "parameters": [
                                        "const QString &",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<=",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>=",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toShort",
                                    "parameters": [
                                        "bool *",
                                        "int"
                                    ],
                                    "returns": "short",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUShort",
                                    "parameters": [
                                        "bool *",
                                        "int"
                                    ],
                                    "returns": "ushort",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toInt",
                                    "parameters": [
                                        "bool *",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUInt",
                                    "parameters": [
                                        "bool *",
                                        "int"
                                    ],
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLong",
                                    "parameters": [
                                        "bool *",
                                        "int"
                                    ],
                                    "returns": "long",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toULong",
                                    "parameters": [
                                        "bool *",
                                        "int"
                                    ],
                                    "returns": "ulong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLongLong",
                                    "parameters": [
                                        "bool *",
                                        "int"
                                    ],
                                    "returns": "qlonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toULongLong",
                                    "parameters": [
                                        "bool *",
                                        "int"
                                    ],
                                    "returns": "qulonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toFloat",
                                    "parameters": [
                                        "bool *"
                                    ],
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDouble",
                                    "parameters": [
                                        "bool *"
                                    ],
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toBase64",
                                    "parameters": [
                                        "QByteArray::Base64Options"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toBase64",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toHex",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toHex",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPercentEncoding",
                                    "parameters": [
                                        "const QByteArray &",
                                        "const QByteArray &",
                                        "char"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "parameters": [
                                        "short",
                                        "int"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "parameters": [
                                        "ushort",
                                        "int"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "setNum",
                                    "parameters": [
                                        "uint",
                                        "int"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "parameters": [
                                        "qlonglong",
                                        "int"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "parameters": [
                                        "qulonglong",
                                        "int"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "parameters": [
                                        "float",
                                        "char",
                                        "int"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "setNum",
                                    "parameters": [
                                        "double",
                                        "char",
                                        "int"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "setRawData",
                                    "parameters": [
                                        "const char *",
                                        "uint"
                                    ],
                                    "returns": "QByteArray &",
                                    "type": "function"
                                },
                                {
                                    "name": "number",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "number",
                                    "parameters": [
                                        "uint",
                                        "int"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "number",
                                    "parameters": [
                                        "qlonglong",
                                        "int"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "number",
                                    "parameters": [
                                        "qulonglong",
                                        "int"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "number",
                                    "parameters": [
                                        "double",
                                        "char",
                                        "int"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromBase64",
                                    "parameters": [
                                        "const QByteArray &",
                                        "QByteArray::Base64Options"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromBase64",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromHex",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromPercentEncoding",
                                    "parameters": [
                                        "const QByteArray &",
                                        "char"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "begin",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray::iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "begin",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cbegin",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constBegin",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "end",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray::iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "end",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cend",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constEnd",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray::const_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "rbegin",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray::reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "rend",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray::reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rbegin",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray::const_reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rend",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray::const_reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "crbegin",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray::const_reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "crend",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray::const_reverse_iterator",
                                    "type": "function"
                                },
                                {
                                    "name": "push_back",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "push_back",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "push_front",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "push_front",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "shrink_to_fit",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "length",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QByteArray",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QByteArray::Base64Options::enum_type",
                                "QByteArray::Base64Options::enum_type"
                            ],
                            "returns": "QFlags<QByteArray::Base64Options::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QByteArray::Base64Options::enum_type",
                                "QFlags<QByteArray::Base64Options::enum_type>"
                            ],
                            "returns": "QFlags<QByteArray::Base64Options::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QByteArray::Base64Options::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QByteArray &",
                                "const QByteArray &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QByteArray &",
                                "const QByteArray &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<",
                            "parameters": [
                                "const QByteArray &",
                                "const QByteArray &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<=",
                            "parameters": [
                                "const QByteArray &",
                                "const QByteArray &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>",
                            "parameters": [
                                "const QByteArray &",
                                "const QByteArray &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>=",
                            "parameters": [
                                "const QByteArray &",
                                "const QByteArray &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QByteArray &",
                                "const QByteArray &"
                            ],
                            "returns": "const QByteArray",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QByteArray &",
                                "char"
                            ],
                            "returns": "const QByteArray",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "char",
                                "const QByteArray &"
                            ],
                            "returns": "const QByteArray",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QByteArray &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QByteArray &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "qCompress",
                            "parameters": [
                                "const QByteArray &",
                                "int"
                            ],
                            "returns": "QByteArray",
                            "type": "function"
                        },
                        {
                            "name": "qUncompress",
                            "parameters": [
                                "const QByteArray &"
                            ],
                            "returns": "QByteArray",
                            "type": "function"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QByteArray &",
                                "QByteArray &"
                            ],
                            "returns": "void",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "QByteRef &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QByteRef &"
                                    ],
                                    "returns": "QByteRef &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>=",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<=",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QByteRef",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QByteArray>",
                    "name": "bytearray",
                    "type": "file"
                },
                {
                    "cppincludes": "yasl/core/char-functions.h",
                    "elements": [
                        {
                            "elements": [
                                {
                                    "binding": "dtor",
                                    "name": "~Char",
                                    "parameters": [
                                    ],
                                    "returns": "",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Null"
                                        },
                                        {
                                            "name": "Tabulation"
                                        },
                                        {
                                            "name": "LineFeed"
                                        },
                                        {
                                            "name": "CarriageReturn"
                                        },
                                        {
                                            "name": "Space"
                                        },
                                        {
                                            "name": "Nbsp"
                                        },
                                        {
                                            "name": "SoftHyphen"
                                        },
                                        {
                                            "name": "ReplacementCharacter"
                                        },
                                        {
                                            "name": "ObjectReplacementCharacter"
                                        },
                                        {
                                            "name": "ByteOrderMark"
                                        },
                                        {
                                            "name": "ByteOrderSwapped"
                                        },
                                        {
                                            "name": "ParagraphSeparator"
                                        },
                                        {
                                            "name": "LineSeparator"
                                        },
                                        {
                                            "name": "LastValidCodePoint"
                                        }
                                    ],
                                    "name": "SpecialCharacter",
                                    "type": "enum"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "ushort"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "uchar",
                                        "uchar"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "short"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "QChar::SpecialCharacter"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "QLatin1Char"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "char16_t"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "wchar_t"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QChar",
                                    "parameters": [
                                        "uchar"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Mark_NonSpacing"
                                        },
                                        {
                                            "name": "Mark_SpacingCombining"
                                        },
                                        {
                                            "name": "Mark_Enclosing"
                                        },
                                        {
                                            "name": "Number_DecimalDigit"
                                        },
                                        {
                                            "name": "Number_Letter"
                                        },
                                        {
                                            "name": "Number_Other"
                                        },
                                        {
                                            "name": "Separator_Space"
                                        },
                                        {
                                            "name": "Separator_Line"
                                        },
                                        {
                                            "name": "Separator_Paragraph"
                                        },
                                        {
                                            "name": "Other_Control"
                                        },
                                        {
                                            "name": "Other_Format"
                                        },
                                        {
                                            "name": "Other_Surrogate"
                                        },
                                        {
                                            "name": "Other_PrivateUse"
                                        },
                                        {
                                            "name": "Other_NotAssigned"
                                        },
                                        {
                                            "name": "Letter_Uppercase"
                                        },
                                        {
                                            "name": "Letter_Lowercase"
                                        },
                                        {
                                            "name": "Letter_Titlecase"
                                        },
                                        {
                                            "name": "Letter_Modifier"
                                        },
                                        {
                                            "name": "Letter_Other"
                                        },
                                        {
                                            "name": "Punctuation_Connector"
                                        },
                                        {
                                            "name": "Punctuation_Dash"
                                        },
                                        {
                                            "name": "Punctuation_Open"
                                        },
                                        {
                                            "name": "Punctuation_Close"
                                        },
                                        {
                                            "name": "Punctuation_InitialQuote"
                                        },
                                        {
                                            "name": "Punctuation_FinalQuote"
                                        },
                                        {
                                            "name": "Punctuation_Other"
                                        },
                                        {
                                            "name": "Symbol_Math"
                                        },
                                        {
                                            "name": "Symbol_Currency"
                                        },
                                        {
                                            "name": "Symbol_Modifier"
                                        },
                                        {
                                            "name": "Symbol_Other"
                                        }
                                    ],
                                    "name": "Category",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Script_Unknown"
                                        },
                                        {
                                            "name": "Script_Inherited"
                                        },
                                        {
                                            "name": "Script_Common"
                                        },
                                        {
                                            "name": "Script_Latin"
                                        },
                                        {
                                            "name": "Script_Greek"
                                        },
                                        {
                                            "name": "Script_Cyrillic"
                                        },
                                        {
                                            "name": "Script_Armenian"
                                        },
                                        {
                                            "name": "Script_Hebrew"
                                        },
                                        {
                                            "name": "Script_Arabic"
                                        },
                                        {
                                            "name": "Script_Syriac"
                                        },
                                        {
                                            "name": "Script_Thaana"
                                        },
                                        {
                                            "name": "Script_Devanagari"
                                        },
                                        {
                                            "name": "Script_Bengali"
                                        },
                                        {
                                            "name": "Script_Gurmukhi"
                                        },
                                        {
                                            "name": "Script_Gujarati"
                                        },
                                        {
                                            "name": "Script_Oriya"
                                        },
                                        {
                                            "name": "Script_Tamil"
                                        },
                                        {
                                            "name": "Script_Telugu"
                                        },
                                        {
                                            "name": "Script_Kannada"
                                        },
                                        {
                                            "name": "Script_Malayalam"
                                        },
                                        {
                                            "name": "Script_Sinhala"
                                        },
                                        {
                                            "name": "Script_Thai"
                                        },
                                        {
                                            "name": "Script_Lao"
                                        },
                                        {
                                            "name": "Script_Tibetan"
                                        },
                                        {
                                            "name": "Script_Myanmar"
                                        },
                                        {
                                            "name": "Script_Georgian"
                                        },
                                        {
                                            "name": "Script_Hangul"
                                        },
                                        {
                                            "name": "Script_Ethiopic"
                                        },
                                        {
                                            "name": "Script_Cherokee"
                                        },
                                        {
                                            "name": "Script_CanadianAboriginal"
                                        },
                                        {
                                            "name": "Script_Ogham"
                                        },
                                        {
                                            "name": "Script_Runic"
                                        },
                                        {
                                            "name": "Script_Khmer"
                                        },
                                        {
                                            "name": "Script_Mongolian"
                                        },
                                        {
                                            "name": "Script_Hiragana"
                                        },
                                        {
                                            "name": "Script_Katakana"
                                        },
                                        {
                                            "name": "Script_Bopomofo"
                                        },
                                        {
                                            "name": "Script_Han"
                                        },
                                        {
                                            "name": "Script_Yi"
                                        },
                                        {
                                            "name": "Script_OldItalic"
                                        },
                                        {
                                            "name": "Script_Gothic"
                                        },
                                        {
                                            "name": "Script_Deseret"
                                        },
                                        {
                                            "name": "Script_Tagalog"
                                        },
                                        {
                                            "name": "Script_Hanunoo"
                                        },
                                        {
                                            "name": "Script_Buhid"
                                        },
                                        {
                                            "name": "Script_Tagbanwa"
                                        },
                                        {
                                            "name": "Script_Coptic"
                                        },
                                        {
                                            "name": "Script_Limbu"
                                        },
                                        {
                                            "name": "Script_TaiLe"
                                        },
                                        {
                                            "name": "Script_LinearB"
                                        },
                                        {
                                            "name": "Script_Ugaritic"
                                        },
                                        {
                                            "name": "Script_Shavian"
                                        },
                                        {
                                            "name": "Script_Osmanya"
                                        },
                                        {
                                            "name": "Script_Cypriot"
                                        },
                                        {
                                            "name": "Script_Braille"
                                        },
                                        {
                                            "name": "Script_Buginese"
                                        },
                                        {
                                            "name": "Script_NewTaiLue"
                                        },
                                        {
                                            "name": "Script_Glagolitic"
                                        },
                                        {
                                            "name": "Script_Tifinagh"
                                        },
                                        {
                                            "name": "Script_SylotiNagri"
                                        },
                                        {
                                            "name": "Script_OldPersian"
                                        },
                                        {
                                            "name": "Script_Kharoshthi"
                                        },
                                        {
                                            "name": "Script_Balinese"
                                        },
                                        {
                                            "name": "Script_Cuneiform"
                                        },
                                        {
                                            "name": "Script_Phoenician"
                                        },
                                        {
                                            "name": "Script_PhagsPa"
                                        },
                                        {
                                            "name": "Script_Nko"
                                        },
                                        {
                                            "name": "Script_Sundanese"
                                        },
                                        {
                                            "name": "Script_Lepcha"
                                        },
                                        {
                                            "name": "Script_OlChiki"
                                        },
                                        {
                                            "name": "Script_Vai"
                                        },
                                        {
                                            "name": "Script_Saurashtra"
                                        },
                                        {
                                            "name": "Script_KayahLi"
                                        },
                                        {
                                            "name": "Script_Rejang"
                                        },
                                        {
                                            "name": "Script_Lycian"
                                        },
                                        {
                                            "name": "Script_Carian"
                                        },
                                        {
                                            "name": "Script_Lydian"
                                        },
                                        {
                                            "name": "Script_Cham"
                                        },
                                        {
                                            "name": "Script_TaiTham"
                                        },
                                        {
                                            "name": "Script_TaiViet"
                                        },
                                        {
                                            "name": "Script_Avestan"
                                        },
                                        {
                                            "name": "Script_EgyptianHieroglyphs"
                                        },
                                        {
                                            "name": "Script_Samaritan"
                                        },
                                        {
                                            "name": "Script_Lisu"
                                        },
                                        {
                                            "name": "Script_Bamum"
                                        },
                                        {
                                            "name": "Script_Javanese"
                                        },
                                        {
                                            "name": "Script_MeeteiMayek"
                                        },
                                        {
                                            "name": "Script_ImperialAramaic"
                                        },
                                        {
                                            "name": "Script_OldSouthArabian"
                                        },
                                        {
                                            "name": "Script_InscriptionalParthian"
                                        },
                                        {
                                            "name": "Script_InscriptionalPahlavi"
                                        },
                                        {
                                            "name": "Script_OldTurkic"
                                        },
                                        {
                                            "name": "Script_Kaithi"
                                        },
                                        {
                                            "name": "Script_Batak"
                                        },
                                        {
                                            "name": "Script_Brahmi"
                                        },
                                        {
                                            "name": "Script_Mandaic"
                                        },
                                        {
                                            "name": "Script_Chakma"
                                        },
                                        {
                                            "name": "Script_MeroiticCursive"
                                        },
                                        {
                                            "name": "Script_MeroiticHieroglyphs"
                                        },
                                        {
                                            "name": "Script_Miao"
                                        },
                                        {
                                            "name": "Script_Sharada"
                                        },
                                        {
                                            "name": "Script_SoraSompeng"
                                        },
                                        {
                                            "name": "Script_Takri"
                                        },
                                        {
                                            "name": "Script_CaucasianAlbanian"
                                        },
                                        {
                                            "name": "Script_BassaVah"
                                        },
                                        {
                                            "name": "Script_Duployan"
                                        },
                                        {
                                            "name": "Script_Elbasan"
                                        },
                                        {
                                            "name": "Script_Grantha"
                                        },
                                        {
                                            "name": "Script_PahawhHmong"
                                        },
                                        {
                                            "name": "Script_Khojki"
                                        },
                                        {
                                            "name": "Script_LinearA"
                                        },
                                        {
                                            "name": "Script_Mahajani"
                                        },
                                        {
                                            "name": "Script_Manichaean"
                                        },
                                        {
                                            "name": "Script_MendeKikakui"
                                        },
                                        {
                                            "name": "Script_Modi"
                                        },
                                        {
                                            "name": "Script_Mro"
                                        },
                                        {
                                            "name": "Script_OldNorthArabian"
                                        },
                                        {
                                            "name": "Script_Nabataean"
                                        },
                                        {
                                            "name": "Script_Palmyrene"
                                        },
                                        {
                                            "name": "Script_PauCinHau"
                                        },
                                        {
                                            "name": "Script_OldPermic"
                                        },
                                        {
                                            "name": "Script_PsalterPahlavi"
                                        },
                                        {
                                            "name": "Script_Siddham"
                                        },
                                        {
                                            "name": "Script_Khudawadi"
                                        },
                                        {
                                            "name": "Script_Tirhuta"
                                        },
                                        {
                                            "name": "Script_WarangCiti"
                                        },
                                        {
                                            "name": "Script_Ahom"
                                        },
                                        {
                                            "name": "Script_AnatolianHieroglyphs"
                                        },
                                        {
                                            "name": "Script_Hatran"
                                        },
                                        {
                                            "name": "Script_Multani"
                                        },
                                        {
                                            "name": "Script_OldHungarian"
                                        },
                                        {
                                            "name": "Script_SignWriting"
                                        },
                                        {
                                            "name": "ScriptCount"
                                        }
                                    ],
                                    "name": "Script",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "DirL"
                                        },
                                        {
                                            "name": "DirR"
                                        },
                                        {
                                            "name": "DirEN"
                                        },
                                        {
                                            "name": "DirES"
                                        },
                                        {
                                            "name": "DirET"
                                        },
                                        {
                                            "name": "DirAN"
                                        },
                                        {
                                            "name": "DirCS"
                                        },
                                        {
                                            "name": "DirB"
                                        },
                                        {
                                            "name": "DirS"
                                        },
                                        {
                                            "name": "DirWS"
                                        },
                                        {
                                            "name": "DirON"
                                        },
                                        {
                                            "name": "DirLRE"
                                        },
                                        {
                                            "name": "DirLRO"
                                        },
                                        {
                                            "name": "DirAL"
                                        },
                                        {
                                            "name": "DirRLE"
                                        },
                                        {
                                            "name": "DirRLO"
                                        },
                                        {
                                            "name": "DirPDF"
                                        },
                                        {
                                            "name": "DirNSM"
                                        },
                                        {
                                            "name": "DirBN"
                                        },
                                        {
                                            "name": "DirLRI"
                                        },
                                        {
                                            "name": "DirRLI"
                                        },
                                        {
                                            "name": "DirFSI"
                                        },
                                        {
                                            "name": "DirPDI"
                                        }
                                    ],
                                    "name": "Direction",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoDecomposition"
                                        },
                                        {
                                            "name": "Canonical"
                                        },
                                        {
                                            "name": "Font"
                                        },
                                        {
                                            "name": "NoBreak"
                                        },
                                        {
                                            "name": "Initial"
                                        },
                                        {
                                            "name": "Medial"
                                        },
                                        {
                                            "name": "Final"
                                        },
                                        {
                                            "name": "Isolated"
                                        },
                                        {
                                            "name": "Circle"
                                        },
                                        {
                                            "name": "Super"
                                        },
                                        {
                                            "name": "Sub"
                                        },
                                        {
                                            "name": "Vertical"
                                        },
                                        {
                                            "name": "Wide"
                                        },
                                        {
                                            "name": "Narrow"
                                        },
                                        {
                                            "name": "Small"
                                        },
                                        {
                                            "name": "Square"
                                        },
                                        {
                                            "name": "Compat"
                                        },
                                        {
                                            "name": "Fraction"
                                        }
                                    ],
                                    "name": "Decomposition",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Joining_None"
                                        },
                                        {
                                            "name": "Joining_Causing"
                                        },
                                        {
                                            "name": "Joining_Dual"
                                        },
                                        {
                                            "name": "Joining_Right"
                                        },
                                        {
                                            "name": "Joining_Left"
                                        },
                                        {
                                            "name": "Joining_Transparent"
                                        }
                                    ],
                                    "name": "JoiningType",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "OtherJoining"
                                        },
                                        {
                                            "name": "Dual"
                                        },
                                        {
                                            "name": "Right"
                                        },
                                        {
                                            "name": "Center"
                                        }
                                    ],
                                    "name": "Joining",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Combining_BelowLeftAttached"
                                        },
                                        {
                                            "name": "Combining_BelowAttached"
                                        },
                                        {
                                            "name": "Combining_BelowRightAttached"
                                        },
                                        {
                                            "name": "Combining_LeftAttached"
                                        },
                                        {
                                            "name": "Combining_RightAttached"
                                        },
                                        {
                                            "name": "Combining_AboveLeftAttached"
                                        },
                                        {
                                            "name": "Combining_AboveAttached"
                                        },
                                        {
                                            "name": "Combining_AboveRightAttached"
                                        },
                                        {
                                            "name": "Combining_BelowLeft"
                                        },
                                        {
                                            "name": "Combining_Below"
                                        },
                                        {
                                            "name": "Combining_BelowRight"
                                        },
                                        {
                                            "name": "Combining_Left"
                                        },
                                        {
                                            "name": "Combining_Right"
                                        },
                                        {
                                            "name": "Combining_AboveLeft"
                                        },
                                        {
                                            "name": "Combining_Above"
                                        },
                                        {
                                            "name": "Combining_AboveRight"
                                        },
                                        {
                                            "name": "Combining_DoubleBelow"
                                        },
                                        {
                                            "name": "Combining_DoubleAbove"
                                        },
                                        {
                                            "name": "Combining_IotaSubscript"
                                        }
                                    ],
                                    "name": "CombiningClass",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Unicode_Unassigned"
                                        },
                                        {
                                            "name": "Unicode_1_1"
                                        },
                                        {
                                            "name": "Unicode_2_0"
                                        },
                                        {
                                            "name": "Unicode_2_1_2"
                                        },
                                        {
                                            "name": "Unicode_3_0"
                                        },
                                        {
                                            "name": "Unicode_3_1"
                                        },
                                        {
                                            "name": "Unicode_3_2"
                                        },
                                        {
                                            "name": "Unicode_4_0"
                                        },
                                        {
                                            "name": "Unicode_4_1"
                                        },
                                        {
                                            "name": "Unicode_5_0"
                                        },
                                        {
                                            "name": "Unicode_5_1"
                                        },
                                        {
                                            "name": "Unicode_5_2"
                                        },
                                        {
                                            "name": "Unicode_6_0"
                                        },
                                        {
                                            "name": "Unicode_6_1"
                                        },
                                        {
                                            "name": "Unicode_6_2"
                                        },
                                        {
                                            "name": "Unicode_6_3"
                                        },
                                        {
                                            "name": "Unicode_7_0"
                                        },
                                        {
                                            "name": "Unicode_8_0"
                                        }
                                    ],
                                    "name": "UnicodeVersion",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "category",
                                    "parameters": [
                                    ],
                                    "returns": "QChar::Category",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "direction",
                                    "parameters": [
                                    ],
                                    "returns": "QChar::Direction",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "joiningType",
                                    "parameters": [
                                    ],
                                    "returns": "QChar::JoiningType",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "joining",
                                    "parameters": [
                                    ],
                                    "returns": "QChar::Joining",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "combiningClass",
                                    "parameters": [
                                    ],
                                    "returns": "unsigned char",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mirroredChar",
                                    "parameters": [
                                    ],
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasMirrored",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "decomposition",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "decompositionTag",
                                    "parameters": [
                                    ],
                                    "returns": "QChar::Decomposition",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "digitValue",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLower",
                                    "parameters": [
                                    ],
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUpper",
                                    "parameters": [
                                    ],
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toTitleCase",
                                    "parameters": [
                                    ],
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCaseFolded",
                                    "parameters": [
                                    ],
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "script",
                                    "parameters": [
                                    ],
                                    "returns": "QChar::Script",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "unicodeVersion",
                                    "parameters": [
                                    ],
                                    "returns": "QChar::UnicodeVersion",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLatin1",
                                    "parameters": [
                                    ],
                                    "returns": "char",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "unicode",
                                    "parameters": [
                                    ],
                                    "returns": "ushort",
                                    "type": "function"
                                },
                                {
                                    "name": "unicode",
                                    "parameters": [
                                    ],
                                    "returns": "ushort &",
                                    "type": "function"
                                },
                                {
                                    "name": "fromLatin1",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "QChar",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isPrint",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSpace",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isMark",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isPunct",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSymbol",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isLetter",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNumber",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isLetterOrNumber",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDigit",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isLower",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isUpper",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTitleCase",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNonCharacter",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isHighSurrogate",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isLowSurrogate",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSurrogate",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cell",
                                    "parameters": [
                                    ],
                                    "returns": "uchar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "row",
                                    "parameters": [
                                    ],
                                    "returns": "uchar",
                                    "type": "function"
                                },
                                {
                                    "name": "setCell",
                                    "parameters": [
                                        "uchar"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRow",
                                    "parameters": [
                                        "uchar"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "isNonCharacter",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isHighSurrogate",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isLowSurrogate",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isSurrogate",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "requiresSurrogates",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "surrogateToUcs4",
                                    "parameters": [
                                        "ushort",
                                        "ushort"
                                    ],
                                    "returns": "uint",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "surrogateToUcs4",
                                    "parameters": [
                                        "QChar",
                                        "QChar"
                                    ],
                                    "returns": "uint",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "highSurrogate",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "ushort",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "lowSurrogate",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "ushort",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_category",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "category",
                                    "returns": "QChar::Category",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_direction",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "direction",
                                    "returns": "QChar::Direction",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_joiningType",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "joiningType",
                                    "returns": "QChar::JoiningType",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_joining",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "joining",
                                    "returns": "QChar::Joining",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_combiningClass",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "combiningClass",
                                    "returns": "unsigned char",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_mirroredChar",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "mirroredChar",
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_hasMirrored",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "hasMirrored",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_decomposition",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "decomposition",
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_decompositionTag",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "decompositionTag",
                                    "returns": "QChar::Decomposition",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_digitValue",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "digitValue",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_toLower",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "toLower",
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_toUpper",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "toUpper",
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_toTitleCase",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "toTitleCase",
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_toCaseFolded",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "toCaseFolded",
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_script",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "script",
                                    "returns": "QChar::Script",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_unicodeVersion",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "unicodeVersion",
                                    "returns": "QChar::UnicodeVersion",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_currentUnicodeVersion",
                                    "parameters": [
                                    ],
                                    "rename": "currentUnicodeVersion",
                                    "returns": "QChar::UnicodeVersion",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_isPrint",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "isPrint",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "isSpace",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_isMark",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "isMark",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_isPunct",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "isPunct",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "binding": "freestatic",
                                    "name": "qchar_isSymbol",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "rename": "isSymbol",
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "isLetter",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isNumber",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isLetterOrNumber",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isDigit",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isLower",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isUpper",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isTitleCase",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QChar",
                            "type": "class"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "QChar",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<",
                            "parameters": [
                                "QChar",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "QChar",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>=",
                            "parameters": [
                                "QChar",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>",
                            "parameters": [
                                "QChar",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<=",
                            "parameters": [
                                "QChar",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "QChar",
                                "std::nullptr_t"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<",
                            "parameters": [
                                "QChar",
                                "std::nullptr_t"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "std::nullptr_t",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<",
                            "parameters": [
                                "std::nullptr_t",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "QChar",
                                "std::nullptr_t"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>=",
                            "parameters": [
                                "QChar",
                                "std::nullptr_t"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>",
                            "parameters": [
                                "QChar",
                                "std::nullptr_t"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<=",
                            "parameters": [
                                "QChar",
                                "std::nullptr_t"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "std::nullptr_t",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>=",
                            "parameters": [
                                "std::nullptr_t",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>",
                            "parameters": [
                                "std::nullptr_t",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<=",
                            "parameters": [
                                "std::nullptr_t",
                                "QChar"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "QChar"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QChar &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QChar>",
                    "name": "char",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "name": "qt_getQtMetaObject",
                            "parameters": [
                            ],
                            "returns": "const QMetaObject *",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "color0"
                                        },
                                        {
                                            "name": "color1"
                                        },
                                        {
                                            "name": "black"
                                        },
                                        {
                                            "name": "white"
                                        },
                                        {
                                            "name": "darkGray"
                                        },
                                        {
                                            "name": "gray"
                                        },
                                        {
                                            "name": "lightGray"
                                        },
                                        {
                                            "name": "red"
                                        },
                                        {
                                            "name": "green"
                                        },
                                        {
                                            "name": "blue"
                                        },
                                        {
                                            "name": "cyan"
                                        },
                                        {
                                            "name": "magenta"
                                        },
                                        {
                                            "name": "yellow"
                                        },
                                        {
                                            "name": "darkRed"
                                        },
                                        {
                                            "name": "darkGreen"
                                        },
                                        {
                                            "name": "darkBlue"
                                        },
                                        {
                                            "name": "darkCyan"
                                        },
                                        {
                                            "name": "darkMagenta"
                                        },
                                        {
                                            "name": "darkYellow"
                                        },
                                        {
                                            "name": "transparent"
                                        }
                                    ],
                                    "name": "GlobalColor",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoModifier"
                                        },
                                        {
                                            "name": "ShiftModifier"
                                        },
                                        {
                                            "name": "ControlModifier"
                                        },
                                        {
                                            "name": "AltModifier"
                                        },
                                        {
                                            "name": "MetaModifier"
                                        },
                                        {
                                            "name": "KeypadModifier"
                                        },
                                        {
                                            "name": "GroupSwitchModifier"
                                        },
                                        {
                                            "name": "KeyboardModifierMask"
                                        }
                                    ],
                                    "name": "KeyboardModifier",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "META"
                                        },
                                        {
                                            "name": "SHIFT"
                                        },
                                        {
                                            "name": "CTRL"
                                        },
                                        {
                                            "name": "ALT"
                                        },
                                        {
                                            "name": "MODIFIER_MASK"
                                        },
                                        {
                                            "name": "UNICODE_ACCEL"
                                        }
                                    ],
                                    "name": "Modifier",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoButton"
                                        },
                                        {
                                            "name": "LeftButton"
                                        },
                                        {
                                            "name": "RightButton"
                                        },
                                        {
                                            "name": "MidButton"
                                        },
                                        {
                                            "name": "MiddleButton"
                                        },
                                        {
                                            "name": "BackButton"
                                        },
                                        {
                                            "name": "XButton1"
                                        },
                                        {
                                            "name": "ExtraButton1"
                                        },
                                        {
                                            "name": "ForwardButton"
                                        },
                                        {
                                            "name": "XButton2"
                                        },
                                        {
                                            "name": "ExtraButton2"
                                        },
                                        {
                                            "name": "TaskButton"
                                        },
                                        {
                                            "name": "ExtraButton3"
                                        },
                                        {
                                            "name": "ExtraButton4"
                                        },
                                        {
                                            "name": "ExtraButton5"
                                        },
                                        {
                                            "name": "ExtraButton6"
                                        },
                                        {
                                            "name": "ExtraButton7"
                                        },
                                        {
                                            "name": "ExtraButton8"
                                        },
                                        {
                                            "name": "ExtraButton9"
                                        },
                                        {
                                            "name": "ExtraButton10"
                                        },
                                        {
                                            "name": "ExtraButton11"
                                        },
                                        {
                                            "name": "ExtraButton12"
                                        },
                                        {
                                            "name": "ExtraButton13"
                                        },
                                        {
                                            "name": "ExtraButton14"
                                        },
                                        {
                                            "name": "ExtraButton15"
                                        },
                                        {
                                            "name": "ExtraButton16"
                                        },
                                        {
                                            "name": "ExtraButton17"
                                        },
                                        {
                                            "name": "ExtraButton18"
                                        },
                                        {
                                            "name": "ExtraButton19"
                                        },
                                        {
                                            "name": "ExtraButton20"
                                        },
                                        {
                                            "name": "ExtraButton21"
                                        },
                                        {
                                            "name": "ExtraButton22"
                                        },
                                        {
                                            "name": "ExtraButton23"
                                        },
                                        {
                                            "name": "ExtraButton24"
                                        },
                                        {
                                            "name": "AllButtons"
                                        },
                                        {
                                            "name": "MaxMouseButton"
                                        },
                                        {
                                            "name": "MouseButtonMask"
                                        }
                                    ],
                                    "name": "MouseButton",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "Horizontal"
                                        },
                                        {
                                            "name": "Vertical"
                                        }
                                    ],
                                    "name": "Orientation",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoFocus"
                                        },
                                        {
                                            "name": "TabFocus"
                                        },
                                        {
                                            "name": "ClickFocus"
                                        },
                                        {
                                            "name": "StrongFocus"
                                        },
                                        {
                                            "name": "WheelFocus"
                                        }
                                    ],
                                    "name": "FocusPolicy",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoTabFocus"
                                        },
                                        {
                                            "name": "TabFocusTextControls"
                                        },
                                        {
                                            "name": "TabFocusListControls"
                                        },
                                        {
                                            "name": "TabFocusAllControls"
                                        }
                                    ],
                                    "name": "TabFocusBehavior",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "AscendingOrder"
                                        },
                                        {
                                            "name": "DescendingOrder"
                                        }
                                    ],
                                    "name": "SortOrder",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "StretchTile"
                                        },
                                        {
                                            "name": "RepeatTile"
                                        },
                                        {
                                            "name": "RoundTile"
                                        }
                                    ],
                                    "name": "TileRule",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "AlignLeft"
                                        },
                                        {
                                            "name": "AlignLeading"
                                        },
                                        {
                                            "name": "AlignRight"
                                        },
                                        {
                                            "name": "AlignTrailing"
                                        },
                                        {
                                            "name": "AlignHCenter"
                                        },
                                        {
                                            "name": "AlignJustify"
                                        },
                                        {
                                            "name": "AlignAbsolute"
                                        },
                                        {
                                            "name": "AlignHorizontal_Mask"
                                        },
                                        {
                                            "name": "AlignTop"
                                        },
                                        {
                                            "name": "AlignBottom"
                                        },
                                        {
                                            "name": "AlignVCenter"
                                        },
                                        {
                                            "name": "AlignBaseline"
                                        },
                                        {
                                            "name": "AlignVertical_Mask"
                                        },
                                        {
                                            "name": "AlignCenter"
                                        }
                                    ],
                                    "name": "AlignmentFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "TextSingleLine"
                                        },
                                        {
                                            "name": "TextDontClip"
                                        },
                                        {
                                            "name": "TextExpandTabs"
                                        },
                                        {
                                            "name": "TextShowMnemonic"
                                        },
                                        {
                                            "name": "TextWordWrap"
                                        },
                                        {
                                            "name": "TextWrapAnywhere"
                                        },
                                        {
                                            "name": "TextDontPrint"
                                        },
                                        {
                                            "name": "TextIncludeTrailingSpaces"
                                        },
                                        {
                                            "name": "TextHideMnemonic"
                                        },
                                        {
                                            "name": "TextJustificationForced"
                                        },
                                        {
                                            "name": "TextForceLeftToRight"
                                        },
                                        {
                                            "name": "TextForceRightToLeft"
                                        },
                                        {
                                            "name": "TextLongestVariant"
                                        },
                                        {
                                            "name": "TextBypassShaping"
                                        }
                                    ],
                                    "name": "TextFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ElideLeft"
                                        },
                                        {
                                            "name": "ElideRight"
                                        },
                                        {
                                            "name": "ElideMiddle"
                                        },
                                        {
                                            "name": "ElideNone"
                                        }
                                    ],
                                    "name": "TextElideMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "WhiteSpaceNormal"
                                        },
                                        {
                                            "name": "WhiteSpacePre"
                                        },
                                        {
                                            "name": "WhiteSpaceNoWrap"
                                        },
                                        {
                                            "name": "WhiteSpaceModeUndefined"
                                        }
                                    ],
                                    "name": "WhiteSpaceMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ExactHit"
                                        },
                                        {
                                            "name": "FuzzyHit"
                                        }
                                    ],
                                    "name": "HitTestAccuracy",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "Widget"
                                        },
                                        {
                                            "name": "Window"
                                        },
                                        {
                                            "name": "Dialog"
                                        },
                                        {
                                            "name": "Sheet"
                                        },
                                        {
                                            "name": "Drawer"
                                        },
                                        {
                                            "name": "Popup"
                                        },
                                        {
                                            "name": "Tool"
                                        },
                                        {
                                            "name": "ToolTip"
                                        },
                                        {
                                            "name": "SplashScreen"
                                        },
                                        {
                                            "name": "Desktop"
                                        },
                                        {
                                            "name": "SubWindow"
                                        },
                                        {
                                            "name": "ForeignWindow"
                                        },
                                        {
                                            "name": "CoverWindow"
                                        },
                                        {
                                            "name": "WindowType_Mask"
                                        },
                                        {
                                            "name": "MSWindowsFixedSizeDialogHint"
                                        },
                                        {
                                            "name": "MSWindowsOwnDC"
                                        },
                                        {
                                            "name": "BypassWindowManagerHint"
                                        },
                                        {
                                            "name": "X11BypassWindowManagerHint"
                                        },
                                        {
                                            "name": "FramelessWindowHint"
                                        },
                                        {
                                            "name": "WindowTitleHint"
                                        },
                                        {
                                            "name": "WindowSystemMenuHint"
                                        },
                                        {
                                            "name": "WindowMinimizeButtonHint"
                                        },
                                        {
                                            "name": "WindowMaximizeButtonHint"
                                        },
                                        {
                                            "name": "WindowMinMaxButtonsHint"
                                        },
                                        {
                                            "name": "WindowContextHelpButtonHint"
                                        },
                                        {
                                            "name": "WindowShadeButtonHint"
                                        },
                                        {
                                            "name": "WindowStaysOnTopHint"
                                        },
                                        {
                                            "name": "WindowTransparentForInput"
                                        },
                                        {
                                            "name": "WindowOverridesSystemGestures"
                                        },
                                        {
                                            "name": "WindowDoesNotAcceptFocus"
                                        },
                                        {
                                            "name": "MaximizeUsingFullscreenGeometryHint"
                                        },
                                        {
                                            "name": "CustomizeWindowHint"
                                        },
                                        {
                                            "name": "WindowStaysOnBottomHint"
                                        },
                                        {
                                            "name": "WindowCloseButtonHint"
                                        },
                                        {
                                            "name": "MacWindowToolBarButtonHint"
                                        },
                                        {
                                            "name": "BypassGraphicsProxyWidget"
                                        },
                                        {
                                            "name": "NoDropShadowWindowHint"
                                        },
                                        {
                                            "name": "WindowFullscreenButtonHint"
                                        }
                                    ],
                                    "name": "WindowType",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "WindowNoState"
                                        },
                                        {
                                            "name": "WindowMinimized"
                                        },
                                        {
                                            "name": "WindowMaximized"
                                        },
                                        {
                                            "name": "WindowFullScreen"
                                        },
                                        {
                                            "name": "WindowActive"
                                        }
                                    ],
                                    "name": "WindowState",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ApplicationSuspended"
                                        },
                                        {
                                            "name": "ApplicationHidden"
                                        },
                                        {
                                            "name": "ApplicationInactive"
                                        },
                                        {
                                            "name": "ApplicationActive"
                                        }
                                    ],
                                    "name": "ApplicationState",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "PrimaryOrientation"
                                        },
                                        {
                                            "name": "PortraitOrientation"
                                        },
                                        {
                                            "name": "LandscapeOrientation"
                                        },
                                        {
                                            "name": "InvertedPortraitOrientation"
                                        },
                                        {
                                            "name": "InvertedLandscapeOrientation"
                                        }
                                    ],
                                    "name": "ScreenOrientation",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "WA_Disabled"
                                        },
                                        {
                                            "name": "WA_UnderMouse"
                                        },
                                        {
                                            "name": "WA_MouseTracking"
                                        },
                                        {
                                            "name": "WA_ContentsPropagated"
                                        },
                                        {
                                            "name": "WA_OpaquePaintEvent"
                                        },
                                        {
                                            "name": "WA_NoBackground"
                                        },
                                        {
                                            "name": "WA_StaticContents"
                                        },
                                        {
                                            "name": "WA_LaidOut"
                                        },
                                        {
                                            "name": "WA_PaintOnScreen"
                                        },
                                        {
                                            "name": "WA_NoSystemBackground"
                                        },
                                        {
                                            "name": "WA_UpdatesDisabled"
                                        },
                                        {
                                            "name": "WA_Mapped"
                                        },
                                        {
                                            "name": "WA_MacNoClickThrough"
                                        },
                                        {
                                            "name": "WA_InputMethodEnabled"
                                        },
                                        {
                                            "name": "WA_WState_Visible"
                                        },
                                        {
                                            "name": "WA_WState_Hidden"
                                        },
                                        {
                                            "name": "WA_ForceDisabled"
                                        },
                                        {
                                            "name": "WA_KeyCompression"
                                        },
                                        {
                                            "name": "WA_PendingMoveEvent"
                                        },
                                        {
                                            "name": "WA_PendingResizeEvent"
                                        },
                                        {
                                            "name": "WA_SetPalette"
                                        },
                                        {
                                            "name": "WA_SetFont"
                                        },
                                        {
                                            "name": "WA_SetCursor"
                                        },
                                        {
                                            "name": "WA_NoChildEventsFromChildren"
                                        },
                                        {
                                            "name": "WA_WindowModified"
                                        },
                                        {
                                            "name": "WA_Resized"
                                        },
                                        {
                                            "name": "WA_Moved"
                                        },
                                        {
                                            "name": "WA_PendingUpdate"
                                        },
                                        {
                                            "name": "WA_InvalidSize"
                                        },
                                        {
                                            "name": "WA_MacBrushedMetal"
                                        },
                                        {
                                            "name": "WA_MacMetalStyle"
                                        },
                                        {
                                            "name": "WA_CustomWhatsThis"
                                        },
                                        {
                                            "name": "WA_LayoutOnEntireRect"
                                        },
                                        {
                                            "name": "WA_OutsideWSRange"
                                        },
                                        {
                                            "name": "WA_GrabbedShortcut"
                                        },
                                        {
                                            "name": "WA_TransparentForMouseEvents"
                                        },
                                        {
                                            "name": "WA_PaintUnclipped"
                                        },
                                        {
                                            "name": "WA_SetWindowIcon"
                                        },
                                        {
                                            "name": "WA_NoMouseReplay"
                                        },
                                        {
                                            "name": "WA_DeleteOnClose"
                                        },
                                        {
                                            "name": "WA_RightToLeft"
                                        },
                                        {
                                            "name": "WA_SetLayoutDirection"
                                        },
                                        {
                                            "name": "WA_NoChildEventsForParent"
                                        },
                                        {
                                            "name": "WA_ForceUpdatesDisabled"
                                        },
                                        {
                                            "name": "WA_WState_Created"
                                        },
                                        {
                                            "name": "WA_WState_CompressKeys"
                                        },
                                        {
                                            "name": "WA_WState_InPaintEvent"
                                        },
                                        {
                                            "name": "WA_WState_Reparented"
                                        },
                                        {
                                            "name": "WA_WState_ConfigPending"
                                        },
                                        {
                                            "name": "WA_WState_Polished"
                                        },
                                        {
                                            "name": "WA_WState_DND"
                                        },
                                        {
                                            "name": "WA_WState_OwnSizePolicy"
                                        },
                                        {
                                            "name": "WA_WState_ExplicitShowHide"
                                        },
                                        {
                                            "name": "WA_ShowModal"
                                        },
                                        {
                                            "name": "WA_MouseNoMask"
                                        },
                                        {
                                            "name": "WA_GroupLeader"
                                        },
                                        {
                                            "name": "WA_NoMousePropagation"
                                        },
                                        {
                                            "name": "WA_Hover"
                                        },
                                        {
                                            "name": "WA_InputMethodTransparent"
                                        },
                                        {
                                            "name": "WA_QuitOnClose"
                                        },
                                        {
                                            "name": "WA_KeyboardFocusChange"
                                        },
                                        {
                                            "name": "WA_AcceptDrops"
                                        },
                                        {
                                            "name": "WA_DropSiteRegistered"
                                        },
                                        {
                                            "name": "WA_ForceAcceptDrops"
                                        },
                                        {
                                            "name": "WA_WindowPropagation"
                                        },
                                        {
                                            "name": "WA_NoX11EventCompression"
                                        },
                                        {
                                            "name": "WA_TintedBackground"
                                        },
                                        {
                                            "name": "WA_X11OpenGLOverlay"
                                        },
                                        {
                                            "name": "WA_AlwaysShowToolTips"
                                        },
                                        {
                                            "name": "WA_MacOpaqueSizeGrip"
                                        },
                                        {
                                            "name": "WA_SetStyle"
                                        },
                                        {
                                            "name": "WA_SetLocale"
                                        },
                                        {
                                            "name": "WA_MacShowFocusRect"
                                        },
                                        {
                                            "name": "WA_MacNormalSize"
                                        },
                                        {
                                            "name": "WA_MacSmallSize"
                                        },
                                        {
                                            "name": "WA_MacMiniSize"
                                        },
                                        {
                                            "name": "WA_LayoutUsesWidgetRect"
                                        },
                                        {
                                            "name": "WA_StyledBackground"
                                        },
                                        {
                                            "name": "WA_MSWindowsUseDirect3D"
                                        },
                                        {
                                            "name": "WA_CanHostQMdiSubWindowTitleBar"
                                        },
                                        {
                                            "name": "WA_MacAlwaysShowToolWindow"
                                        },
                                        {
                                            "name": "WA_StyleSheet"
                                        },
                                        {
                                            "name": "WA_ShowWithoutActivating"
                                        },
                                        {
                                            "name": "WA_X11BypassTransientForHint"
                                        },
                                        {
                                            "name": "WA_NativeWindow"
                                        },
                                        {
                                            "name": "WA_DontCreateNativeAncestors"
                                        },
                                        {
                                            "name": "WA_MacVariableSize"
                                        },
                                        {
                                            "name": "WA_DontShowOnScreen"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeDesktop"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeDock"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeToolBar"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeMenu"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeUtility"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeSplash"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeDialog"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeDropDownMenu"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypePopupMenu"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeToolTip"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeNotification"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeCombo"
                                        },
                                        {
                                            "name": "WA_X11NetWmWindowTypeDND"
                                        },
                                        {
                                            "name": "WA_MacFrameworkScaled"
                                        },
                                        {
                                            "name": "WA_SetWindowModality"
                                        },
                                        {
                                            "name": "WA_WState_WindowOpacitySet"
                                        },
                                        {
                                            "name": "WA_TranslucentBackground"
                                        },
                                        {
                                            "name": "WA_AcceptTouchEvents"
                                        },
                                        {
                                            "name": "WA_WState_AcceptedTouchBeginEvent"
                                        },
                                        {
                                            "name": "WA_TouchPadAcceptSingleTouchEvents"
                                        },
                                        {
                                            "name": "WA_X11DoNotAcceptFocus"
                                        },
                                        {
                                            "name": "WA_MacNoShadow"
                                        },
                                        {
                                            "name": "WA_AlwaysStackOnTop"
                                        },
                                        {
                                            "name": "WA_TabletTracking"
                                        },
                                        {
                                            "name": "WA_AttributeCount"
                                        }
                                    ],
                                    "name": "WidgetAttribute",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "AA_ImmediateWidgetCreation"
                                        },
                                        {
                                            "name": "AA_MSWindowsUseDirect3DByDefault"
                                        },
                                        {
                                            "name": "AA_DontShowIconsInMenus"
                                        },
                                        {
                                            "name": "AA_NativeWindows"
                                        },
                                        {
                                            "name": "AA_DontCreateNativeWidgetSiblings"
                                        },
                                        {
                                            "name": "AA_PluginApplication"
                                        },
                                        {
                                            "name": "AA_MacPluginApplication"
                                        },
                                        {
                                            "name": "AA_DontUseNativeMenuBar"
                                        },
                                        {
                                            "name": "AA_MacDontSwapCtrlAndMeta"
                                        },
                                        {
                                            "name": "AA_Use96Dpi"
                                        },
                                        {
                                            "name": "AA_X11InitThreads"
                                        },
                                        {
                                            "name": "AA_SynthesizeTouchForUnhandledMouseEvents"
                                        },
                                        {
                                            "name": "AA_SynthesizeMouseForUnhandledTouchEvents"
                                        },
                                        {
                                            "name": "AA_UseHighDpiPixmaps"
                                        },
                                        {
                                            "name": "AA_ForceRasterWidgets"
                                        },
                                        {
                                            "name": "AA_UseDesktopOpenGL"
                                        },
                                        {
                                            "name": "AA_UseOpenGLES"
                                        },
                                        {
                                            "name": "AA_UseSoftwareOpenGL"
                                        },
                                        {
                                            "name": "AA_ShareOpenGLContexts"
                                        },
                                        {
                                            "name": "AA_SetPalette"
                                        },
                                        {
                                            "name": "AA_EnableHighDpiScaling"
                                        },
                                        {
                                            "name": "AA_DisableHighDpiScaling"
                                        },
                                        {
                                            "name": "AA_UseStyleSheetPropagationInWidgetStyles"
                                        },
                                        {
                                            "name": "AA_DontUseNativeDialogs"
                                        },
                                        {
                                            "name": "AA_SynthesizeMouseForUnhandledTabletEvents"
                                        },
                                        {
                                            "name": "AA_CompressHighFrequencyEvents"
                                        },
                                        {
                                            "name": "AA_DontCheckOpenGLContextThreadAffinity"
                                        },
                                        {
                                            "name": "AA_DisableShaderDiskCache"
                                        },
                                        {
                                            "name": "AA_DontShowShortcutsInContextMenus"
                                        },
                                        {
                                            "name": "AA_CompressTabletEvents"
                                        },
                                        {
                                            "name": "AA_DisableWindowContextHelpButton"
                                        },
                                        {
                                            "name": "AA_AttributeCount"
                                        }
                                    ],
                                    "name": "ApplicationAttribute",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ColorMode_Mask"
                                        },
                                        {
                                            "name": "AutoColor"
                                        },
                                        {
                                            "name": "ColorOnly"
                                        },
                                        {
                                            "name": "MonoOnly"
                                        },
                                        {
                                            "name": "AlphaDither_Mask"
                                        },
                                        {
                                            "name": "ThresholdAlphaDither"
                                        },
                                        {
                                            "name": "OrderedAlphaDither"
                                        },
                                        {
                                            "name": "DiffuseAlphaDither"
                                        },
                                        {
                                            "name": "NoAlpha"
                                        },
                                        {
                                            "name": "Dither_Mask"
                                        },
                                        {
                                            "name": "DiffuseDither"
                                        },
                                        {
                                            "name": "OrderedDither"
                                        },
                                        {
                                            "name": "ThresholdDither"
                                        },
                                        {
                                            "name": "DitherMode_Mask"
                                        },
                                        {
                                            "name": "AutoDither"
                                        },
                                        {
                                            "name": "PreferDither"
                                        },
                                        {
                                            "name": "AvoidDither"
                                        },
                                        {
                                            "name": "NoOpaqueDetection"
                                        },
                                        {
                                            "name": "NoFormatConversion"
                                        }
                                    ],
                                    "name": "ImageConversionFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "TransparentMode"
                                        },
                                        {
                                            "name": "OpaqueMode"
                                        }
                                    ],
                                    "name": "BGMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "Key_Escape"
                                        },
                                        {
                                            "name": "Key_Tab"
                                        },
                                        {
                                            "name": "Key_Backtab"
                                        },
                                        {
                                            "name": "Key_Backspace"
                                        },
                                        {
                                            "name": "Key_Return"
                                        },
                                        {
                                            "name": "Key_Enter"
                                        },
                                        {
                                            "name": "Key_Insert"
                                        },
                                        {
                                            "name": "Key_Delete"
                                        },
                                        {
                                            "name": "Key_Pause"
                                        },
                                        {
                                            "name": "Key_Print"
                                        },
                                        {
                                            "name": "Key_SysReq"
                                        },
                                        {
                                            "name": "Key_Clear"
                                        },
                                        {
                                            "name": "Key_Home"
                                        },
                                        {
                                            "name": "Key_End"
                                        },
                                        {
                                            "name": "Key_Left"
                                        },
                                        {
                                            "name": "Key_Up"
                                        },
                                        {
                                            "name": "Key_Right"
                                        },
                                        {
                                            "name": "Key_Down"
                                        },
                                        {
                                            "name": "Key_PageUp"
                                        },
                                        {
                                            "name": "Key_PageDown"
                                        },
                                        {
                                            "name": "Key_Shift"
                                        },
                                        {
                                            "name": "Key_Control"
                                        },
                                        {
                                            "name": "Key_Meta"
                                        },
                                        {
                                            "name": "Key_Alt"
                                        },
                                        {
                                            "name": "Key_CapsLock"
                                        },
                                        {
                                            "name": "Key_NumLock"
                                        },
                                        {
                                            "name": "Key_ScrollLock"
                                        },
                                        {
                                            "name": "Key_F1"
                                        },
                                        {
                                            "name": "Key_F2"
                                        },
                                        {
                                            "name": "Key_F3"
                                        },
                                        {
                                            "name": "Key_F4"
                                        },
                                        {
                                            "name": "Key_F5"
                                        },
                                        {
                                            "name": "Key_F6"
                                        },
                                        {
                                            "name": "Key_F7"
                                        },
                                        {
                                            "name": "Key_F8"
                                        },
                                        {
                                            "name": "Key_F9"
                                        },
                                        {
                                            "name": "Key_F10"
                                        },
                                        {
                                            "name": "Key_F11"
                                        },
                                        {
                                            "name": "Key_F12"
                                        },
                                        {
                                            "name": "Key_F13"
                                        },
                                        {
                                            "name": "Key_F14"
                                        },
                                        {
                                            "name": "Key_F15"
                                        },
                                        {
                                            "name": "Key_F16"
                                        },
                                        {
                                            "name": "Key_F17"
                                        },
                                        {
                                            "name": "Key_F18"
                                        },
                                        {
                                            "name": "Key_F19"
                                        },
                                        {
                                            "name": "Key_F20"
                                        },
                                        {
                                            "name": "Key_F21"
                                        },
                                        {
                                            "name": "Key_F22"
                                        },
                                        {
                                            "name": "Key_F23"
                                        },
                                        {
                                            "name": "Key_F24"
                                        },
                                        {
                                            "name": "Key_F25"
                                        },
                                        {
                                            "name": "Key_F26"
                                        },
                                        {
                                            "name": "Key_F27"
                                        },
                                        {
                                            "name": "Key_F28"
                                        },
                                        {
                                            "name": "Key_F29"
                                        },
                                        {
                                            "name": "Key_F30"
                                        },
                                        {
                                            "name": "Key_F31"
                                        },
                                        {
                                            "name": "Key_F32"
                                        },
                                        {
                                            "name": "Key_F33"
                                        },
                                        {
                                            "name": "Key_F34"
                                        },
                                        {
                                            "name": "Key_F35"
                                        },
                                        {
                                            "name": "Key_Super_L"
                                        },
                                        {
                                            "name": "Key_Super_R"
                                        },
                                        {
                                            "name": "Key_Menu"
                                        },
                                        {
                                            "name": "Key_Hyper_L"
                                        },
                                        {
                                            "name": "Key_Hyper_R"
                                        },
                                        {
                                            "name": "Key_Help"
                                        },
                                        {
                                            "name": "Key_Direction_L"
                                        },
                                        {
                                            "name": "Key_Direction_R"
                                        },
                                        {
                                            "name": "Key_Space"
                                        },
                                        {
                                            "name": "Key_Any"
                                        },
                                        {
                                            "name": "Key_Exclam"
                                        },
                                        {
                                            "name": "Key_QuoteDbl"
                                        },
                                        {
                                            "name": "Key_NumberSign"
                                        },
                                        {
                                            "name": "Key_Dollar"
                                        },
                                        {
                                            "name": "Key_Percent"
                                        },
                                        {
                                            "name": "Key_Ampersand"
                                        },
                                        {
                                            "name": "Key_Apostrophe"
                                        },
                                        {
                                            "name": "Key_ParenLeft"
                                        },
                                        {
                                            "name": "Key_ParenRight"
                                        },
                                        {
                                            "name": "Key_Asterisk"
                                        },
                                        {
                                            "name": "Key_Plus"
                                        },
                                        {
                                            "name": "Key_Comma"
                                        },
                                        {
                                            "name": "Key_Minus"
                                        },
                                        {
                                            "name": "Key_Period"
                                        },
                                        {
                                            "name": "Key_Slash"
                                        },
                                        {
                                            "name": "Key_0"
                                        },
                                        {
                                            "name": "Key_1"
                                        },
                                        {
                                            "name": "Key_2"
                                        },
                                        {
                                            "name": "Key_3"
                                        },
                                        {
                                            "name": "Key_4"
                                        },
                                        {
                                            "name": "Key_5"
                                        },
                                        {
                                            "name": "Key_6"
                                        },
                                        {
                                            "name": "Key_7"
                                        },
                                        {
                                            "name": "Key_8"
                                        },
                                        {
                                            "name": "Key_9"
                                        },
                                        {
                                            "name": "Key_Colon"
                                        },
                                        {
                                            "name": "Key_Semicolon"
                                        },
                                        {
                                            "name": "Key_Less"
                                        },
                                        {
                                            "name": "Key_Equal"
                                        },
                                        {
                                            "name": "Key_Greater"
                                        },
                                        {
                                            "name": "Key_Question"
                                        },
                                        {
                                            "name": "Key_At"
                                        },
                                        {
                                            "name": "Key_A"
                                        },
                                        {
                                            "name": "Key_B"
                                        },
                                        {
                                            "name": "Key_C"
                                        },
                                        {
                                            "name": "Key_D"
                                        },
                                        {
                                            "name": "Key_E"
                                        },
                                        {
                                            "name": "Key_F"
                                        },
                                        {
                                            "name": "Key_G"
                                        },
                                        {
                                            "name": "Key_H"
                                        },
                                        {
                                            "name": "Key_I"
                                        },
                                        {
                                            "name": "Key_J"
                                        },
                                        {
                                            "name": "Key_K"
                                        },
                                        {
                                            "name": "Key_L"
                                        },
                                        {
                                            "name": "Key_M"
                                        },
                                        {
                                            "name": "Key_N"
                                        },
                                        {
                                            "name": "Key_O"
                                        },
                                        {
                                            "name": "Key_P"
                                        },
                                        {
                                            "name": "Key_Q"
                                        },
                                        {
                                            "name": "Key_R"
                                        },
                                        {
                                            "name": "Key_S"
                                        },
                                        {
                                            "name": "Key_T"
                                        },
                                        {
                                            "name": "Key_U"
                                        },
                                        {
                                            "name": "Key_V"
                                        },
                                        {
                                            "name": "Key_W"
                                        },
                                        {
                                            "name": "Key_X"
                                        },
                                        {
                                            "name": "Key_Y"
                                        },
                                        {
                                            "name": "Key_Z"
                                        },
                                        {
                                            "name": "Key_BracketLeft"
                                        },
                                        {
                                            "name": "Key_Backslash"
                                        },
                                        {
                                            "name": "Key_BracketRight"
                                        },
                                        {
                                            "name": "Key_AsciiCircum"
                                        },
                                        {
                                            "name": "Key_Underscore"
                                        },
                                        {
                                            "name": "Key_QuoteLeft"
                                        },
                                        {
                                            "name": "Key_BraceLeft"
                                        },
                                        {
                                            "name": "Key_Bar"
                                        },
                                        {
                                            "name": "Key_BraceRight"
                                        },
                                        {
                                            "name": "Key_AsciiTilde"
                                        },
                                        {
                                            "name": "Key_nobreakspace"
                                        },
                                        {
                                            "name": "Key_exclamdown"
                                        },
                                        {
                                            "name": "Key_cent"
                                        },
                                        {
                                            "name": "Key_sterling"
                                        },
                                        {
                                            "name": "Key_currency"
                                        },
                                        {
                                            "name": "Key_yen"
                                        },
                                        {
                                            "name": "Key_brokenbar"
                                        },
                                        {
                                            "name": "Key_section"
                                        },
                                        {
                                            "name": "Key_diaeresis"
                                        },
                                        {
                                            "name": "Key_copyright"
                                        },
                                        {
                                            "name": "Key_ordfeminine"
                                        },
                                        {
                                            "name": "Key_guillemotleft"
                                        },
                                        {
                                            "name": "Key_notsign"
                                        },
                                        {
                                            "name": "Key_hyphen"
                                        },
                                        {
                                            "name": "Key_registered"
                                        },
                                        {
                                            "name": "Key_macron"
                                        },
                                        {
                                            "name": "Key_degree"
                                        },
                                        {
                                            "name": "Key_plusminus"
                                        },
                                        {
                                            "name": "Key_twosuperior"
                                        },
                                        {
                                            "name": "Key_threesuperior"
                                        },
                                        {
                                            "name": "Key_acute"
                                        },
                                        {
                                            "name": "Key_mu"
                                        },
                                        {
                                            "name": "Key_paragraph"
                                        },
                                        {
                                            "name": "Key_periodcentered"
                                        },
                                        {
                                            "name": "Key_cedilla"
                                        },
                                        {
                                            "name": "Key_onesuperior"
                                        },
                                        {
                                            "name": "Key_masculine"
                                        },
                                        {
                                            "name": "Key_guillemotright"
                                        },
                                        {
                                            "name": "Key_onequarter"
                                        },
                                        {
                                            "name": "Key_onehalf"
                                        },
                                        {
                                            "name": "Key_threequarters"
                                        },
                                        {
                                            "name": "Key_questiondown"
                                        },
                                        {
                                            "name": "Key_Agrave"
                                        },
                                        {
                                            "name": "Key_Aacute"
                                        },
                                        {
                                            "name": "Key_Acircumflex"
                                        },
                                        {
                                            "name": "Key_Atilde"
                                        },
                                        {
                                            "name": "Key_Adiaeresis"
                                        },
                                        {
                                            "name": "Key_Aring"
                                        },
                                        {
                                            "name": "Key_AE"
                                        },
                                        {
                                            "name": "Key_Ccedilla"
                                        },
                                        {
                                            "name": "Key_Egrave"
                                        },
                                        {
                                            "name": "Key_Eacute"
                                        },
                                        {
                                            "name": "Key_Ecircumflex"
                                        },
                                        {
                                            "name": "Key_Ediaeresis"
                                        },
                                        {
                                            "name": "Key_Igrave"
                                        },
                                        {
                                            "name": "Key_Iacute"
                                        },
                                        {
                                            "name": "Key_Icircumflex"
                                        },
                                        {
                                            "name": "Key_Idiaeresis"
                                        },
                                        {
                                            "name": "Key_ETH"
                                        },
                                        {
                                            "name": "Key_Ntilde"
                                        },
                                        {
                                            "name": "Key_Ograve"
                                        },
                                        {
                                            "name": "Key_Oacute"
                                        },
                                        {
                                            "name": "Key_Ocircumflex"
                                        },
                                        {
                                            "name": "Key_Otilde"
                                        },
                                        {
                                            "name": "Key_Odiaeresis"
                                        },
                                        {
                                            "name": "Key_multiply"
                                        },
                                        {
                                            "name": "Key_Ooblique"
                                        },
                                        {
                                            "name": "Key_Ugrave"
                                        },
                                        {
                                            "name": "Key_Uacute"
                                        },
                                        {
                                            "name": "Key_Ucircumflex"
                                        },
                                        {
                                            "name": "Key_Udiaeresis"
                                        },
                                        {
                                            "name": "Key_Yacute"
                                        },
                                        {
                                            "name": "Key_THORN"
                                        },
                                        {
                                            "name": "Key_ssharp"
                                        },
                                        {
                                            "name": "Key_division"
                                        },
                                        {
                                            "name": "Key_ydiaeresis"
                                        },
                                        {
                                            "name": "Key_AltGr"
                                        },
                                        {
                                            "name": "Key_Multi_key"
                                        },
                                        {
                                            "name": "Key_Codeinput"
                                        },
                                        {
                                            "name": "Key_SingleCandidate"
                                        },
                                        {
                                            "name": "Key_MultipleCandidate"
                                        },
                                        {
                                            "name": "Key_PreviousCandidate"
                                        },
                                        {
                                            "name": "Key_Mode_switch"
                                        },
                                        {
                                            "name": "Key_Kanji"
                                        },
                                        {
                                            "name": "Key_Muhenkan"
                                        },
                                        {
                                            "name": "Key_Henkan"
                                        },
                                        {
                                            "name": "Key_Romaji"
                                        },
                                        {
                                            "name": "Key_Hiragana"
                                        },
                                        {
                                            "name": "Key_Katakana"
                                        },
                                        {
                                            "name": "Key_Hiragana_Katakana"
                                        },
                                        {
                                            "name": "Key_Zenkaku"
                                        },
                                        {
                                            "name": "Key_Hankaku"
                                        },
                                        {
                                            "name": "Key_Zenkaku_Hankaku"
                                        },
                                        {
                                            "name": "Key_Touroku"
                                        },
                                        {
                                            "name": "Key_Massyo"
                                        },
                                        {
                                            "name": "Key_Kana_Lock"
                                        },
                                        {
                                            "name": "Key_Kana_Shift"
                                        },
                                        {
                                            "name": "Key_Eisu_Shift"
                                        },
                                        {
                                            "name": "Key_Eisu_toggle"
                                        },
                                        {
                                            "name": "Key_Hangul"
                                        },
                                        {
                                            "name": "Key_Hangul_Start"
                                        },
                                        {
                                            "name": "Key_Hangul_End"
                                        },
                                        {
                                            "name": "Key_Hangul_Hanja"
                                        },
                                        {
                                            "name": "Key_Hangul_Jamo"
                                        },
                                        {
                                            "name": "Key_Hangul_Romaja"
                                        },
                                        {
                                            "name": "Key_Hangul_Jeonja"
                                        },
                                        {
                                            "name": "Key_Hangul_Banja"
                                        },
                                        {
                                            "name": "Key_Hangul_PreHanja"
                                        },
                                        {
                                            "name": "Key_Hangul_PostHanja"
                                        },
                                        {
                                            "name": "Key_Hangul_Special"
                                        },
                                        {
                                            "name": "Key_Dead_Grave"
                                        },
                                        {
                                            "name": "Key_Dead_Acute"
                                        },
                                        {
                                            "name": "Key_Dead_Circumflex"
                                        },
                                        {
                                            "name": "Key_Dead_Tilde"
                                        },
                                        {
                                            "name": "Key_Dead_Macron"
                                        },
                                        {
                                            "name": "Key_Dead_Breve"
                                        },
                                        {
                                            "name": "Key_Dead_Abovedot"
                                        },
                                        {
                                            "name": "Key_Dead_Diaeresis"
                                        },
                                        {
                                            "name": "Key_Dead_Abovering"
                                        },
                                        {
                                            "name": "Key_Dead_Doubleacute"
                                        },
                                        {
                                            "name": "Key_Dead_Caron"
                                        },
                                        {
                                            "name": "Key_Dead_Cedilla"
                                        },
                                        {
                                            "name": "Key_Dead_Ogonek"
                                        },
                                        {
                                            "name": "Key_Dead_Iota"
                                        },
                                        {
                                            "name": "Key_Dead_Voiced_Sound"
                                        },
                                        {
                                            "name": "Key_Dead_Semivoiced_Sound"
                                        },
                                        {
                                            "name": "Key_Dead_Belowdot"
                                        },
                                        {
                                            "name": "Key_Dead_Hook"
                                        },
                                        {
                                            "name": "Key_Dead_Horn"
                                        },
                                        {
                                            "name": "Key_Back"
                                        },
                                        {
                                            "name": "Key_Forward"
                                        },
                                        {
                                            "name": "Key_Stop"
                                        },
                                        {
                                            "name": "Key_Refresh"
                                        },
                                        {
                                            "name": "Key_VolumeDown"
                                        },
                                        {
                                            "name": "Key_VolumeMute"
                                        },
                                        {
                                            "name": "Key_VolumeUp"
                                        },
                                        {
                                            "name": "Key_BassBoost"
                                        },
                                        {
                                            "name": "Key_BassUp"
                                        },
                                        {
                                            "name": "Key_BassDown"
                                        },
                                        {
                                            "name": "Key_TrebleUp"
                                        },
                                        {
                                            "name": "Key_TrebleDown"
                                        },
                                        {
                                            "name": "Key_MediaPlay"
                                        },
                                        {
                                            "name": "Key_MediaStop"
                                        },
                                        {
                                            "name": "Key_MediaPrevious"
                                        },
                                        {
                                            "name": "Key_MediaNext"
                                        },
                                        {
                                            "name": "Key_MediaRecord"
                                        },
                                        {
                                            "name": "Key_MediaPause"
                                        },
                                        {
                                            "name": "Key_MediaTogglePlayPause"
                                        },
                                        {
                                            "name": "Key_HomePage"
                                        },
                                        {
                                            "name": "Key_Favorites"
                                        },
                                        {
                                            "name": "Key_Search"
                                        },
                                        {
                                            "name": "Key_Standby"
                                        },
                                        {
                                            "name": "Key_OpenUrl"
                                        },
                                        {
                                            "name": "Key_LaunchMail"
                                        },
                                        {
                                            "name": "Key_LaunchMedia"
                                        },
                                        {
                                            "name": "Key_Launch0"
                                        },
                                        {
                                            "name": "Key_Launch1"
                                        },
                                        {
                                            "name": "Key_Launch2"
                                        },
                                        {
                                            "name": "Key_Launch3"
                                        },
                                        {
                                            "name": "Key_Launch4"
                                        },
                                        {
                                            "name": "Key_Launch5"
                                        },
                                        {
                                            "name": "Key_Launch6"
                                        },
                                        {
                                            "name": "Key_Launch7"
                                        },
                                        {
                                            "name": "Key_Launch8"
                                        },
                                        {
                                            "name": "Key_Launch9"
                                        },
                                        {
                                            "name": "Key_LaunchA"
                                        },
                                        {
                                            "name": "Key_LaunchB"
                                        },
                                        {
                                            "name": "Key_LaunchC"
                                        },
                                        {
                                            "name": "Key_LaunchD"
                                        },
                                        {
                                            "name": "Key_LaunchE"
                                        },
                                        {
                                            "name": "Key_LaunchF"
                                        },
                                        {
                                            "name": "Key_MonBrightnessUp"
                                        },
                                        {
                                            "name": "Key_MonBrightnessDown"
                                        },
                                        {
                                            "name": "Key_KeyboardLightOnOff"
                                        },
                                        {
                                            "name": "Key_KeyboardBrightnessUp"
                                        },
                                        {
                                            "name": "Key_KeyboardBrightnessDown"
                                        },
                                        {
                                            "name": "Key_PowerOff"
                                        },
                                        {
                                            "name": "Key_WakeUp"
                                        },
                                        {
                                            "name": "Key_Eject"
                                        },
                                        {
                                            "name": "Key_ScreenSaver"
                                        },
                                        {
                                            "name": "Key_WWW"
                                        },
                                        {
                                            "name": "Key_Memo"
                                        },
                                        {
                                            "name": "Key_LightBulb"
                                        },
                                        {
                                            "name": "Key_Shop"
                                        },
                                        {
                                            "name": "Key_History"
                                        },
                                        {
                                            "name": "Key_AddFavorite"
                                        },
                                        {
                                            "name": "Key_HotLinks"
                                        },
                                        {
                                            "name": "Key_BrightnessAdjust"
                                        },
                                        {
                                            "name": "Key_Finance"
                                        },
                                        {
                                            "name": "Key_Community"
                                        },
                                        {
                                            "name": "Key_AudioRewind"
                                        },
                                        {
                                            "name": "Key_BackForward"
                                        },
                                        {
                                            "name": "Key_ApplicationLeft"
                                        },
                                        {
                                            "name": "Key_ApplicationRight"
                                        },
                                        {
                                            "name": "Key_Book"
                                        },
                                        {
                                            "name": "Key_CD"
                                        },
                                        {
                                            "name": "Key_Calculator"
                                        },
                                        {
                                            "name": "Key_ToDoList"
                                        },
                                        {
                                            "name": "Key_ClearGrab"
                                        },
                                        {
                                            "name": "Key_Close"
                                        },
                                        {
                                            "name": "Key_Copy"
                                        },
                                        {
                                            "name": "Key_Cut"
                                        },
                                        {
                                            "name": "Key_Display"
                                        },
                                        {
                                            "name": "Key_DOS"
                                        },
                                        {
                                            "name": "Key_Documents"
                                        },
                                        {
                                            "name": "Key_Excel"
                                        },
                                        {
                                            "name": "Key_Explorer"
                                        },
                                        {
                                            "name": "Key_Game"
                                        },
                                        {
                                            "name": "Key_Go"
                                        },
                                        {
                                            "name": "Key_iTouch"
                                        },
                                        {
                                            "name": "Key_LogOff"
                                        },
                                        {
                                            "name": "Key_Market"
                                        },
                                        {
                                            "name": "Key_Meeting"
                                        },
                                        {
                                            "name": "Key_MenuKB"
                                        },
                                        {
                                            "name": "Key_MenuPB"
                                        },
                                        {
                                            "name": "Key_MySites"
                                        },
                                        {
                                            "name": "Key_News"
                                        },
                                        {
                                            "name": "Key_OfficeHome"
                                        },
                                        {
                                            "name": "Key_Option"
                                        },
                                        {
                                            "name": "Key_Paste"
                                        },
                                        {
                                            "name": "Key_Phone"
                                        },
                                        {
                                            "name": "Key_Calendar"
                                        },
                                        {
                                            "name": "Key_Reply"
                                        },
                                        {
                                            "name": "Key_Reload"
                                        },
                                        {
                                            "name": "Key_RotateWindows"
                                        },
                                        {
                                            "name": "Key_RotationPB"
                                        },
                                        {
                                            "name": "Key_RotationKB"
                                        },
                                        {
                                            "name": "Key_Save"
                                        },
                                        {
                                            "name": "Key_Send"
                                        },
                                        {
                                            "name": "Key_Spell"
                                        },
                                        {
                                            "name": "Key_SplitScreen"
                                        },
                                        {
                                            "name": "Key_Support"
                                        },
                                        {
                                            "name": "Key_TaskPane"
                                        },
                                        {
                                            "name": "Key_Terminal"
                                        },
                                        {
                                            "name": "Key_Tools"
                                        },
                                        {
                                            "name": "Key_Travel"
                                        },
                                        {
                                            "name": "Key_Video"
                                        },
                                        {
                                            "name": "Key_Word"
                                        },
                                        {
                                            "name": "Key_Xfer"
                                        },
                                        {
                                            "name": "Key_ZoomIn"
                                        },
                                        {
                                            "name": "Key_ZoomOut"
                                        },
                                        {
                                            "name": "Key_Away"
                                        },
                                        {
                                            "name": "Key_Messenger"
                                        },
                                        {
                                            "name": "Key_WebCam"
                                        },
                                        {
                                            "name": "Key_MailForward"
                                        },
                                        {
                                            "name": "Key_Pictures"
                                        },
                                        {
                                            "name": "Key_Music"
                                        },
                                        {
                                            "name": "Key_Battery"
                                        },
                                        {
                                            "name": "Key_Bluetooth"
                                        },
                                        {
                                            "name": "Key_WLAN"
                                        },
                                        {
                                            "name": "Key_UWB"
                                        },
                                        {
                                            "name": "Key_AudioForward"
                                        },
                                        {
                                            "name": "Key_AudioRepeat"
                                        },
                                        {
                                            "name": "Key_AudioRandomPlay"
                                        },
                                        {
                                            "name": "Key_Subtitle"
                                        },
                                        {
                                            "name": "Key_AudioCycleTrack"
                                        },
                                        {
                                            "name": "Key_Time"
                                        },
                                        {
                                            "name": "Key_Hibernate"
                                        },
                                        {
                                            "name": "Key_View"
                                        },
                                        {
                                            "name": "Key_TopMenu"
                                        },
                                        {
                                            "name": "Key_PowerDown"
                                        },
                                        {
                                            "name": "Key_Suspend"
                                        },
                                        {
                                            "name": "Key_ContrastAdjust"
                                        },
                                        {
                                            "name": "Key_LaunchG"
                                        },
                                        {
                                            "name": "Key_LaunchH"
                                        },
                                        {
                                            "name": "Key_TouchpadToggle"
                                        },
                                        {
                                            "name": "Key_TouchpadOn"
                                        },
                                        {
                                            "name": "Key_TouchpadOff"
                                        },
                                        {
                                            "name": "Key_MicMute"
                                        },
                                        {
                                            "name": "Key_Red"
                                        },
                                        {
                                            "name": "Key_Green"
                                        },
                                        {
                                            "name": "Key_Yellow"
                                        },
                                        {
                                            "name": "Key_Blue"
                                        },
                                        {
                                            "name": "Key_ChannelUp"
                                        },
                                        {
                                            "name": "Key_ChannelDown"
                                        },
                                        {
                                            "name": "Key_Guide"
                                        },
                                        {
                                            "name": "Key_Info"
                                        },
                                        {
                                            "name": "Key_Settings"
                                        },
                                        {
                                            "name": "Key_MicVolumeUp"
                                        },
                                        {
                                            "name": "Key_MicVolumeDown"
                                        },
                                        {
                                            "name": "Key_New"
                                        },
                                        {
                                            "name": "Key_Open"
                                        },
                                        {
                                            "name": "Key_Find"
                                        },
                                        {
                                            "name": "Key_Undo"
                                        },
                                        {
                                            "name": "Key_Redo"
                                        },
                                        {
                                            "name": "Key_MediaLast"
                                        },
                                        {
                                            "name": "Key_Select"
                                        },
                                        {
                                            "name": "Key_Yes"
                                        },
                                        {
                                            "name": "Key_No"
                                        },
                                        {
                                            "name": "Key_Cancel"
                                        },
                                        {
                                            "name": "Key_Printer"
                                        },
                                        {
                                            "name": "Key_Execute"
                                        },
                                        {
                                            "name": "Key_Sleep"
                                        },
                                        {
                                            "name": "Key_Play"
                                        },
                                        {
                                            "name": "Key_Zoom"
                                        },
                                        {
                                            "name": "Key_Exit"
                                        },
                                        {
                                            "name": "Key_Context1"
                                        },
                                        {
                                            "name": "Key_Context2"
                                        },
                                        {
                                            "name": "Key_Context3"
                                        },
                                        {
                                            "name": "Key_Context4"
                                        },
                                        {
                                            "name": "Key_Call"
                                        },
                                        {
                                            "name": "Key_Hangup"
                                        },
                                        {
                                            "name": "Key_Flip"
                                        },
                                        {
                                            "name": "Key_ToggleCallHangup"
                                        },
                                        {
                                            "name": "Key_VoiceDial"
                                        },
                                        {
                                            "name": "Key_LastNumberRedial"
                                        },
                                        {
                                            "name": "Key_Camera"
                                        },
                                        {
                                            "name": "Key_CameraFocus"
                                        },
                                        {
                                            "name": "Key_unknown"
                                        }
                                    ],
                                    "name": "Key",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoArrow"
                                        },
                                        {
                                            "name": "UpArrow"
                                        },
                                        {
                                            "name": "DownArrow"
                                        },
                                        {
                                            "name": "LeftArrow"
                                        },
                                        {
                                            "name": "RightArrow"
                                        }
                                    ],
                                    "name": "ArrowType",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoPen"
                                        },
                                        {
                                            "name": "SolidLine"
                                        },
                                        {
                                            "name": "DashLine"
                                        },
                                        {
                                            "name": "DotLine"
                                        },
                                        {
                                            "name": "DashDotLine"
                                        },
                                        {
                                            "name": "DashDotDotLine"
                                        },
                                        {
                                            "name": "CustomDashLine"
                                        },
                                        {
                                            "name": "MPenStyle"
                                        }
                                    ],
                                    "name": "PenStyle",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "FlatCap"
                                        },
                                        {
                                            "name": "SquareCap"
                                        },
                                        {
                                            "name": "RoundCap"
                                        },
                                        {
                                            "name": "MPenCapStyle"
                                        }
                                    ],
                                    "name": "PenCapStyle",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "MiterJoin"
                                        },
                                        {
                                            "name": "BevelJoin"
                                        },
                                        {
                                            "name": "RoundJoin"
                                        },
                                        {
                                            "name": "SvgMiterJoin"
                                        },
                                        {
                                            "name": "MPenJoinStyle"
                                        }
                                    ],
                                    "name": "PenJoinStyle",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoBrush"
                                        },
                                        {
                                            "name": "SolidPattern"
                                        },
                                        {
                                            "name": "Dense1Pattern"
                                        },
                                        {
                                            "name": "Dense2Pattern"
                                        },
                                        {
                                            "name": "Dense3Pattern"
                                        },
                                        {
                                            "name": "Dense4Pattern"
                                        },
                                        {
                                            "name": "Dense5Pattern"
                                        },
                                        {
                                            "name": "Dense6Pattern"
                                        },
                                        {
                                            "name": "Dense7Pattern"
                                        },
                                        {
                                            "name": "HorPattern"
                                        },
                                        {
                                            "name": "VerPattern"
                                        },
                                        {
                                            "name": "CrossPattern"
                                        },
                                        {
                                            "name": "BDiagPattern"
                                        },
                                        {
                                            "name": "FDiagPattern"
                                        },
                                        {
                                            "name": "DiagCrossPattern"
                                        },
                                        {
                                            "name": "LinearGradientPattern"
                                        },
                                        {
                                            "name": "RadialGradientPattern"
                                        },
                                        {
                                            "name": "ConicalGradientPattern"
                                        },
                                        {
                                            "name": "TexturePattern"
                                        }
                                    ],
                                    "name": "BrushStyle",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "AbsoluteSize"
                                        },
                                        {
                                            "name": "RelativeSize"
                                        }
                                    ],
                                    "name": "SizeMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "UI_General"
                                        },
                                        {
                                            "name": "UI_AnimateMenu"
                                        },
                                        {
                                            "name": "UI_FadeMenu"
                                        },
                                        {
                                            "name": "UI_AnimateCombo"
                                        },
                                        {
                                            "name": "UI_AnimateTooltip"
                                        },
                                        {
                                            "name": "UI_FadeTooltip"
                                        },
                                        {
                                            "name": "UI_AnimateToolBox"
                                        }
                                    ],
                                    "name": "UIEffect",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ArrowCursor"
                                        },
                                        {
                                            "name": "UpArrowCursor"
                                        },
                                        {
                                            "name": "CrossCursor"
                                        },
                                        {
                                            "name": "WaitCursor"
                                        },
                                        {
                                            "name": "IBeamCursor"
                                        },
                                        {
                                            "name": "SizeVerCursor"
                                        },
                                        {
                                            "name": "SizeHorCursor"
                                        },
                                        {
                                            "name": "SizeBDiagCursor"
                                        },
                                        {
                                            "name": "SizeFDiagCursor"
                                        },
                                        {
                                            "name": "SizeAllCursor"
                                        },
                                        {
                                            "name": "BlankCursor"
                                        },
                                        {
                                            "name": "SplitVCursor"
                                        },
                                        {
                                            "name": "SplitHCursor"
                                        },
                                        {
                                            "name": "PointingHandCursor"
                                        },
                                        {
                                            "name": "ForbiddenCursor"
                                        },
                                        {
                                            "name": "WhatsThisCursor"
                                        },
                                        {
                                            "name": "BusyCursor"
                                        },
                                        {
                                            "name": "OpenHandCursor"
                                        },
                                        {
                                            "name": "ClosedHandCursor"
                                        },
                                        {
                                            "name": "DragCopyCursor"
                                        },
                                        {
                                            "name": "DragMoveCursor"
                                        },
                                        {
                                            "name": "DragLinkCursor"
                                        },
                                        {
                                            "name": "LastCursor"
                                        },
                                        {
                                            "name": "BitmapCursor"
                                        },
                                        {
                                            "name": "CustomCursor"
                                        }
                                    ],
                                    "name": "CursorShape",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "PlainText"
                                        },
                                        {
                                            "name": "RichText"
                                        },
                                        {
                                            "name": "AutoText"
                                        }
                                    ],
                                    "name": "TextFormat",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "IgnoreAspectRatio"
                                        },
                                        {
                                            "name": "KeepAspectRatio"
                                        },
                                        {
                                            "name": "KeepAspectRatioByExpanding"
                                        }
                                    ],
                                    "name": "AspectRatioMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "LeftDockWidgetArea"
                                        },
                                        {
                                            "name": "RightDockWidgetArea"
                                        },
                                        {
                                            "name": "TopDockWidgetArea"
                                        },
                                        {
                                            "name": "BottomDockWidgetArea"
                                        },
                                        {
                                            "name": "DockWidgetArea_Mask"
                                        },
                                        {
                                            "name": "AllDockWidgetAreas"
                                        },
                                        {
                                            "name": "NoDockWidgetArea"
                                        }
                                    ],
                                    "name": "DockWidgetArea",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NDockWidgetAreas"
                                        }
                                    ],
                                    "name": "DockWidgetAreaSizes",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "LeftToolBarArea"
                                        },
                                        {
                                            "name": "RightToolBarArea"
                                        },
                                        {
                                            "name": "TopToolBarArea"
                                        },
                                        {
                                            "name": "BottomToolBarArea"
                                        },
                                        {
                                            "name": "ToolBarArea_Mask"
                                        },
                                        {
                                            "name": "AllToolBarAreas"
                                        },
                                        {
                                            "name": "NoToolBarArea"
                                        }
                                    ],
                                    "name": "ToolBarArea",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NToolBarAreas"
                                        }
                                    ],
                                    "name": "ToolBarAreaSizes",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "TextDate"
                                        },
                                        {
                                            "name": "ISODate"
                                        },
                                        {
                                            "name": "SystemLocaleDate"
                                        },
                                        {
                                            "name": "LocalDate"
                                        },
                                        {
                                            "name": "LocaleDate"
                                        },
                                        {
                                            "name": "SystemLocaleShortDate"
                                        },
                                        {
                                            "name": "SystemLocaleLongDate"
                                        },
                                        {
                                            "name": "DefaultLocaleShortDate"
                                        },
                                        {
                                            "name": "DefaultLocaleLongDate"
                                        },
                                        {
                                            "name": "RFC2822Date"
                                        },
                                        {
                                            "name": "ISODateWithMs"
                                        }
                                    ],
                                    "name": "DateFormat",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "LocalTime"
                                        },
                                        {
                                            "name": "UTC"
                                        },
                                        {
                                            "name": "OffsetFromUTC"
                                        },
                                        {
                                            "name": "TimeZone"
                                        }
                                    ],
                                    "name": "TimeSpec",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "Monday"
                                        },
                                        {
                                            "name": "Tuesday"
                                        },
                                        {
                                            "name": "Wednesday"
                                        },
                                        {
                                            "name": "Thursday"
                                        },
                                        {
                                            "name": "Friday"
                                        },
                                        {
                                            "name": "Saturday"
                                        },
                                        {
                                            "name": "Sunday"
                                        }
                                    ],
                                    "name": "DayOfWeek",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ScrollBarAsNeeded"
                                        },
                                        {
                                            "name": "ScrollBarAlwaysOff"
                                        },
                                        {
                                            "name": "ScrollBarAlwaysOn"
                                        }
                                    ],
                                    "name": "ScrollBarPolicy",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "CaseInsensitive"
                                        },
                                        {
                                            "name": "CaseSensitive"
                                        }
                                    ],
                                    "name": "CaseSensitivity",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "TopLeftCorner"
                                        },
                                        {
                                            "name": "TopRightCorner"
                                        },
                                        {
                                            "name": "BottomLeftCorner"
                                        },
                                        {
                                            "name": "BottomRightCorner"
                                        }
                                    ],
                                    "name": "Corner",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "TopEdge"
                                        },
                                        {
                                            "name": "LeftEdge"
                                        },
                                        {
                                            "name": "RightEdge"
                                        },
                                        {
                                            "name": "BottomEdge"
                                        }
                                    ],
                                    "name": "Edge",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "AutoConnection"
                                        },
                                        {
                                            "name": "DirectConnection"
                                        },
                                        {
                                            "name": "QueuedConnection"
                                        },
                                        {
                                            "name": "BlockingQueuedConnection"
                                        },
                                        {
                                            "name": "UniqueConnection"
                                        }
                                    ],
                                    "name": "ConnectionType",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "WidgetShortcut"
                                        },
                                        {
                                            "name": "WindowShortcut"
                                        },
                                        {
                                            "name": "ApplicationShortcut"
                                        },
                                        {
                                            "name": "WidgetWithChildrenShortcut"
                                        }
                                    ],
                                    "name": "ShortcutContext",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "OddEvenFill"
                                        },
                                        {
                                            "name": "WindingFill"
                                        }
                                    ],
                                    "name": "FillRule",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "MaskInColor"
                                        },
                                        {
                                            "name": "MaskOutColor"
                                        }
                                    ],
                                    "name": "MaskMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoClip"
                                        },
                                        {
                                            "name": "ReplaceClip"
                                        },
                                        {
                                            "name": "IntersectClip"
                                        }
                                    ],
                                    "name": "ClipOperation",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ContainsItemShape"
                                        },
                                        {
                                            "name": "IntersectsItemShape"
                                        },
                                        {
                                            "name": "ContainsItemBoundingRect"
                                        },
                                        {
                                            "name": "IntersectsItemBoundingRect"
                                        }
                                    ],
                                    "name": "ItemSelectionMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ReplaceSelection"
                                        },
                                        {
                                            "name": "AddToSelection"
                                        }
                                    ],
                                    "name": "ItemSelectionOperation",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "FastTransformation"
                                        },
                                        {
                                            "name": "SmoothTransformation"
                                        }
                                    ],
                                    "name": "TransformationMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "XAxis"
                                        },
                                        {
                                            "name": "YAxis"
                                        },
                                        {
                                            "name": "ZAxis"
                                        }
                                    ],
                                    "name": "Axis",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "MouseFocusReason"
                                        },
                                        {
                                            "name": "TabFocusReason"
                                        },
                                        {
                                            "name": "BacktabFocusReason"
                                        },
                                        {
                                            "name": "ActiveWindowFocusReason"
                                        },
                                        {
                                            "name": "PopupFocusReason"
                                        },
                                        {
                                            "name": "ShortcutFocusReason"
                                        },
                                        {
                                            "name": "MenuBarFocusReason"
                                        },
                                        {
                                            "name": "OtherFocusReason"
                                        },
                                        {
                                            "name": "NoFocusReason"
                                        }
                                    ],
                                    "name": "FocusReason",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoContextMenu"
                                        },
                                        {
                                            "name": "DefaultContextMenu"
                                        },
                                        {
                                            "name": "ActionsContextMenu"
                                        },
                                        {
                                            "name": "CustomContextMenu"
                                        },
                                        {
                                            "name": "PreventContextMenu"
                                        }
                                    ],
                                    "name": "ContextMenuPolicy",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ImEnabled"
                                        },
                                        {
                                            "name": "ImCursorRectangle"
                                        },
                                        {
                                            "name": "ImMicroFocus"
                                        },
                                        {
                                            "name": "ImFont"
                                        },
                                        {
                                            "name": "ImCursorPosition"
                                        },
                                        {
                                            "name": "ImSurroundingText"
                                        },
                                        {
                                            "name": "ImCurrentSelection"
                                        },
                                        {
                                            "name": "ImMaximumTextLength"
                                        },
                                        {
                                            "name": "ImAnchorPosition"
                                        },
                                        {
                                            "name": "ImHints"
                                        },
                                        {
                                            "name": "ImPreferredLanguage"
                                        },
                                        {
                                            "name": "ImAbsolutePosition"
                                        },
                                        {
                                            "name": "ImTextBeforeCursor"
                                        },
                                        {
                                            "name": "ImTextAfterCursor"
                                        },
                                        {
                                            "name": "ImEnterKeyType"
                                        },
                                        {
                                            "name": "ImAnchorRectangle"
                                        },
                                        {
                                            "name": "ImInputItemClipRectangle"
                                        },
                                        {
                                            "name": "ImPlatformData"
                                        },
                                        {
                                            "name": "ImQueryInput"
                                        },
                                        {
                                            "name": "ImQueryAll"
                                        }
                                    ],
                                    "name": "InputMethodQuery",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ImhNone"
                                        },
                                        {
                                            "name": "ImhHiddenText"
                                        },
                                        {
                                            "name": "ImhSensitiveData"
                                        },
                                        {
                                            "name": "ImhNoAutoUppercase"
                                        },
                                        {
                                            "name": "ImhPreferNumbers"
                                        },
                                        {
                                            "name": "ImhPreferUppercase"
                                        },
                                        {
                                            "name": "ImhPreferLowercase"
                                        },
                                        {
                                            "name": "ImhNoPredictiveText"
                                        },
                                        {
                                            "name": "ImhDate"
                                        },
                                        {
                                            "name": "ImhTime"
                                        },
                                        {
                                            "name": "ImhPreferLatin"
                                        },
                                        {
                                            "name": "ImhMultiLine"
                                        },
                                        {
                                            "name": "ImhDigitsOnly"
                                        },
                                        {
                                            "name": "ImhFormattedNumbersOnly"
                                        },
                                        {
                                            "name": "ImhUppercaseOnly"
                                        },
                                        {
                                            "name": "ImhLowercaseOnly"
                                        },
                                        {
                                            "name": "ImhDialableCharactersOnly"
                                        },
                                        {
                                            "name": "ImhEmailCharactersOnly"
                                        },
                                        {
                                            "name": "ImhUrlCharactersOnly"
                                        },
                                        {
                                            "name": "ImhLatinOnly"
                                        },
                                        {
                                            "name": "ImhExclusiveInputMask"
                                        }
                                    ],
                                    "name": "InputMethodHint",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "EnterKeyDefault"
                                        },
                                        {
                                            "name": "EnterKeyReturn"
                                        },
                                        {
                                            "name": "EnterKeyDone"
                                        },
                                        {
                                            "name": "EnterKeyGo"
                                        },
                                        {
                                            "name": "EnterKeySend"
                                        },
                                        {
                                            "name": "EnterKeySearch"
                                        },
                                        {
                                            "name": "EnterKeyNext"
                                        },
                                        {
                                            "name": "EnterKeyPrevious"
                                        }
                                    ],
                                    "name": "EnterKeyType",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ToolButtonIconOnly"
                                        },
                                        {
                                            "name": "ToolButtonTextOnly"
                                        },
                                        {
                                            "name": "ToolButtonTextBesideIcon"
                                        },
                                        {
                                            "name": "ToolButtonTextUnderIcon"
                                        },
                                        {
                                            "name": "ToolButtonFollowStyle"
                                        }
                                    ],
                                    "name": "ToolButtonStyle",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "LeftToRight"
                                        },
                                        {
                                            "name": "RightToLeft"
                                        },
                                        {
                                            "name": "LayoutDirectionAuto"
                                        }
                                    ],
                                    "name": "LayoutDirection",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "AnchorLeft"
                                        },
                                        {
                                            "name": "AnchorHorizontalCenter"
                                        },
                                        {
                                            "name": "AnchorRight"
                                        },
                                        {
                                            "name": "AnchorTop"
                                        },
                                        {
                                            "name": "AnchorVerticalCenter"
                                        },
                                        {
                                            "name": "AnchorBottom"
                                        }
                                    ],
                                    "name": "AnchorPoint",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "FindDirectChildrenOnly"
                                        },
                                        {
                                            "name": "FindChildrenRecursively"
                                        }
                                    ],
                                    "name": "FindChildOption",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "CopyAction"
                                        },
                                        {
                                            "name": "MoveAction"
                                        },
                                        {
                                            "name": "LinkAction"
                                        },
                                        {
                                            "name": "ActionMask"
                                        },
                                        {
                                            "name": "TargetMoveAction"
                                        },
                                        {
                                            "name": "IgnoreAction"
                                        }
                                    ],
                                    "name": "DropAction",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "Unchecked"
                                        },
                                        {
                                            "name": "PartiallyChecked"
                                        },
                                        {
                                            "name": "Checked"
                                        }
                                    ],
                                    "name": "CheckState",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "DisplayRole"
                                        },
                                        {
                                            "name": "DecorationRole"
                                        },
                                        {
                                            "name": "EditRole"
                                        },
                                        {
                                            "name": "ToolTipRole"
                                        },
                                        {
                                            "name": "StatusTipRole"
                                        },
                                        {
                                            "name": "WhatsThisRole"
                                        },
                                        {
                                            "name": "FontRole"
                                        },
                                        {
                                            "name": "TextAlignmentRole"
                                        },
                                        {
                                            "name": "BackgroundColorRole"
                                        },
                                        {
                                            "name": "BackgroundRole"
                                        },
                                        {
                                            "name": "TextColorRole"
                                        },
                                        {
                                            "name": "ForegroundRole"
                                        },
                                        {
                                            "name": "CheckStateRole"
                                        },
                                        {
                                            "name": "AccessibleTextRole"
                                        },
                                        {
                                            "name": "AccessibleDescriptionRole"
                                        },
                                        {
                                            "name": "SizeHintRole"
                                        },
                                        {
                                            "name": "InitialSortOrderRole"
                                        },
                                        {
                                            "name": "DisplayPropertyRole"
                                        },
                                        {
                                            "name": "DecorationPropertyRole"
                                        },
                                        {
                                            "name": "ToolTipPropertyRole"
                                        },
                                        {
                                            "name": "StatusTipPropertyRole"
                                        },
                                        {
                                            "name": "WhatsThisPropertyRole"
                                        },
                                        {
                                            "name": "UserRole"
                                        }
                                    ],
                                    "name": "ItemDataRole",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoItemFlags"
                                        },
                                        {
                                            "name": "ItemIsSelectable"
                                        },
                                        {
                                            "name": "ItemIsEditable"
                                        },
                                        {
                                            "name": "ItemIsDragEnabled"
                                        },
                                        {
                                            "name": "ItemIsDropEnabled"
                                        },
                                        {
                                            "name": "ItemIsUserCheckable"
                                        },
                                        {
                                            "name": "ItemIsEnabled"
                                        },
                                        {
                                            "name": "ItemIsAutoTristate"
                                        },
                                        {
                                            "name": "ItemIsTristate"
                                        },
                                        {
                                            "name": "ItemNeverHasChildren"
                                        },
                                        {
                                            "name": "ItemIsUserTristate"
                                        }
                                    ],
                                    "name": "ItemFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "MatchExactly"
                                        },
                                        {
                                            "name": "MatchContains"
                                        },
                                        {
                                            "name": "MatchStartsWith"
                                        },
                                        {
                                            "name": "MatchEndsWith"
                                        },
                                        {
                                            "name": "MatchRegExp"
                                        },
                                        {
                                            "name": "MatchWildcard"
                                        },
                                        {
                                            "name": "MatchFixedString"
                                        },
                                        {
                                            "name": "MatchCaseSensitive"
                                        },
                                        {
                                            "name": "MatchWrap"
                                        },
                                        {
                                            "name": "MatchRecursive"
                                        }
                                    ],
                                    "name": "MatchFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NonModal"
                                        },
                                        {
                                            "name": "WindowModal"
                                        },
                                        {
                                            "name": "ApplicationModal"
                                        }
                                    ],
                                    "name": "WindowModality",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoTextInteraction"
                                        },
                                        {
                                            "name": "TextSelectableByMouse"
                                        },
                                        {
                                            "name": "TextSelectableByKeyboard"
                                        },
                                        {
                                            "name": "LinksAccessibleByMouse"
                                        },
                                        {
                                            "name": "LinksAccessibleByKeyboard"
                                        },
                                        {
                                            "name": "TextEditable"
                                        },
                                        {
                                            "name": "TextEditorInteraction"
                                        },
                                        {
                                            "name": "TextBrowserInteraction"
                                        }
                                    ],
                                    "name": "TextInteractionFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "HighEventPriority"
                                        },
                                        {
                                            "name": "NormalEventPriority"
                                        },
                                        {
                                            "name": "LowEventPriority"
                                        }
                                    ],
                                    "name": "EventPriority",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "MinimumSize"
                                        },
                                        {
                                            "name": "PreferredSize"
                                        },
                                        {
                                            "name": "MaximumSize"
                                        },
                                        {
                                            "name": "MinimumDescent"
                                        },
                                        {
                                            "name": "NSizeHints"
                                        }
                                    ],
                                    "name": "SizeHint",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoSection"
                                        },
                                        {
                                            "name": "LeftSection"
                                        },
                                        {
                                            "name": "TopLeftSection"
                                        },
                                        {
                                            "name": "TopSection"
                                        },
                                        {
                                            "name": "TopRightSection"
                                        },
                                        {
                                            "name": "RightSection"
                                        },
                                        {
                                            "name": "BottomRightSection"
                                        },
                                        {
                                            "name": "BottomSection"
                                        },
                                        {
                                            "name": "BottomLeftSection"
                                        },
                                        {
                                            "name": "TitleBarArea"
                                        }
                                    ],
                                    "name": "WindowFrameSection",
                                    "type": "enum"
                                },
                                {
                                    "cppenumclass": true,
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "Uninitialized"
                                        }
                                    ],
                                    "name": "Initialization",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "DeviceCoordinates"
                                        },
                                        {
                                            "name": "LogicalCoordinates"
                                        }
                                    ],
                                    "name": "CoordinateSystem",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "TouchPointPressed"
                                        },
                                        {
                                            "name": "TouchPointMoved"
                                        },
                                        {
                                            "name": "TouchPointStationary"
                                        },
                                        {
                                            "name": "TouchPointReleased"
                                        }
                                    ],
                                    "name": "TouchPointState",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoGesture"
                                        },
                                        {
                                            "name": "GestureStarted"
                                        },
                                        {
                                            "name": "GestureUpdated"
                                        },
                                        {
                                            "name": "GestureFinished"
                                        },
                                        {
                                            "name": "GestureCanceled"
                                        }
                                    ],
                                    "name": "GestureState",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "TapGesture"
                                        },
                                        {
                                            "name": "TapAndHoldGesture"
                                        },
                                        {
                                            "name": "PanGesture"
                                        },
                                        {
                                            "name": "PinchGesture"
                                        },
                                        {
                                            "name": "SwipeGesture"
                                        },
                                        {
                                            "name": "CustomGesture"
                                        },
                                        {
                                            "name": "LastGestureType"
                                        }
                                    ],
                                    "name": "GestureType",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "DontStartGestureOnChildren"
                                        },
                                        {
                                            "name": "ReceivePartialGestures"
                                        },
                                        {
                                            "name": "IgnoredGesturesPropagateToParent"
                                        }
                                    ],
                                    "name": "GestureFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "BeginNativeGesture"
                                        },
                                        {
                                            "name": "EndNativeGesture"
                                        },
                                        {
                                            "name": "PanNativeGesture"
                                        },
                                        {
                                            "name": "ZoomNativeGesture"
                                        },
                                        {
                                            "name": "SmartZoomNativeGesture"
                                        },
                                        {
                                            "name": "RotateNativeGesture"
                                        },
                                        {
                                            "name": "SwipeNativeGesture"
                                        }
                                    ],
                                    "name": "NativeGestureType",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NavigationModeNone"
                                        },
                                        {
                                            "name": "NavigationModeKeypadTabOrder"
                                        },
                                        {
                                            "name": "NavigationModeKeypadDirectional"
                                        },
                                        {
                                            "name": "NavigationModeCursorAuto"
                                        },
                                        {
                                            "name": "NavigationModeCursorForceVisible"
                                        }
                                    ],
                                    "name": "NavigationMode",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "LogicalMoveStyle"
                                        },
                                        {
                                            "name": "VisualMoveStyle"
                                        }
                                    ],
                                    "name": "CursorMoveStyle",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "PreciseTimer"
                                        },
                                        {
                                            "name": "CoarseTimer"
                                        },
                                        {
                                            "name": "VeryCoarseTimer"
                                        }
                                    ],
                                    "name": "TimerType",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "NoScrollPhase"
                                        },
                                        {
                                            "name": "ScrollBegin"
                                        },
                                        {
                                            "name": "ScrollUpdate"
                                        },
                                        {
                                            "name": "ScrollEnd"
                                        }
                                    ],
                                    "name": "ScrollPhase",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "MouseEventNotSynthesized"
                                        },
                                        {
                                            "name": "MouseEventSynthesizedBySystem"
                                        },
                                        {
                                            "name": "MouseEventSynthesizedByQt"
                                        },
                                        {
                                            "name": "MouseEventSynthesizedByApplication"
                                        }
                                    ],
                                    "name": "MouseEventSource",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "MouseEventCreatedDoubleClick"
                                        },
                                        {
                                            "name": "MouseEventFlagMask"
                                        }
                                    ],
                                    "name": "MouseEventFlag",
                                    "type": "enum"
                                },
                                {
                                    "enumclass": true,
                                    "enumerators": [
                                        {
                                            "name": "ChecksumIso3309"
                                        },
                                        {
                                            "name": "ChecksumItuV41"
                                        }
                                    ],
                                    "name": "ChecksumType",
                                    "type": "enum"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ScrollBarPolicy"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ScrollBarPolicy"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::FocusPolicy"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::FocusPolicy"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ContextMenuPolicy"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ContextMenuPolicy"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ArrowType"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ArrowType"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ToolButtonStyle"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ToolButtonStyle"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::PenStyle"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::PenStyle"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::PenCapStyle"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::PenCapStyle"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::PenJoinStyle"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::PenJoinStyle"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::BrushStyle"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::BrushStyle"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::FillRule"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::FillRule"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::MaskMode"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::MaskMode"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::BGMode"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::BGMode"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ClipOperation"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ClipOperation"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::SizeMode"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::SizeMode"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::Axis"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::Axis"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::Corner"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::Corner"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::Edge"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::Edge"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::LayoutDirection"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::LayoutDirection"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::SizeHint"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::SizeHint"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::Orientation"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::Orientation"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::DropAction"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::DropAction"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::Alignment"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::Alignment"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::TextFlag"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::TextFlag"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::Orientations"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::Orientations"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::DropActions"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::DropActions"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::Edges"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::Edges"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::DockWidgetAreas"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::DockWidgetAreas"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ToolBarAreas"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ToolBarAreas"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::DockWidgetArea"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::DockWidgetArea"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ToolBarArea"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ToolBarArea"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::TextFormat"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::TextFormat"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::TextElideMode"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::TextElideMode"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::DateFormat"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::DateFormat"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::TimeSpec"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::TimeSpec"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::DayOfWeek"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::DayOfWeek"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::CursorShape"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::CursorShape"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::GlobalColor"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::GlobalColor"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::AspectRatioMode"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::AspectRatioMode"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::Key"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::Key"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ShortcutContext"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ShortcutContext"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::TextInteractionFlag"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::TextInteractionFlag"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::TextInteractionFlags"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::TextInteractionFlags"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ItemSelectionMode"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ItemSelectionMode"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ItemSelectionOperation"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ItemSelectionOperation"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ItemFlags"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ItemFlags"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::CheckState"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::CheckState"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ItemDataRole"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ItemDataRole"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::SortOrder"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::SortOrder"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::CaseSensitivity"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::CaseSensitivity"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::MatchFlags"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::MatchFlags"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::KeyboardModifiers"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::KeyboardModifiers"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::MouseButtons"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::MouseButtons"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::WindowType"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::WindowType"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::WindowState"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::WindowState"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::WindowModality"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::WindowModality"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::WidgetAttribute"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::WidgetAttribute"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ApplicationAttribute"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ApplicationAttribute"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::WindowFlags"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::WindowFlags"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::WindowStates"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::WindowStates"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::FocusReason"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::FocusReason"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::InputMethodHint"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::InputMethodHint"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::InputMethodQuery"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::InputMethodQuery"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::InputMethodHints"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::InputMethodHints"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::EnterKeyType"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::EnterKeyType"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::InputMethodQueries"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::InputMethodQueries"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::TouchPointStates"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::TouchPointStates"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ScreenOrientation"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ScreenOrientation"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ScreenOrientations"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ScreenOrientations"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ConnectionType"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ConnectionType"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ApplicationState"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ApplicationState"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::GestureState"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::GestureState"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::GestureType"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::GestureType"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::NativeGestureType"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::NativeGestureType"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::CursorMoveStyle"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::CursorMoveStyle"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::TimerType"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::TimerType"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ScrollPhase"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ScrollPhase"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::MouseEventSource"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::MouseEventSource"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::MouseEventFlag"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::MouseEventFlag"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::ChecksumType"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::ChecksumType"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumMetaObject",
                                    "parameters": [
                                        "Qt::TabFocusBehavior"
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "qt_getEnumName",
                                    "parameters": [
                                        "Qt::TabFocusBehavior"
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                }
                            ],
                            "name": "Qt",
                            "rename": "@",
                            "type": "namespace"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::MouseButtons::enum_type",
                                "Qt::MouseButtons::enum_type"
                            ],
                            "returns": "QFlags<Qt::MouseButtons::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::MouseButtons::enum_type",
                                "QFlags<Qt::MouseButtons::enum_type>"
                            ],
                            "returns": "QFlags<Qt::MouseButtons::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::MouseButtons::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::Orientations::enum_type",
                                "Qt::Orientations::enum_type"
                            ],
                            "returns": "QFlags<Qt::Orientations::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::Orientations::enum_type",
                                "QFlags<Qt::Orientations::enum_type>"
                            ],
                            "returns": "QFlags<Qt::Orientations::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::Orientations::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::KeyboardModifiers::enum_type",
                                "Qt::KeyboardModifiers::enum_type"
                            ],
                            "returns": "QFlags<Qt::KeyboardModifiers::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::KeyboardModifiers::enum_type",
                                "QFlags<Qt::KeyboardModifiers::enum_type>"
                            ],
                            "returns": "QFlags<Qt::KeyboardModifiers::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::KeyboardModifiers::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::WindowFlags::enum_type",
                                "Qt::WindowFlags::enum_type"
                            ],
                            "returns": "QFlags<Qt::WindowFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::WindowFlags::enum_type",
                                "QFlags<Qt::WindowFlags::enum_type>"
                            ],
                            "returns": "QFlags<Qt::WindowFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::WindowFlags::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::Alignment::enum_type",
                                "Qt::Alignment::enum_type"
                            ],
                            "returns": "QFlags<Qt::Alignment::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::Alignment::enum_type",
                                "QFlags<Qt::Alignment::enum_type>"
                            ],
                            "returns": "QFlags<Qt::Alignment::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::Alignment::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::Edges::enum_type",
                                "Qt::Edges::enum_type"
                            ],
                            "returns": "QFlags<Qt::Edges::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::Edges::enum_type",
                                "QFlags<Qt::Edges::enum_type>"
                            ],
                            "returns": "QFlags<Qt::Edges::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::Edges::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ImageConversionFlags::enum_type",
                                "Qt::ImageConversionFlags::enum_type"
                            ],
                            "returns": "QFlags<Qt::ImageConversionFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ImageConversionFlags::enum_type",
                                "QFlags<Qt::ImageConversionFlags::enum_type>"
                            ],
                            "returns": "QFlags<Qt::ImageConversionFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ImageConversionFlags::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::DockWidgetAreas::enum_type",
                                "Qt::DockWidgetAreas::enum_type"
                            ],
                            "returns": "QFlags<Qt::DockWidgetAreas::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::DockWidgetAreas::enum_type",
                                "QFlags<Qt::DockWidgetAreas::enum_type>"
                            ],
                            "returns": "QFlags<Qt::DockWidgetAreas::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::DockWidgetAreas::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ToolBarAreas::enum_type",
                                "Qt::ToolBarAreas::enum_type"
                            ],
                            "returns": "QFlags<Qt::ToolBarAreas::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ToolBarAreas::enum_type",
                                "QFlags<Qt::ToolBarAreas::enum_type>"
                            ],
                            "returns": "QFlags<Qt::ToolBarAreas::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ToolBarAreas::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::WindowStates::enum_type",
                                "Qt::WindowStates::enum_type"
                            ],
                            "returns": "QFlags<Qt::WindowStates::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::WindowStates::enum_type",
                                "QFlags<Qt::WindowStates::enum_type>"
                            ],
                            "returns": "QFlags<Qt::WindowStates::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::WindowStates::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ScreenOrientations::enum_type",
                                "Qt::ScreenOrientations::enum_type"
                            ],
                            "returns": "QFlags<Qt::ScreenOrientations::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ScreenOrientations::enum_type",
                                "QFlags<Qt::ScreenOrientations::enum_type>"
                            ],
                            "returns": "QFlags<Qt::ScreenOrientations::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ScreenOrientations::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::DropActions::enum_type",
                                "Qt::DropActions::enum_type"
                            ],
                            "returns": "QFlags<Qt::DropActions::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::DropActions::enum_type",
                                "QFlags<Qt::DropActions::enum_type>"
                            ],
                            "returns": "QFlags<Qt::DropActions::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::DropActions::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ItemFlags::enum_type",
                                "Qt::ItemFlags::enum_type"
                            ],
                            "returns": "QFlags<Qt::ItemFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ItemFlags::enum_type",
                                "QFlags<Qt::ItemFlags::enum_type>"
                            ],
                            "returns": "QFlags<Qt::ItemFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::ItemFlags::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::MatchFlags::enum_type",
                                "Qt::MatchFlags::enum_type"
                            ],
                            "returns": "QFlags<Qt::MatchFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::MatchFlags::enum_type",
                                "QFlags<Qt::MatchFlags::enum_type>"
                            ],
                            "returns": "QFlags<Qt::MatchFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::MatchFlags::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::TextInteractionFlags::enum_type",
                                "Qt::TextInteractionFlags::enum_type"
                            ],
                            "returns": "QFlags<Qt::TextInteractionFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::TextInteractionFlags::enum_type",
                                "QFlags<Qt::TextInteractionFlags::enum_type>"
                            ],
                            "returns": "QFlags<Qt::TextInteractionFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::TextInteractionFlags::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::InputMethodQueries::enum_type",
                                "Qt::InputMethodQueries::enum_type"
                            ],
                            "returns": "QFlags<Qt::InputMethodQueries::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::InputMethodQueries::enum_type",
                                "QFlags<Qt::InputMethodQueries::enum_type>"
                            ],
                            "returns": "QFlags<Qt::InputMethodQueries::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::InputMethodQueries::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::InputMethodHints::enum_type",
                                "Qt::InputMethodHints::enum_type"
                            ],
                            "returns": "QFlags<Qt::InputMethodHints::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::InputMethodHints::enum_type",
                                "QFlags<Qt::InputMethodHints::enum_type>"
                            ],
                            "returns": "QFlags<Qt::InputMethodHints::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::InputMethodHints::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::TouchPointStates::enum_type",
                                "Qt::TouchPointStates::enum_type"
                            ],
                            "returns": "QFlags<Qt::TouchPointStates::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::TouchPointStates::enum_type",
                                "QFlags<Qt::TouchPointStates::enum_type>"
                            ],
                            "returns": "QFlags<Qt::TouchPointStates::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::TouchPointStates::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::MouseEventFlags::enum_type",
                                "Qt::MouseEventFlags::enum_type"
                            ],
                            "returns": "QFlags<Qt::MouseEventFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::MouseEventFlags::enum_type",
                                "QFlags<Qt::MouseEventFlags::enum_type>"
                            ],
                            "returns": "QFlags<Qt::MouseEventFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::MouseEventFlags::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::GestureFlags::enum_type",
                                "Qt::GestureFlags::enum_type"
                            ],
                            "returns": "QFlags<Qt::GestureFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::GestureFlags::enum_type",
                                "QFlags<Qt::GestureFlags::enum_type>"
                            ],
                            "returns": "QFlags<Qt::GestureFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "Qt::GestureFlags::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<Qt>",
                    "name": "enums",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QPoint",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPoint",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPoint",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "manhattanLength",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "rx",
                                    "parameters": [
                                    ],
                                    "returns": "int &",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "ry",
                                    "parameters": [
                                    ],
                                    "returns": "int &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "QPoint &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "QPoint &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "float"
                                    ],
                                    "returns": "QPoint &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "double"
                                    ],
                                    "returns": "QPoint &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QPoint &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QPoint &",
                                    "type": "function"
                                },
                                {
                                    "name": "dotProduct",
                                    "parameters": [
                                        "const QPoint &",
                                        "const QPoint &"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QPoint",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QPoint &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QPoint &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QPoint &",
                                "const QPoint &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QPoint &",
                                "const QPoint &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QPoint &",
                                "const QPoint &"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QPoint &",
                                "const QPoint &"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QPoint &",
                                "float"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QPoint &",
                                "double"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QPoint &",
                                "int"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "float",
                                "const QPoint &"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "double",
                                "const QPoint &"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "int",
                                "const QPoint &"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QPoint &"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QPoint &"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QPoint &",
                                "qreal"
                            ],
                            "returns": "const QPoint",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QPoint &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QPointF",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPointF",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPointF",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPointF",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "manhattanLength",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "rx",
                                    "parameters": [
                                    ],
                                    "returns": "qreal &",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "ry",
                                    "parameters": [
                                    ],
                                    "returns": "qreal &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "QPointF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "QPointF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QPointF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QPointF &",
                                    "type": "function"
                                },
                                {
                                    "name": "dotProduct",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QPointF &"
                                    ],
                                    "returns": "qreal",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPoint",
                                    "parameters": [
                                    ],
                                    "returns": "QPoint",
                                    "type": "function"
                                }
                            ],
                            "name": "QPointF",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QPointF &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QPointF &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QPointF &",
                                "const QPointF &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QPointF &",
                                "const QPointF &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QPointF &",
                                "const QPointF &"
                            ],
                            "returns": "const QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QPointF &",
                                "const QPointF &"
                            ],
                            "returns": "const QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QPointF &",
                                "qreal"
                            ],
                            "returns": "const QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "qreal",
                                "const QPointF &"
                            ],
                            "returns": "const QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QPointF &"
                            ],
                            "returns": "const QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QPointF &"
                            ],
                            "returns": "const QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QPointF &",
                                "qreal"
                            ],
                            "returns": "const QPointF",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QPointF &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QPoint>",
                    "name": "point",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QSize",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSize",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "returns": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QSize",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QSize",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setWidth",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setHeight",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "transpose",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transposed",
                                    "parameters": [
                                    ],
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "name": "scale",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "Qt::AspectRatioMode"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "scale",
                                    "parameters": [
                                        "const QSize &",
                                        "Qt::AspectRatioMode"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaled",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "Qt::AspectRatioMode"
                                    ],
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaled",
                                    "parameters": [
                                        "const QSize &",
                                        "Qt::AspectRatioMode"
                                    ],
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "expandedTo",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundedTo",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "rwidth",
                                    "parameters": [
                                    ],
                                    "returns": "int &",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "rheight",
                                    "parameters": [
                                    ],
                                    "returns": "int &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "returns": "QSize &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "returns": "QSize &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QSize &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QSize &",
                                    "type": "function"
                                }
                            ],
                            "name": "QSize",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QSize &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QSize &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QSize &",
                                "const QSize &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QSize &",
                                "const QSize &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QSize &",
                                "const QSize &"
                            ],
                            "returns": "const QSize",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QSize &",
                                "const QSize &"
                            ],
                            "returns": "const QSize",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QSize &",
                                "qreal"
                            ],
                            "returns": "const QSize",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "qreal",
                                "const QSize &"
                            ],
                            "returns": "const QSize",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QSize &",
                                "qreal"
                            ],
                            "returns": "const QSize",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QSize &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QSizeF",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSizeF",
                                    "parameters": [
                                        "const QSizeF &"
                                    ],
                                    "returns": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSizeF",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSizeF",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QSizeF",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setWidth",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setHeight",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "transpose",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transposed",
                                    "parameters": [
                                    ],
                                    "returns": "QSizeF",
                                    "type": "function"
                                },
                                {
                                    "name": "scale",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "Qt::AspectRatioMode"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "scale",
                                    "parameters": [
                                        "const QSizeF &",
                                        "Qt::AspectRatioMode"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaled",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "Qt::AspectRatioMode"
                                    ],
                                    "returns": "QSizeF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaled",
                                    "parameters": [
                                        "const QSizeF &",
                                        "Qt::AspectRatioMode"
                                    ],
                                    "returns": "QSizeF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "expandedTo",
                                    "parameters": [
                                        "const QSizeF &"
                                    ],
                                    "returns": "QSizeF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundedTo",
                                    "parameters": [
                                        "const QSizeF &"
                                    ],
                                    "returns": "QSizeF",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "rwidth",
                                    "parameters": [
                                    ],
                                    "returns": "qreal &",
                                    "type": "function"
                                },
                                {
                                    "binding": "reference",
                                    "name": "rheight",
                                    "parameters": [
                                    ],
                                    "returns": "qreal &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QSizeF &"
                                    ],
                                    "returns": "QSizeF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QSizeF &"
                                    ],
                                    "returns": "QSizeF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QSizeF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QSizeF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toSize",
                                    "parameters": [
                                    ],
                                    "returns": "QSize",
                                    "type": "function"
                                }
                            ],
                            "name": "QSizeF",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QSizeF &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QSizeF &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QSizeF &",
                                "const QSizeF &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QSizeF &",
                                "const QSizeF &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QSizeF &",
                                "const QSizeF &"
                            ],
                            "returns": "const QSizeF",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QSizeF &",
                                "const QSizeF &"
                            ],
                            "returns": "const QSizeF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QSizeF &",
                                "qreal"
                            ],
                            "returns": "const QSizeF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "qreal",
                                "const QSizeF &"
                            ],
                            "returns": "const QSizeF",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QSizeF &",
                                "qreal"
                            ],
                            "returns": "const QSizeF",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QSizeF &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QSize>",
                    "name": "size",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QRect",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRect",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QRect",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QRect",
                                    "parameters": [
                                        "const QPoint &",
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRect",
                                    "parameters": [
                                        "const QPoint &",
                                        "const QSize &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRect",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "left",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "top",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "right",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottom",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "normalized",
                                    "parameters": [
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setLeft",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTop",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRight",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBottom",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTopLeft",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBottomRight",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTopRight",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBottomLeft",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "topLeft",
                                    "parameters": [
                                    ],
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottomRight",
                                    "parameters": [
                                    ],
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "topRight",
                                    "parameters": [
                                    ],
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottomLeft",
                                    "parameters": [
                                    ],
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "center",
                                    "parameters": [
                                    ],
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "name": "moveLeft",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTop",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveRight",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveBottom",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTopLeft",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveBottomRight",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTopRight",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveBottomLeft",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveCenter",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transposed",
                                    "parameters": [
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTo",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTo",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRect",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getRect",
                                    "parameters": [
                                        "int *",
                                        "int *",
                                        "int *",
                                        "int *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setCoords",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getCoords",
                                    "parameters": [
                                        "int *",
                                        "int *",
                                        "int *",
                                        "int *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "adjust",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "adjusted",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "parameters": [
                                    ],
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setWidth",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setHeight",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setSize",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator|",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator&",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "operator|=",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QRect &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator&=",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QRect &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "const QRect &",
                                        "bool"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "const QPoint &",
                                        "bool"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "bool"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "united",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersected",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersects",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "marginsAdded",
                                    "parameters": [
                                        "const QMargins &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "marginsRemoved",
                                    "parameters": [
                                        "const QMargins &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QMargins &"
                                    ],
                                    "returns": "QRect &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QMargins &"
                                    ],
                                    "returns": "QRect &",
                                    "type": "function"
                                }
                            ],
                            "name": "QRect",
                            "type": "class"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QRect &",
                                "const QRect &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QRect &",
                                "const QRect &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QRect &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QRect &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QRect &",
                                "const QRect &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QRect &",
                                "const QRect &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QRect &",
                                "const QMargins &"
                            ],
                            "returns": "QRect",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QMargins &",
                                "const QRect &"
                            ],
                            "returns": "QRect",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QRect &",
                                "const QMargins &"
                            ],
                            "returns": "QRect",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QRect &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QRectF",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRectF",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "returns": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QRectF",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QRectF",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QSizeF &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRectF",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QPointF &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRectF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRectF",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "normalized",
                                    "parameters": [
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "left",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "top",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "right",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottom",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setLeft",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTop",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRight",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBottom",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setX",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setY",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "topLeft",
                                    "parameters": [
                                    ],
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottomRight",
                                    "parameters": [
                                    ],
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "topRight",
                                    "parameters": [
                                    ],
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottomLeft",
                                    "parameters": [
                                    ],
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "center",
                                    "parameters": [
                                    ],
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "name": "setTopLeft",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBottomRight",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTopRight",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBottomLeft",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveLeft",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTop",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveRight",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveBottom",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTopLeft",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveBottomRight",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTopRight",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveBottomLeft",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveCenter",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transposed",
                                    "parameters": [
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTo",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "moveTo",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRect",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getRect",
                                    "parameters": [
                                        "qreal *",
                                        "qreal *",
                                        "qreal *",
                                        "qreal *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setCoords",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getCoords",
                                    "parameters": [
                                        "qreal *",
                                        "qreal *",
                                        "qreal *",
                                        "qreal *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "adjust",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "adjusted",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "parameters": [
                                    ],
                                    "returns": "QSizeF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setWidth",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setHeight",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setSize",
                                    "parameters": [
                                        "const QSizeF &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator|",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator&",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "name": "operator|=",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "returns": "QRectF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator&=",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "returns": "QRectF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "united",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersected",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersects",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "marginsAdded",
                                    "parameters": [
                                        "const QMarginsF &"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "marginsRemoved",
                                    "parameters": [
                                        "const QMarginsF &"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QMarginsF &"
                                    ],
                                    "returns": "QRectF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QMarginsF &"
                                    ],
                                    "returns": "QRectF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRect",
                                    "parameters": [
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toAlignedRect",
                                    "parameters": [
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                }
                            ],
                            "name": "QRectF",
                            "type": "class"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QRectF &",
                                "const QRectF &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QRectF &",
                                "const QRectF &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QRectF &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QRectF &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QRectF &",
                                "const QRectF &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QRectF &",
                                "const QRectF &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QRectF &",
                                "const QMarginsF &"
                            ],
                            "returns": "QRectF",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QMarginsF &",
                                "const QRectF &"
                            ],
                            "returns": "QRectF",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QRectF &",
                                "const QMarginsF &"
                            ],
                            "returns": "QRectF",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QRectF &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QRect>",
                    "name": "rect",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QMargins",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QMargins",
                                    "parameters": [
                                        "const QMargins &"
                                    ],
                                    "returns": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QMargins",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QMargins",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "left",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "top",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "right",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottom",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setLeft",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTop",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRight",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBottom",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QMargins &"
                                    ],
                                    "returns": "QMargins &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QMargins &"
                                    ],
                                    "returns": "QMargins &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QMargins &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QMargins &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QMargins &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QMargins &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QMargins &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QMargins &",
                                    "type": "function"
                                }
                            ],
                            "name": "QMargins",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QMargins &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QMargins &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QMargins &",
                                "const QMargins &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QMargins &",
                                "const QMargins &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QMargins &",
                                "const QMargins &"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QMargins &",
                                "const QMargins &"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QMargins &",
                                "int"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "int",
                                "const QMargins &"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QMargins &",
                                "int"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QMargins &",
                                "int"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "int",
                                "const QMargins &"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QMargins &",
                                "qreal"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "qreal",
                                "const QMargins &"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QMargins &",
                                "int"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QMargins &",
                                "qreal"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QMargins &"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QMargins &"
                            ],
                            "returns": "QMargins",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QMargins &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QMarginsF",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QMargins",
                                    "parameters": [
                                        "const QMargins &"
                                    ],
                                    "returns": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QMarginsF",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QMarginsF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QMarginsF",
                                    "parameters": [
                                        "const QMargins &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "left",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "top",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "right",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bottom",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setLeft",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTop",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRight",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBottom",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "const QMarginsF &"
                                    ],
                                    "returns": "QMarginsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "const QMarginsF &"
                                    ],
                                    "returns": "QMarginsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator+=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QMarginsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator-=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QMarginsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator*=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QMarginsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator/=",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QMarginsF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toMargins",
                                    "parameters": [
                                    ],
                                    "returns": "QMargins",
                                    "type": "function"
                                }
                            ],
                            "name": "QMarginsF",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QMarginsF &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QMarginsF &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QMarginsF &",
                                "const QMarginsF &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QMarginsF &",
                                "const QMarginsF &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QMarginsF &",
                                "const QMarginsF &"
                            ],
                            "returns": "QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QMarginsF &",
                                "const QMarginsF &"
                            ],
                            "returns": "QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QMarginsF &",
                                "qreal"
                            ],
                            "returns": "QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "qreal",
                                "const QMarginsF &"
                            ],
                            "returns": "QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QMarginsF &",
                                "qreal"
                            ],
                            "returns": "QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "const QMarginsF &",
                                "qreal"
                            ],
                            "returns": "QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator*",
                            "parameters": [
                                "qreal",
                                "const QMarginsF &"
                            ],
                            "returns": "QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator/",
                            "parameters": [
                                "const QMarginsF &",
                                "qreal"
                            ],
                            "returns": "QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator+",
                            "parameters": [
                                "const QMarginsF &"
                            ],
                            "returns": "QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator-",
                            "parameters": [
                                "const QMarginsF &"
                            ],
                            "returns": "QMarginsF",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QMarginsF &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QMargins>",
                    "name": "margins",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "DateFormat"
                                        },
                                        {
                                            "name": "StandaloneFormat"
                                        }
                                    ],
                                    "name": "MonthNameType",
                                    "type": "enum"
                                },
                                {
                                    "name": "QDate",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDate",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "returns": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDate",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QDate",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "year",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "month",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "day",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dayOfWeek",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dayOfYear",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "daysInMonth",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "daysInYear",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "weekNumber",
                                    "parameters": [
                                        "int *"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "shortMonthName",
                                    "parameters": [
                                        "int",
                                        "QDate::MonthNameType"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "shortDayName",
                                    "parameters": [
                                        "int",
                                        "QDate::MonthNameType"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "longMonthName",
                                    "parameters": [
                                        "int",
                                        "QDate::MonthNameType"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "longDayName",
                                    "parameters": [
                                        "int",
                                        "QDate::MonthNameType"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "Qt::DateFormat"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setDate",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "getDate",
                                    "parameters": [
                                        "int *",
                                        "int *",
                                        "int *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getDate",
                                    "parameters": [
                                        "int *",
                                        "int *",
                                        "int *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addDays",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addMonths",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addYears",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "daysTo",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "returns": "QDate &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<=",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>=",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "currentDate",
                                    "parameters": [
                                    ],
                                    "returns": "QDate",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromString",
                                    "parameters": [
                                        "const QString &",
                                        "Qt::DateFormat"
                                    ],
                                    "returns": "QDate",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromString",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "QDate",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isValid",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isLeapYear",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromJulianDay",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "QDate",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toJulianDay",
                                    "parameters": [
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                }
                            ],
                            "name": "QDate",
                            "type": "class"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QTime",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTime",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "returns": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QTime",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QTime",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hour",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minute",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "second",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "msec",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "Qt::DateFormat"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setHMS",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addSecs",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "secsTo",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addMSecs",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "msecsTo",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "returns": "QTime &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<=",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>=",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "fromMSecsSinceStartOfDay",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "msecsSinceStartOfDay",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "currentTime",
                                    "parameters": [
                                    ],
                                    "returns": "QTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromString",
                                    "parameters": [
                                        "const QString &",
                                        "Qt::DateFormat"
                                    ],
                                    "returns": "QTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromString",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "QTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isValid",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "start",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "restart",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "elapsed",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                }
                            ],
                            "name": "QTime",
                            "type": "class"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QDateTime",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateTime",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateTime",
                                    "parameters": [
                                        "const QDate &",
                                        "const QTime &",
                                        "Qt::TimeSpec"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateTime",
                                    "parameters": [
                                        "const QDate &",
                                        "const QTime &",
                                        "Qt::TimeSpec",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateTime",
                                    "parameters": [
                                        "const QDate &",
                                        "const QTime &",
                                        "const QTimeZone &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateTime",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDateTime",
                                    "parameters": [
                                        "QDateTime &&"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDateTime",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QDateTime &&"
                                    ],
                                    "returns": "QDateTime &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "QDateTime &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QDateTime &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "date",
                                    "parameters": [
                                    ],
                                    "returns": "QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "time",
                                    "parameters": [
                                    ],
                                    "returns": "QTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "timeSpec",
                                    "parameters": [
                                    ],
                                    "returns": "Qt::TimeSpec",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "offsetFromUtc",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "timeZone",
                                    "parameters": [
                                    ],
                                    "returns": "QTimeZone",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "timeZoneAbbreviation",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDaylightTime",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toMSecsSinceEpoch",
                                    "parameters": [
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toSecsSinceEpoch",
                                    "parameters": [
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "setDate",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTime",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTimeSpec",
                                    "parameters": [
                                        "Qt::TimeSpec"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setOffsetFromUtc",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setTimeZone",
                                    "parameters": [
                                        "const QTimeZone &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setMSecsSinceEpoch",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setSecsSinceEpoch",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "Qt::DateFormat"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addDays",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addMonths",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addYears",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addSecs",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "addMSecs",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toTimeSpec",
                                    "parameters": [
                                        "Qt::TimeSpec"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLocalTime",
                                    "parameters": [
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUTC",
                                    "parameters": [
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toOffsetFromUtc",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toTimeZone",
                                    "parameters": [
                                        "const QTimeZone &"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "daysTo",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "secsTo",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "msecsTo",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<=",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>=",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setUtcOffset",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "utcOffset",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "currentDateTime",
                                    "parameters": [
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "currentDateTimeUtc",
                                    "parameters": [
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromString",
                                    "parameters": [
                                        "const QString &",
                                        "Qt::DateFormat"
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromString",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toTime_t",
                                    "parameters": [
                                    ],
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "name": "setTime_t",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "fromTime_t",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromTime_t",
                                    "parameters": [
                                        "uint",
                                        "Qt::TimeSpec",
                                        "int"
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromTime_t",
                                    "parameters": [
                                        "uint",
                                        "const QTimeZone &"
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromMSecsSinceEpoch",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromMSecsSinceEpoch",
                                    "parameters": [
                                        "qint64",
                                        "Qt::TimeSpec",
                                        "int"
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromSecsSinceEpoch",
                                    "parameters": [
                                        "qint64",
                                        "Qt::TimeSpec",
                                        "int"
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromMSecsSinceEpoch",
                                    "parameters": [
                                        "qint64",
                                        "const QTimeZone &"
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromSecsSinceEpoch",
                                    "parameters": [
                                        "qint64",
                                        "const QTimeZone &"
                                    ],
                                    "returns": "QDateTime",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "currentMSecsSinceEpoch",
                                    "parameters": [
                                    ],
                                    "returns": "qint64",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "currentSecsSinceEpoch",
                                    "parameters": [
                                    ],
                                    "returns": "qint64",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QDateTime",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QDateTime &",
                                "QDateTime &"
                            ],
                            "returns": "void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QDate &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QDate &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QTime &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QTime &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QDateTime &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QDateTime &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QDate &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QTime &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QDateTime &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "qHash",
                            "parameters": [
                                "const QDateTime &",
                                "uint"
                            ],
                            "returns": "uint",
                            "type": "function"
                        },
                        {
                            "name": "qHash",
                            "parameters": [
                                "const QDate &",
                                "uint"
                            ],
                            "returns": "uint",
                            "type": "function"
                        },
                        {
                            "name": "qHash",
                            "parameters": [
                                "const QTime &",
                                "uint"
                            ],
                            "returns": "uint",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QDateTime>",
                    "name": "datetime",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Dirs"
                                        },
                                        {
                                            "name": "Files"
                                        },
                                        {
                                            "name": "Drives"
                                        },
                                        {
                                            "name": "NoSymLinks"
                                        },
                                        {
                                            "name": "AllEntries"
                                        },
                                        {
                                            "name": "TypeMask"
                                        },
                                        {
                                            "name": "Readable"
                                        },
                                        {
                                            "name": "Writable"
                                        },
                                        {
                                            "name": "Executable"
                                        },
                                        {
                                            "name": "PermissionMask"
                                        },
                                        {
                                            "name": "Modified"
                                        },
                                        {
                                            "name": "Hidden"
                                        },
                                        {
                                            "name": "System"
                                        },
                                        {
                                            "name": "AccessMask"
                                        },
                                        {
                                            "name": "AllDirs"
                                        },
                                        {
                                            "name": "CaseSensitive"
                                        },
                                        {
                                            "name": "NoDot"
                                        },
                                        {
                                            "name": "NoDotDot"
                                        },
                                        {
                                            "name": "NoDotAndDotDot"
                                        },
                                        {
                                            "name": "NoFilter"
                                        }
                                    ],
                                    "name": "Filter",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Name"
                                        },
                                        {
                                            "name": "Time"
                                        },
                                        {
                                            "name": "Size"
                                        },
                                        {
                                            "name": "Unsorted"
                                        },
                                        {
                                            "name": "SortByMask"
                                        },
                                        {
                                            "name": "DirsFirst"
                                        },
                                        {
                                            "name": "Reversed"
                                        },
                                        {
                                            "name": "IgnoreCase"
                                        },
                                        {
                                            "name": "DirsLast"
                                        },
                                        {
                                            "name": "LocaleAware"
                                        },
                                        {
                                            "name": "Type"
                                        },
                                        {
                                            "name": "NoSort"
                                        }
                                    ],
                                    "name": "SortFlag",
                                    "type": "enum"
                                },
                                {
                                    "name": "QDir",
                                    "parameters": [
                                        "const QDir &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDir",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QDir",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &",
                                        "QDir::SortFlags",
                                        "QDir::Filters"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDir",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QDir &"
                                    ],
                                    "returns": "QDir &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QDir &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QDir &&"
                                    ],
                                    "returns": "QDir &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QDir &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setPath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "path",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "absolutePath",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "canonicalPath",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "addResourceSearchPath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setSearchPaths",
                                    "parameters": [
                                        "const QString &",
                                        "const QStringList &"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "addSearchPath",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "searchPaths",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dirName",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "filePath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "absoluteFilePath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "relativeFilePath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "toNativeSeparators",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromNativeSeparators",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "cd",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "cdUp",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nameFilters",
                                    "parameters": [
                                    ],
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "setNameFilters",
                                    "parameters": [
                                        "const QStringList &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "filter",
                                    "parameters": [
                                    ],
                                    "returns": "QDir::Filters",
                                    "type": "function"
                                },
                                {
                                    "name": "setFilter",
                                    "parameters": [
                                        "QDir::Filters"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "sorting",
                                    "parameters": [
                                    ],
                                    "returns": "QDir::SortFlags",
                                    "type": "function"
                                },
                                {
                                    "name": "setSorting",
                                    "parameters": [
                                        "QDir::SortFlags"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "count",
                                    "parameters": [
                                    ],
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "parameters": [
                                        "QDir::Filters"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator[]",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "nameFiltersFromString",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "entryList",
                                    "parameters": [
                                        "QDir::Filters",
                                        "QDir::SortFlags"
                                    ],
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "entryList",
                                    "parameters": [
                                        "const QStringList &",
                                        "QDir::Filters",
                                        "QDir::SortFlags"
                                    ],
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "entryInfoList",
                                    "parameters": [
                                        "QDir::Filters",
                                        "QDir::SortFlags"
                                    ],
                                    "returns": "QFileInfoList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "entryInfoList",
                                    "parameters": [
                                        "const QStringList &",
                                        "QDir::Filters",
                                        "QDir::SortFlags"
                                    ],
                                    "returns": "QFileInfoList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mkdir",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rmdir",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mkpath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rmpath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "removeRecursively",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isReadable",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exists",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRoot",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "isRelativePath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isAbsolutePath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRelative",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isAbsolute",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "makeAbsolute",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QDir &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QDir &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "remove",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "rename",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exists",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "drives",
                                    "parameters": [
                                    ],
                                    "returns": "QFileInfoList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "listSeparator",
                                    "parameters": [
                                    ],
                                    "returns": "QChar",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "separator",
                                    "parameters": [
                                    ],
                                    "returns": "QChar",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrent",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "current",
                                    "parameters": [
                                    ],
                                    "returns": "QDir",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "currentPath",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "home",
                                    "parameters": [
                                    ],
                                    "returns": "QDir",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "homePath",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "root",
                                    "parameters": [
                                    ],
                                    "returns": "QDir",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "rootPath",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "temp",
                                    "parameters": [
                                    ],
                                    "returns": "QDir",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "tempPath",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "match",
                                    "parameters": [
                                        "const QStringList &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "match",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "cleanPath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "refresh",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                }
                            ],
                            "name": "QDir",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QDir &",
                                "QDir &"
                            ],
                            "returns": "void",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QDir::Filters::enum_type",
                                "QDir::Filters::enum_type"
                            ],
                            "returns": "QFlags<QDir::Filters::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QDir::Filters::enum_type",
                                "QFlags<QDir::Filters::enum_type>"
                            ],
                            "returns": "QFlags<QDir::Filters::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QDir::Filters::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QDir::SortFlags::enum_type",
                                "QDir::SortFlags::enum_type"
                            ],
                            "returns": "QFlags<QDir::SortFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QDir::SortFlags::enum_type",
                                "QFlags<QDir::SortFlags::enum_type>"
                            ],
                            "returns": "QFlags<QDir::SortFlags::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QDir::SortFlags::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "QDir::Filters"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QDir &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QDir>",
                    "name": "dir",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QFileInfo",
                                    "parameters": [
                                        "QFileInfoPrivate *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFileInfo",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFileInfo",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFileInfo",
                                    "parameters": [
                                        "const QFile &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFileInfo",
                                    "parameters": [
                                        "const QDir &",
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFileInfo",
                                    "parameters": [
                                        "const QFileInfo &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFileInfo",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QFileInfo &"
                                    ],
                                    "returns": "QFileInfo &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QFileInfo &&"
                                    ],
                                    "returns": "QFileInfo &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QFileInfo &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QFileInfo &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QFileInfo &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setFile",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setFile",
                                    "parameters": [
                                        "const QFile &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setFile",
                                    "parameters": [
                                        "const QDir &",
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exists",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "exists",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "refresh",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "filePath",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "absoluteFilePath",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "canonicalFilePath",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fileName",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "baseName",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "completeBaseName",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "suffix",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bundleName",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "completeSuffix",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "path",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "absolutePath",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "canonicalPath",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dir",
                                    "parameters": [
                                    ],
                                    "returns": "QDir",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "absoluteDir",
                                    "parameters": [
                                    ],
                                    "returns": "QDir",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isReadable",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isWritable",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isExecutable",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isHidden",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNativePath",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRelative",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isAbsolute",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "makeAbsolute",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isFile",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDir",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSymLink",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRoot",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isBundle",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "readLink",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "symLinkTarget",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "owner",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "ownerId",
                                    "parameters": [
                                    ],
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "group",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "groupId",
                                    "parameters": [
                                    ],
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "permission",
                                    "parameters": [
                                        "QFile::Permissions"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "permissions",
                                    "parameters": [
                                    ],
                                    "returns": "QFile::Permissions",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "parameters": [
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "created",
                                    "parameters": [
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "birthTime",
                                    "parameters": [
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "metadataChangeTime",
                                    "parameters": [
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastModified",
                                    "parameters": [
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastRead",
                                    "parameters": [
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fileTime",
                                    "parameters": [
                                        "QFile::FileTime"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "caching",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setCaching",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                }
                            ],
                            "name": "QFileInfo",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QFileInfo &",
                                "QFileInfo &"
                            ],
                            "returns": "void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QFileInfo &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QFileInfo>",
                    "name": "fileinfo",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QLine",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLine",
                                    "parameters": [
                                        "const QLine &"
                                    ],
                                    "returns": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QLine",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QLine",
                                    "parameters": [
                                        "const QPoint &",
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLine",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "p1",
                                    "parameters": [
                                    ],
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "p2",
                                    "parameters": [
                                    ],
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x1",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y1",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x2",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y2",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dx",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dy",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "QLine",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QLine",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "center",
                                    "parameters": [
                                    ],
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "name": "setP1",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setP2",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setPoints",
                                    "parameters": [
                                        "const QPoint &",
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setLine",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QLine &"
                                    ],
                                    "returns": "QLine &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QLine &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QLine &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QLine",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QLine &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QLine &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QLine &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoIntersection"
                                        },
                                        {
                                            "name": "BoundedIntersection"
                                        },
                                        {
                                            "name": "UnboundedIntersection"
                                        }
                                    ],
                                    "name": "IntersectType",
                                    "type": "enum"
                                },
                                {
                                    "name": "QLineF",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLineF",
                                    "parameters": [
                                        "const QLineF &"
                                    ],
                                    "returns": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QLineF",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QLineF",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QPointF &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLineF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLineF",
                                    "parameters": [
                                        "const QLine &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "fromPolar",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QLineF",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "p1",
                                    "parameters": [
                                    ],
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "p2",
                                    "parameters": [
                                    ],
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x1",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y1",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "x2",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "y2",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dx",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dy",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "length",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setLength",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "angle",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setAngle",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "angleTo",
                                    "parameters": [
                                        "const QLineF &"
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "unitVector",
                                    "parameters": [
                                    ],
                                    "returns": "QLineF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "normalVector",
                                    "parameters": [
                                    ],
                                    "returns": "QLineF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intersect",
                                    "parameters": [
                                        "const QLineF &",
                                        "QPointF *"
                                    ],
                                    "returns": "QLineF::IntersectType",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "angle",
                                    "parameters": [
                                        "const QLineF &"
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pointAt",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "translate",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "QLineF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "translated",
                                    "parameters": [
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QLineF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "center",
                                    "parameters": [
                                    ],
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "name": "setP1",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setP2",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setPoints",
                                    "parameters": [
                                        "const QPointF &",
                                        "const QPointF &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setLine",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QLineF &"
                                    ],
                                    "returns": "QLineF &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QLineF &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QLineF &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLine",
                                    "parameters": [
                                    ],
                                    "returns": "QLine",
                                    "type": "function"
                                }
                            ],
                            "name": "QLineF",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QLineF &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QLineF &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QLineF &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QLine>",
                    "name": "line",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "name": "qHash",
                            "parameters": [
                                "const QUrl &",
                                "uint"
                            ],
                            "returns": "uint",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "TolerantMode"
                                        },
                                        {
                                            "name": "StrictMode"
                                        },
                                        {
                                            "name": "DecodedMode"
                                        }
                                    ],
                                    "name": "ParsingMode",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "None"
                                        },
                                        {
                                            "name": "RemoveScheme"
                                        },
                                        {
                                            "name": "RemovePassword"
                                        },
                                        {
                                            "name": "RemoveUserInfo"
                                        },
                                        {
                                            "name": "RemovePort"
                                        },
                                        {
                                            "name": "RemoveAuthority"
                                        },
                                        {
                                            "name": "RemovePath"
                                        },
                                        {
                                            "name": "RemoveQuery"
                                        },
                                        {
                                            "name": "RemoveFragment"
                                        },
                                        {
                                            "name": "PreferLocalFile"
                                        },
                                        {
                                            "name": "StripTrailingSlash"
                                        },
                                        {
                                            "name": "RemoveFilename"
                                        },
                                        {
                                            "name": "NormalizePathSegments"
                                        }
                                    ],
                                    "name": "UrlFormattingOption",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "PrettyDecoded"
                                        },
                                        {
                                            "name": "EncodeSpaces"
                                        },
                                        {
                                            "name": "EncodeUnicode"
                                        },
                                        {
                                            "name": "EncodeDelimiters"
                                        },
                                        {
                                            "name": "EncodeReserved"
                                        },
                                        {
                                            "name": "DecodeReserved"
                                        },
                                        {
                                            "name": "FullyEncoded"
                                        },
                                        {
                                            "name": "FullyDecoded"
                                        }
                                    ],
                                    "name": "ComponentFormattingOption",
                                    "type": "enum"
                                },
                                {
                                    "name": "QUrl",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QUrl",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "returns": "QUrl &",
                                    "type": "function"
                                },
                                {
                                    "name": "QUrl",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QUrl &",
                                    "type": "function"
                                },
                                {
                                    "name": "QUrl",
                                    "parameters": [
                                        "QUrl &&"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QUrl &&"
                                    ],
                                    "returns": "QUrl &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QUrl",
                                    "type": "destructor"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QUrl &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setUrl",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "url",
                                    "parameters": [
                                        "QUrl::FormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "QUrl::FormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDisplayString",
                                    "parameters": [
                                        "QUrl::FormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "adjusted",
                                    "parameters": [
                                        "QUrl::FormattingOptions"
                                    ],
                                    "returns": "QUrl",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toEncoded",
                                    "parameters": [
                                        "QUrl::FormattingOptions"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "fromEncoded",
                                    "parameters": [
                                        "const QByteArray &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "returns": "QUrl",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "DefaultResolution"
                                        },
                                        {
                                            "name": "AssumeLocalFile"
                                        }
                                    ],
                                    "name": "UserInputResolutionOption",
                                    "type": "enum"
                                },
                                {
                                    "name": "fromUserInput",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QUrl",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromUserInput",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &",
                                        "QUrl::UserInputResolutionOptions"
                                    ],
                                    "returns": "QUrl",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "errorString",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setScheme",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scheme",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setAuthority",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "authority",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setUserInfo",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "userInfo",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setUserName",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "userName",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setPassword",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "password",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setHost",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "host",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "topLevelDomain",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setPort",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "port",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setPath",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "path",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fileName",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasQuery",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setQuery",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setQuery",
                                    "parameters": [
                                        "const QUrlQuery &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "query",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasFragment",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fragment",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setFragment",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "resolved",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "returns": "QUrl",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isRelative",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isParentOf",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isLocalFile",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "fromLocalFile",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QUrl",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLocalFile",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "detach",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matches",
                                    "parameters": [
                                        "const QUrl &",
                                        "QUrl::FormattingOptions"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "fromPercentEncoding",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "toPercentEncoding",
                                    "parameters": [
                                        "const QString &",
                                        "const QByteArray &",
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromAce",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "toAce",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "idnWhitelist",
                                    "parameters": [
                                    ],
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "toStringList",
                                    "parameters": [
                                        "const QList<QUrl> &",
                                        "QUrl::FormattingOptions"
                                    ],
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromStringList",
                                    "parameters": [
                                        "const QStringList &",
                                        "QUrl::ParsingMode"
                                    ],
                                    "returns": "QList<QUrl>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setIdnWhitelist",
                                    "parameters": [
                                        "const QStringList &"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "parameters": [
                                    ],
                                    "returns": "QUrl::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QUrl",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QUrl &",
                                "QUrl &"
                            ],
                            "returns": "void",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::ComponentFormattingOptions::enum_type",
                                "QUrl::ComponentFormattingOptions::enum_type"
                            ],
                            "returns": "QFlags<QUrl::ComponentFormattingOptions::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::ComponentFormattingOptions::enum_type",
                                "QFlags<QUrl::ComponentFormattingOptions::enum_type>"
                            ],
                            "returns": "QFlags<QUrl::ComponentFormattingOptions::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::ComponentFormattingOptions::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::UrlFormattingOption",
                                "QUrl::UrlFormattingOption"
                            ],
                            "returns": "QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::UrlFormattingOption",
                                "QUrl::FormattingOptions"
                            ],
                            "returns": "QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::UrlFormattingOption",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|=",
                            "parameters": [
                                "QUrl::FormattingOptions &",
                                "QUrl::ComponentFormattingOptions"
                            ],
                            "returns": "QUrl::FormattingOptions &",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::UrlFormattingOption",
                                "QUrl::ComponentFormattingOption"
                            ],
                            "returns": "QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::UrlFormattingOption",
                                "QUrl::ComponentFormattingOptions"
                            ],
                            "returns": "QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::ComponentFormattingOption",
                                "QUrl::UrlFormattingOption"
                            ],
                            "returns": "QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::ComponentFormattingOptions",
                                "QUrl::UrlFormattingOption"
                            ],
                            "returns": "QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::FormattingOptions",
                                "QUrl::ComponentFormattingOptions"
                            ],
                            "returns": "QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::ComponentFormattingOption",
                                "QUrl::FormattingOptions"
                            ],
                            "returns": "QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QUrl::ComponentFormattingOptions",
                                "QUrl::FormattingOptions"
                            ],
                            "returns": "QUrl::FormattingOptions",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QUrl &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QUrl &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QUrl &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QUrl>",
                    "name": "url",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "name": "qHash",
                            "parameters": [
                                "const QUrlQuery &",
                                "uint"
                            ],
                            "returns": "uint",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QUrlQuery",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QUrlQuery",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QUrlQuery",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QUrlQuery",
                                    "parameters": [
                                        "const QUrlQuery &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QUrlQuery &"
                                    ],
                                    "returns": "QUrlQuery &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QUrlQuery &&"
                                    ],
                                    "returns": "QUrlQuery &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QUrlQuery",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QUrlQuery &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QUrlQuery &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QUrlQuery &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isEmpty",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "query",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setQuery",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setQueryDelimiters",
                                    "parameters": [
                                        "QChar",
                                        "QChar"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "queryValueDelimiter",
                                    "parameters": [
                                    ],
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "queryPairDelimiter",
                                    "parameters": [
                                    ],
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "name": "setQueryItems",
                                    "parameters": [
                                        "const QList<QPair<QString, QString> > &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "queryItems",
                                    "parameters": [
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QList<QPair<QString, QString> >",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasQueryItem",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "addQueryItem",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "removeQueryItem",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "queryItemValue",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "allQueryItemValues",
                                    "parameters": [
                                        "const QString &",
                                        "QUrl::ComponentFormattingOptions"
                                    ],
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "removeAllQueryItems",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "defaultQueryValueDelimiter",
                                    "parameters": [
                                    ],
                                    "returns": "QChar",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "defaultQueryPairDelimiter",
                                    "parameters": [
                                    ],
                                    "returns": "QChar",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "parameters": [
                                    ],
                                    "returns": "QUrlQuery::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QUrlQuery",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QUrlQuery &",
                                "QUrlQuery &"
                            ],
                            "returns": "void",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QUrlQuery>",
                    "name": "urlquery",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "checked": 0,
                                    "enumerators": [
                                        {
                                            "checked": 0,
                                            "name": "MinUtcOffsetSecs"
                                        },
                                        {
                                            "checked": 0,
                                            "name": "MaxUtcOffsetSecs"
                                        }
                                    ],
                                    "name": "",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "StandardTime"
                                        },
                                        {
                                            "name": "DaylightTime"
                                        },
                                        {
                                            "name": "GenericTime"
                                        }
                                    ],
                                    "name": "TimeType",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "DefaultName"
                                        },
                                        {
                                            "name": "LongName"
                                        },
                                        {
                                            "name": "ShortName"
                                        },
                                        {
                                            "name": "OffsetName"
                                        }
                                    ],
                                    "name": "NameType",
                                    "type": "enum"
                                },
                                {
                                    "name": "QTimeZone",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTimeZone",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTimeZone",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTimeZone",
                                    "parameters": [
                                        "const QByteArray &",
                                        "int",
                                        "const QString &",
                                        "const QString &",
                                        "QLocale::Country",
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QTimeZone",
                                    "parameters": [
                                        "const QTimeZone &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QTimeZone",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QTimeZone &"
                                    ],
                                    "returns": "QTimeZone &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QTimeZone &&"
                                    ],
                                    "returns": "QTimeZone &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QTimeZone &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QTimeZone &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QTimeZone &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "id",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "country",
                                    "parameters": [
                                    ],
                                    "returns": "QLocale::Country",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "comment",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "displayName",
                                    "parameters": [
                                        "const QDateTime &",
                                        "QTimeZone::NameType",
                                        "const QLocale &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "displayName",
                                    "parameters": [
                                        "QTimeZone::TimeType",
                                        "QTimeZone::NameType",
                                        "const QLocale &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "abbreviation",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "offsetFromUtc",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "standardTimeOffset",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "daylightTimeOffset",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasDaylightTime",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDaylightTime",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "offsetData",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "QTimeZone::OffsetData",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasTransitions",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nextTransition",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "QTimeZone::OffsetData",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "previousTransition",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "QTimeZone::OffsetData",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transitions",
                                    "parameters": [
                                        "const QDateTime &",
                                        "const QDateTime &"
                                    ],
                                    "returns": "QTimeZone::OffsetDataList",
                                    "type": "function"
                                },
                                {
                                    "name": "systemTimeZoneId",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "systemTimeZone",
                                    "parameters": [
                                    ],
                                    "returns": "QTimeZone",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "utc",
                                    "parameters": [
                                    ],
                                    "returns": "QTimeZone",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isTimeZoneIdAvailable",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "availableTimeZoneIds",
                                    "parameters": [
                                    ],
                                    "returns": "QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "availableTimeZoneIds",
                                    "parameters": [
                                        "QLocale::Country"
                                    ],
                                    "returns": "QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "availableTimeZoneIds",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "ianaIdToWindowsId",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "windowsIdToDefaultIanaId",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "windowsIdToDefaultIanaId",
                                    "parameters": [
                                        "const QByteArray &",
                                        "QLocale::Country"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "windowsIdToIanaIds",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "windowsIdToIanaIds",
                                    "parameters": [
                                        "const QByteArray &",
                                        "QLocale::Country"
                                    ],
                                    "returns": "QList<QByteArray>",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QTimeZone",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QTimeZone &",
                                "QTimeZone &"
                            ],
                            "returns": "void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QTimeZone &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QTimeZone &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QTimeZone &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QTimeZone>",
                    "name": "timezone",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "name": "qHash",
                            "parameters": [
                                "const QLocale &",
                                "uint"
                            ],
                            "returns": "uint",
                            "type": "function"
                        },
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "checked": 0,
                                    "name": "qt_check_for_QGADGET_macro",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "AnyLanguage"
                                        },
                                        {
                                            "name": "C"
                                        },
                                        {
                                            "name": "Abkhazian"
                                        },
                                        {
                                            "name": "Oromo"
                                        },
                                        {
                                            "name": "Afar"
                                        },
                                        {
                                            "name": "Afrikaans"
                                        },
                                        {
                                            "name": "Albanian"
                                        },
                                        {
                                            "name": "Amharic"
                                        },
                                        {
                                            "name": "Arabic"
                                        },
                                        {
                                            "name": "Armenian"
                                        },
                                        {
                                            "name": "Assamese"
                                        },
                                        {
                                            "name": "Aymara"
                                        },
                                        {
                                            "name": "Azerbaijani"
                                        },
                                        {
                                            "name": "Bashkir"
                                        },
                                        {
                                            "name": "Basque"
                                        },
                                        {
                                            "name": "Bengali"
                                        },
                                        {
                                            "name": "Dzongkha"
                                        },
                                        {
                                            "name": "Bihari"
                                        },
                                        {
                                            "name": "Bislama"
                                        },
                                        {
                                            "name": "Breton"
                                        },
                                        {
                                            "name": "Bulgarian"
                                        },
                                        {
                                            "name": "Burmese"
                                        },
                                        {
                                            "name": "Belarusian"
                                        },
                                        {
                                            "name": "Khmer"
                                        },
                                        {
                                            "name": "Catalan"
                                        },
                                        {
                                            "name": "Chinese"
                                        },
                                        {
                                            "name": "Corsican"
                                        },
                                        {
                                            "name": "Croatian"
                                        },
                                        {
                                            "name": "Czech"
                                        },
                                        {
                                            "name": "Danish"
                                        },
                                        {
                                            "name": "Dutch"
                                        },
                                        {
                                            "name": "English"
                                        },
                                        {
                                            "name": "Esperanto"
                                        },
                                        {
                                            "name": "Estonian"
                                        },
                                        {
                                            "name": "Faroese"
                                        },
                                        {
                                            "name": "Fijian"
                                        },
                                        {
                                            "name": "Finnish"
                                        },
                                        {
                                            "name": "French"
                                        },
                                        {
                                            "name": "WesternFrisian"
                                        },
                                        {
                                            "name": "Gaelic"
                                        },
                                        {
                                            "name": "Galician"
                                        },
                                        {
                                            "name": "Georgian"
                                        },
                                        {
                                            "name": "German"
                                        },
                                        {
                                            "name": "Greek"
                                        },
                                        {
                                            "name": "Greenlandic"
                                        },
                                        {
                                            "name": "Guarani"
                                        },
                                        {
                                            "name": "Gujarati"
                                        },
                                        {
                                            "name": "Hausa"
                                        },
                                        {
                                            "name": "Hebrew"
                                        },
                                        {
                                            "name": "Hindi"
                                        },
                                        {
                                            "name": "Hungarian"
                                        },
                                        {
                                            "name": "Icelandic"
                                        },
                                        {
                                            "name": "Indonesian"
                                        },
                                        {
                                            "name": "Interlingua"
                                        },
                                        {
                                            "name": "Interlingue"
                                        },
                                        {
                                            "name": "Inuktitut"
                                        },
                                        {
                                            "name": "Inupiak"
                                        },
                                        {
                                            "name": "Irish"
                                        },
                                        {
                                            "name": "Italian"
                                        },
                                        {
                                            "name": "Japanese"
                                        },
                                        {
                                            "name": "Javanese"
                                        },
                                        {
                                            "name": "Kannada"
                                        },
                                        {
                                            "name": "Kashmiri"
                                        },
                                        {
                                            "name": "Kazakh"
                                        },
                                        {
                                            "name": "Kinyarwanda"
                                        },
                                        {
                                            "name": "Kirghiz"
                                        },
                                        {
                                            "name": "Korean"
                                        },
                                        {
                                            "name": "Kurdish"
                                        },
                                        {
                                            "name": "Rundi"
                                        },
                                        {
                                            "name": "Lao"
                                        },
                                        {
                                            "name": "Latin"
                                        },
                                        {
                                            "name": "Latvian"
                                        },
                                        {
                                            "name": "Lingala"
                                        },
                                        {
                                            "name": "Lithuanian"
                                        },
                                        {
                                            "name": "Macedonian"
                                        },
                                        {
                                            "name": "Malagasy"
                                        },
                                        {
                                            "name": "Malay"
                                        },
                                        {
                                            "name": "Malayalam"
                                        },
                                        {
                                            "name": "Maltese"
                                        },
                                        {
                                            "name": "Maori"
                                        },
                                        {
                                            "name": "Marathi"
                                        },
                                        {
                                            "name": "Marshallese"
                                        },
                                        {
                                            "name": "Mongolian"
                                        },
                                        {
                                            "name": "NauruLanguage"
                                        },
                                        {
                                            "name": "Nepali"
                                        },
                                        {
                                            "name": "NorwegianBokmal"
                                        },
                                        {
                                            "name": "Occitan"
                                        },
                                        {
                                            "name": "Oriya"
                                        },
                                        {
                                            "name": "Pashto"
                                        },
                                        {
                                            "name": "Persian"
                                        },
                                        {
                                            "name": "Polish"
                                        },
                                        {
                                            "name": "Portuguese"
                                        },
                                        {
                                            "name": "Punjabi"
                                        },
                                        {
                                            "name": "Quechua"
                                        },
                                        {
                                            "name": "Romansh"
                                        },
                                        {
                                            "name": "Romanian"
                                        },
                                        {
                                            "name": "Russian"
                                        },
                                        {
                                            "name": "Samoan"
                                        },
                                        {
                                            "name": "Sango"
                                        },
                                        {
                                            "name": "Sanskrit"
                                        },
                                        {
                                            "name": "Serbian"
                                        },
                                        {
                                            "name": "Ossetic"
                                        },
                                        {
                                            "name": "SouthernSotho"
                                        },
                                        {
                                            "name": "Tswana"
                                        },
                                        {
                                            "name": "Shona"
                                        },
                                        {
                                            "name": "Sindhi"
                                        },
                                        {
                                            "name": "Sinhala"
                                        },
                                        {
                                            "name": "Swati"
                                        },
                                        {
                                            "name": "Slovak"
                                        },
                                        {
                                            "name": "Slovenian"
                                        },
                                        {
                                            "name": "Somali"
                                        },
                                        {
                                            "name": "Spanish"
                                        },
                                        {
                                            "name": "Sundanese"
                                        },
                                        {
                                            "name": "Swahili"
                                        },
                                        {
                                            "name": "Swedish"
                                        },
                                        {
                                            "name": "Sardinian"
                                        },
                                        {
                                            "name": "Tajik"
                                        },
                                        {
                                            "name": "Tamil"
                                        },
                                        {
                                            "name": "Tatar"
                                        },
                                        {
                                            "name": "Telugu"
                                        },
                                        {
                                            "name": "Thai"
                                        },
                                        {
                                            "name": "Tibetan"
                                        },
                                        {
                                            "name": "Tigrinya"
                                        },
                                        {
                                            "name": "Tongan"
                                        },
                                        {
                                            "name": "Tsonga"
                                        },
                                        {
                                            "name": "Turkish"
                                        },
                                        {
                                            "name": "Turkmen"
                                        },
                                        {
                                            "name": "Tahitian"
                                        },
                                        {
                                            "name": "Uighur"
                                        },
                                        {
                                            "name": "Ukrainian"
                                        },
                                        {
                                            "name": "Urdu"
                                        },
                                        {
                                            "name": "Uzbek"
                                        },
                                        {
                                            "name": "Vietnamese"
                                        },
                                        {
                                            "name": "Volapuk"
                                        },
                                        {
                                            "name": "Welsh"
                                        },
                                        {
                                            "name": "Wolof"
                                        },
                                        {
                                            "name": "Xhosa"
                                        },
                                        {
                                            "name": "Yiddish"
                                        },
                                        {
                                            "name": "Yoruba"
                                        },
                                        {
                                            "name": "Zhuang"
                                        },
                                        {
                                            "name": "Zulu"
                                        },
                                        {
                                            "name": "NorwegianNynorsk"
                                        },
                                        {
                                            "name": "Bosnian"
                                        },
                                        {
                                            "name": "Divehi"
                                        },
                                        {
                                            "name": "Manx"
                                        },
                                        {
                                            "name": "Cornish"
                                        },
                                        {
                                            "name": "Akan"
                                        },
                                        {
                                            "name": "Konkani"
                                        },
                                        {
                                            "name": "Ga"
                                        },
                                        {
                                            "name": "Igbo"
                                        },
                                        {
                                            "name": "Kamba"
                                        },
                                        {
                                            "name": "Syriac"
                                        },
                                        {
                                            "name": "Blin"
                                        },
                                        {
                                            "name": "Geez"
                                        },
                                        {
                                            "name": "Koro"
                                        },
                                        {
                                            "name": "Sidamo"
                                        },
                                        {
                                            "name": "Atsam"
                                        },
                                        {
                                            "name": "Tigre"
                                        },
                                        {
                                            "name": "Jju"
                                        },
                                        {
                                            "name": "Friulian"
                                        },
                                        {
                                            "name": "Venda"
                                        },
                                        {
                                            "name": "Ewe"
                                        },
                                        {
                                            "name": "Walamo"
                                        },
                                        {
                                            "name": "Hawaiian"
                                        },
                                        {
                                            "name": "Tyap"
                                        },
                                        {
                                            "name": "Nyanja"
                                        },
                                        {
                                            "name": "Filipino"
                                        },
                                        {
                                            "name": "SwissGerman"
                                        },
                                        {
                                            "name": "SichuanYi"
                                        },
                                        {
                                            "name": "Kpelle"
                                        },
                                        {
                                            "name": "LowGerman"
                                        },
                                        {
                                            "name": "SouthNdebele"
                                        },
                                        {
                                            "name": "NorthernSotho"
                                        },
                                        {
                                            "name": "NorthernSami"
                                        },
                                        {
                                            "name": "Taroko"
                                        },
                                        {
                                            "name": "Gusii"
                                        },
                                        {
                                            "name": "Taita"
                                        },
                                        {
                                            "name": "Fulah"
                                        },
                                        {
                                            "name": "Kikuyu"
                                        },
                                        {
                                            "name": "Samburu"
                                        },
                                        {
                                            "name": "Sena"
                                        },
                                        {
                                            "name": "NorthNdebele"
                                        },
                                        {
                                            "name": "Rombo"
                                        },
                                        {
                                            "name": "Tachelhit"
                                        },
                                        {
                                            "name": "Kabyle"
                                        },
                                        {
                                            "name": "Nyankole"
                                        },
                                        {
                                            "name": "Bena"
                                        },
                                        {
                                            "name": "Vunjo"
                                        },
                                        {
                                            "name": "Bambara"
                                        },
                                        {
                                            "name": "Embu"
                                        },
                                        {
                                            "name": "Cherokee"
                                        },
                                        {
                                            "name": "Morisyen"
                                        },
                                        {
                                            "name": "Makonde"
                                        },
                                        {
                                            "name": "Langi"
                                        },
                                        {
                                            "name": "Ganda"
                                        },
                                        {
                                            "name": "Bemba"
                                        },
                                        {
                                            "name": "Kabuverdianu"
                                        },
                                        {
                                            "name": "Meru"
                                        },
                                        {
                                            "name": "Kalenjin"
                                        },
                                        {
                                            "name": "Nama"
                                        },
                                        {
                                            "name": "Machame"
                                        },
                                        {
                                            "name": "Colognian"
                                        },
                                        {
                                            "name": "Masai"
                                        },
                                        {
                                            "name": "Soga"
                                        },
                                        {
                                            "name": "Luyia"
                                        },
                                        {
                                            "name": "Asu"
                                        },
                                        {
                                            "name": "Teso"
                                        },
                                        {
                                            "name": "Saho"
                                        },
                                        {
                                            "name": "KoyraChiini"
                                        },
                                        {
                                            "name": "Rwa"
                                        },
                                        {
                                            "name": "Luo"
                                        },
                                        {
                                            "name": "Chiga"
                                        },
                                        {
                                            "name": "CentralMoroccoTamazight"
                                        },
                                        {
                                            "name": "KoyraboroSenni"
                                        },
                                        {
                                            "name": "Shambala"
                                        },
                                        {
                                            "name": "Bodo"
                                        },
                                        {
                                            "name": "Avaric"
                                        },
                                        {
                                            "name": "Chamorro"
                                        },
                                        {
                                            "name": "Chechen"
                                        },
                                        {
                                            "name": "Church"
                                        },
                                        {
                                            "name": "Chuvash"
                                        },
                                        {
                                            "name": "Cree"
                                        },
                                        {
                                            "name": "Haitian"
                                        },
                                        {
                                            "name": "Herero"
                                        },
                                        {
                                            "name": "HiriMotu"
                                        },
                                        {
                                            "name": "Kanuri"
                                        },
                                        {
                                            "name": "Komi"
                                        },
                                        {
                                            "name": "Kongo"
                                        },
                                        {
                                            "name": "Kwanyama"
                                        },
                                        {
                                            "name": "Limburgish"
                                        },
                                        {
                                            "name": "LubaKatanga"
                                        },
                                        {
                                            "name": "Luxembourgish"
                                        },
                                        {
                                            "name": "Navaho"
                                        },
                                        {
                                            "name": "Ndonga"
                                        },
                                        {
                                            "name": "Ojibwa"
                                        },
                                        {
                                            "name": "Pali"
                                        },
                                        {
                                            "name": "Walloon"
                                        },
                                        {
                                            "name": "Aghem"
                                        },
                                        {
                                            "name": "Basaa"
                                        },
                                        {
                                            "name": "Zarma"
                                        },
                                        {
                                            "name": "Duala"
                                        },
                                        {
                                            "name": "JolaFonyi"
                                        },
                                        {
                                            "name": "Ewondo"
                                        },
                                        {
                                            "name": "Bafia"
                                        },
                                        {
                                            "name": "MakhuwaMeetto"
                                        },
                                        {
                                            "name": "Mundang"
                                        },
                                        {
                                            "name": "Kwasio"
                                        },
                                        {
                                            "name": "Nuer"
                                        },
                                        {
                                            "name": "Sakha"
                                        },
                                        {
                                            "name": "Sangu"
                                        },
                                        {
                                            "name": "CongoSwahili"
                                        },
                                        {
                                            "name": "Tasawaq"
                                        },
                                        {
                                            "name": "Vai"
                                        },
                                        {
                                            "name": "Walser"
                                        },
                                        {
                                            "name": "Yangben"
                                        },
                                        {
                                            "name": "Avestan"
                                        },
                                        {
                                            "name": "Asturian"
                                        },
                                        {
                                            "name": "Ngomba"
                                        },
                                        {
                                            "name": "Kako"
                                        },
                                        {
                                            "name": "Meta"
                                        },
                                        {
                                            "name": "Ngiemboon"
                                        },
                                        {
                                            "name": "Aragonese"
                                        },
                                        {
                                            "name": "Akkadian"
                                        },
                                        {
                                            "name": "AncientEgyptian"
                                        },
                                        {
                                            "name": "AncientGreek"
                                        },
                                        {
                                            "name": "Aramaic"
                                        },
                                        {
                                            "name": "Balinese"
                                        },
                                        {
                                            "name": "Bamun"
                                        },
                                        {
                                            "name": "BatakToba"
                                        },
                                        {
                                            "name": "Buginese"
                                        },
                                        {
                                            "name": "Buhid"
                                        },
                                        {
                                            "name": "Carian"
                                        },
                                        {
                                            "name": "Chakma"
                                        },
                                        {
                                            "name": "ClassicalMandaic"
                                        },
                                        {
                                            "name": "Coptic"
                                        },
                                        {
                                            "name": "Dogri"
                                        },
                                        {
                                            "name": "EasternCham"
                                        },
                                        {
                                            "name": "EasternKayah"
                                        },
                                        {
                                            "name": "Etruscan"
                                        },
                                        {
                                            "name": "Gothic"
                                        },
                                        {
                                            "name": "Hanunoo"
                                        },
                                        {
                                            "name": "Ingush"
                                        },
                                        {
                                            "name": "LargeFloweryMiao"
                                        },
                                        {
                                            "name": "Lepcha"
                                        },
                                        {
                                            "name": "Limbu"
                                        },
                                        {
                                            "name": "Lisu"
                                        },
                                        {
                                            "name": "Lu"
                                        },
                                        {
                                            "name": "Lycian"
                                        },
                                        {
                                            "name": "Lydian"
                                        },
                                        {
                                            "name": "Mandingo"
                                        },
                                        {
                                            "name": "Manipuri"
                                        },
                                        {
                                            "name": "Meroitic"
                                        },
                                        {
                                            "name": "NorthernThai"
                                        },
                                        {
                                            "name": "OldIrish"
                                        },
                                        {
                                            "name": "OldNorse"
                                        },
                                        {
                                            "name": "OldPersian"
                                        },
                                        {
                                            "name": "OldTurkish"
                                        },
                                        {
                                            "name": "Pahlavi"
                                        },
                                        {
                                            "name": "Parthian"
                                        },
                                        {
                                            "name": "Phoenician"
                                        },
                                        {
                                            "name": "PrakritLanguage"
                                        },
                                        {
                                            "name": "Rejang"
                                        },
                                        {
                                            "name": "Sabaean"
                                        },
                                        {
                                            "name": "Samaritan"
                                        },
                                        {
                                            "name": "Santali"
                                        },
                                        {
                                            "name": "Saurashtra"
                                        },
                                        {
                                            "name": "Sora"
                                        },
                                        {
                                            "name": "Sylheti"
                                        },
                                        {
                                            "name": "Tagbanwa"
                                        },
                                        {
                                            "name": "TaiDam"
                                        },
                                        {
                                            "name": "TaiNua"
                                        },
                                        {
                                            "name": "Ugaritic"
                                        },
                                        {
                                            "name": "Akoose"
                                        },
                                        {
                                            "name": "Lakota"
                                        },
                                        {
                                            "name": "StandardMoroccanTamazight"
                                        },
                                        {
                                            "name": "Mapuche"
                                        },
                                        {
                                            "name": "CentralKurdish"
                                        },
                                        {
                                            "name": "LowerSorbian"
                                        },
                                        {
                                            "name": "UpperSorbian"
                                        },
                                        {
                                            "name": "Kenyang"
                                        },
                                        {
                                            "name": "Mohawk"
                                        },
                                        {
                                            "name": "Nko"
                                        },
                                        {
                                            "name": "Prussian"
                                        },
                                        {
                                            "name": "Kiche"
                                        },
                                        {
                                            "name": "SouthernSami"
                                        },
                                        {
                                            "name": "LuleSami"
                                        },
                                        {
                                            "name": "InariSami"
                                        },
                                        {
                                            "name": "SkoltSami"
                                        },
                                        {
                                            "name": "Warlpiri"
                                        },
                                        {
                                            "name": "ManichaeanMiddlePersian"
                                        },
                                        {
                                            "name": "Mende"
                                        },
                                        {
                                            "name": "AncientNorthArabian"
                                        },
                                        {
                                            "name": "LinearA"
                                        },
                                        {
                                            "name": "HmongNjua"
                                        },
                                        {
                                            "name": "Ho"
                                        },
                                        {
                                            "name": "Lezghian"
                                        },
                                        {
                                            "name": "Bassa"
                                        },
                                        {
                                            "name": "Mono"
                                        },
                                        {
                                            "name": "TedimChin"
                                        },
                                        {
                                            "name": "Maithili"
                                        },
                                        {
                                            "name": "Ahom"
                                        },
                                        {
                                            "name": "AmericanSignLanguage"
                                        },
                                        {
                                            "name": "ArdhamagadhiPrakrit"
                                        },
                                        {
                                            "name": "Bhojpuri"
                                        },
                                        {
                                            "name": "HieroglyphicLuwian"
                                        },
                                        {
                                            "name": "LiteraryChinese"
                                        },
                                        {
                                            "name": "Mazanderani"
                                        },
                                        {
                                            "name": "Mru"
                                        },
                                        {
                                            "name": "Newari"
                                        },
                                        {
                                            "name": "NorthernLuri"
                                        },
                                        {
                                            "name": "Palauan"
                                        },
                                        {
                                            "name": "Papiamento"
                                        },
                                        {
                                            "name": "Saraiki"
                                        },
                                        {
                                            "name": "TokelauLanguage"
                                        },
                                        {
                                            "name": "TokPisin"
                                        },
                                        {
                                            "name": "TuvaluLanguage"
                                        },
                                        {
                                            "name": "UncodedLanguages"
                                        },
                                        {
                                            "name": "Cantonese"
                                        },
                                        {
                                            "name": "Osage"
                                        },
                                        {
                                            "name": "Tangut"
                                        },
                                        {
                                            "name": "Norwegian"
                                        },
                                        {
                                            "name": "Moldavian"
                                        },
                                        {
                                            "name": "SerboCroatian"
                                        },
                                        {
                                            "name": "Tagalog"
                                        },
                                        {
                                            "name": "Twi"
                                        },
                                        {
                                            "name": "Afan"
                                        },
                                        {
                                            "name": "Byelorussian"
                                        },
                                        {
                                            "name": "Bhutani"
                                        },
                                        {
                                            "name": "Cambodian"
                                        },
                                        {
                                            "name": "Kurundi"
                                        },
                                        {
                                            "name": "RhaetoRomance"
                                        },
                                        {
                                            "name": "Chewa"
                                        },
                                        {
                                            "name": "Frisian"
                                        },
                                        {
                                            "name": "Uigur"
                                        },
                                        {
                                            "name": "LastLanguage"
                                        }
                                    ],
                                    "name": "Language",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "AnyScript"
                                        },
                                        {
                                            "name": "ArabicScript"
                                        },
                                        {
                                            "name": "CyrillicScript"
                                        },
                                        {
                                            "name": "DeseretScript"
                                        },
                                        {
                                            "name": "GurmukhiScript"
                                        },
                                        {
                                            "name": "SimplifiedHanScript"
                                        },
                                        {
                                            "name": "TraditionalHanScript"
                                        },
                                        {
                                            "name": "LatinScript"
                                        },
                                        {
                                            "name": "MongolianScript"
                                        },
                                        {
                                            "name": "TifinaghScript"
                                        },
                                        {
                                            "name": "ArmenianScript"
                                        },
                                        {
                                            "name": "BengaliScript"
                                        },
                                        {
                                            "name": "CherokeeScript"
                                        },
                                        {
                                            "name": "DevanagariScript"
                                        },
                                        {
                                            "name": "EthiopicScript"
                                        },
                                        {
                                            "name": "GeorgianScript"
                                        },
                                        {
                                            "name": "GreekScript"
                                        },
                                        {
                                            "name": "GujaratiScript"
                                        },
                                        {
                                            "name": "HebrewScript"
                                        },
                                        {
                                            "name": "JapaneseScript"
                                        },
                                        {
                                            "name": "KhmerScript"
                                        },
                                        {
                                            "name": "KannadaScript"
                                        },
                                        {
                                            "name": "KoreanScript"
                                        },
                                        {
                                            "name": "LaoScript"
                                        },
                                        {
                                            "name": "MalayalamScript"
                                        },
                                        {
                                            "name": "MyanmarScript"
                                        },
                                        {
                                            "name": "OriyaScript"
                                        },
                                        {
                                            "name": "TamilScript"
                                        },
                                        {
                                            "name": "TeluguScript"
                                        },
                                        {
                                            "name": "ThaanaScript"
                                        },
                                        {
                                            "name": "ThaiScript"
                                        },
                                        {
                                            "name": "TibetanScript"
                                        },
                                        {
                                            "name": "SinhalaScript"
                                        },
                                        {
                                            "name": "SyriacScript"
                                        },
                                        {
                                            "name": "YiScript"
                                        },
                                        {
                                            "name": "VaiScript"
                                        },
                                        {
                                            "name": "AvestanScript"
                                        },
                                        {
                                            "name": "BalineseScript"
                                        },
                                        {
                                            "name": "BamumScript"
                                        },
                                        {
                                            "name": "BatakScript"
                                        },
                                        {
                                            "name": "BopomofoScript"
                                        },
                                        {
                                            "name": "BrahmiScript"
                                        },
                                        {
                                            "name": "BugineseScript"
                                        },
                                        {
                                            "name": "BuhidScript"
                                        },
                                        {
                                            "name": "CanadianAboriginalScript"
                                        },
                                        {
                                            "name": "CarianScript"
                                        },
                                        {
                                            "name": "ChakmaScript"
                                        },
                                        {
                                            "name": "ChamScript"
                                        },
                                        {
                                            "name": "CopticScript"
                                        },
                                        {
                                            "name": "CypriotScript"
                                        },
                                        {
                                            "name": "EgyptianHieroglyphsScript"
                                        },
                                        {
                                            "name": "FraserScript"
                                        },
                                        {
                                            "name": "GlagoliticScript"
                                        },
                                        {
                                            "name": "GothicScript"
                                        },
                                        {
                                            "name": "HanScript"
                                        },
                                        {
                                            "name": "HangulScript"
                                        },
                                        {
                                            "name": "HanunooScript"
                                        },
                                        {
                                            "name": "ImperialAramaicScript"
                                        },
                                        {
                                            "name": "InscriptionalPahlaviScript"
                                        },
                                        {
                                            "name": "InscriptionalParthianScript"
                                        },
                                        {
                                            "name": "JavaneseScript"
                                        },
                                        {
                                            "name": "KaithiScript"
                                        },
                                        {
                                            "name": "KatakanaScript"
                                        },
                                        {
                                            "name": "KayahLiScript"
                                        },
                                        {
                                            "name": "KharoshthiScript"
                                        },
                                        {
                                            "name": "LannaScript"
                                        },
                                        {
                                            "name": "LepchaScript"
                                        },
                                        {
                                            "name": "LimbuScript"
                                        },
                                        {
                                            "name": "LinearBScript"
                                        },
                                        {
                                            "name": "LycianScript"
                                        },
                                        {
                                            "name": "LydianScript"
                                        },
                                        {
                                            "name": "MandaeanScript"
                                        },
                                        {
                                            "name": "MeiteiMayekScript"
                                        },
                                        {
                                            "name": "MeroiticScript"
                                        },
                                        {
                                            "name": "MeroiticCursiveScript"
                                        },
                                        {
                                            "name": "NkoScript"
                                        },
                                        {
                                            "name": "NewTaiLueScript"
                                        },
                                        {
                                            "name": "OghamScript"
                                        },
                                        {
                                            "name": "OlChikiScript"
                                        },
                                        {
                                            "name": "OldItalicScript"
                                        },
                                        {
                                            "name": "OldPersianScript"
                                        },
                                        {
                                            "name": "OldSouthArabianScript"
                                        },
                                        {
                                            "name": "OrkhonScript"
                                        },
                                        {
                                            "name": "OsmanyaScript"
                                        },
                                        {
                                            "name": "PhagsPaScript"
                                        },
                                        {
                                            "name": "PhoenicianScript"
                                        },
                                        {
                                            "name": "PollardPhoneticScript"
                                        },
                                        {
                                            "name": "RejangScript"
                                        },
                                        {
                                            "name": "RunicScript"
                                        },
                                        {
                                            "name": "SamaritanScript"
                                        },
                                        {
                                            "name": "SaurashtraScript"
                                        },
                                        {
                                            "name": "SharadaScript"
                                        },
                                        {
                                            "name": "ShavianScript"
                                        },
                                        {
                                            "name": "SoraSompengScript"
                                        },
                                        {
                                            "name": "CuneiformScript"
                                        },
                                        {
                                            "name": "SundaneseScript"
                                        },
                                        {
                                            "name": "SylotiNagriScript"
                                        },
                                        {
                                            "name": "TagalogScript"
                                        },
                                        {
                                            "name": "TagbanwaScript"
                                        },
                                        {
                                            "name": "TaiLeScript"
                                        },
                                        {
                                            "name": "TaiVietScript"
                                        },
                                        {
                                            "name": "TakriScript"
                                        },
                                        {
                                            "name": "UgariticScript"
                                        },
                                        {
                                            "name": "BrailleScript"
                                        },
                                        {
                                            "name": "HiraganaScript"
                                        },
                                        {
                                            "name": "CaucasianAlbanianScript"
                                        },
                                        {
                                            "name": "BassaVahScript"
                                        },
                                        {
                                            "name": "DuployanScript"
                                        },
                                        {
                                            "name": "ElbasanScript"
                                        },
                                        {
                                            "name": "GranthaScript"
                                        },
                                        {
                                            "name": "PahawhHmongScript"
                                        },
                                        {
                                            "name": "KhojkiScript"
                                        },
                                        {
                                            "name": "LinearAScript"
                                        },
                                        {
                                            "name": "MahajaniScript"
                                        },
                                        {
                                            "name": "ManichaeanScript"
                                        },
                                        {
                                            "name": "MendeKikakuiScript"
                                        },
                                        {
                                            "name": "ModiScript"
                                        },
                                        {
                                            "name": "MroScript"
                                        },
                                        {
                                            "name": "OldNorthArabianScript"
                                        },
                                        {
                                            "name": "NabataeanScript"
                                        },
                                        {
                                            "name": "PalmyreneScript"
                                        },
                                        {
                                            "name": "PauCinHauScript"
                                        },
                                        {
                                            "name": "OldPermicScript"
                                        },
                                        {
                                            "name": "PsalterPahlaviScript"
                                        },
                                        {
                                            "name": "SiddhamScript"
                                        },
                                        {
                                            "name": "KhudawadiScript"
                                        },
                                        {
                                            "name": "TirhutaScript"
                                        },
                                        {
                                            "name": "VarangKshitiScript"
                                        },
                                        {
                                            "name": "AhomScript"
                                        },
                                        {
                                            "name": "AnatolianHieroglyphsScript"
                                        },
                                        {
                                            "name": "HatranScript"
                                        },
                                        {
                                            "name": "MultaniScript"
                                        },
                                        {
                                            "name": "OldHungarianScript"
                                        },
                                        {
                                            "name": "SignWritingScript"
                                        },
                                        {
                                            "name": "AdlamScript"
                                        },
                                        {
                                            "name": "BhaiksukiScript"
                                        },
                                        {
                                            "name": "MarchenScript"
                                        },
                                        {
                                            "name": "NewaScript"
                                        },
                                        {
                                            "name": "OsageScript"
                                        },
                                        {
                                            "name": "TangutScript"
                                        },
                                        {
                                            "name": "HanWithBopomofoScript"
                                        },
                                        {
                                            "name": "JamoScript"
                                        },
                                        {
                                            "name": "SimplifiedChineseScript"
                                        },
                                        {
                                            "name": "TraditionalChineseScript"
                                        },
                                        {
                                            "name": "LastScript"
                                        }
                                    ],
                                    "name": "Script",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "AnyCountry"
                                        },
                                        {
                                            "name": "Afghanistan"
                                        },
                                        {
                                            "name": "Albania"
                                        },
                                        {
                                            "name": "Algeria"
                                        },
                                        {
                                            "name": "AmericanSamoa"
                                        },
                                        {
                                            "name": "Andorra"
                                        },
                                        {
                                            "name": "Angola"
                                        },
                                        {
                                            "name": "Anguilla"
                                        },
                                        {
                                            "name": "Antarctica"
                                        },
                                        {
                                            "name": "AntiguaAndBarbuda"
                                        },
                                        {
                                            "name": "Argentina"
                                        },
                                        {
                                            "name": "Armenia"
                                        },
                                        {
                                            "name": "Aruba"
                                        },
                                        {
                                            "name": "Australia"
                                        },
                                        {
                                            "name": "Austria"
                                        },
                                        {
                                            "name": "Azerbaijan"
                                        },
                                        {
                                            "name": "Bahamas"
                                        },
                                        {
                                            "name": "Bahrain"
                                        },
                                        {
                                            "name": "Bangladesh"
                                        },
                                        {
                                            "name": "Barbados"
                                        },
                                        {
                                            "name": "Belarus"
                                        },
                                        {
                                            "name": "Belgium"
                                        },
                                        {
                                            "name": "Belize"
                                        },
                                        {
                                            "name": "Benin"
                                        },
                                        {
                                            "name": "Bermuda"
                                        },
                                        {
                                            "name": "Bhutan"
                                        },
                                        {
                                            "name": "Bolivia"
                                        },
                                        {
                                            "name": "BosniaAndHerzegowina"
                                        },
                                        {
                                            "name": "Botswana"
                                        },
                                        {
                                            "name": "BouvetIsland"
                                        },
                                        {
                                            "name": "Brazil"
                                        },
                                        {
                                            "name": "BritishIndianOceanTerritory"
                                        },
                                        {
                                            "name": "Brunei"
                                        },
                                        {
                                            "name": "Bulgaria"
                                        },
                                        {
                                            "name": "BurkinaFaso"
                                        },
                                        {
                                            "name": "Burundi"
                                        },
                                        {
                                            "name": "Cambodia"
                                        },
                                        {
                                            "name": "Cameroon"
                                        },
                                        {
                                            "name": "Canada"
                                        },
                                        {
                                            "name": "CapeVerde"
                                        },
                                        {
                                            "name": "CaymanIslands"
                                        },
                                        {
                                            "name": "CentralAfricanRepublic"
                                        },
                                        {
                                            "name": "Chad"
                                        },
                                        {
                                            "name": "Chile"
                                        },
                                        {
                                            "name": "China"
                                        },
                                        {
                                            "name": "ChristmasIsland"
                                        },
                                        {
                                            "name": "CocosIslands"
                                        },
                                        {
                                            "name": "Colombia"
                                        },
                                        {
                                            "name": "Comoros"
                                        },
                                        {
                                            "name": "CongoKinshasa"
                                        },
                                        {
                                            "name": "CongoBrazzaville"
                                        },
                                        {
                                            "name": "CookIslands"
                                        },
                                        {
                                            "name": "CostaRica"
                                        },
                                        {
                                            "name": "IvoryCoast"
                                        },
                                        {
                                            "name": "Croatia"
                                        },
                                        {
                                            "name": "Cuba"
                                        },
                                        {
                                            "name": "Cyprus"
                                        },
                                        {
                                            "name": "CzechRepublic"
                                        },
                                        {
                                            "name": "Denmark"
                                        },
                                        {
                                            "name": "Djibouti"
                                        },
                                        {
                                            "name": "Dominica"
                                        },
                                        {
                                            "name": "DominicanRepublic"
                                        },
                                        {
                                            "name": "EastTimor"
                                        },
                                        {
                                            "name": "Ecuador"
                                        },
                                        {
                                            "name": "Egypt"
                                        },
                                        {
                                            "name": "ElSalvador"
                                        },
                                        {
                                            "name": "EquatorialGuinea"
                                        },
                                        {
                                            "name": "Eritrea"
                                        },
                                        {
                                            "name": "Estonia"
                                        },
                                        {
                                            "name": "Ethiopia"
                                        },
                                        {
                                            "name": "FalklandIslands"
                                        },
                                        {
                                            "name": "FaroeIslands"
                                        },
                                        {
                                            "name": "Fiji"
                                        },
                                        {
                                            "name": "Finland"
                                        },
                                        {
                                            "name": "France"
                                        },
                                        {
                                            "name": "Guernsey"
                                        },
                                        {
                                            "name": "FrenchGuiana"
                                        },
                                        {
                                            "name": "FrenchPolynesia"
                                        },
                                        {
                                            "name": "FrenchSouthernTerritories"
                                        },
                                        {
                                            "name": "Gabon"
                                        },
                                        {
                                            "name": "Gambia"
                                        },
                                        {
                                            "name": "Georgia"
                                        },
                                        {
                                            "name": "Germany"
                                        },
                                        {
                                            "name": "Ghana"
                                        },
                                        {
                                            "name": "Gibraltar"
                                        },
                                        {
                                            "name": "Greece"
                                        },
                                        {
                                            "name": "Greenland"
                                        },
                                        {
                                            "name": "Grenada"
                                        },
                                        {
                                            "name": "Guadeloupe"
                                        },
                                        {
                                            "name": "Guam"
                                        },
                                        {
                                            "name": "Guatemala"
                                        },
                                        {
                                            "name": "Guinea"
                                        },
                                        {
                                            "name": "GuineaBissau"
                                        },
                                        {
                                            "name": "Guyana"
                                        },
                                        {
                                            "name": "Haiti"
                                        },
                                        {
                                            "name": "HeardAndMcDonaldIslands"
                                        },
                                        {
                                            "name": "Honduras"
                                        },
                                        {
                                            "name": "HongKong"
                                        },
                                        {
                                            "name": "Hungary"
                                        },
                                        {
                                            "name": "Iceland"
                                        },
                                        {
                                            "name": "India"
                                        },
                                        {
                                            "name": "Indonesia"
                                        },
                                        {
                                            "name": "Iran"
                                        },
                                        {
                                            "name": "Iraq"
                                        },
                                        {
                                            "name": "Ireland"
                                        },
                                        {
                                            "name": "Israel"
                                        },
                                        {
                                            "name": "Italy"
                                        },
                                        {
                                            "name": "Jamaica"
                                        },
                                        {
                                            "name": "Japan"
                                        },
                                        {
                                            "name": "Jordan"
                                        },
                                        {
                                            "name": "Kazakhstan"
                                        },
                                        {
                                            "name": "Kenya"
                                        },
                                        {
                                            "name": "Kiribati"
                                        },
                                        {
                                            "name": "NorthKorea"
                                        },
                                        {
                                            "name": "SouthKorea"
                                        },
                                        {
                                            "name": "Kuwait"
                                        },
                                        {
                                            "name": "Kyrgyzstan"
                                        },
                                        {
                                            "name": "Laos"
                                        },
                                        {
                                            "name": "Latvia"
                                        },
                                        {
                                            "name": "Lebanon"
                                        },
                                        {
                                            "name": "Lesotho"
                                        },
                                        {
                                            "name": "Liberia"
                                        },
                                        {
                                            "name": "Libya"
                                        },
                                        {
                                            "name": "Liechtenstein"
                                        },
                                        {
                                            "name": "Lithuania"
                                        },
                                        {
                                            "name": "Luxembourg"
                                        },
                                        {
                                            "name": "Macau"
                                        },
                                        {
                                            "name": "Macedonia"
                                        },
                                        {
                                            "name": "Madagascar"
                                        },
                                        {
                                            "name": "Malawi"
                                        },
                                        {
                                            "name": "Malaysia"
                                        },
                                        {
                                            "name": "Maldives"
                                        },
                                        {
                                            "name": "Mali"
                                        },
                                        {
                                            "name": "Malta"
                                        },
                                        {
                                            "name": "MarshallIslands"
                                        },
                                        {
                                            "name": "Martinique"
                                        },
                                        {
                                            "name": "Mauritania"
                                        },
                                        {
                                            "name": "Mauritius"
                                        },
                                        {
                                            "name": "Mayotte"
                                        },
                                        {
                                            "name": "Mexico"
                                        },
                                        {
                                            "name": "Micronesia"
                                        },
                                        {
                                            "name": "Moldova"
                                        },
                                        {
                                            "name": "Monaco"
                                        },
                                        {
                                            "name": "Mongolia"
                                        },
                                        {
                                            "name": "Montserrat"
                                        },
                                        {
                                            "name": "Morocco"
                                        },
                                        {
                                            "name": "Mozambique"
                                        },
                                        {
                                            "name": "Myanmar"
                                        },
                                        {
                                            "name": "Namibia"
                                        },
                                        {
                                            "name": "NauruCountry"
                                        },
                                        {
                                            "name": "Nepal"
                                        },
                                        {
                                            "name": "Netherlands"
                                        },
                                        {
                                            "name": "CuraSao"
                                        },
                                        {
                                            "name": "NewCaledonia"
                                        },
                                        {
                                            "name": "NewZealand"
                                        },
                                        {
                                            "name": "Nicaragua"
                                        },
                                        {
                                            "name": "Niger"
                                        },
                                        {
                                            "name": "Nigeria"
                                        },
                                        {
                                            "name": "Niue"
                                        },
                                        {
                                            "name": "NorfolkIsland"
                                        },
                                        {
                                            "name": "NorthernMarianaIslands"
                                        },
                                        {
                                            "name": "Norway"
                                        },
                                        {
                                            "name": "Oman"
                                        },
                                        {
                                            "name": "Pakistan"
                                        },
                                        {
                                            "name": "Palau"
                                        },
                                        {
                                            "name": "PalestinianTerritories"
                                        },
                                        {
                                            "name": "Panama"
                                        },
                                        {
                                            "name": "PapuaNewGuinea"
                                        },
                                        {
                                            "name": "Paraguay"
                                        },
                                        {
                                            "name": "Peru"
                                        },
                                        {
                                            "name": "Philippines"
                                        },
                                        {
                                            "name": "Pitcairn"
                                        },
                                        {
                                            "name": "Poland"
                                        },
                                        {
                                            "name": "Portugal"
                                        },
                                        {
                                            "name": "PuertoRico"
                                        },
                                        {
                                            "name": "Qatar"
                                        },
                                        {
                                            "name": "Reunion"
                                        },
                                        {
                                            "name": "Romania"
                                        },
                                        {
                                            "name": "Russia"
                                        },
                                        {
                                            "name": "Rwanda"
                                        },
                                        {
                                            "name": "SaintKittsAndNevis"
                                        },
                                        {
                                            "name": "SaintLucia"
                                        },
                                        {
                                            "name": "SaintVincentAndTheGrenadines"
                                        },
                                        {
                                            "name": "Samoa"
                                        },
                                        {
                                            "name": "SanMarino"
                                        },
                                        {
                                            "name": "SaoTomeAndPrincipe"
                                        },
                                        {
                                            "name": "SaudiArabia"
                                        },
                                        {
                                            "name": "Senegal"
                                        },
                                        {
                                            "name": "Seychelles"
                                        },
                                        {
                                            "name": "SierraLeone"
                                        },
                                        {
                                            "name": "Singapore"
                                        },
                                        {
                                            "name": "Slovakia"
                                        },
                                        {
                                            "name": "Slovenia"
                                        },
                                        {
                                            "name": "SolomonIslands"
                                        },
                                        {
                                            "name": "Somalia"
                                        },
                                        {
                                            "name": "SouthAfrica"
                                        },
                                        {
                                            "name": "SouthGeorgiaAndTheSouthSandwichIslands"
                                        },
                                        {
                                            "name": "Spain"
                                        },
                                        {
                                            "name": "SriLanka"
                                        },
                                        {
                                            "name": "SaintHelena"
                                        },
                                        {
                                            "name": "SaintPierreAndMiquelon"
                                        },
                                        {
                                            "name": "Sudan"
                                        },
                                        {
                                            "name": "Suriname"
                                        },
                                        {
                                            "name": "SvalbardAndJanMayenIslands"
                                        },
                                        {
                                            "name": "Swaziland"
                                        },
                                        {
                                            "name": "Sweden"
                                        },
                                        {
                                            "name": "Switzerland"
                                        },
                                        {
                                            "name": "Syria"
                                        },
                                        {
                                            "name": "Taiwan"
                                        },
                                        {
                                            "name": "Tajikistan"
                                        },
                                        {
                                            "name": "Tanzania"
                                        },
                                        {
                                            "name": "Thailand"
                                        },
                                        {
                                            "name": "Togo"
                                        },
                                        {
                                            "name": "TokelauCountry"
                                        },
                                        {
                                            "name": "Tonga"
                                        },
                                        {
                                            "name": "TrinidadAndTobago"
                                        },
                                        {
                                            "name": "Tunisia"
                                        },
                                        {
                                            "name": "Turkey"
                                        },
                                        {
                                            "name": "Turkmenistan"
                                        },
                                        {
                                            "name": "TurksAndCaicosIslands"
                                        },
                                        {
                                            "name": "TuvaluCountry"
                                        },
                                        {
                                            "name": "Uganda"
                                        },
                                        {
                                            "name": "Ukraine"
                                        },
                                        {
                                            "name": "UnitedArabEmirates"
                                        },
                                        {
                                            "name": "UnitedKingdom"
                                        },
                                        {
                                            "name": "UnitedStates"
                                        },
                                        {
                                            "name": "UnitedStatesMinorOutlyingIslands"
                                        },
                                        {
                                            "name": "Uruguay"
                                        },
                                        {
                                            "name": "Uzbekistan"
                                        },
                                        {
                                            "name": "Vanuatu"
                                        },
                                        {
                                            "name": "VaticanCityState"
                                        },
                                        {
                                            "name": "Venezuela"
                                        },
                                        {
                                            "name": "Vietnam"
                                        },
                                        {
                                            "name": "BritishVirginIslands"
                                        },
                                        {
                                            "name": "UnitedStatesVirginIslands"
                                        },
                                        {
                                            "name": "WallisAndFutunaIslands"
                                        },
                                        {
                                            "name": "WesternSahara"
                                        },
                                        {
                                            "name": "Yemen"
                                        },
                                        {
                                            "name": "CanaryIslands"
                                        },
                                        {
                                            "name": "Zambia"
                                        },
                                        {
                                            "name": "Zimbabwe"
                                        },
                                        {
                                            "name": "ClippertonIsland"
                                        },
                                        {
                                            "name": "Montenegro"
                                        },
                                        {
                                            "name": "Serbia"
                                        },
                                        {
                                            "name": "SaintBarthelemy"
                                        },
                                        {
                                            "name": "SaintMartin"
                                        },
                                        {
                                            "name": "LatinAmericaAndTheCaribbean"
                                        },
                                        {
                                            "name": "AscensionIsland"
                                        },
                                        {
                                            "name": "AlandIslands"
                                        },
                                        {
                                            "name": "DiegoGarcia"
                                        },
                                        {
                                            "name": "CeutaAndMelilla"
                                        },
                                        {
                                            "name": "IsleOfMan"
                                        },
                                        {
                                            "name": "Jersey"
                                        },
                                        {
                                            "name": "TristanDaCunha"
                                        },
                                        {
                                            "name": "SouthSudan"
                                        },
                                        {
                                            "name": "Bonaire"
                                        },
                                        {
                                            "name": "SintMaarten"
                                        },
                                        {
                                            "name": "Kosovo"
                                        },
                                        {
                                            "name": "EuropeanUnion"
                                        },
                                        {
                                            "name": "OutlyingOceania"
                                        },
                                        {
                                            "name": "Tokelau"
                                        },
                                        {
                                            "name": "Tuvalu"
                                        },
                                        {
                                            "name": "DemocraticRepublicOfCongo"
                                        },
                                        {
                                            "name": "PeoplesRepublicOfCongo"
                                        },
                                        {
                                            "name": "DemocraticRepublicOfKorea"
                                        },
                                        {
                                            "name": "RepublicOfKorea"
                                        },
                                        {
                                            "name": "RussianFederation"
                                        },
                                        {
                                            "name": "SyrianArabRepublic"
                                        },
                                        {
                                            "name": "LastCountry"
                                        }
                                    ],
                                    "name": "Country",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "MetricSystem"
                                        },
                                        {
                                            "name": "ImperialUSSystem"
                                        },
                                        {
                                            "name": "ImperialUKSystem"
                                        },
                                        {
                                            "name": "ImperialSystem"
                                        }
                                    ],
                                    "name": "MeasurementSystem",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "LongFormat"
                                        },
                                        {
                                            "name": "ShortFormat"
                                        },
                                        {
                                            "name": "NarrowFormat"
                                        }
                                    ],
                                    "name": "FormatType",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "DefaultNumberOptions"
                                        },
                                        {
                                            "name": "OmitGroupSeparator"
                                        },
                                        {
                                            "name": "RejectGroupSeparator"
                                        },
                                        {
                                            "name": "OmitLeadingZeroInExponent"
                                        },
                                        {
                                            "name": "RejectLeadingZeroInExponent"
                                        },
                                        {
                                            "name": "IncludeTrailingZeroesAfterDot"
                                        },
                                        {
                                            "name": "RejectTrailingZeroesAfterDot"
                                        }
                                    ],
                                    "name": "NumberOption",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "FloatingPointShortest"
                                        }
                                    ],
                                    "name": "FloatingPointPrecisionOption",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "CurrencyIsoCode"
                                        },
                                        {
                                            "name": "CurrencySymbol"
                                        },
                                        {
                                            "name": "CurrencyDisplayName"
                                        }
                                    ],
                                    "name": "CurrencySymbolFormat",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "DataSizeBase1000"
                                        },
                                        {
                                            "name": "DataSizeSIQuantifiers"
                                        },
                                        {
                                            "name": "DataSizeIecFormat"
                                        },
                                        {
                                            "name": "DataSizeTraditionalFormat"
                                        },
                                        {
                                            "name": "DataSizeSIFormat"
                                        }
                                    ],
                                    "name": "DataSizeFormat",
                                    "type": "enum"
                                },
                                {
                                    "name": "QLocale",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLocale",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLocale",
                                    "parameters": [
                                        "QLocale::Language",
                                        "QLocale::Country"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLocale",
                                    "parameters": [
                                        "QLocale::Language",
                                        "QLocale::Script",
                                        "QLocale::Country"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QLocale",
                                    "parameters": [
                                        "const QLocale &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QLocale &&"
                                    ],
                                    "returns": "QLocale &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QLocale &"
                                    ],
                                    "returns": "QLocale &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QLocale",
                                    "type": "destructor"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QLocale &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "language",
                                    "parameters": [
                                    ],
                                    "returns": "QLocale::Language",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "script",
                                    "parameters": [
                                    ],
                                    "returns": "QLocale::Script",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "country",
                                    "parameters": [
                                    ],
                                    "returns": "QLocale::Country",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "name",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bcp47Name",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nativeLanguageName",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "nativeCountryName",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toShort",
                                    "parameters": [
                                        "const QString &",
                                        "bool *"
                                    ],
                                    "returns": "short",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUShort",
                                    "parameters": [
                                        "const QString &",
                                        "bool *"
                                    ],
                                    "returns": "ushort",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toInt",
                                    "parameters": [
                                        "const QString &",
                                        "bool *"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUInt",
                                    "parameters": [
                                        "const QString &",
                                        "bool *"
                                    ],
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLongLong",
                                    "parameters": [
                                        "const QString &",
                                        "bool *"
                                    ],
                                    "returns": "qlonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toULongLong",
                                    "parameters": [
                                        "const QString &",
                                        "bool *"
                                    ],
                                    "returns": "qulonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toFloat",
                                    "parameters": [
                                        "const QString &",
                                        "bool *"
                                    ],
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDouble",
                                    "parameters": [
                                        "const QString &",
                                        "bool *"
                                    ],
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toShort",
                                    "parameters": [
                                        "const QStringRef &",
                                        "bool *"
                                    ],
                                    "returns": "short",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUShort",
                                    "parameters": [
                                        "const QStringRef &",
                                        "bool *"
                                    ],
                                    "returns": "ushort",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toInt",
                                    "parameters": [
                                        "const QStringRef &",
                                        "bool *"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUInt",
                                    "parameters": [
                                        "const QStringRef &",
                                        "bool *"
                                    ],
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLongLong",
                                    "parameters": [
                                        "const QStringRef &",
                                        "bool *"
                                    ],
                                    "returns": "qlonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toULongLong",
                                    "parameters": [
                                        "const QStringRef &",
                                        "bool *"
                                    ],
                                    "returns": "qulonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toFloat",
                                    "parameters": [
                                        "const QStringRef &",
                                        "bool *"
                                    ],
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDouble",
                                    "parameters": [
                                        "const QStringRef &",
                                        "bool *"
                                    ],
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toShort",
                                    "parameters": [
                                        "QStringView",
                                        "bool *"
                                    ],
                                    "returns": "short",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUShort",
                                    "parameters": [
                                        "QStringView",
                                        "bool *"
                                    ],
                                    "returns": "ushort",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toInt",
                                    "parameters": [
                                        "QStringView",
                                        "bool *"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUInt",
                                    "parameters": [
                                        "QStringView",
                                        "bool *"
                                    ],
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLongLong",
                                    "parameters": [
                                        "QStringView",
                                        "bool *"
                                    ],
                                    "returns": "qlonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toULongLong",
                                    "parameters": [
                                        "QStringView",
                                        "bool *"
                                    ],
                                    "returns": "qulonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toFloat",
                                    "parameters": [
                                        "QStringView",
                                        "bool *"
                                    ],
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDouble",
                                    "parameters": [
                                        "QStringView",
                                        "bool *"
                                    ],
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "qlonglong"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "qulonglong"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "short"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "ushort"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "double",
                                        "char",
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "float",
                                        "char",
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QDate &",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QTime &",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QDateTime &",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QDate &",
                                        "QStringView"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QTime &",
                                        "QStringView"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QDateTime &",
                                        "QStringView"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QDate &",
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QTime &",
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                        "const QDateTime &",
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dateFormat",
                                    "parameters": [
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "timeFormat",
                                    "parameters": [
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dateTimeFormat",
                                    "parameters": [
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDate",
                                    "parameters": [
                                        "const QString &",
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toTime",
                                    "parameters": [
                                        "const QString &",
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDateTime",
                                    "parameters": [
                                        "const QString &",
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDate",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toTime",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "QTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDateTime",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "decimalPoint",
                                    "parameters": [
                                    ],
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "groupSeparator",
                                    "parameters": [
                                    ],
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "percent",
                                    "parameters": [
                                    ],
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "zeroDigit",
                                    "parameters": [
                                    ],
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "negativeSign",
                                    "parameters": [
                                    ],
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "positiveSign",
                                    "parameters": [
                                    ],
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exponential",
                                    "parameters": [
                                    ],
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "monthName",
                                    "parameters": [
                                        "int",
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "standaloneMonthName",
                                    "parameters": [
                                        "int",
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dayName",
                                    "parameters": [
                                        "int",
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "standaloneDayName",
                                    "parameters": [
                                        "int",
                                        "QLocale::FormatType"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "firstDayOfWeek",
                                    "parameters": [
                                    ],
                                    "returns": "Qt::DayOfWeek",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "weekdays",
                                    "parameters": [
                                    ],
                                    "returns": "QList<Qt::DayOfWeek>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "amText",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pmText",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "measurementSystem",
                                    "parameters": [
                                    ],
                                    "returns": "QLocale::MeasurementSystem",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "textDirection",
                                    "parameters": [
                                    ],
                                    "returns": "Qt::LayoutDirection",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUpper",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLower",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currencySymbol",
                                    "parameters": [
                                        "QLocale::CurrencySymbolFormat"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "parameters": [
                                        "qlonglong",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "parameters": [
                                        "qulonglong",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "parameters": [
                                        "short",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "parameters": [
                                        "ushort",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "parameters": [
                                        "int",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "parameters": [
                                        "uint",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "parameters": [
                                        "double",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "parameters": [
                                        "double",
                                        "const QString &",
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "parameters": [
                                        "float",
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCurrencyString",
                                    "parameters": [
                                        "float",
                                        "const QString &",
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "formattedDataSize",
                                    "parameters": [
                                        "qint64",
                                        "int",
                                        "QLocale::DataSizeFormats"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "uiLanguages",
                                    "parameters": [
                                    ],
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QLocale &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QLocale &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "languageToString",
                                    "parameters": [
                                        "QLocale::Language"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "countryToString",
                                    "parameters": [
                                        "QLocale::Country"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "scriptToString",
                                    "parameters": [
                                        "QLocale::Script"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setDefault",
                                    "parameters": [
                                        "const QLocale &"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "c",
                                    "parameters": [
                                    ],
                                    "returns": "QLocale",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "system",
                                    "parameters": [
                                    ],
                                    "returns": "QLocale",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "matchingLocales",
                                    "parameters": [
                                        "QLocale::Language",
                                        "QLocale::Script",
                                        "QLocale::Country"
                                    ],
                                    "returns": "QList<QLocale>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "countriesForLanguage",
                                    "parameters": [
                                        "QLocale::Language"
                                    ],
                                    "returns": "QList<QLocale::Country>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setNumberOptions",
                                    "parameters": [
                                        "QLocale::NumberOptions"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "numberOptions",
                                    "parameters": [
                                    ],
                                    "returns": "QLocale::NumberOptions",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "StandardQuotation"
                                        },
                                        {
                                            "name": "AlternateQuotation"
                                        }
                                    ],
                                    "name": "QuotationStyle",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "quoteString",
                                    "parameters": [
                                        "const QString &",
                                        "QLocale::QuotationStyle"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "quoteString",
                                    "parameters": [
                                        "const QStringRef &",
                                        "QLocale::QuotationStyle"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "createSeparatedList",
                                    "parameters": [
                                        "const QStringList &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                }
                            ],
                            "name": "QLocale",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QLocale &",
                                "QLocale &"
                            ],
                            "returns": "void",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QLocale::NumberOptions::enum_type",
                                "QLocale::NumberOptions::enum_type"
                            ],
                            "returns": "QFlags<QLocale::NumberOptions::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QLocale::NumberOptions::enum_type",
                                "QFlags<QLocale::NumberOptions::enum_type>"
                            ],
                            "returns": "QFlags<QLocale::NumberOptions::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QLocale::NumberOptions::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QLocale &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QLocale &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QLocale &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QLocale>",
                    "name": "locale",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "const": true,
                                    "name": "metaObject",
                                    "parameters": [
                                    ],
                                    "returns": "const QMetaObject *",
                                    "type": "function"
                                },
                                {
                                    "name": "tr",
                                    "parameters": [
                                        "const char *",
                                        "const char *",
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "trUtf8",
                                    "parameters": [
                                        "const char *",
                                        "const char *",
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "QObject",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QObject",
                                    "type": "destructor"
                                },
                                {
                                    "name": "event",
                                    "parameters": [
                                        "QEvent *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "eventFilter",
                                    "parameters": [
                                        "QObject *",
                                        "QEvent *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "objectName",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setObjectName",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isWidgetType",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isWindowType",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "signalsBlocked",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "blockSignals",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "thread",
                                    "parameters": [
                                    ],
                                    "returns": "QThread *",
                                    "type": "function"
                                },
                                {
                                    "name": "moveToThread",
                                    "parameters": [
                                        "QThread *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "startTimer",
                                    "parameters": [
                                        "int",
                                        "Qt::TimerType"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "startTimer",
                                    "parameters": [
                                        "std::chrono::milliseconds",
                                        "Qt::TimerType"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "killTimer",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "children",
                                    "parameters": [
                                    ],
                                    "returns": "const QObjectList &",
                                    "type": "function"
                                },
                                {
                                    "name": "setParent",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "installEventFilter",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "removeEventFilter",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "connect",
                                    "parameters": [
                                        "const QObject *",
                                        "const char *",
                                        "const QObject *",
                                        "const char *",
                                        "Qt::ConnectionType"
                                    ],
                                    "returns": "QMetaObject::Connection",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "connect",
                                    "parameters": [
                                        "const QObject *",
                                        "const QMetaMethod &",
                                        "const QObject *",
                                        "const QMetaMethod &",
                                        "Qt::ConnectionType"
                                    ],
                                    "returns": "QMetaObject::Connection",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "connect",
                                    "parameters": [
                                        "const QObject *",
                                        "const char *",
                                        "const char *",
                                        "Qt::ConnectionType"
                                    ],
                                    "returns": "QMetaObject::Connection",
                                    "type": "function"
                                },
                                {
                                    "name": "disconnect",
                                    "parameters": [
                                        "const QObject *",
                                        "const char *",
                                        "const QObject *",
                                        "const char *"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "disconnect",
                                    "parameters": [
                                        "const QObject *",
                                        "const QMetaMethod &",
                                        "const QObject *",
                                        "const QMetaMethod &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "disconnect",
                                    "parameters": [
                                        "const char *",
                                        "const QObject *",
                                        "const char *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "disconnect",
                                    "parameters": [
                                        "const QObject *",
                                        "const char *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "disconnect",
                                    "parameters": [
                                        "const QMetaObject::Connection &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dumpObjectTree",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dumpObjectInfo",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setProperty",
                                    "parameters": [
                                        "const char *",
                                        "const QVariant &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "property",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "returns": "QVariant",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dynamicPropertyNames",
                                    "parameters": [
                                    ],
                                    "returns": "QList<QByteArray>",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "registerUserData",
                                    "parameters": [
                                    ],
                                    "returns": "uint",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "setUserData",
                                    "parameters": [
                                        "uint",
                                        "QObjectUserData *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "userData",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "QObjectUserData *",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "destroyed",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "objectNameChanged",
                                    "parameters": [
                                        "const QString &",
                                        "QObject::QPrivateSignal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "parent",
                                    "parameters": [
                                    ],
                                    "returns": "QObject *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inherits",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "deleteLater",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                }
                            ],
                            "name": "QObject",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QObject *"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QSignalBlocker",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSignalBlocker",
                                    "parameters": [
                                        "QObject &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QSignalBlocker",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QSignalBlocker",
                                    "parameters": [
                                        "QSignalBlocker &&"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QSignalBlocker &&"
                                    ],
                                    "returns": "QSignalBlocker &",
                                    "type": "function"
                                },
                                {
                                    "name": "reblock",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "unblock",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                }
                            ],
                            "name": "QSignalBlocker",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QObject>",
                    "name": "object",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "VarUnknown"
                                        },
                                        {
                                            "name": "NCS"
                                        },
                                        {
                                            "name": "DCE"
                                        },
                                        {
                                            "name": "Microsoft"
                                        },
                                        {
                                            "name": "Reserved"
                                        }
                                    ],
                                    "name": "Variant",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "VerUnknown"
                                        },
                                        {
                                            "name": "Time"
                                        },
                                        {
                                            "name": "EmbeddedPOSIX"
                                        },
                                        {
                                            "name": "Md5"
                                        },
                                        {
                                            "name": "Name"
                                        },
                                        {
                                            "name": "Random"
                                        },
                                        {
                                            "name": "Sha1"
                                        }
                                    ],
                                    "name": "Version",
                                    "type": "enum"
                                },
                                {
                                    "name": "QUuid",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QUuid",
                                    "parameters": [
                                        "const QUuid &"
                                    ],
                                    "returns": "",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QUuid",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QUuid",
                                    "parameters": [
                                        "uint",
                                        "ushort",
                                        "ushort",
                                        "uchar",
                                        "uchar",
                                        "uchar",
                                        "uchar",
                                        "uchar",
                                        "uchar",
                                        "uchar",
                                        "uchar"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QUuid",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "fromString",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromString",
                                    "parameters": [
                                        "QLatin1String"
                                    ],
                                    "returns": "QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "QUuid",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "QUuid",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "toByteArray",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRfc4122",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "fromRfc4122",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QUuid &"
                                    ],
                                    "returns": "QUuid &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QUuid &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QUuid &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "parameters": [
                                        "const QUuid &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "parameters": [
                                        "const QUuid &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "QUuid",
                                    "parameters": [
                                        "const GUID &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const GUID &"
                                    ],
                                    "returns": "QUuid &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const GUID &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const GUID &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "createUuid",
                                    "parameters": [
                                    ],
                                    "returns": "QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "createUuidV3",
                                    "parameters": [
                                        "const QUuid &",
                                        "const QByteArray &"
                                    ],
                                    "returns": "QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "createUuidV5",
                                    "parameters": [
                                        "const QUuid &",
                                        "const QByteArray &"
                                    ],
                                    "returns": "QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "createUuidV3",
                                    "parameters": [
                                        "const QUuid &",
                                        "const QString &"
                                    ],
                                    "returns": "QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "createUuidV5",
                                    "parameters": [
                                        "const QUuid &",
                                        "const QString &"
                                    ],
                                    "returns": "QUuid",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "variant",
                                    "parameters": [
                                    ],
                                    "returns": "QUuid::Variant",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "version",
                                    "parameters": [
                                    ],
                                    "returns": "QUuid::Version",
                                    "type": "function"
                                }
                            ],
                            "name": "QUuid",
                            "type": "class"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QUuid &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QUuid &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QUuid &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "qHash",
                            "parameters": [
                                "const QUuid &",
                                "uint"
                            ],
                            "returns": "uint",
                            "type": "function"
                        },
                        {
                            "name": "operator<=",
                            "parameters": [
                                "const QUuid &",
                                "const QUuid &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator>=",
                            "parameters": [
                                "const QUuid &",
                                "const QUuid &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QUuid>",
                    "name": "uuid",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "cppincludes": "yasl/core/variant-functions.h",
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Invalid"
                                        },
                                        {
                                            "name": "Bool"
                                        },
                                        {
                                            "name": "Int"
                                        },
                                        {
                                            "name": "UInt"
                                        },
                                        {
                                            "name": "LongLong"
                                        },
                                        {
                                            "name": "ULongLong"
                                        },
                                        {
                                            "name": "Double"
                                        },
                                        {
                                            "name": "Char"
                                        },
                                        {
                                            "name": "Map"
                                        },
                                        {
                                            "name": "List"
                                        },
                                        {
                                            "name": "String"
                                        },
                                        {
                                            "name": "StringList"
                                        },
                                        {
                                            "name": "ByteArray"
                                        },
                                        {
                                            "name": "BitArray"
                                        },
                                        {
                                            "name": "Date"
                                        },
                                        {
                                            "name": "Time"
                                        },
                                        {
                                            "name": "DateTime"
                                        },
                                        {
                                            "name": "Url"
                                        },
                                        {
                                            "name": "Locale"
                                        },
                                        {
                                            "name": "Rect"
                                        },
                                        {
                                            "name": "RectF"
                                        },
                                        {
                                            "name": "Size"
                                        },
                                        {
                                            "name": "SizeF"
                                        },
                                        {
                                            "name": "Line"
                                        },
                                        {
                                            "name": "LineF"
                                        },
                                        {
                                            "name": "Point"
                                        },
                                        {
                                            "name": "PointF"
                                        },
                                        {
                                            "name": "RegExp"
                                        },
                                        {
                                            "name": "RegularExpression"
                                        },
                                        {
                                            "name": "Hash"
                                        },
                                        {
                                            "name": "EasingCurve"
                                        },
                                        {
                                            "name": "Uuid"
                                        },
                                        {
                                            "name": "ModelIndex"
                                        },
                                        {
                                            "name": "PersistentModelIndex"
                                        },
                                        {
                                            "name": "LastCoreType"
                                        },
                                        {
                                            "name": "Font"
                                        },
                                        {
                                            "name": "Pixmap"
                                        },
                                        {
                                            "name": "Brush"
                                        },
                                        {
                                            "name": "Color"
                                        },
                                        {
                                            "name": "Palette"
                                        },
                                        {
                                            "name": "Image"
                                        },
                                        {
                                            "name": "Polygon"
                                        },
                                        {
                                            "name": "Region"
                                        },
                                        {
                                            "name": "Bitmap"
                                        },
                                        {
                                            "name": "Cursor"
                                        },
                                        {
                                            "name": "KeySequence"
                                        },
                                        {
                                            "name": "Pen"
                                        },
                                        {
                                            "name": "TextLength"
                                        },
                                        {
                                            "name": "TextFormat"
                                        },
                                        {
                                            "name": "Matrix"
                                        },
                                        {
                                            "name": "Transform"
                                        },
                                        {
                                            "name": "Matrix4x4"
                                        },
                                        {
                                            "name": "Vector2D"
                                        },
                                        {
                                            "name": "Vector3D"
                                        },
                                        {
                                            "name": "Vector4D"
                                        },
                                        {
                                            "name": "Quaternion"
                                        },
                                        {
                                            "name": "PolygonF"
                                        },
                                        {
                                            "name": "Icon"
                                        },
                                        {
                                            "name": "LastGuiType"
                                        },
                                        {
                                            "name": "SizePolicy"
                                        },
                                        {
                                            "name": "UserType"
                                        },
                                        {
                                            "name": "LastType"
                                        }
                                    ],
                                    "name": "Type",
                                    "type": "enum"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QVariant",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "QVariant::Type"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "int",
                                        "const void *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "int",
                                        "const void *",
                                        "uint"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "QDataStream &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "checked": 0,
                                    "name": "QVariant",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "qlonglong"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "qulonglong"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "double"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "float"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QBitArray &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "QLatin1String"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QStringList &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QDate &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QTime &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QDateTime &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QList<QVariant> &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QMap<QString, QVariant> &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QHash<QString, QVariant> &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QSizeF &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QPointF &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QLine &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QLineF &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QRectF &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QLocale &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QRegExp &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QRegularExpression &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QUrl &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QEasingCurve &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QUuid &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QModelIndex &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QPersistentModelIndex &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QJsonValue &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QJsonObject &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QJsonArray &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "const QJsonDocument &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "returns": "QVariant &",
                                    "type": "function"
                                },
                                {
                                    "name": "QVariant",
                                    "parameters": [
                                        "QVariant &&"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QVariant &&"
                                    ],
                                    "returns": "QVariant &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QVariant &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "type",
                                    "parameters": [
                                    ],
                                    "returns": "QVariant::Type",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "userType",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "typeName",
                                    "parameters": [
                                    ],
                                    "returns": "const char *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "canConvert",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "convert",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "detach",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toInt",
                                    "parameters": [
                                        "bool *"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "va_toInt",
                                    "parameters": [
                                    ],
                                    "rename": "toInt",
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toUInt",
                                    "parameters": [
                                        "bool *"
                                    ],
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toLongLong",
                                    "parameters": [
                                        "bool *"
                                    ],
                                    "returns": "qlonglong",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toULongLong",
                                    "parameters": [
                                        "bool *"
                                    ],
                                    "returns": "qulonglong",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toBool",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toDouble",
                                    "parameters": [
                                        "bool *"
                                    ],
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "va_toDouble",
                                    "parameters": [
                                    ],
                                    "rename": "toDouble",
                                    "returns": "double",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "const": true,
                                    "name": "toFloat",
                                    "parameters": [
                                        "bool *"
                                    ],
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "binding": "free",
                                    "name": "va_toFloat",
                                    "parameters": [
                                    ],
                                    "rename": "toFloat",
                                    "returns": "float",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toReal",
                                    "parameters": [
                                        "bool *"
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toByteArray",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toBitArray",
                                    "parameters": [
                                    ],
                                    "returns": "QBitArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toStringList",
                                    "parameters": [
                                    ],
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toChar",
                                    "parameters": [
                                    ],
                                    "returns": "QChar",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDate",
                                    "parameters": [
                                    ],
                                    "returns": "QDate",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toTime",
                                    "parameters": [
                                    ],
                                    "returns": "QTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toDateTime",
                                    "parameters": [
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toList",
                                    "parameters": [
                                    ],
                                    "returns": "QList<QVariant>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toMap",
                                    "parameters": [
                                    ],
                                    "returns": "QMap<QString, QVariant>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toHash",
                                    "parameters": [
                                    ],
                                    "returns": "QHash<QString, QVariant>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPoint",
                                    "parameters": [
                                    ],
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPointF",
                                    "parameters": [
                                    ],
                                    "returns": "QPointF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRect",
                                    "parameters": [
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toSize",
                                    "parameters": [
                                    ],
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toSizeF",
                                    "parameters": [
                                    ],
                                    "returns": "QSizeF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLine",
                                    "parameters": [
                                    ],
                                    "returns": "QLine",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLineF",
                                    "parameters": [
                                    ],
                                    "returns": "QLineF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRectF",
                                    "parameters": [
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toLocale",
                                    "parameters": [
                                    ],
                                    "returns": "QLocale",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRegExp",
                                    "parameters": [
                                    ],
                                    "returns": "QRegExp",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRegularExpression",
                                    "parameters": [
                                    ],
                                    "returns": "QRegularExpression",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUrl",
                                    "parameters": [
                                    ],
                                    "returns": "QUrl",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toEasingCurve",
                                    "parameters": [
                                    ],
                                    "returns": "QEasingCurve",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toUuid",
                                    "parameters": [
                                    ],
                                    "returns": "QUuid",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toModelIndex",
                                    "parameters": [
                                    ],
                                    "returns": "QModelIndex",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toPersistentModelIndex",
                                    "parameters": [
                                    ],
                                    "returns": "QPersistentModelIndex",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toJsonValue",
                                    "parameters": [
                                    ],
                                    "returns": "QJsonValue",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toJsonObject",
                                    "parameters": [
                                    ],
                                    "returns": "QJsonObject",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toJsonArray",
                                    "parameters": [
                                    ],
                                    "returns": "QJsonArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toJsonDocument",
                                    "parameters": [
                                    ],
                                    "returns": "QJsonDocument",
                                    "type": "function"
                                },
                                {
                                    "name": "load",
                                    "parameters": [
                                        "QDataStream &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "save",
                                    "parameters": [
                                        "QDataStream &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "typeToName",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "const char *",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "nameToType",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "returns": "QVariant::Type",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "data",
                                    "parameters": [
                                    ],
                                    "returns": "void *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "constData",
                                    "parameters": [
                                    ],
                                    "returns": "const void *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "data",
                                    "parameters": [
                                    ],
                                    "returns": "const void *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<=",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator>=",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "create",
                                    "parameters": [
                                        "int",
                                        "const void *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cmp",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "compare",
                                    "parameters": [
                                        "const QVariant &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "convert",
                                    "parameters": [
                                        "const int",
                                        "void *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "parameters": [
                                    ],
                                    "returns": "QVariant::DataPtr &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "data_ptr",
                                    "parameters": [
                                    ],
                                    "returns": "const QVariant::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QVariant",
                            "type": "class"
                        },
                        {
                            "checked": 0,
                            "name": "qVariantFromValue",
                            "parameters": [
                                "const QVariant &"
                            ],
                            "returns": "QVariant",
                            "type": "function"
                        },
                        {
                            "checked": 0,
                            "name": "qVariantSetValue",
                            "parameters": [
                                "QVariant &",
                                "const QVariant &"
                            ],
                            "returns": "void",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QVariant &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QVariant &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QVariant::Type &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QVariant::Type"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QVariant &",
                                "QVariant &"
                            ],
                            "returns": "void",
                            "type": "function"
                        },
                        {
                            "checked": 0,
                            "name": "qvariant_cast",
                            "parameters": [
                                "const QVariant &"
                            ],
                            "returns": "QVariant",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QVariant &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QVariant::Type"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QVariant>",
                    "name": "variant",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "name": "qHash",
                            "parameters": [
                                "const QRegularExpression &",
                                "uint"
                            ],
                            "returns": "uint",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoPatternOption"
                                        },
                                        {
                                            "name": "CaseInsensitiveOption"
                                        },
                                        {
                                            "name": "DotMatchesEverythingOption"
                                        },
                                        {
                                            "name": "MultilineOption"
                                        },
                                        {
                                            "name": "ExtendedPatternSyntaxOption"
                                        },
                                        {
                                            "name": "InvertedGreedinessOption"
                                        },
                                        {
                                            "name": "DontCaptureOption"
                                        },
                                        {
                                            "name": "UseUnicodePropertiesOption"
                                        },
                                        {
                                            "name": "OptimizeOnFirstUsageOption"
                                        },
                                        {
                                            "name": "DontAutomaticallyOptimizeOption"
                                        }
                                    ],
                                    "name": "PatternOption",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "patternOptions",
                                    "parameters": [
                                    ],
                                    "returns": "QRegularExpression::PatternOptions",
                                    "type": "function"
                                },
                                {
                                    "name": "setPatternOptions",
                                    "parameters": [
                                        "QRegularExpression::PatternOptions"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "QRegularExpression",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRegularExpression",
                                    "parameters": [
                                        "const QString &",
                                        "QRegularExpression::PatternOptions"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QRegularExpression",
                                    "parameters": [
                                        "const QRegularExpression &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QRegularExpression",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QRegularExpression &"
                                    ],
                                    "returns": "QRegularExpression &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QRegularExpression &&"
                                    ],
                                    "returns": "QRegularExpression &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QRegularExpression &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pattern",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setPattern",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "patternErrorOffset",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "errorString",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "captureCount",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "namedCaptureGroups",
                                    "parameters": [
                                    ],
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "NormalMatch"
                                        },
                                        {
                                            "name": "PartialPreferCompleteMatch"
                                        },
                                        {
                                            "name": "PartialPreferFirstMatch"
                                        },
                                        {
                                            "name": "NoMatch"
                                        }
                                    ],
                                    "name": "MatchType",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoMatchOption"
                                        },
                                        {
                                            "name": "AnchoredMatchOption"
                                        },
                                        {
                                            "name": "DontCheckSubjectStringMatchOption"
                                        }
                                    ],
                                    "name": "MatchOption",
                                    "type": "enum"
                                },
                                {
                                    "const": true,
                                    "name": "match",
                                    "parameters": [
                                        "const QString &",
                                        "int",
                                        "QRegularExpression::MatchType",
                                        "QRegularExpression::MatchOptions"
                                    ],
                                    "returns": "QRegularExpressionMatch",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "match",
                                    "parameters": [
                                        "const QStringRef &",
                                        "int",
                                        "QRegularExpression::MatchType",
                                        "QRegularExpression::MatchOptions"
                                    ],
                                    "returns": "QRegularExpressionMatch",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "globalMatch",
                                    "parameters": [
                                        "const QString &",
                                        "int",
                                        "QRegularExpression::MatchType",
                                        "QRegularExpression::MatchOptions"
                                    ],
                                    "returns": "QRegularExpressionMatchIterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "globalMatch",
                                    "parameters": [
                                        "const QStringRef &",
                                        "int",
                                        "QRegularExpression::MatchType",
                                        "QRegularExpression::MatchOptions"
                                    ],
                                    "returns": "QRegularExpressionMatchIterator",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "optimize",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "escape",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QRegularExpression &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QRegularExpression &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QRegularExpression",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QRegularExpression &",
                                "QRegularExpression &"
                            ],
                            "returns": "void",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QRegularExpression::PatternOptions::enum_type",
                                "QRegularExpression::PatternOptions::enum_type"
                            ],
                            "returns": "QFlags<QRegularExpression::PatternOptions::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QRegularExpression::PatternOptions::enum_type",
                                "QFlags<QRegularExpression::PatternOptions::enum_type>"
                            ],
                            "returns": "QFlags<QRegularExpression::PatternOptions::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QRegularExpression::PatternOptions::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QRegularExpression::MatchOptions::enum_type",
                                "QRegularExpression::MatchOptions::enum_type"
                            ],
                            "returns": "QFlags<QRegularExpression::MatchOptions::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QRegularExpression::MatchOptions::enum_type",
                                "QFlags<QRegularExpression::MatchOptions::enum_type>"
                            ],
                            "returns": "QFlags<QRegularExpression::MatchOptions::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QRegularExpression::MatchOptions::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QRegularExpression &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QRegularExpression &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QRegularExpression &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "QRegularExpression::PatternOptions"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QRegularExpressionMatch",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QRegularExpressionMatch",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QRegularExpressionMatch",
                                    "parameters": [
                                        "const QRegularExpressionMatch &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QRegularExpressionMatch &"
                                    ],
                                    "returns": "QRegularExpressionMatch &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QRegularExpressionMatch &&"
                                    ],
                                    "returns": "QRegularExpressionMatch &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QRegularExpressionMatch &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "regularExpression",
                                    "parameters": [
                                    ],
                                    "returns": "QRegularExpression",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matchType",
                                    "parameters": [
                                    ],
                                    "returns": "QRegularExpression::MatchType",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matchOptions",
                                    "parameters": [
                                    ],
                                    "returns": "QRegularExpression::MatchOptions",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasMatch",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasPartialMatch",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastCapturedIndex",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "captured",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedRef",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QStringRef",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedView",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QStringView",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "captured",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedRef",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QStringRef",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "captured",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedRef",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "QStringRef",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedView",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "QStringView",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedTexts",
                                    "parameters": [
                                    ],
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedStart",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedLength",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedEnd",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedStart",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedLength",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedEnd",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedStart",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedLength",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capturedEnd",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                }
                            ],
                            "name": "QRegularExpressionMatch",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QRegularExpressionMatch &",
                                "QRegularExpressionMatch &"
                            ],
                            "returns": "void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QRegularExpressionMatch &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QRegularExpressionMatchIterator",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QRegularExpressionMatchIterator",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QRegularExpressionMatchIterator",
                                    "parameters": [
                                        "const QRegularExpressionMatchIterator &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QRegularExpressionMatchIterator &"
                                    ],
                                    "returns": "QRegularExpressionMatchIterator &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QRegularExpressionMatchIterator &&"
                                    ],
                                    "returns": "QRegularExpressionMatchIterator &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QRegularExpressionMatchIterator &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasNext",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "next",
                                    "parameters": [
                                    ],
                                    "returns": "QRegularExpressionMatch",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "peekNext",
                                    "parameters": [
                                    ],
                                    "returns": "QRegularExpressionMatch",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "regularExpression",
                                    "parameters": [
                                    ],
                                    "returns": "QRegularExpression",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matchType",
                                    "parameters": [
                                    ],
                                    "returns": "QRegularExpression::MatchType",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "matchOptions",
                                    "parameters": [
                                    ],
                                    "returns": "QRegularExpression::MatchOptions",
                                    "type": "function"
                                }
                            ],
                            "name": "QRegularExpressionMatchIterator",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QRegularExpressionMatchIterator &",
                                "QRegularExpressionMatchIterator &"
                            ],
                            "returns": "void",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QRegularExpression>",
                    "name": "regularexpression",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QObject",
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoError"
                                        },
                                        {
                                            "name": "AccessError"
                                        },
                                        {
                                            "name": "FormatError"
                                        }
                                    ],
                                    "name": "Status",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "NativeFormat"
                                        },
                                        {
                                            "name": "IniFormat"
                                        },
                                        {
                                            "name": "Registry32Format"
                                        },
                                        {
                                            "name": "Registry64Format"
                                        },
                                        {
                                            "name": "InvalidFormat"
                                        },
                                        {
                                            "name": "CustomFormat1"
                                        },
                                        {
                                            "name": "CustomFormat2"
                                        },
                                        {
                                            "name": "CustomFormat3"
                                        },
                                        {
                                            "name": "CustomFormat4"
                                        },
                                        {
                                            "name": "CustomFormat5"
                                        },
                                        {
                                            "name": "CustomFormat6"
                                        },
                                        {
                                            "name": "CustomFormat7"
                                        },
                                        {
                                            "name": "CustomFormat8"
                                        },
                                        {
                                            "name": "CustomFormat9"
                                        },
                                        {
                                            "name": "CustomFormat10"
                                        },
                                        {
                                            "name": "CustomFormat11"
                                        },
                                        {
                                            "name": "CustomFormat12"
                                        },
                                        {
                                            "name": "CustomFormat13"
                                        },
                                        {
                                            "name": "CustomFormat14"
                                        },
                                        {
                                            "name": "CustomFormat15"
                                        },
                                        {
                                            "name": "CustomFormat16"
                                        }
                                    ],
                                    "name": "Format",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "UserScope"
                                        },
                                        {
                                            "name": "SystemScope"
                                        }
                                    ],
                                    "name": "Scope",
                                    "type": "enum"
                                },
                                {
                                    "name": "QSettings",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &",
                                        "QObject *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSettings",
                                    "parameters": [
                                        "QSettings::Scope",
                                        "const QString &",
                                        "const QString &",
                                        "QObject *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSettings",
                                    "parameters": [
                                        "QSettings::Format",
                                        "QSettings::Scope",
                                        "const QString &",
                                        "const QString &",
                                        "QObject *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSettings",
                                    "parameters": [
                                        "const QString &",
                                        "QSettings::Format",
                                        "QObject *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QSettings",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QSettings",
                                    "type": "destructor"
                                },
                                {
                                    "name": "clear",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "sync",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "status",
                                    "parameters": [
                                    ],
                                    "returns": "QSettings::Status",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isAtomicSyncRequired",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAtomicSyncRequired",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "beginGroup",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "endGroup",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "group",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "beginReadArray",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "beginWriteArray",
                                    "parameters": [
                                        "const QString &",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "endArray",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setArrayIndex",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "allKeys",
                                    "parameters": [
                                    ],
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "childKeys",
                                    "parameters": [
                                    ],
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "childGroups",
                                    "parameters": [
                                    ],
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isWritable",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setValue",
                                    "parameters": [
                                        "const QString &",
                                        "const QVariant &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "value",
                                    "parameters": [
                                        "const QString &",
                                        "const QVariant &"
                                    ],
                                    "returns": "QVariant",
                                    "type": "function"
                                },
                                {
                                    "name": "remove",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "contains",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setFallbacksEnabled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fallbacksEnabled",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fileName",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "format",
                                    "parameters": [
                                    ],
                                    "returns": "QSettings::Format",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scope",
                                    "parameters": [
                                    ],
                                    "returns": "QSettings::Scope",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "organizationName",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "applicationName",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setIniCodec",
                                    "parameters": [
                                        "QTextCodec *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setIniCodec",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "iniCodec",
                                    "parameters": [
                                    ],
                                    "returns": "QTextCodec *",
                                    "type": "function"
                                },
                                {
                                    "name": "setDefaultFormat",
                                    "parameters": [
                                        "QSettings::Format"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "defaultFormat",
                                    "parameters": [
                                    ],
                                    "returns": "QSettings::Format",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setSystemIniPath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setUserIniPath",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setPath",
                                    "parameters": [
                                        "QSettings::Format",
                                        "QSettings::Scope",
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "registerFormat",
                                    "parameters": [
                                        "const QString &",
                                        "QSettings::ReadFunc",
                                        "QSettings::WriteFunc",
                                        "Qt::CaseSensitivity"
                                    ],
                                    "returns": "QSettings::Format",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QSettings",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QSettings>",
                    "name": "settings",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QObject",
                            "elements": [
                                {
                                    "name": "QTimer",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QTimer",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "isActive",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "timerId",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setInterval",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "interval",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "remainingTime",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setTimerType",
                                    "parameters": [
                                        "Qt::TimerType"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "timerType",
                                    "parameters": [
                                    ],
                                    "returns": "Qt::TimerType",
                                    "type": "function"
                                },
                                {
                                    "name": "setSingleShot",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSingleShot",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "singleShot",
                                    "parameters": [
                                        "int",
                                        "const QObject *",
                                        "const char *"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "singleShot",
                                    "parameters": [
                                        "int",
                                        "Qt::TimerType",
                                        "const QObject *",
                                        "const char *"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "start",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "start",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "stop",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "timeout",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setInterval",
                                    "parameters": [
                                        "std::chrono::milliseconds"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "intervalAsDuration",
                                    "parameters": [
                                    ],
                                    "returns": "std::chrono::milliseconds",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "remainingTimeAsDuration",
                                    "parameters": [
                                    ],
                                    "returns": "std::chrono::milliseconds",
                                    "type": "function"
                                },
                                {
                                    "name": "singleShot",
                                    "parameters": [
                                        "std::chrono::milliseconds",
                                        "const QObject *",
                                        "const char *"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "singleShot",
                                    "parameters": [
                                        "std::chrono::milliseconds",
                                        "Qt::TimerType",
                                        "const QObject *",
                                        "const char *"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "start",
                                    "parameters": [
                                        "std::chrono::milliseconds"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                }
                            ],
                            "name": "QTimer",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QTimer>",
                    "name": "timer",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QObject",
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "NotOpen"
                                        },
                                        {
                                            "name": "ReadOnly"
                                        },
                                        {
                                            "name": "WriteOnly"
                                        },
                                        {
                                            "name": "ReadWrite"
                                        },
                                        {
                                            "name": "Append"
                                        },
                                        {
                                            "name": "Truncate"
                                        },
                                        {
                                            "name": "Text"
                                        },
                                        {
                                            "name": "Unbuffered"
                                        }
                                    ],
                                    "name": "OpenModeFlag",
                                    "type": "enum"
                                },
                                {
                                    "checked": 0,
                                    "name": "QIODevice",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "checked": 0,
                                    "name": "QIODevice",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QIODevice",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "openMode",
                                    "parameters": [
                                    ],
                                    "returns": "QIODevice::OpenMode",
                                    "type": "function"
                                },
                                {
                                    "name": "setTextModeEnabled",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTextModeEnabled",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isOpen",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isReadable",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isWritable",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSequential",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "readChannelCount",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "writeChannelCount",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentReadChannel",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentReadChannel",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "currentWriteChannel",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setCurrentWriteChannel",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "parameters": [
                                        "QIODevice::OpenMode"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "close",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pos",
                                    "parameters": [
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "parameters": [
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "seek",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "atEnd",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "reset",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bytesAvailable",
                                    "parameters": [
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bytesToWrite",
                                    "parameters": [
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "read",
                                    "parameters": [
                                        "char *",
                                        "qint64"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "read",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "readAll",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "readLine",
                                    "parameters": [
                                        "char *",
                                        "qint64"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "readLine",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "canReadLine",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "startTransaction",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "commitTransaction",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "rollbackTransaction",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isTransactionStarted",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "write",
                                    "parameters": [
                                        "const char *",
                                        "qint64"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "write",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "write",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "peek",
                                    "parameters": [
                                        "char *",
                                        "qint64"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "peek",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                },
                                {
                                    "name": "skip",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "waitForReadyRead",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "waitForBytesWritten",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "ungetChar",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "putChar",
                                    "parameters": [
                                        "char"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "getChar",
                                    "parameters": [
                                        "char *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "errorString",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "readyRead",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "channelReadyRead",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "bytesWritten",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "channelBytesWritten",
                                    "parameters": [
                                        "int",
                                        "qint64"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "aboutToClose",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "binding": "signals",
                                    "name": "readChannelFinished",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                }
                            ],
                            "name": "QIODevice",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QIODevice::OpenMode::enum_type",
                                "QIODevice::OpenMode::enum_type"
                            ],
                            "returns": "QFlags<QIODevice::OpenMode::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QIODevice::OpenMode::enum_type",
                                "QFlags<QIODevice::OpenMode::enum_type>"
                            ],
                            "returns": "QFlags<QIODevice::OpenMode::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QIODevice::OpenMode::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "QIODevice::OpenMode"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QIODevice>",
                    "name": "iodevice",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QIODevice",
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoError"
                                        },
                                        {
                                            "name": "ReadError"
                                        },
                                        {
                                            "name": "WriteError"
                                        },
                                        {
                                            "name": "FatalError"
                                        },
                                        {
                                            "name": "ResourceError"
                                        },
                                        {
                                            "name": "OpenError"
                                        },
                                        {
                                            "name": "AbortError"
                                        },
                                        {
                                            "name": "TimeOutError"
                                        },
                                        {
                                            "name": "UnspecifiedError"
                                        },
                                        {
                                            "name": "RemoveError"
                                        },
                                        {
                                            "name": "RenameError"
                                        },
                                        {
                                            "name": "PositionError"
                                        },
                                        {
                                            "name": "ResizeError"
                                        },
                                        {
                                            "name": "PermissionsError"
                                        },
                                        {
                                            "name": "CopyError"
                                        }
                                    ],
                                    "name": "FileError",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "FileAccessTime"
                                        },
                                        {
                                            "name": "FileBirthTime"
                                        },
                                        {
                                            "name": "FileMetadataChangeTime"
                                        },
                                        {
                                            "name": "FileModificationTime"
                                        }
                                    ],
                                    "name": "FileTime",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "ReadOwner"
                                        },
                                        {
                                            "name": "WriteOwner"
                                        },
                                        {
                                            "name": "ExeOwner"
                                        },
                                        {
                                            "name": "ReadUser"
                                        },
                                        {
                                            "name": "WriteUser"
                                        },
                                        {
                                            "name": "ExeUser"
                                        },
                                        {
                                            "name": "ReadGroup"
                                        },
                                        {
                                            "name": "WriteGroup"
                                        },
                                        {
                                            "name": "ExeGroup"
                                        },
                                        {
                                            "name": "ReadOther"
                                        },
                                        {
                                            "name": "WriteOther"
                                        },
                                        {
                                            "name": "ExeOther"
                                        }
                                    ],
                                    "name": "Permission",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "AutoCloseHandle"
                                        },
                                        {
                                            "name": "DontCloseHandle"
                                        }
                                    ],
                                    "name": "FileHandleFlag",
                                    "type": "enum"
                                },
                                {
                                    "name": "~QFileDevice",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "error",
                                    "parameters": [
                                    ],
                                    "returns": "QFileDevice::FileError",
                                    "type": "function"
                                },
                                {
                                    "name": "unsetError",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "close",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSequential",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "handle",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fileName",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pos",
                                    "parameters": [
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "seek",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "atEnd",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "flush",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "parameters": [
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "resize",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "permissions",
                                    "parameters": [
                                    ],
                                    "returns": "QFileDevice::Permissions",
                                    "type": "function"
                                },
                                {
                                    "name": "setPermissions",
                                    "parameters": [
                                        "QFileDevice::Permissions"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "NoOptions"
                                        },
                                        {
                                            "name": "MapPrivateOption"
                                        }
                                    ],
                                    "name": "MemoryMapFlags",
                                    "type": "enum"
                                },
                                {
                                    "checked": 0,
                                    "name": "map",
                                    "parameters": [
                                        "qint64",
                                        "qint64",
                                        "QFileDevice::MemoryMapFlags"
                                    ],
                                    "returns": "uchar *",
                                    "type": "function"
                                },
                                {
                                    "checked": 0,
                                    "name": "unmap",
                                    "parameters": [
                                        "uchar *"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fileTime",
                                    "parameters": [
                                        "QFileDevice::FileTime"
                                    ],
                                    "returns": "QDateTime",
                                    "type": "function"
                                },
                                {
                                    "name": "setFileTime",
                                    "parameters": [
                                        "const QDateTime &",
                                        "QFileDevice::FileTime"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QFileDevice",
                            "type": "class"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QFileDevice::Permissions::enum_type",
                                "QFileDevice::Permissions::enum_type"
                            ],
                            "returns": "QFlags<QFileDevice::Permissions::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QFileDevice::Permissions::enum_type",
                                "QFlags<QFileDevice::Permissions::enum_type>"
                            ],
                            "returns": "QFlags<QFileDevice::Permissions::enum_type>",
                            "type": "function"
                        },
                        {
                            "name": "operator|",
                            "parameters": [
                                "QFileDevice::Permissions::enum_type",
                                "int"
                            ],
                            "returns": "QIncompatibleFlag",
                            "type": "function"
                        }
                    ],
                    "hincludes": "yasl/core/iodevice.h,<QFileDevice>",
                    "name": "filedevice",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "base": "QFileDevice",
                            "elements": [
                                {
                                    "name": "QFile",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFile",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFile",
                                    "parameters": [
                                        "QObject *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFile",
                                    "parameters": [
                                        "const QString &",
                                        "QObject *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFile",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "fileName",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setFileName",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "encodeName",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QByteArray",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "decodeName",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "decodeName",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exists",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "exists",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "readLink",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "readLink",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "symLinkTarget",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "symLinkTarget",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "remove",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "remove",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "rename",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "rename",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "link",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "link",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "copy",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "copy",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "parameters": [
                                        "QIODevice::OpenMode"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "parameters": [
                                        "FILE *",
                                        "QIODevice::OpenMode",
                                        "QFileDevice::FileHandleFlags"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "open",
                                    "parameters": [
                                        "int",
                                        "QIODevice::OpenMode",
                                        "QFileDevice::FileHandleFlags"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "parameters": [
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "resize",
                                    "parameters": [
                                        "qint64"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "resize",
                                    "parameters": [
                                        "const QString &",
                                        "qint64"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "permissions",
                                    "parameters": [
                                    ],
                                    "returns": "QFileDevice::Permissions",
                                    "type": "function"
                                },
                                {
                                    "name": "permissions",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QFileDevice::Permissions",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setPermissions",
                                    "parameters": [
                                        "QFileDevice::Permissions"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setPermissions",
                                    "parameters": [
                                        "const QString &",
                                        "QFileDevice::Permissions"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QFile",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QFile>",
                    "name": "file",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "None"
                                        },
                                        {
                                            "name": "Timer"
                                        },
                                        {
                                            "name": "MouseButtonPress"
                                        },
                                        {
                                            "name": "MouseButtonRelease"
                                        },
                                        {
                                            "name": "MouseButtonDblClick"
                                        },
                                        {
                                            "name": "MouseMove"
                                        },
                                        {
                                            "name": "KeyPress"
                                        },
                                        {
                                            "name": "KeyRelease"
                                        },
                                        {
                                            "name": "FocusIn"
                                        },
                                        {
                                            "name": "FocusOut"
                                        },
                                        {
                                            "name": "FocusAboutToChange"
                                        },
                                        {
                                            "name": "Enter"
                                        },
                                        {
                                            "name": "Leave"
                                        },
                                        {
                                            "name": "Paint"
                                        },
                                        {
                                            "name": "Move"
                                        },
                                        {
                                            "name": "Resize"
                                        },
                                        {
                                            "name": "Create"
                                        },
                                        {
                                            "name": "Destroy"
                                        },
                                        {
                                            "name": "Show"
                                        },
                                        {
                                            "name": "Hide"
                                        },
                                        {
                                            "name": "Close"
                                        },
                                        {
                                            "name": "Quit"
                                        },
                                        {
                                            "name": "ParentChange"
                                        },
                                        {
                                            "name": "ParentAboutToChange"
                                        },
                                        {
                                            "name": "ThreadChange"
                                        },
                                        {
                                            "name": "WindowActivate"
                                        },
                                        {
                                            "name": "WindowDeactivate"
                                        },
                                        {
                                            "name": "ShowToParent"
                                        },
                                        {
                                            "name": "HideToParent"
                                        },
                                        {
                                            "name": "Wheel"
                                        },
                                        {
                                            "name": "WindowTitleChange"
                                        },
                                        {
                                            "name": "WindowIconChange"
                                        },
                                        {
                                            "name": "ApplicationWindowIconChange"
                                        },
                                        {
                                            "name": "ApplicationFontChange"
                                        },
                                        {
                                            "name": "ApplicationLayoutDirectionChange"
                                        },
                                        {
                                            "name": "ApplicationPaletteChange"
                                        },
                                        {
                                            "name": "PaletteChange"
                                        },
                                        {
                                            "name": "Clipboard"
                                        },
                                        {
                                            "name": "Speech"
                                        },
                                        {
                                            "name": "MetaCall"
                                        },
                                        {
                                            "name": "SockAct"
                                        },
                                        {
                                            "name": "WinEventAct"
                                        },
                                        {
                                            "name": "DeferredDelete"
                                        },
                                        {
                                            "name": "DragEnter"
                                        },
                                        {
                                            "name": "DragMove"
                                        },
                                        {
                                            "name": "DragLeave"
                                        },
                                        {
                                            "name": "Drop"
                                        },
                                        {
                                            "name": "DragResponse"
                                        },
                                        {
                                            "name": "ChildAdded"
                                        },
                                        {
                                            "name": "ChildPolished"
                                        },
                                        {
                                            "name": "ChildRemoved"
                                        },
                                        {
                                            "name": "ShowWindowRequest"
                                        },
                                        {
                                            "name": "PolishRequest"
                                        },
                                        {
                                            "name": "Polish"
                                        },
                                        {
                                            "name": "LayoutRequest"
                                        },
                                        {
                                            "name": "UpdateRequest"
                                        },
                                        {
                                            "name": "UpdateLater"
                                        },
                                        {
                                            "name": "EmbeddingControl"
                                        },
                                        {
                                            "name": "ActivateControl"
                                        },
                                        {
                                            "name": "DeactivateControl"
                                        },
                                        {
                                            "name": "ContextMenu"
                                        },
                                        {
                                            "name": "InputMethod"
                                        },
                                        {
                                            "name": "TabletMove"
                                        },
                                        {
                                            "name": "LocaleChange"
                                        },
                                        {
                                            "name": "LanguageChange"
                                        },
                                        {
                                            "name": "LayoutDirectionChange"
                                        },
                                        {
                                            "name": "Style"
                                        },
                                        {
                                            "name": "TabletPress"
                                        },
                                        {
                                            "name": "TabletRelease"
                                        },
                                        {
                                            "name": "OkRequest"
                                        },
                                        {
                                            "name": "HelpRequest"
                                        },
                                        {
                                            "name": "IconDrag"
                                        },
                                        {
                                            "name": "FontChange"
                                        },
                                        {
                                            "name": "EnabledChange"
                                        },
                                        {
                                            "name": "ActivationChange"
                                        },
                                        {
                                            "name": "StyleChange"
                                        },
                                        {
                                            "name": "IconTextChange"
                                        },
                                        {
                                            "name": "ModifiedChange"
                                        },
                                        {
                                            "name": "MouseTrackingChange"
                                        },
                                        {
                                            "name": "WindowBlocked"
                                        },
                                        {
                                            "name": "WindowUnblocked"
                                        },
                                        {
                                            "name": "WindowStateChange"
                                        },
                                        {
                                            "name": "ReadOnlyChange"
                                        },
                                        {
                                            "name": "ToolTip"
                                        },
                                        {
                                            "name": "WhatsThis"
                                        },
                                        {
                                            "name": "StatusTip"
                                        },
                                        {
                                            "name": "ActionChanged"
                                        },
                                        {
                                            "name": "ActionAdded"
                                        },
                                        {
                                            "name": "ActionRemoved"
                                        },
                                        {
                                            "name": "FileOpen"
                                        },
                                        {
                                            "name": "Shortcut"
                                        },
                                        {
                                            "name": "ShortcutOverride"
                                        },
                                        {
                                            "name": "WhatsThisClicked"
                                        },
                                        {
                                            "name": "ToolBarChange"
                                        },
                                        {
                                            "name": "ApplicationActivate"
                                        },
                                        {
                                            "name": "ApplicationActivated"
                                        },
                                        {
                                            "name": "ApplicationDeactivate"
                                        },
                                        {
                                            "name": "ApplicationDeactivated"
                                        },
                                        {
                                            "name": "QueryWhatsThis"
                                        },
                                        {
                                            "name": "EnterWhatsThisMode"
                                        },
                                        {
                                            "name": "LeaveWhatsThisMode"
                                        },
                                        {
                                            "name": "ZOrderChange"
                                        },
                                        {
                                            "name": "HoverEnter"
                                        },
                                        {
                                            "name": "HoverLeave"
                                        },
                                        {
                                            "name": "HoverMove"
                                        },
                                        {
                                            "name": "AcceptDropsChange"
                                        },
                                        {
                                            "name": "ZeroTimerEvent"
                                        },
                                        {
                                            "name": "GraphicsSceneMouseMove"
                                        },
                                        {
                                            "name": "GraphicsSceneMousePress"
                                        },
                                        {
                                            "name": "GraphicsSceneMouseRelease"
                                        },
                                        {
                                            "name": "GraphicsSceneMouseDoubleClick"
                                        },
                                        {
                                            "name": "GraphicsSceneContextMenu"
                                        },
                                        {
                                            "name": "GraphicsSceneHoverEnter"
                                        },
                                        {
                                            "name": "GraphicsSceneHoverMove"
                                        },
                                        {
                                            "name": "GraphicsSceneHoverLeave"
                                        },
                                        {
                                            "name": "GraphicsSceneHelp"
                                        },
                                        {
                                            "name": "GraphicsSceneDragEnter"
                                        },
                                        {
                                            "name": "GraphicsSceneDragMove"
                                        },
                                        {
                                            "name": "GraphicsSceneDragLeave"
                                        },
                                        {
                                            "name": "GraphicsSceneDrop"
                                        },
                                        {
                                            "name": "GraphicsSceneWheel"
                                        },
                                        {
                                            "name": "KeyboardLayoutChange"
                                        },
                                        {
                                            "name": "DynamicPropertyChange"
                                        },
                                        {
                                            "name": "TabletEnterProximity"
                                        },
                                        {
                                            "name": "TabletLeaveProximity"
                                        },
                                        {
                                            "name": "NonClientAreaMouseMove"
                                        },
                                        {
                                            "name": "NonClientAreaMouseButtonPress"
                                        },
                                        {
                                            "name": "NonClientAreaMouseButtonRelease"
                                        },
                                        {
                                            "name": "NonClientAreaMouseButtonDblClick"
                                        },
                                        {
                                            "name": "MacSizeChange"
                                        },
                                        {
                                            "name": "ContentsRectChange"
                                        },
                                        {
                                            "name": "MacGLWindowChange"
                                        },
                                        {
                                            "name": "FutureCallOut"
                                        },
                                        {
                                            "name": "GraphicsSceneResize"
                                        },
                                        {
                                            "name": "GraphicsSceneMove"
                                        },
                                        {
                                            "name": "CursorChange"
                                        },
                                        {
                                            "name": "ToolTipChange"
                                        },
                                        {
                                            "name": "NetworkReplyUpdated"
                                        },
                                        {
                                            "name": "GrabMouse"
                                        },
                                        {
                                            "name": "UngrabMouse"
                                        },
                                        {
                                            "name": "GrabKeyboard"
                                        },
                                        {
                                            "name": "UngrabKeyboard"
                                        },
                                        {
                                            "name": "MacGLClearDrawable"
                                        },
                                        {
                                            "name": "StateMachineSignal"
                                        },
                                        {
                                            "name": "StateMachineWrapped"
                                        },
                                        {
                                            "name": "TouchBegin"
                                        },
                                        {
                                            "name": "TouchUpdate"
                                        },
                                        {
                                            "name": "TouchEnd"
                                        },
                                        {
                                            "name": "NativeGesture"
                                        },
                                        {
                                            "name": "RequestSoftwareInputPanel"
                                        },
                                        {
                                            "name": "CloseSoftwareInputPanel"
                                        },
                                        {
                                            "name": "WinIdChange"
                                        },
                                        {
                                            "name": "Gesture"
                                        },
                                        {
                                            "name": "GestureOverride"
                                        },
                                        {
                                            "name": "ScrollPrepare"
                                        },
                                        {
                                            "name": "Scroll"
                                        },
                                        {
                                            "name": "Expose"
                                        },
                                        {
                                            "name": "InputMethodQuery"
                                        },
                                        {
                                            "name": "OrientationChange"
                                        },
                                        {
                                            "name": "TouchCancel"
                                        },
                                        {
                                            "name": "ThemeChange"
                                        },
                                        {
                                            "name": "SockClose"
                                        },
                                        {
                                            "name": "PlatformPanel"
                                        },
                                        {
                                            "name": "StyleAnimationUpdate"
                                        },
                                        {
                                            "name": "ApplicationStateChange"
                                        },
                                        {
                                            "name": "WindowChangeInternal"
                                        },
                                        {
                                            "name": "ScreenChangeInternal"
                                        },
                                        {
                                            "name": "PlatformSurface"
                                        },
                                        {
                                            "name": "Pointer"
                                        },
                                        {
                                            "name": "TabletTrackingChange"
                                        },
                                        {
                                            "name": "User"
                                        },
                                        {
                                            "name": "MaxUser"
                                        }
                                    ],
                                    "name": "Type",
                                    "type": "enum"
                                },
                                {
                                    "name": "QEvent",
                                    "parameters": [
                                        "QEvent::Type"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QEvent",
                                    "parameters": [
                                        "const QEvent &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QEvent",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QEvent &"
                                    ],
                                    "returns": "QEvent &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "type",
                                    "parameters": [
                                    ],
                                    "returns": "QEvent::Type",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "spontaneous",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setAccepted",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isAccepted",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "accept",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "ignore",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "registerEventType",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QEvent",
                            "type": "class"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QTimerEvent",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QTimerEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "timerId",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                }
                            ],
                            "name": "QTimerEvent",
                            "type": "class"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QChildEvent",
                                    "parameters": [
                                        "QEvent::Type",
                                        "QObject *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QChildEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "child",
                                    "parameters": [
                                    ],
                                    "returns": "QObject *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "added",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "polished",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "removed",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QChildEvent",
                            "type": "class"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QDynamicPropertyChangeEvent",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDynamicPropertyChangeEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "propertyName",
                                    "parameters": [
                                    ],
                                    "returns": "QByteArray",
                                    "type": "function"
                                }
                            ],
                            "name": "QDynamicPropertyChangeEvent",
                            "type": "class"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QDeferredDeleteEvent",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QDeferredDeleteEvent",
                                    "type": "destructor"
                                },
                                {
                                    "const": true,
                                    "name": "loopLevel",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                }
                            ],
                            "name": "QDeferredDeleteEvent",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QEvent>",
                    "name": "event",
                    "type": "file"
                }
            ],
            "name": "core",
            "type": "module"
        },
        {
            "checked": 1,
            "elements": [
                {
                    "checked": 1,
                    "elements": [
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QColor &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QColor &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QColor &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Invalid"
                                        },
                                        {
                                            "name": "Rgb"
                                        },
                                        {
                                            "name": "Hsv"
                                        },
                                        {
                                            "name": "Cmyk"
                                        },
                                        {
                                            "name": "Hsl"
                                        }
                                    ],
                                    "name": "Spec",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "HexRgb"
                                        },
                                        {
                                            "name": "HexArgb"
                                        }
                                    ],
                                    "name": "NameFormat",
                                    "type": "enum"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QColor",
                                    "type": "destructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "Qt::GlobalColor"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "QRgb"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "QRgba64"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "const char *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "QLatin1String"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "QColor::Spec"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "const QColor &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QColor",
                                    "parameters": [
                                        "QColor &&"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QColor &&"
                                    ],
                                    "returns": "QColor &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QColor &"
                                    ],
                                    "returns": "QColor &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "Qt::GlobalColor"
                                    ],
                                    "returns": "QColor &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isValid",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "name",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "name",
                                    "parameters": [
                                        "QColor::NameFormat"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setNamedColor",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setNamedColor",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setNamedColor",
                                    "parameters": [
                                        "QLatin1String"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "colorNames",
                                    "parameters": [
                                    ],
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "spec",
                                    "parameters": [
                                    ],
                                    "returns": "QColor::Spec",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alpha",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlpha",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "alphaF",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setAlphaF",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "red",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "green",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "blue",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setRed",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setGreen",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBlue",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "redF",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "greenF",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "blueF",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setRedF",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setGreenF",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setBlueF",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getRgb",
                                    "parameters": [
                                        "int *",
                                        "int *",
                                        "int *",
                                        "int *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRgb",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getRgbF",
                                    "parameters": [
                                        "qreal *",
                                        "qreal *",
                                        "qreal *",
                                        "qreal *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setRgbF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rgba64",
                                    "parameters": [
                                    ],
                                    "returns": "QRgba64",
                                    "type": "function"
                                },
                                {
                                    "name": "setRgba64",
                                    "parameters": [
                                        "QRgba64"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rgba",
                                    "parameters": [
                                    ],
                                    "returns": "QRgb",
                                    "type": "function"
                                },
                                {
                                    "name": "setRgba",
                                    "parameters": [
                                        "QRgb"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rgb",
                                    "parameters": [
                                    ],
                                    "returns": "QRgb",
                                    "type": "function"
                                },
                                {
                                    "name": "setRgb",
                                    "parameters": [
                                        "QRgb"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hue",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "saturation",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hsvHue",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hsvSaturation",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "value",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hueF",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "saturationF",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hsvHueF",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hsvSaturationF",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "valueF",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getHsv",
                                    "parameters": [
                                        "int *",
                                        "int *",
                                        "int *",
                                        "int *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setHsv",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getHsvF",
                                    "parameters": [
                                        "qreal *",
                                        "qreal *",
                                        "qreal *",
                                        "qreal *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setHsvF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cyan",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "magenta",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "yellow",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "black",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cyanF",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "magentaF",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "yellowF",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "blackF",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "getCmyk",
                                    "parameters": [
                                        "int *",
                                        "int *",
                                        "int *",
                                        "int *",
                                        "int *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setCmyk",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "getCmykF",
                                    "parameters": [
                                        "qreal *",
                                        "qreal *",
                                        "qreal *",
                                        "qreal *",
                                        "qreal *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setCmykF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hslHue",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hslSaturation",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lightness",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hslHueF",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hslSaturationF",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lightnessF",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getHsl",
                                    "parameters": [
                                        "int *",
                                        "int *",
                                        "int *",
                                        "int *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setHsl",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "getHslF",
                                    "parameters": [
                                        "qreal *",
                                        "qreal *",
                                        "qreal *",
                                        "qreal *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setHslF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toRgb",
                                    "parameters": [
                                    ],
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toHsv",
                                    "parameters": [
                                    ],
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toCmyk",
                                    "parameters": [
                                    ],
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toHsl",
                                    "parameters": [
                                    ],
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "convertTo",
                                    "parameters": [
                                        "QColor::Spec"
                                    ],
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "name": "fromRgb",
                                    "parameters": [
                                        "QRgb"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromRgba",
                                    "parameters": [
                                        "QRgb"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromRgb",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromRgbF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromRgba64",
                                    "parameters": [
                                        "ushort",
                                        "ushort",
                                        "ushort",
                                        "ushort"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromRgba64",
                                    "parameters": [
                                        "QRgba64"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromHsv",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromHsvF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromCmyk",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromCmykF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromHsl",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromHslF",
                                    "parameters": [
                                        "qreal",
                                        "qreal",
                                        "qreal",
                                        "qreal"
                                    ],
                                    "returns": "QColor",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "light",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lighter",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "dark",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "darker",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QColor",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QColor &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QColor &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "isValidColor",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isValidColor",
                                    "parameters": [
                                        "QStringView"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "isValidColor",
                                    "parameters": [
                                        "QLatin1String"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QColor",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QColor>",
                    "name": "color",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Helvetica"
                                        },
                                        {
                                            "name": "SansSerif"
                                        },
                                        {
                                            "name": "Times"
                                        },
                                        {
                                            "name": "Serif"
                                        },
                                        {
                                            "name": "Courier"
                                        },
                                        {
                                            "name": "TypeWriter"
                                        },
                                        {
                                            "name": "OldEnglish"
                                        },
                                        {
                                            "name": "Decorative"
                                        },
                                        {
                                            "name": "System"
                                        },
                                        {
                                            "name": "AnyStyle"
                                        },
                                        {
                                            "name": "Cursive"
                                        },
                                        {
                                            "name": "Monospace"
                                        },
                                        {
                                            "name": "Fantasy"
                                        }
                                    ],
                                    "name": "StyleHint",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "PreferDefault"
                                        },
                                        {
                                            "name": "PreferBitmap"
                                        },
                                        {
                                            "name": "PreferDevice"
                                        },
                                        {
                                            "name": "PreferOutline"
                                        },
                                        {
                                            "name": "ForceOutline"
                                        },
                                        {
                                            "name": "PreferMatch"
                                        },
                                        {
                                            "name": "PreferQuality"
                                        },
                                        {
                                            "name": "PreferAntialias"
                                        },
                                        {
                                            "name": "NoAntialias"
                                        },
                                        {
                                            "name": "OpenGLCompatible"
                                        },
                                        {
                                            "name": "ForceIntegerMetrics"
                                        },
                                        {
                                            "name": "NoSubpixelAntialias"
                                        },
                                        {
                                            "name": "PreferNoShaping"
                                        },
                                        {
                                            "name": "NoFontMerging"
                                        }
                                    ],
                                    "name": "StyleStrategy",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "PreferDefaultHinting"
                                        },
                                        {
                                            "name": "PreferNoHinting"
                                        },
                                        {
                                            "name": "PreferVerticalHinting"
                                        },
                                        {
                                            "name": "PreferFullHinting"
                                        }
                                    ],
                                    "name": "HintingPreference",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "Thin"
                                        },
                                        {
                                            "name": "ExtraLight"
                                        },
                                        {
                                            "name": "Light"
                                        },
                                        {
                                            "name": "Normal"
                                        },
                                        {
                                            "name": "Medium"
                                        },
                                        {
                                            "name": "DemiBold"
                                        },
                                        {
                                            "name": "Bold"
                                        },
                                        {
                                            "name": "ExtraBold"
                                        },
                                        {
                                            "name": "Black"
                                        }
                                    ],
                                    "name": "Weight",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "StyleNormal"
                                        },
                                        {
                                            "name": "StyleItalic"
                                        },
                                        {
                                            "name": "StyleOblique"
                                        }
                                    ],
                                    "name": "Style",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "AnyStretch"
                                        },
                                        {
                                            "name": "UltraCondensed"
                                        },
                                        {
                                            "name": "ExtraCondensed"
                                        },
                                        {
                                            "name": "Condensed"
                                        },
                                        {
                                            "name": "SemiCondensed"
                                        },
                                        {
                                            "name": "Unstretched"
                                        },
                                        {
                                            "name": "SemiExpanded"
                                        },
                                        {
                                            "name": "Expanded"
                                        },
                                        {
                                            "name": "ExtraExpanded"
                                        },
                                        {
                                            "name": "UltraExpanded"
                                        }
                                    ],
                                    "name": "Stretch",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "MixedCase"
                                        },
                                        {
                                            "name": "AllUppercase"
                                        },
                                        {
                                            "name": "AllLowercase"
                                        },
                                        {
                                            "name": "SmallCaps"
                                        },
                                        {
                                            "name": "Capitalize"
                                        }
                                    ],
                                    "name": "Capitalization",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "PercentageSpacing"
                                        },
                                        {
                                            "name": "AbsoluteSpacing"
                                        }
                                    ],
                                    "name": "SpacingType",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "FamilyResolved"
                                        },
                                        {
                                            "name": "SizeResolved"
                                        },
                                        {
                                            "name": "StyleHintResolved"
                                        },
                                        {
                                            "name": "StyleStrategyResolved"
                                        },
                                        {
                                            "name": "WeightResolved"
                                        },
                                        {
                                            "name": "StyleResolved"
                                        },
                                        {
                                            "name": "UnderlineResolved"
                                        },
                                        {
                                            "name": "OverlineResolved"
                                        },
                                        {
                                            "name": "StrikeOutResolved"
                                        },
                                        {
                                            "name": "FixedPitchResolved"
                                        },
                                        {
                                            "name": "StretchResolved"
                                        },
                                        {
                                            "name": "KerningResolved"
                                        },
                                        {
                                            "name": "CapitalizationResolved"
                                        },
                                        {
                                            "name": "LetterSpacingResolved"
                                        },
                                        {
                                            "name": "WordSpacingResolved"
                                        },
                                        {
                                            "name": "HintingPreferenceResolved"
                                        },
                                        {
                                            "name": "StyleNameResolved"
                                        },
                                        {
                                            "name": "AllPropertiesResolved"
                                        }
                                    ],
                                    "name": "ResolveProperties",
                                    "type": "enum"
                                },
                                {
                                    "name": "QFont",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFont",
                                    "parameters": [
                                        "const QString &",
                                        "int",
                                        "int",
                                        "bool"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFont",
                                    "parameters": [
                                        "const QFont &",
                                        "QPaintDevice *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFont",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFont",
                                    "type": "destructor"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QFont &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "family",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setFamily",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "styleName",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "setStyleName",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pointSize",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setPointSize",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pointSizeF",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setPointSizeF",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixelSize",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setPixelSize",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "weight",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setWeight",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bold",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setBold",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setStyle",
                                    "parameters": [
                                        "QFont::Style"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "style",
                                    "parameters": [
                                    ],
                                    "returns": "QFont::Style",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "italic",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setItalic",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "underline",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setUnderline",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "overline",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setOverline",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "strikeOut",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setStrikeOut",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fixedPitch",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setFixedPitch",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "kerning",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setKerning",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "styleHint",
                                    "parameters": [
                                    ],
                                    "returns": "QFont::StyleHint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "styleStrategy",
                                    "parameters": [
                                    ],
                                    "returns": "QFont::StyleStrategy",
                                    "type": "function"
                                },
                                {
                                    "name": "setStyleHint",
                                    "parameters": [
                                        "QFont::StyleHint",
                                        "QFont::StyleStrategy"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setStyleStrategy",
                                    "parameters": [
                                        "QFont::StyleStrategy"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "stretch",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "setStretch",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "letterSpacing",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "letterSpacingType",
                                    "parameters": [
                                    ],
                                    "returns": "QFont::SpacingType",
                                    "type": "function"
                                },
                                {
                                    "name": "setLetterSpacing",
                                    "parameters": [
                                        "QFont::SpacingType",
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "wordSpacing",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setWordSpacing",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "setCapitalization",
                                    "parameters": [
                                        "QFont::Capitalization"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capitalization",
                                    "parameters": [
                                    ],
                                    "returns": "QFont::Capitalization",
                                    "type": "function"
                                },
                                {
                                    "name": "setHintingPreference",
                                    "parameters": [
                                        "QFont::HintingPreference"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hintingPreference",
                                    "parameters": [
                                    ],
                                    "returns": "QFont::HintingPreference",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rawMode",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "setRawMode",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exactMatch",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "returns": "QFont &",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator<",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isCopyOf",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QFont &&"
                                    ],
                                    "returns": "QFont &",
                                    "type": "function"
                                },
                                {
                                    "name": "setRawName",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rawName",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "key",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toString",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "fromString",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "substitute",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "substitutes",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "substitutions",
                                    "parameters": [
                                    ],
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "insertSubstitution",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "insertSubstitutions",
                                    "parameters": [
                                        "const QString &",
                                        "const QStringList &"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "removeSubstitutions",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "initialize",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "cleanup",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "cacheStatistics",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "defaultFamily",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastResortFamily",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lastResortFont",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "resolve",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "returns": "QFont",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "resolve",
                                    "parameters": [
                                    ],
                                    "returns": "uint",
                                    "type": "function"
                                },
                                {
                                    "name": "resolve",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                }
                            ],
                            "name": "QFont",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QFont &",
                                "QFont &"
                            ],
                            "returns": "void",
                            "type": "function"
                        },
                        {
                            "name": "qHash",
                            "parameters": [
                                "const QFont &",
                                "uint"
                            ],
                            "returns": "uint",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QFont &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QFont &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QFont &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QFont>",
                    "name": "font",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "checked": 1,
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Any"
                                        },
                                        {
                                            "name": "Latin"
                                        },
                                        {
                                            "name": "Greek"
                                        },
                                        {
                                            "name": "Cyrillic"
                                        },
                                        {
                                            "name": "Armenian"
                                        },
                                        {
                                            "name": "Hebrew"
                                        },
                                        {
                                            "name": "Arabic"
                                        },
                                        {
                                            "name": "Syriac"
                                        },
                                        {
                                            "name": "Thaana"
                                        },
                                        {
                                            "name": "Devanagari"
                                        },
                                        {
                                            "name": "Bengali"
                                        },
                                        {
                                            "name": "Gurmukhi"
                                        },
                                        {
                                            "name": "Gujarati"
                                        },
                                        {
                                            "name": "Oriya"
                                        },
                                        {
                                            "name": "Tamil"
                                        },
                                        {
                                            "name": "Telugu"
                                        },
                                        {
                                            "name": "Kannada"
                                        },
                                        {
                                            "name": "Malayalam"
                                        },
                                        {
                                            "name": "Sinhala"
                                        },
                                        {
                                            "name": "Thai"
                                        },
                                        {
                                            "name": "Lao"
                                        },
                                        {
                                            "name": "Tibetan"
                                        },
                                        {
                                            "name": "Myanmar"
                                        },
                                        {
                                            "name": "Georgian"
                                        },
                                        {
                                            "name": "Khmer"
                                        },
                                        {
                                            "name": "SimplifiedChinese"
                                        },
                                        {
                                            "name": "TraditionalChinese"
                                        },
                                        {
                                            "name": "Japanese"
                                        },
                                        {
                                            "name": "Korean"
                                        },
                                        {
                                            "name": "Vietnamese"
                                        },
                                        {
                                            "name": "Symbol"
                                        },
                                        {
                                            "name": "Other"
                                        },
                                        {
                                            "name": "Ogham"
                                        },
                                        {
                                            "name": "Runic"
                                        },
                                        {
                                            "name": "Nko"
                                        },
                                        {
                                            "name": "WritingSystemsCount"
                                        }
                                    ],
                                    "name": "WritingSystem",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "GeneralFont"
                                        },
                                        {
                                            "name": "FixedFont"
                                        },
                                        {
                                            "name": "TitleFont"
                                        },
                                        {
                                            "name": "SmallestReadableFont"
                                        }
                                    ],
                                    "name": "SystemFont",
                                    "type": "enum"
                                },
                                {
                                    "name": "standardSizes",
                                    "parameters": [
                                    ],
                                    "returns": "QList<int>",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "QFontDatabase",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "const": true,
                                    "name": "writingSystems",
                                    "parameters": [
                                    ],
                                    "returns": "QList<QFontDatabase::WritingSystem>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "writingSystems",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QList<QFontDatabase::WritingSystem>",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "families",
                                    "parameters": [
                                        "QFontDatabase::WritingSystem"
                                    ],
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "styles",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QStringList",
                                    "type": "function"
                                },
                                {
                                    "name": "pointSizes",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "QList<int>",
                                    "type": "function"
                                },
                                {
                                    "name": "smoothSizes",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "QList<int>",
                                    "type": "function"
                                },
                                {
                                    "name": "styleString",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "name": "styleString",
                                    "parameters": [
                                        "const QFontInfo &"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "font",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &",
                                        "int"
                                    ],
                                    "returns": "QFont",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isBitmapScalable",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isSmoothlyScalable",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isScalable",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isFixedPitch",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "italic",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bold",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "weight",
                                    "parameters": [
                                        "const QString &",
                                        "const QString &"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasFamily",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isPrivateFamily",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "writingSystemName",
                                    "parameters": [
                                        "QFontDatabase::WritingSystem"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "writingSystemSample",
                                    "parameters": [
                                        "QFontDatabase::WritingSystem"
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "addApplicationFont",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "addApplicationFontFromData",
                                    "parameters": [
                                        "const QByteArray &"
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "applicationFontFamilies",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "removeApplicationFont",
                                    "parameters": [
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "removeAllApplicationFonts",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "supportsThreadedFontRendering",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "systemFont",
                                    "parameters": [
                                        "QFontDatabase::SystemFont"
                                    ],
                                    "returns": "QFont",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QFontDatabase",
                            "type": "class"
                        }
                    ],
                    "hincludes": "<QFontDatabase>",
                    "name": "fontdatabase",
                    "type": "file"
                },
                {
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QFontInfo",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFontInfo",
                                    "parameters": [
                                        "const QFontInfo &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFontInfo",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QFontInfo &"
                                    ],
                                    "returns": "QFontInfo &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QFontInfo &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "family",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "styleName",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixelSize",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pointSize",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pointSizeF",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "italic",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "style",
                                    "parameters": [
                                    ],
                                    "returns": "QFont::Style",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "weight",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bold",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "underline",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "overline",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "strikeOut",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "fixedPitch",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "styleHint",
                                    "parameters": [
                                    ],
                                    "returns": "QFont::StyleHint",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rawMode",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "exactMatch",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QFontInfo",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QFontInfo &",
                                "QFontInfo &"
                            ],
                            "returns": "void",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QFontInfo>",
                    "name": "fontinfo",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QFontMetrics",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFontMetrics",
                                    "parameters": [
                                        "const QFont &",
                                        "QPaintDevice *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFontMetrics",
                                    "parameters": [
                                        "const QFontMetrics &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFontMetrics",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QFontMetrics &"
                                    ],
                                    "returns": "QFontMetrics &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QFontMetrics &&"
                                    ],
                                    "returns": "QFontMetrics &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QFontMetrics &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "ascent",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capHeight",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "descent",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "leading",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lineSpacing",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minLeftBearing",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minRightBearing",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maxWidth",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "xHeight",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "averageCharWidth",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inFont",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inFontUcs4",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "leftBearing",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rightBearing",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "parameters": [
                                        "const QString &",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "parameters": [
                                        "const QString &",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "charWidth",
                                    "parameters": [
                                        "const QString &",
                                        "int"
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "parameters": [
                                        "const QRect &",
                                        "int",
                                        "const QString &",
                                        "int",
                                        "int *"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "const QString &",
                                        "int",
                                        "int *"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "parameters": [
                                        "int",
                                        "const QString &",
                                        "int",
                                        "int *"
                                    ],
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tightBoundingRect",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "elidedText",
                                    "parameters": [
                                        "const QString &",
                                        "Qt::TextElideMode",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "underlinePos",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "overlinePos",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "strikeOutPos",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lineWidth",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QFontMetrics &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QFontMetrics &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QFontMetrics",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QFontMetrics &",
                                "QFontMetrics &"
                            ],
                            "returns": "void",
                            "type": "function"
                        },
                        {
                            "elements": [
                                {
                                    "name": "QFontMetricsF",
                                    "parameters": [
                                        "const QFont &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFontMetricsF",
                                    "parameters": [
                                        "const QFont &",
                                        "QPaintDevice *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFontMetricsF",
                                    "parameters": [
                                        "const QFontMetrics &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QFontMetricsF",
                                    "parameters": [
                                        "const QFontMetricsF &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QFontMetricsF",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QFontMetricsF &"
                                    ],
                                    "returns": "QFontMetricsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QFontMetrics &"
                                    ],
                                    "returns": "QFontMetricsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QFontMetricsF &&"
                                    ],
                                    "returns": "QFontMetricsF &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QFontMetricsF &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "ascent",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "capHeight",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "descent",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "leading",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lineSpacing",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minLeftBearing",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "minRightBearing",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "maxWidth",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "xHeight",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "averageCharWidth",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inFont",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "inFontUcs4",
                                    "parameters": [
                                        "uint"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "leftBearing",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rightBearing",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "parameters": [
                                        "QChar"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "boundingRect",
                                    "parameters": [
                                        "const QRectF &",
                                        "int",
                                        "const QString &",
                                        "int",
                                        "int *"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "parameters": [
                                        "int",
                                        "const QString &",
                                        "int",
                                        "int *"
                                    ],
                                    "returns": "QSizeF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "tightBoundingRect",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QRectF",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "elidedText",
                                    "parameters": [
                                        "const QString &",
                                        "Qt::TextElideMode",
                                        "qreal",
                                        "int"
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "underlinePos",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "overlinePos",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "strikeOutPos",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "lineWidth",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator==",
                                    "parameters": [
                                        "const QFontMetricsF &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!=",
                                    "parameters": [
                                        "const QFontMetricsF &"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                }
                            ],
                            "name": "QFontMetricsF",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QFontMetricsF &",
                                "QFontMetricsF &"
                            ],
                            "returns": "void",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QFontMetrics>",
                    "name": "fontmetrics",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QCursor",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QCursor",
                                    "parameters": [
                                        "Qt::CursorShape"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QCursor",
                                    "parameters": [
                                        "const QBitmap &",
                                        "const QBitmap &",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QCursor",
                                    "parameters": [
                                        "const QPixmap &",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QCursor",
                                    "parameters": [
                                        "const QCursor &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QCursor",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QCursor &"
                                    ],
                                    "returns": "QCursor &",
                                    "type": "function"
                                },
                                {
                                    "name": "QCursor",
                                    "parameters": [
                                        "QCursor &&"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QCursor &&"
                                    ],
                                    "returns": "QCursor &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QCursor &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "shape",
                                    "parameters": [
                                    ],
                                    "returns": "Qt::CursorShape",
                                    "type": "function"
                                },
                                {
                                    "name": "setShape",
                                    "parameters": [
                                        "Qt::CursorShape"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "bitmap",
                                    "parameters": [
                                    ],
                                    "returns": "const QBitmap *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mask",
                                    "parameters": [
                                    ],
                                    "returns": "const QBitmap *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixmap",
                                    "parameters": [
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hotSpot",
                                    "parameters": [
                                    ],
                                    "returns": "QPoint",
                                    "type": "function"
                                },
                                {
                                    "name": "pos",
                                    "parameters": [
                                    ],
                                    "returns": "QPoint",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "pos",
                                    "parameters": [
                                        "const QScreen *"
                                    ],
                                    "returns": "QPoint",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setPos",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setPos",
                                    "parameters": [
                                        "QScreen *",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setPos",
                                    "parameters": [
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setPos",
                                    "parameters": [
                                        "QScreen *",
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                }
                            ],
                            "name": "QCursor",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QCursor &",
                                "QCursor &"
                            ],
                            "returns": "void",
                            "type": "function"
                        },
                        {
                            "name": "operator==",
                            "parameters": [
                                "const QCursor &",
                                "const QCursor &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator!=",
                            "parameters": [
                                "const QCursor &",
                                "const QCursor &"
                            ],
                            "returns": "bool",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QCursor &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QCursor &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QCursor &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QCursor>",
                    "name": "cursor",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "name": "QPixmap",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPixmap",
                                    "parameters": [
                                        "QPlatformPixmap *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPixmap",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPixmap",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPixmap",
                                    "parameters": [
                                        "const QString &",
                                        "const char *",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPixmap",
                                    "parameters": [
                                        "const char *const []"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QPixmap",
                                    "parameters": [
                                        "const QPixmap &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QPixmap",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QPixmap &"
                                    ],
                                    "returns": "QPixmap &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QPixmap &&"
                                    ],
                                    "returns": "QPixmap &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QPixmap &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "devType",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "width",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "height",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "size",
                                    "parameters": [
                                    ],
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "rect",
                                    "parameters": [
                                    ],
                                    "returns": "QRect",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "depth",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "type": "function"
                                },
                                {
                                    "name": "defaultDepth",
                                    "parameters": [
                                    ],
                                    "returns": "int",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fill",
                                    "parameters": [
                                        "const QColor &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "fill",
                                    "parameters": [
                                        "const QPaintDevice *",
                                        "const QPoint &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "fill",
                                    "parameters": [
                                        "const QPaintDevice *",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "mask",
                                    "parameters": [
                                    ],
                                    "returns": "QBitmap",
                                    "type": "function"
                                },
                                {
                                    "name": "setMask",
                                    "parameters": [
                                        "const QBitmap &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "devicePixelRatio",
                                    "parameters": [
                                    ],
                                    "returns": "qreal",
                                    "type": "function"
                                },
                                {
                                    "name": "setDevicePixelRatio",
                                    "parameters": [
                                        "qreal"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasAlpha",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "hasAlphaChannel",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "createHeuristicMask",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "QBitmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "createMaskFromColor",
                                    "parameters": [
                                        "const QColor &",
                                        "Qt::MaskMode"
                                    ],
                                    "returns": "QBitmap",
                                    "type": "function"
                                },
                                {
                                    "name": "grabWindow",
                                    "parameters": [
                                        "WId",
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QPixmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "grabWidget",
                                    "parameters": [
                                        "QObject *",
                                        "const QRect &"
                                    ],
                                    "returns": "QPixmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "grabWidget",
                                    "parameters": [
                                        "QObject *",
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QPixmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaled",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "Qt::AspectRatioMode",
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaled",
                                    "parameters": [
                                        "const QSize &",
                                        "Qt::AspectRatioMode",
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaledToWidth",
                                    "parameters": [
                                        "int",
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "scaledToHeight",
                                    "parameters": [
                                        "int",
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transformed",
                                    "parameters": [
                                        "const QMatrix &",
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "name": "trueMatrix",
                                    "parameters": [
                                        "const QMatrix &",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QMatrix",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transformed",
                                    "parameters": [
                                        "const QTransform &",
                                        "Qt::TransformationMode"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "name": "trueMatrix",
                                    "parameters": [
                                        "const QTransform &",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QTransform",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "toImage",
                                    "parameters": [
                                    ],
                                    "returns": "QImage",
                                    "type": "function"
                                },
                                {
                                    "name": "fromImage",
                                    "parameters": [
                                        "const QImage &",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "QPixmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromImageReader",
                                    "parameters": [
                                        "QImageReader *",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "QPixmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromImage",
                                    "parameters": [
                                        "QImage &&",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "QPixmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "load",
                                    "parameters": [
                                        "const QString &",
                                        "const char *",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "loadFromData",
                                    "parameters": [
                                        "const uchar *",
                                        "uint",
                                        "const char *",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "loadFromData",
                                    "parameters": [
                                        "const QByteArray &",
                                        "const char *",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "save",
                                    "parameters": [
                                        "const QString &",
                                        "const char *",
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "save",
                                    "parameters": [
                                        "QIODevice *",
                                        "const char *",
                                        "int"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "convertFromImage",
                                    "parameters": [
                                        "const QImage &",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "copy",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "copy",
                                    "parameters": [
                                        "const QRect &"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "name": "scroll",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "QRegion *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "scroll",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "const QRect &",
                                        "QRegion *"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cacheKey",
                                    "parameters": [
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "detach",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isQBitmap",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "paintEngine",
                                    "parameters": [
                                    ],
                                    "returns": "QPaintEngine *",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "operator!",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "handle",
                                    "parameters": [
                                    ],
                                    "returns": "QPlatformPixmap *",
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "parameters": [
                                    ],
                                    "returns": "QPixmap::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QPixmap",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QPixmap &",
                                "QPixmap &"
                            ],
                            "returns": "void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QPixmap &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QPixmap &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QPixmap &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QPixmap>",
                    "name": "pixmap",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "base": "QPixmap",
                            "elements": [
                                {
                                    "name": "QBitmap",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBitmap",
                                    "parameters": [
                                        "const QPixmap &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBitmap",
                                    "parameters": [
                                        "int",
                                        "int"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBitmap",
                                    "parameters": [
                                        "const QSize &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBitmap",
                                    "parameters": [
                                        "const QString &",
                                        "const char *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QBitmap",
                                    "parameters": [
                                        "const QBitmap &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QBitmap &"
                                    ],
                                    "returns": "QBitmap &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QBitmap &&"
                                    ],
                                    "returns": "QBitmap &",
                                    "type": "function"
                                },
                                {
                                    "name": "~QBitmap",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QPixmap &"
                                    ],
                                    "returns": "QBitmap &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QBitmap &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "clear",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "fromImage",
                                    "parameters": [
                                        "const QImage &",
                                        "Qt::ImageConversionFlags"
                                    ],
                                    "returns": "QBitmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromData",
                                    "parameters": [
                                        "const QSize &",
                                        "const uchar *",
                                        "QImage::Format"
                                    ],
                                    "returns": "QBitmap",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transformed",
                                    "parameters": [
                                        "const QMatrix &"
                                    ],
                                    "returns": "QBitmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "transformed",
                                    "parameters": [
                                        "const QTransform &"
                                    ],
                                    "returns": "QBitmap",
                                    "type": "function"
                                }
                            ],
                            "name": "QBitmap",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QBitmap &",
                                "QBitmap &"
                            ],
                            "returns": "void",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QBitmap>",
                    "name": "bitmap",
                    "type": "file"
                },
                {
                    "checked": 1,
                    "elements": [
                        {
                            "elements": [
                                {
                                    "enumerators": [
                                        {
                                            "name": "Normal"
                                        },
                                        {
                                            "name": "Disabled"
                                        },
                                        {
                                            "name": "Active"
                                        },
                                        {
                                            "name": "Selected"
                                        }
                                    ],
                                    "name": "Mode",
                                    "type": "enum"
                                },
                                {
                                    "enumerators": [
                                        {
                                            "name": "On"
                                        },
                                        {
                                            "name": "Off"
                                        }
                                    ],
                                    "name": "State",
                                    "type": "enum"
                                },
                                {
                                    "name": "QIcon",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QIcon",
                                    "parameters": [
                                        "const QPixmap &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QIcon",
                                    "parameters": [
                                        "const QIcon &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QIcon",
                                    "parameters": [
                                        "QIcon &&"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QIcon",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "QIcon",
                                    "parameters": [
                                        "QIconEngine *"
                                    ],
                                    "returns": "void",
                                    "type": "constructor"
                                },
                                {
                                    "name": "~QIcon",
                                    "type": "destructor"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "const QIcon &"
                                    ],
                                    "returns": "QIcon &",
                                    "type": "function"
                                },
                                {
                                    "name": "operator=",
                                    "parameters": [
                                        "QIcon &&"
                                    ],
                                    "returns": "QIcon &",
                                    "type": "function"
                                },
                                {
                                    "name": "swap",
                                    "parameters": [
                                        "QIcon &"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixmap",
                                    "parameters": [
                                        "const QSize &",
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixmap",
                                    "parameters": [
                                        "int",
                                        "int",
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixmap",
                                    "parameters": [
                                        "int",
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "pixmap",
                                    "parameters": [
                                        "QWindow *",
                                        "const QSize &",
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "returns": "QPixmap",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "actualSize",
                                    "parameters": [
                                        "const QSize &",
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "actualSize",
                                    "parameters": [
                                        "QWindow *",
                                        "const QSize &",
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "returns": "QSize",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "name",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "paint",
                                    "parameters": [
                                        "QPainter *",
                                        "const QRect &",
                                        "Qt::Alignment",
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "paint",
                                    "parameters": [
                                        "QPainter *",
                                        "int",
                                        "int",
                                        "int",
                                        "int",
                                        "Qt::Alignment",
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isNull",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isDetached",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "detach",
                                    "parameters": [
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "cacheKey",
                                    "parameters": [
                                    ],
                                    "returns": "qint64",
                                    "type": "function"
                                },
                                {
                                    "name": "addPixmap",
                                    "parameters": [
                                        "const QPixmap &",
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "name": "addFile",
                                    "parameters": [
                                        "const QString &",
                                        "const QSize &",
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "availableSizes",
                                    "parameters": [
                                        "QIcon::Mode",
                                        "QIcon::State"
                                    ],
                                    "returns": "QList<QSize>",
                                    "type": "function"
                                },
                                {
                                    "name": "setIsMask",
                                    "parameters": [
                                        "bool"
                                    ],
                                    "returns": "void",
                                    "type": "function"
                                },
                                {
                                    "const": true,
                                    "name": "isMask",
                                    "parameters": [
                                    ],
                                    "returns": "bool",
                                    "type": "function"
                                },
                                {
                                    "name": "fromTheme",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "QIcon",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "fromTheme",
                                    "parameters": [
                                        "const QString &",
                                        "const QIcon &"
                                    ],
                                    "returns": "QIcon",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "hasThemeIcon",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "bool",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "themeSearchPaths",
                                    "parameters": [
                                    ],
                                    "returns": "QStringList",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setThemeSearchPaths",
                                    "parameters": [
                                        "const QStringList &"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "themeName",
                                    "parameters": [
                                    ],
                                    "returns": "QString",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "setThemeName",
                                    "parameters": [
                                        "const QString &"
                                    ],
                                    "returns": "void",
                                    "static": true,
                                    "type": "function"
                                },
                                {
                                    "name": "data_ptr",
                                    "parameters": [
                                    ],
                                    "returns": "QIcon::DataPtr &",
                                    "type": "function"
                                }
                            ],
                            "name": "QIcon",
                            "type": "class"
                        },
                        {
                            "name": "swap",
                            "parameters": [
                                "QIcon &",
                                "QIcon &"
                            ],
                            "returns": "void",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDataStream &",
                                "const QIcon &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator>>",
                            "parameters": [
                                "QDataStream &",
                                "QIcon &"
                            ],
                            "returns": "QDataStream &",
                            "type": "function"
                        },
                        {
                            "name": "operator<<",
                            "parameters": [
                                "QDebug",
                                "const QIcon &"
                            ],
                            "returns": "QDebug",
                            "type": "function"
                        },
                        {
                            "name": "qt_findAtNxFile",
                            "parameters": [
                                "const QString &",
                                "qreal",
                                "qreal *"
                            ],
                            "returns": "QString",
                            "type": "function"
                        }
                    ],
                    "hincludes": "<QIcon>",
                    "name": "icon",
                    "type": "file"
                }
            ],
            "name": "gui",
            "type": "module"
        }
    ],
    "types": {
        "classes": [
            {
                "header": "yasl/core/enums.h",
                "id": "QtImageConversionFlags",
                "name": "Qt::ImageConversionFlags",
                "rename": "ImageConversionFlags"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtKeyboardModifiers",
                "name": "Qt::KeyboardModifiers",
                "rename": "KeyboardModifiers"
            },
            {
                "header": "yasl/core/bytearray.h",
                "id": "QByteArray",
                "links": "ptr@Ptr<QByteArray>;list@QList<QByteArray>",
                "name": "QByteArray",
                "rename": "ByteArray"
            },
            {
                "header": "yasl/core/bytearray.h",
                "id": "PtrQByteArray",
                "name": "Ptr<QByteArray>"
            },
            {
                "header": "yasl/core/bytearray.h",
                "id": "QListQByteArray",
                "name": "QList<QByteArray>"
            },
            {
                "header": "yasl/core/bytearray.h",
                "id": "QByteArrayBase64Options",
                "name": "QByteArray::Base64Options",
                "rename": "Base64Options"
            },
            {
                "header": "yasl/core/bytearray.h",
                "id": "QByteRef",
                "name": "QByteRef",
                "rename": "ByteRef"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QChar",
                "name": "QChar",
                "rename": "Char"
            },
            {
                "header": "yasl/core/event.h",
                "id": "QChildEvent",
                "name": "QChildEvent",
                "rename": "ChildEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/core/datetime.h",
                "id": "QDate",
                "name": "QDate",
                "rename": "Date"
            },
            {
                "header": "yasl/core/datetime.h",
                "id": "QDateTime",
                "name": "QDateTime",
                "rename": "DateTime"
            },
            {
                "header": "yasl/core/event.h",
                "id": "QDeferredDeleteEvent",
                "name": "QDeferredDeleteEvent",
                "rename": "DeferredDeleteEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/core/dir.h",
                "id": "QDir",
                "name": "QDir",
                "rename": "Dir"
            },
            {
                "header": "yasl/core/dir.h",
                "id": "QDirFilters",
                "name": "QDir::Filters",
                "rename": "Filters"
            },
            {
                "header": "yasl/core/dir.h",
                "id": "QDirSortFlags",
                "name": "QDir::SortFlags",
                "rename": "SortFlags"
            },
            {
                "header": "yasl/core/event.h",
                "id": "QDynamicPropertyChangeEvent",
                "name": "QDynamicPropertyChangeEvent",
                "rename": "DynamicPropertyChangeEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/core/event.h",
                "id": "QEvent",
                "name": "QEvent",
                "rename": "Event",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/core/file.h",
                "id": "QFile",
                "name": "QFile",
                "rename": "File",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDevice",
                "name": "QFileDevice",
                "rename": "FileDevice",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDevicePermissions",
                "name": "QFileDevice::Permissions",
                "rename": "Permissions"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDeviceFileHandleFlags",
                "name": "QFileDevice::FileHandleFlags",
                "rename": "FileHandleFlags"
            },
            {
                "header": "yasl/core/fileinfo.h",
                "id": "QFileInfo",
                "name": "QFileInfo",
                "rename": "FileInfo"
            },
            {
                "header": "yasl/core/iodevice.h",
                "id": "QIODevice",
                "name": "QIODevice",
                "rename": "IODevice",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/iodevice.h",
                "id": "QIODeviceOpenMode",
                "name": "QIODevice::OpenMode",
                "rename": "OpenMode"
            },
            {
                "header": "yasl/core/line.h",
                "id": "QLine",
                "name": "QLine",
                "rename": "Line"
            },
            {
                "header": "yasl/core/line.h",
                "id": "QLineF",
                "name": "QLineF",
                "rename": "LineF"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocale",
                "links": "ptr@Ptr<QLocale>;list@QList<QLocale>",
                "name": "QLocale",
                "rename": "Locale"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "PtrQLocale",
                "name": "Ptr<QLocale>"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QListQLocale",
                "name": "QList<QLocale>"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleDataSizeFormats",
                "name": "QLocale::DataSizeFormats",
                "rename": "DataSizeFormats"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleNumberOptions",
                "name": "QLocale::NumberOptions",
                "rename": "NumberOptions"
            },
            {
                "header": "yasl/core/margins.h",
                "id": "QMargins",
                "name": "QMargins",
                "rename": "Margins"
            },
            {
                "header": "yasl/core/margins.h",
                "id": "QMarginsF",
                "name": "QMarginsF",
                "rename": "MarginsF"
            },
            {
                "header": "yasl/core/point.h",
                "id": "QPoint",
                "name": "QPoint",
                "rename": "Point"
            },
            {
                "header": "yasl/core/point.h",
                "id": "QPointF",
                "name": "QPointF",
                "rename": "PointF"
            },
            {
                "header": "yasl/core/object.h",
                "id": "QObject",
                "links": "ref@QObject*;ptr@Ptr<QObject*>;list@QList<QObject*>",
                "name": "QObject",
                "rename": "Object",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/object.h",
                "id": "QObjectStar",
                "name": "QObject*"
            },
            {
                "header": "yasl/core/object.h",
                "id": "PtrQObject",
                "name": "Ptr<QObject*>"
            },
            {
                "header": "yasl/core/object.h",
                "id": "QListQObject",
                "name": "QList<QObject*>"
            },
            {
                "header": "yasl/core/object.h",
                "id": "QListQObject",
                "name": "QObjectList"
            },
            {
                "header": "yasl/core/rect.h",
                "id": "QRect",
                "name": "QRect",
                "rename": "Rect"
            },
            {
                "header": "yasl/core/rect.h",
                "id": "QRectF",
                "name": "QRectF",
                "rename": "RectF"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpression",
                "name": "QRegularExpression",
                "rename": "RegularExpression"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpressionMatchOptions",
                "name": "QRegularExpression::MatchOptions",
                "rename": "MatchOptions"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpressionPatternOptions",
                "name": "QRegularExpression::PatternOptions",
                "rename": "PatternOptions"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpressionMatch",
                "name": "QRegularExpressionMatch",
                "rename": "RegularExpressionMatch"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpressionMatchIterator",
                "name": "QRegularExpressionMatchIterator",
                "rename": "RegularExpressionMatchIterator"
            },
            {
                "header": "yasl/core/settings.h",
                "id": "QSettings",
                "name": "QSettings",
                "rename": "Settings",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/object.h",
                "id": "QSignalBlocker",
                "name": "QSignalBlocker",
                "rename": "SignalBlocker"
            },
            {
                "header": "yasl/core/size.h",
                "id": "QSize",
                "name": "QSize",
                "rename": "Size"
            },
            {
                "header": "yasl/core/size.h",
                "id": "QSizeF",
                "name": "QSizeF",
                "rename": "SizeF"
            },
            {
                "header": "yasl/core/datetime.h",
                "id": "QTime",
                "name": "QTime",
                "rename": "Time"
            },
            {
                "header": "yasl/core/timer.h",
                "id": "QTimer",
                "name": "QTimer",
                "rename": "Timer",
                "tag": "qobject_tag"
            },
            {
                "header": "yasl/core/event.h",
                "id": "QTimerEvent",
                "name": "QTimerEvent",
                "rename": "TimerEvent",
                "tag": "qevent_tag"
            },
            {
                "header": "yasl/core/timezone.h",
                "id": "QTimeZone",
                "name": "QTimeZone",
                "rename": "TimeZone"
            },
            {
                "header": "yasl/core/url.h",
                "id": "QUrl",
                "name": "QUrl",
                "rename": "Url"
            },
            {
                "header": "yasl/core/url.h",
                "id": "QUrlComponentFormattingOptions",
                "name": "QUrl::ComponentFormattingOptions",
                "rename": "ComponentFormattingOptions"
            },
            {
                "header": "yasl/core/url.h",
                "id": "QUrlUserInputResolutionOptions",
                "name": "QUrl::UserInputResolutionOptions",
                "rename": "UserInputResolutionOptions"
            },
            {
                "header": "yasl/core/urlquery.h",
                "id": "QUrlQuery",
                "name": "QUrlQuery",
                "rename": "UrlQuery"
            },
            {
                "header": "yasl/core/uuid.h",
                "id": "QUuid",
                "name": "QUuid",
                "rename": "Uuid"
            },
            {
                "header": "yasl/core/variant.h",
                "id": "QVariant",
                "name": "QVariant",
                "rename": "Variant"
            },
            {
                "header": "yasl/gui/color.h",
                "id": "QColor",
                "name": "QColor",
                "rename": "Color"
            },
            {
                "header": "yasl/gui/cursor.h",
                "id": "QCursor",
                "name": "QCursor",
                "rename": "Cursor"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFont",
                "name": "QFont",
                "rename": "Font"
            },
            {
                "header": "yasl/gui/fontdatabase.h",
                "id": "QFontDatabase",
                "name": "QFontDatabase",
                "rename": "FontDatabase"
            },
            {
                "header": "yasl/gui/fontinfo.h",
                "id": "QFontInfo",
                "name": "QFontInfo",
                "rename": "FontInfo"
            },
            {
                "header": "yasl/gui/fontmetrics.h",
                "id": "QFontMetrics",
                "name": "QFontMetrics",
                "rename": "FontMetrics"
            },
            {
                "header": "yasl/gui/fontmetrics.h",
                "id": "QFontMetricsF",
                "name": "QFontMetricsF",
                "rename": "FontMetricsF"
            },
            {
                "header": "yasl/gui/pixmap.h",
                "id": "QPixmap",
                "name": "QPixmap",
                "rename": "Pixmap"
            },
            {
                "header": "yasl/gui/bitmap.h",
                "id": "QBitmap",
                "name": "QBitmap",
                "rename": "Bitmap"
            },
            {
                "header": "yasl/gui/icon.h",
                "id": "QIcon",
                "name": "QIcon",
                "rename": "Icon"
            }
        ],
        "enums": [
            {
                "header": "yasl/core/bytearray.h",
                "id": "QByteArrayBase64Option",
                "links": "flags@QByteArray::Base64Options",
                "name": "QByteArray::Base64Option"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtGlobalColor",
                "name": "Qt::GlobalColor"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtKeyboardModifier",
                "links": "flags@Qt::KeyboardModifiers",
                "name": "Qt::KeyboardModifier"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtModifier",
                "name": "Qt::Modifier"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtMouseButton",
                "name": "Qt::MouseButton"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtOrientation",
                "name": "Qt::Orientation"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtFocusPolicy",
                "name": "Qt::FocusPolicy"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTabFocusBehavior",
                "name": "Qt::TabFocusBehavior"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtSortOrder",
                "name": "Qt::SortOrder"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTileRule",
                "name": "Qt::TileRule"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtAlignmentFlag",
                "name": "Qt::AlignmentFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTextFlag",
                "name": "Qt::TextFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTextElideMode",
                "name": "Qt::TextElideMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtWhiteSpaceMode",
                "name": "Qt::WhiteSpaceMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtHitTestAccuracy",
                "name": "Qt::HitTestAccuracy"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtWindowType",
                "name": "Qt::WindowType"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtWindowState",
                "name": "Qt::WindowState"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtApplicationState",
                "name": "Qt::ApplicationState"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtScreenOrientation",
                "name": "Qt::ScreenOrientation"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtWidgetAttribute",
                "name": "Qt::WidgetAttribute"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtApplicationAttribute",
                "name": "Qt::ApplicationAttribute"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtImageConversionFlag",
                "links": "flags@Qt::ImageConversionFlags",
                "name": "Qt::ImageConversionFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtBGMode",
                "name": "Qt::BGMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtKey",
                "name": "Qt::Key"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtArrowType",
                "name": "Qt::ArrowType"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtPenStyle",
                "name": "Qt::PenStyle"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtPenCapStyle",
                "name": "Qt::PenCapStyle"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtPenJoinStyle",
                "name": "Qt::PenJoinStyle"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtBrushStyle",
                "name": "Qt::BrushStyle"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtSizeMode",
                "name": "Qt::SizeMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtUIEffect",
                "name": "Qt::UIEffect"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtCursorShape",
                "name": "Qt::CursorShape"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTextFormat",
                "name": "Qt::TextFormat"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtAspectRatioMode",
                "name": "Qt::AspectRatioMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtDockWidgetArea",
                "name": "Qt::DockWidgetArea"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtDockWidgetAreaSizes",
                "name": "Qt::DockWidgetAreaSizes"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtToolBarArea",
                "name": "Qt::ToolBarArea"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtToolBarAreaSizes",
                "name": "Qt::ToolBarAreaSizes"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtDateFormat",
                "name": "Qt::DateFormat"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTimeSpec",
                "name": "Qt::TimeSpec"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtDayOfWeek",
                "name": "Qt::DayOfWeek"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtScrollBarPolicy",
                "name": "Qt::ScrollBarPolicy"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtCaseSensitivity",
                "name": "Qt::CaseSensitivity"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtCorner",
                "name": "Qt::Corner"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtEdge",
                "name": "Qt::Edge"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtConnectionType",
                "name": "Qt::ConnectionType"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtShortcutContext",
                "name": "Qt::ShortcutContext"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtFillRule",
                "name": "Qt::FillRule"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtMaskMode",
                "name": "Qt::MaskMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtClipOperation",
                "name": "Qt::ClipOperation"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtItemSelectionMode",
                "name": "Qt::ItemSelectionMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtItemSelectionOperation",
                "name": "Qt::ItemSelectionOperation"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTransformationMode",
                "name": "Qt::TransformationMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtAxis",
                "name": "Qt::Axis"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtFocusReason",
                "name": "Qt::FocusReason"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtContextMenuPolicy",
                "name": "Qt::ContextMenuPolicy"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtInputMethodQuery",
                "name": "Qt::InputMethodQuery"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtInputMethodHint",
                "name": "Qt::InputMethodHint"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtEnterKeyType",
                "name": "Qt::EnterKeyType"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtToolButtonStyle",
                "name": "Qt::ToolButtonStyle"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtLayoutDirection",
                "name": "Qt::LayoutDirection"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtAnchorPoint",
                "name": "Qt::AnchorPoint"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtFindChildOption",
                "name": "Qt::FindChildOption"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtDropAction",
                "name": "Qt::DropAction"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtCheckState",
                "name": "Qt::CheckState"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtItemDataRole",
                "name": "Qt::ItemDataRole"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtItemFlag",
                "name": "Qt::ItemFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtMatchFlag",
                "name": "Qt::MatchFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtWindowModality",
                "name": "Qt::WindowModality"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTextInteractionFlag",
                "name": "Qt::TextInteractionFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtEventPriority",
                "name": "Qt::EventPriority"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtSizeHint",
                "name": "Qt::SizeHint"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtWindowFrameSection",
                "name": "Qt::WindowFrameSection"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtInitialization",
                "name": "Qt::Initialization"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtCoordinateSystem",
                "name": "Qt::CoordinateSystem"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTouchPointState",
                "name": "Qt::TouchPointState"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtGestureState",
                "name": "Qt::GestureState"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtGestureType",
                "name": "Qt::GestureType"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtGestureFlag",
                "name": "Qt::GestureFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtNativeGestureType",
                "name": "Qt::NativeGestureType"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtNavigationMode",
                "name": "Qt::NavigationMode"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtCursorMoveStyle",
                "name": "Qt::CursorMoveStyle"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtTimerType",
                "name": "Qt::TimerType"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtScrollPhase",
                "name": "Qt::ScrollPhase"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtMouseEventSource",
                "name": "Qt::MouseEventSource"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtMouseEventFlag",
                "name": "Qt::MouseEventFlag"
            },
            {
                "header": "yasl/core/enums.h",
                "id": "QtChecksumType",
                "name": "Qt::ChecksumType"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharSpecialCharacter",
                "name": "QChar::SpecialCharacter"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharCategory",
                "name": "QChar::Category"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharScript",
                "name": "QChar::Script"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharDirection",
                "name": "QChar::Direction"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharDecomposition",
                "name": "QChar::Decomposition"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharJoiningType",
                "name": "QChar::JoiningType"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharJoining",
                "name": "QChar::Joining"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharCombiningClass",
                "name": "QChar::CombiningClass"
            },
            {
                "header": "yasl/core/char.h",
                "id": "QCharUnicodeVersion",
                "name": "QChar::UnicodeVersion"
            },
            {
                "header": "yasl/core/datetime.h",
                "id": "QDateMonthNameType",
                "name": "QDate::MonthNameType"
            },
            {
                "header": "yasl/core/dir.h",
                "id": "QDirFilter",
                "links": "flags@QDir::Filters",
                "name": "QDir::Filter"
            },
            {
                "header": "yasl/core/dir.h",
                "id": "QDirSortFlag",
                "links": "flags@QDir::SortFlags",
                "name": "QDir::SortFlag"
            },
            {
                "header": "yasl/core/event.h",
                "id": "QEventType",
                "name": "QEvent::Type"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDeviceFileError",
                "name": "QFileDevice::FileError"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDeviceFileTime",
                "name": "QFileDevice::FileTime"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDevicePermission",
                "links": "flags@QFileDevice::Permissions",
                "name": "QFileDevice::Permission"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDeviceFileHandleFlag",
                "links": "flags@QFileDevice::FileHandleFlags",
                "name": "QFileDevice::FileHandleFlag"
            },
            {
                "header": "yasl/core/filedevice.h",
                "id": "QFileDeviceMemoryMapFlags",
                "name": "QFileDevice::MemoryMapFlags"
            },
            {
                "header": "yasl/core/iodevice.h",
                "id": "QIODeviceOpenModeFlag",
                "links": "flags@QIODevice::OpenMode",
                "name": "QIODevice::OpenModeFlag"
            },
            {
                "header": "yasl/core/line.h",
                "id": "QLineFIntersectType",
                "name": "QLineF::IntersectType"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleLanguage",
                "name": "QLocale::Language"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleScript",
                "name": "QLocale::Script"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleCountry",
                "name": "QLocale::Country"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleMeasurementSystem",
                "name": "QLocale::MeasurementSystem"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleFormatType",
                "name": "QLocale::FormatType"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleNumberOption",
                "links": "flags@QLocale::NumberOptions",
                "name": "QLocale::NumberOption"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleFloatingPointPrecisionOption",
                "name": "QLocale::FloatingPointPrecisionOption"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleCurrencySymbolFormat",
                "name": "QLocale::CurrencySymbolFormat"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleDataSizeFormat",
                "links": "flags@QLocale::DataSizeFormats",
                "name": "QLocale::DataSizeFormat"
            },
            {
                "header": "yasl/core/locale.h",
                "id": "QLocaleQuotationStyle",
                "name": "QLocale::QuotationStyle"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpressionPatternOption",
                "links": "flags@QRegularExpression::PatternOptions",
                "name": "QRegularExpression::PatternOption"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpressionMatchType",
                "name": "QRegularExpression::MatchType"
            },
            {
                "header": "yasl/core/regularexpression.h",
                "id": "QRegularExpressionMatchOption",
                "links": "flags@QRegularExpression::MatchOptions",
                "name": "QRegularExpression::MatchOption"
            },
            {
                "header": "yasl/core/settings.h",
                "id": "QSettingsStatus",
                "name": "QSettings::Status"
            },
            {
                "header": "yasl/core/settings.h",
                "id": "QSettingsFormat",
                "name": "QSettings::Format"
            },
            {
                "header": "yasl/core/settings.h",
                "id": "QSettingsScope",
                "name": "QSettings::Scope"
            },
            {
                "header": "yasl/core/timezone.h",
                "id": "QTimeZoneTimeType",
                "name": "QTimeZone::TimeType"
            },
            {
                "header": "yasl/core/timezone.h",
                "id": "QTimeZoneNameType",
                "name": "QTimeZone::NameType"
            },
            {
                "header": "yasl/core/url.h",
                "id": "QUrlParsingMode",
                "name": "QUrl::ParsingMode"
            },
            {
                "header": "yasl/core/url.h",
                "id": "QUrlUrlFormattingOption",
                "name": "QUrl::UrlFormattingOption"
            },
            {
                "header": "yasl/core/url.h",
                "id": "QUrlComponentFormattingOption",
                "links": "flags@QUrl::ComponentFormattingOptions",
                "name": "QUrl::ComponentFormattingOption"
            },
            {
                "header": "yasl/core/url.h",
                "id": "QUrlUserInputResolutionOption",
                "links": "flags@QUrl::UserInputResolutionOptions",
                "name": "QUrl::UserInputResolutionOption"
            },
            {
                "header": "yasl/core/uuid.h",
                "id": "QUuidVariant",
                "name": "QUuid::Variant"
            },
            {
                "header": "yasl/core/uuid.h",
                "id": "QUuidVersion",
                "name": "QUuid::Version"
            },
            {
                "header": "yasl/core/variant.h",
                "id": "QVariantType",
                "name": "QVariant::Type"
            },
            {
                "header": "yasl/gui/color.h",
                "id": "QColorSpec",
                "name": "QColor::Spec"
            },
            {
                "header": "yasl/gui/color.h",
                "id": "QColorNameFormat",
                "name": "QColor::NameFormat"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontStyleHint",
                "name": "QFont::StyleHint"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontStyleStrategy",
                "name": "QFont::StyleStrategy"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontHintingPreference",
                "name": "QFont::HintingPreference"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontWeight",
                "name": "QFont::Weight"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontStyle",
                "name": "QFont::Style"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontStretch",
                "name": "QFont::Stretch"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontCapitalization",
                "name": "QFont::Capitalization"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontSpacingType",
                "name": "QFont::SpacingType"
            },
            {
                "header": "yasl/gui/font.h",
                "id": "QFontResolveProperties",
                "name": "QFont::ResolveProperties"
            },
            {
                "header": "yasl/gui/fontdatabase.h",
                "id": "QFontDatabaseWritingSystem",
                "name": "QFontDatabase::WritingSystem"
            },
            {
                "header": "yasl/gui/fontdatabase.h",
                "id": "QFontDatabaseSystemFont",
                "name": "QFontDatabase::SystemFont"
            },
            {
                "header": "yasl/gui/icon.h",
                "id": "QIconMode",
                "name": "QIcon::Mode"
            },
            {
                "header": "yasl/gui/icon.h",
                "id": "QIconState",
                "name": "QIcon::State"
            }
        ],
        "fundamentals": [
            {
                "id": "Void",
                "name": "void"
            },
            {
                "id": "Boolean",
                "name": "bool"
            },
            {
                "id": "Char",
                "name": "char"
            },
            {
                "id": "Int",
                "name": "int"
            },
            {
                "id": "Float",
                "name": "float"
            },
            {
                "id": "Double",
                "name": "double"
            },
            {
                "id": "String",
                "name": "QString",
                "rename": "String"
            },
            {
                "id": "",
                "name": "qreal"
            },
            {
                "id": "",
                "name": "uint"
            }
        ]
    }
}
